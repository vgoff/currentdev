/******/ (function(modules) { // webpackBootstrap
/******/ 	// install a JSONP callback for chunk loading
/******/ 	var parentJsonpFunction = window["webpackJsonp"];
/******/ 	window["webpackJsonp"] = function webpackJsonpCallback(chunkIds, moreModules) {
/******/ 		// add "moreModules" to the modules object,
/******/ 		// then flag all "chunkIds" as loaded and fire callback
/******/ 		var moduleId, chunkId, i = 0, callbacks = [];
/******/ 		for(;i < chunkIds.length; i++) {
/******/ 			chunkId = chunkIds[i];
/******/ 			if(installedChunks[chunkId])
/******/ 				callbacks.push.apply(callbacks, installedChunks[chunkId]);
/******/ 			installedChunks[chunkId] = 0;
/******/ 		}
/******/ 		for(moduleId in moreModules) {
/******/ 			modules[moduleId] = moreModules[moduleId];
/******/ 		}
/******/ 		if(parentJsonpFunction) parentJsonpFunction(chunkIds, moreModules);
/******/ 		while(callbacks.length)
/******/ 			callbacks.shift().call(null, __webpack_require__);
/******/ 		if(moreModules[0]) {
/******/ 			installedModules[0] = 0;
/******/ 			return __webpack_require__(0);
/******/ 		}
/******/ 	};

/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// object to store loaded and loading chunks
/******/ 	// "0" means "already loaded"
/******/ 	// Array means "loading", array contains callbacks
/******/ 	var installedChunks = {
/******/ 		2:0
/******/ 	};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}

/******/ 	// This file contains only the entry chunk.
/******/ 	// The chunk loading function for additional chunks
/******/ 	__webpack_require__.e = function requireEnsure(chunkId, callback) {
/******/ 		// "0" is the signal for "already loaded"
/******/ 		if(installedChunks[chunkId] === 0)
/******/ 			return callback.call(null, __webpack_require__);

/******/ 		// an array means "currently loading".
/******/ 		if(installedChunks[chunkId] !== undefined) {
/******/ 			installedChunks[chunkId].push(callback);
/******/ 		} else {
/******/ 			// start chunk loading
/******/ 			installedChunks[chunkId] = [callback];
/******/ 			var head = document.getElementsByTagName('head')[0];
/******/ 			var script = document.createElement('script');
/******/ 			script.type = 'text/javascript';
/******/ 			script.charset = 'utf-8';
/******/ 			script.async = true;

/******/ 			script.src = __webpack_require__.p + "" + ({"0":"client","1":"about"}[chunkId]||chunkId) + ".chunk.js";
/******/ 			head.appendChild(script);
/******/ 		}
/******/ 	};

/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/assets/";
/******/ })
/************************************************************************/
/******/ ([
/* 0 */,
/* 1 */
/***/ function(module, exports, __webpack_require__) {

  "use strict";

  exports.__esModule = true;

  var _iterator = __webpack_require__(2);

  var _iterator2 = _interopRequireDefault(_iterator);

  var _symbol = __webpack_require__(53);

  var _symbol2 = _interopRequireDefault(_symbol);

  var _typeof = typeof _symbol2.default === "function" && typeof _iterator2.default === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof _symbol2.default === "function" && obj.constructor === _symbol2.default && obj !== _symbol2.default.prototype ? "symbol" : typeof obj; };

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  exports.default = typeof _symbol2.default === "function" && _typeof(_iterator2.default) === "symbol" ? function (obj) {
    return typeof obj === "undefined" ? "undefined" : _typeof(obj);
  } : function (obj) {
    return obj && typeof _symbol2.default === "function" && obj.constructor === _symbol2.default && obj !== _symbol2.default.prototype ? "symbol" : typeof obj === "undefined" ? "undefined" : _typeof(obj);
  };

/***/ },
/* 2 */
/***/ function(module, exports, __webpack_require__) {

  module.exports = { "default": __webpack_require__(3), __esModule: true };

/***/ },
/* 3 */
/***/ function(module, exports, __webpack_require__) {

  __webpack_require__(4);
  __webpack_require__(48);
  module.exports = __webpack_require__(52).f('iterator');

/***/ },
/* 4 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';
  var $at  = __webpack_require__(5)(true);

  // 21.1.3.27 String.prototype[@@iterator]()
  __webpack_require__(8)(String, 'String', function(iterated){
    this._t = String(iterated); // target
    this._i = 0;                // next index
  // 21.1.5.2.1 %StringIteratorPrototype%.next()
  }, function(){
    var O     = this._t
      , index = this._i
      , point;
    if(index >= O.length)return {value: undefined, done: true};
    point = $at(O, index);
    this._i += point.length;
    return {value: point, done: false};
  });

/***/ },
/* 5 */
/***/ function(module, exports, __webpack_require__) {

  var toInteger = __webpack_require__(6)
    , defined   = __webpack_require__(7);
  // true  -> String#at
  // false -> String#codePointAt
  module.exports = function(TO_STRING){
    return function(that, pos){
      var s = String(defined(that))
        , i = toInteger(pos)
        , l = s.length
        , a, b;
      if(i < 0 || i >= l)return TO_STRING ? '' : undefined;
      a = s.charCodeAt(i);
      return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff
        ? TO_STRING ? s.charAt(i) : a
        : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;
    };
  };

/***/ },
/* 6 */
/***/ function(module, exports) {

  // 7.1.4 ToInteger
  var ceil  = Math.ceil
    , floor = Math.floor;
  module.exports = function(it){
    return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
  };

/***/ },
/* 7 */
/***/ function(module, exports) {

  // 7.2.1 RequireObjectCoercible(argument)
  module.exports = function(it){
    if(it == undefined)throw TypeError("Can't call method on  " + it);
    return it;
  };

/***/ },
/* 8 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';
  var LIBRARY        = __webpack_require__(9)
    , $export        = __webpack_require__(10)
    , redefine       = __webpack_require__(25)
    , hide           = __webpack_require__(15)
    , has            = __webpack_require__(26)
    , Iterators      = __webpack_require__(27)
    , $iterCreate    = __webpack_require__(28)
    , setToStringTag = __webpack_require__(44)
    , getPrototypeOf = __webpack_require__(46)
    , ITERATOR       = __webpack_require__(45)('iterator')
    , BUGGY          = !([].keys && 'next' in [].keys()) // Safari has buggy iterators w/o `next`
    , FF_ITERATOR    = '@@iterator'
    , KEYS           = 'keys'
    , VALUES         = 'values';

  var returnThis = function(){ return this; };

  module.exports = function(Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED){
    $iterCreate(Constructor, NAME, next);
    var getMethod = function(kind){
      if(!BUGGY && kind in proto)return proto[kind];
      switch(kind){
        case KEYS: return function keys(){ return new Constructor(this, kind); };
        case VALUES: return function values(){ return new Constructor(this, kind); };
      } return function entries(){ return new Constructor(this, kind); };
    };
    var TAG        = NAME + ' Iterator'
      , DEF_VALUES = DEFAULT == VALUES
      , VALUES_BUG = false
      , proto      = Base.prototype
      , $native    = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT]
      , $default   = $native || getMethod(DEFAULT)
      , $entries   = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined
      , $anyNative = NAME == 'Array' ? proto.entries || $native : $native
      , methods, key, IteratorPrototype;
    // Fix native
    if($anyNative){
      IteratorPrototype = getPrototypeOf($anyNative.call(new Base));
      if(IteratorPrototype !== Object.prototype){
        // Set @@toStringTag to native iterators
        setToStringTag(IteratorPrototype, TAG, true);
        // fix for some old engines
        if(!LIBRARY && !has(IteratorPrototype, ITERATOR))hide(IteratorPrototype, ITERATOR, returnThis);
      }
    }
    // fix Array#{values, @@iterator}.name in V8 / FF
    if(DEF_VALUES && $native && $native.name !== VALUES){
      VALUES_BUG = true;
      $default = function values(){ return $native.call(this); };
    }
    // Define iterator
    if((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])){
      hide(proto, ITERATOR, $default);
    }
    // Plug for library
    Iterators[NAME] = $default;
    Iterators[TAG]  = returnThis;
    if(DEFAULT){
      methods = {
        values:  DEF_VALUES ? $default : getMethod(VALUES),
        keys:    IS_SET     ? $default : getMethod(KEYS),
        entries: $entries
      };
      if(FORCED)for(key in methods){
        if(!(key in proto))redefine(proto, key, methods[key]);
      } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);
    }
    return methods;
  };

/***/ },
/* 9 */
/***/ function(module, exports) {

  module.exports = true;

/***/ },
/* 10 */
/***/ function(module, exports, __webpack_require__) {

  var global    = __webpack_require__(11)
    , core      = __webpack_require__(12)
    , ctx       = __webpack_require__(13)
    , hide      = __webpack_require__(15)
    , PROTOTYPE = 'prototype';

  var $export = function(type, name, source){
    var IS_FORCED = type & $export.F
      , IS_GLOBAL = type & $export.G
      , IS_STATIC = type & $export.S
      , IS_PROTO  = type & $export.P
      , IS_BIND   = type & $export.B
      , IS_WRAP   = type & $export.W
      , exports   = IS_GLOBAL ? core : core[name] || (core[name] = {})
      , expProto  = exports[PROTOTYPE]
      , target    = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE]
      , key, own, out;
    if(IS_GLOBAL)source = name;
    for(key in source){
      // contains in native
      own = !IS_FORCED && target && target[key] !== undefined;
      if(own && key in exports)continue;
      // export native or passed
      out = own ? target[key] : source[key];
      // prevent global pollution for namespaces
      exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]
      // bind timers to global for call from export context
      : IS_BIND && own ? ctx(out, global)
      // wrap global constructors for prevent change them in library
      : IS_WRAP && target[key] == out ? (function(C){
        var F = function(a, b, c){
          if(this instanceof C){
            switch(arguments.length){
              case 0: return new C;
              case 1: return new C(a);
              case 2: return new C(a, b);
            } return new C(a, b, c);
          } return C.apply(this, arguments);
        };
        F[PROTOTYPE] = C[PROTOTYPE];
        return F;
      // make static versions for prototype methods
      })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;
      // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%
      if(IS_PROTO){
        (exports.virtual || (exports.virtual = {}))[key] = out;
        // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%
        if(type & $export.R && expProto && !expProto[key])hide(expProto, key, out);
      }
    }
  };
  // type bitmap
  $export.F = 1;   // forced
  $export.G = 2;   // global
  $export.S = 4;   // static
  $export.P = 8;   // proto
  $export.B = 16;  // bind
  $export.W = 32;  // wrap
  $export.U = 64;  // safe
  $export.R = 128; // real proto method for `library` 
  module.exports = $export;

/***/ },
/* 11 */
/***/ function(module, exports) {

  // https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
  var global = module.exports = typeof window != 'undefined' && window.Math == Math
    ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();
  if(typeof __g == 'number')__g = global; // eslint-disable-line no-undef

/***/ },
/* 12 */
/***/ function(module, exports) {

  var core = module.exports = {version: '2.4.0'};
  if(typeof __e == 'number')__e = core; // eslint-disable-line no-undef

/***/ },
/* 13 */
/***/ function(module, exports, __webpack_require__) {

  // optional / simple context binding
  var aFunction = __webpack_require__(14);
  module.exports = function(fn, that, length){
    aFunction(fn);
    if(that === undefined)return fn;
    switch(length){
      case 1: return function(a){
        return fn.call(that, a);
      };
      case 2: return function(a, b){
        return fn.call(that, a, b);
      };
      case 3: return function(a, b, c){
        return fn.call(that, a, b, c);
      };
    }
    return function(/* ...args */){
      return fn.apply(that, arguments);
    };
  };

/***/ },
/* 14 */
/***/ function(module, exports) {

  module.exports = function(it){
    if(typeof it != 'function')throw TypeError(it + ' is not a function!');
    return it;
  };

/***/ },
/* 15 */
/***/ function(module, exports, __webpack_require__) {

  var dP         = __webpack_require__(16)
    , createDesc = __webpack_require__(24);
  module.exports = __webpack_require__(20) ? function(object, key, value){
    return dP.f(object, key, createDesc(1, value));
  } : function(object, key, value){
    object[key] = value;
    return object;
  };

/***/ },
/* 16 */
/***/ function(module, exports, __webpack_require__) {

  var anObject       = __webpack_require__(17)
    , IE8_DOM_DEFINE = __webpack_require__(19)
    , toPrimitive    = __webpack_require__(23)
    , dP             = Object.defineProperty;

  exports.f = __webpack_require__(20) ? Object.defineProperty : function defineProperty(O, P, Attributes){
    anObject(O);
    P = toPrimitive(P, true);
    anObject(Attributes);
    if(IE8_DOM_DEFINE)try {
      return dP(O, P, Attributes);
    } catch(e){ /* empty */ }
    if('get' in Attributes || 'set' in Attributes)throw TypeError('Accessors not supported!');
    if('value' in Attributes)O[P] = Attributes.value;
    return O;
  };

/***/ },
/* 17 */
/***/ function(module, exports, __webpack_require__) {

  var isObject = __webpack_require__(18);
  module.exports = function(it){
    if(!isObject(it))throw TypeError(it + ' is not an object!');
    return it;
  };

/***/ },
/* 18 */
/***/ function(module, exports) {

  module.exports = function(it){
    return typeof it === 'object' ? it !== null : typeof it === 'function';
  };

/***/ },
/* 19 */
/***/ function(module, exports, __webpack_require__) {

  module.exports = !__webpack_require__(20) && !__webpack_require__(21)(function(){
    return Object.defineProperty(__webpack_require__(22)('div'), 'a', {get: function(){ return 7; }}).a != 7;
  });

/***/ },
/* 20 */
/***/ function(module, exports, __webpack_require__) {

  // Thank's IE8 for his funny defineProperty
  module.exports = !__webpack_require__(21)(function(){
    return Object.defineProperty({}, 'a', {get: function(){ return 7; }}).a != 7;
  });

/***/ },
/* 21 */
/***/ function(module, exports) {

  module.exports = function(exec){
    try {
      return !!exec();
    } catch(e){
      return true;
    }
  };

/***/ },
/* 22 */
/***/ function(module, exports, __webpack_require__) {

  var isObject = __webpack_require__(18)
    , document = __webpack_require__(11).document
    // in old IE typeof document.createElement is 'object'
    , is = isObject(document) && isObject(document.createElement);
  module.exports = function(it){
    return is ? document.createElement(it) : {};
  };

/***/ },
/* 23 */
/***/ function(module, exports, __webpack_require__) {

  // 7.1.1 ToPrimitive(input [, PreferredType])
  var isObject = __webpack_require__(18);
  // instead of the ES6 spec version, we didn't implement @@toPrimitive case
  // and the second argument - flag - preferred type is a string
  module.exports = function(it, S){
    if(!isObject(it))return it;
    var fn, val;
    if(S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;
    if(typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it)))return val;
    if(!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;
    throw TypeError("Can't convert object to primitive value");
  };

/***/ },
/* 24 */
/***/ function(module, exports) {

  module.exports = function(bitmap, value){
    return {
      enumerable  : !(bitmap & 1),
      configurable: !(bitmap & 2),
      writable    : !(bitmap & 4),
      value       : value
    };
  };

/***/ },
/* 25 */
/***/ function(module, exports, __webpack_require__) {

  module.exports = __webpack_require__(15);

/***/ },
/* 26 */
/***/ function(module, exports) {

  var hasOwnProperty = {}.hasOwnProperty;
  module.exports = function(it, key){
    return hasOwnProperty.call(it, key);
  };

/***/ },
/* 27 */
/***/ function(module, exports) {

  module.exports = {};

/***/ },
/* 28 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';
  var create         = __webpack_require__(29)
    , descriptor     = __webpack_require__(24)
    , setToStringTag = __webpack_require__(44)
    , IteratorPrototype = {};

  // 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
  __webpack_require__(15)(IteratorPrototype, __webpack_require__(45)('iterator'), function(){ return this; });

  module.exports = function(Constructor, NAME, next){
    Constructor.prototype = create(IteratorPrototype, {next: descriptor(1, next)});
    setToStringTag(Constructor, NAME + ' Iterator');
  };

/***/ },
/* 29 */
/***/ function(module, exports, __webpack_require__) {

  // 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
  var anObject    = __webpack_require__(17)
    , dPs         = __webpack_require__(30)
    , enumBugKeys = __webpack_require__(42)
    , IE_PROTO    = __webpack_require__(39)('IE_PROTO')
    , Empty       = function(){ /* empty */ }
    , PROTOTYPE   = 'prototype';

  // Create object with fake `null` prototype: use iframe Object with cleared prototype
  var createDict = function(){
    // Thrash, waste and sodomy: IE GC bug
    var iframe = __webpack_require__(22)('iframe')
      , i      = enumBugKeys.length
      , lt     = '<'
      , gt     = '>'
      , iframeDocument;
    iframe.style.display = 'none';
    __webpack_require__(43).appendChild(iframe);
    iframe.src = 'javascript:'; // eslint-disable-line no-script-url
    // createDict = iframe.contentWindow.Object;
    // html.removeChild(iframe);
    iframeDocument = iframe.contentWindow.document;
    iframeDocument.open();
    iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);
    iframeDocument.close();
    createDict = iframeDocument.F;
    while(i--)delete createDict[PROTOTYPE][enumBugKeys[i]];
    return createDict();
  };

  module.exports = Object.create || function create(O, Properties){
    var result;
    if(O !== null){
      Empty[PROTOTYPE] = anObject(O);
      result = new Empty;
      Empty[PROTOTYPE] = null;
      // add "__proto__" for Object.getPrototypeOf polyfill
      result[IE_PROTO] = O;
    } else result = createDict();
    return Properties === undefined ? result : dPs(result, Properties);
  };


/***/ },
/* 30 */
/***/ function(module, exports, __webpack_require__) {

  var dP       = __webpack_require__(16)
    , anObject = __webpack_require__(17)
    , getKeys  = __webpack_require__(31);

  module.exports = __webpack_require__(20) ? Object.defineProperties : function defineProperties(O, Properties){
    anObject(O);
    var keys   = getKeys(Properties)
      , length = keys.length
      , i = 0
      , P;
    while(length > i)dP.f(O, P = keys[i++], Properties[P]);
    return O;
  };

/***/ },
/* 31 */
/***/ function(module, exports, __webpack_require__) {

  // 19.1.2.14 / 15.2.3.14 Object.keys(O)
  var $keys       = __webpack_require__(32)
    , enumBugKeys = __webpack_require__(42);

  module.exports = Object.keys || function keys(O){
    return $keys(O, enumBugKeys);
  };

/***/ },
/* 32 */
/***/ function(module, exports, __webpack_require__) {

  var has          = __webpack_require__(26)
    , toIObject    = __webpack_require__(33)
    , arrayIndexOf = __webpack_require__(36)(false)
    , IE_PROTO     = __webpack_require__(39)('IE_PROTO');

  module.exports = function(object, names){
    var O      = toIObject(object)
      , i      = 0
      , result = []
      , key;
    for(key in O)if(key != IE_PROTO)has(O, key) && result.push(key);
    // Don't enum bug & hidden keys
    while(names.length > i)if(has(O, key = names[i++])){
      ~arrayIndexOf(result, key) || result.push(key);
    }
    return result;
  };

/***/ },
/* 33 */
/***/ function(module, exports, __webpack_require__) {

  // to indexed object, toObject with fallback for non-array-like ES3 strings
  var IObject = __webpack_require__(34)
    , defined = __webpack_require__(7);
  module.exports = function(it){
    return IObject(defined(it));
  };

/***/ },
/* 34 */
/***/ function(module, exports, __webpack_require__) {

  // fallback for non-array-like ES3 and non-enumerable old V8 strings
  var cof = __webpack_require__(35);
  module.exports = Object('z').propertyIsEnumerable(0) ? Object : function(it){
    return cof(it) == 'String' ? it.split('') : Object(it);
  };

/***/ },
/* 35 */
/***/ function(module, exports) {

  var toString = {}.toString;

  module.exports = function(it){
    return toString.call(it).slice(8, -1);
  };

/***/ },
/* 36 */
/***/ function(module, exports, __webpack_require__) {

  // false -> Array#indexOf
  // true  -> Array#includes
  var toIObject = __webpack_require__(33)
    , toLength  = __webpack_require__(37)
    , toIndex   = __webpack_require__(38);
  module.exports = function(IS_INCLUDES){
    return function($this, el, fromIndex){
      var O      = toIObject($this)
        , length = toLength(O.length)
        , index  = toIndex(fromIndex, length)
        , value;
      // Array#includes uses SameValueZero equality algorithm
      if(IS_INCLUDES && el != el)while(length > index){
        value = O[index++];
        if(value != value)return true;
      // Array#toIndex ignores holes, Array#includes - not
      } else for(;length > index; index++)if(IS_INCLUDES || index in O){
        if(O[index] === el)return IS_INCLUDES || index || 0;
      } return !IS_INCLUDES && -1;
    };
  };

/***/ },
/* 37 */
/***/ function(module, exports, __webpack_require__) {

  // 7.1.15 ToLength
  var toInteger = __webpack_require__(6)
    , min       = Math.min;
  module.exports = function(it){
    return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
  };

/***/ },
/* 38 */
/***/ function(module, exports, __webpack_require__) {

  var toInteger = __webpack_require__(6)
    , max       = Math.max
    , min       = Math.min;
  module.exports = function(index, length){
    index = toInteger(index);
    return index < 0 ? max(index + length, 0) : min(index, length);
  };

/***/ },
/* 39 */
/***/ function(module, exports, __webpack_require__) {

  var shared = __webpack_require__(40)('keys')
    , uid    = __webpack_require__(41);
  module.exports = function(key){
    return shared[key] || (shared[key] = uid(key));
  };

/***/ },
/* 40 */
/***/ function(module, exports, __webpack_require__) {

  var global = __webpack_require__(11)
    , SHARED = '__core-js_shared__'
    , store  = global[SHARED] || (global[SHARED] = {});
  module.exports = function(key){
    return store[key] || (store[key] = {});
  };

/***/ },
/* 41 */
/***/ function(module, exports) {

  var id = 0
    , px = Math.random();
  module.exports = function(key){
    return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
  };

/***/ },
/* 42 */
/***/ function(module, exports) {

  // IE 8- don't enum bug keys
  module.exports = (
    'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'
  ).split(',');

/***/ },
/* 43 */
/***/ function(module, exports, __webpack_require__) {

  module.exports = __webpack_require__(11).document && document.documentElement;

/***/ },
/* 44 */
/***/ function(module, exports, __webpack_require__) {

  var def = __webpack_require__(16).f
    , has = __webpack_require__(26)
    , TAG = __webpack_require__(45)('toStringTag');

  module.exports = function(it, tag, stat){
    if(it && !has(it = stat ? it : it.prototype, TAG))def(it, TAG, {configurable: true, value: tag});
  };

/***/ },
/* 45 */
/***/ function(module, exports, __webpack_require__) {

  var store      = __webpack_require__(40)('wks')
    , uid        = __webpack_require__(41)
    , Symbol     = __webpack_require__(11).Symbol
    , USE_SYMBOL = typeof Symbol == 'function';

  var $exports = module.exports = function(name){
    return store[name] || (store[name] =
      USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));
  };

  $exports.store = store;

/***/ },
/* 46 */
/***/ function(module, exports, __webpack_require__) {

  // 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)
  var has         = __webpack_require__(26)
    , toObject    = __webpack_require__(47)
    , IE_PROTO    = __webpack_require__(39)('IE_PROTO')
    , ObjectProto = Object.prototype;

  module.exports = Object.getPrototypeOf || function(O){
    O = toObject(O);
    if(has(O, IE_PROTO))return O[IE_PROTO];
    if(typeof O.constructor == 'function' && O instanceof O.constructor){
      return O.constructor.prototype;
    } return O instanceof Object ? ObjectProto : null;
  };

/***/ },
/* 47 */
/***/ function(module, exports, __webpack_require__) {

  // 7.1.13 ToObject(argument)
  var defined = __webpack_require__(7);
  module.exports = function(it){
    return Object(defined(it));
  };

/***/ },
/* 48 */
/***/ function(module, exports, __webpack_require__) {

  __webpack_require__(49);
  var global        = __webpack_require__(11)
    , hide          = __webpack_require__(15)
    , Iterators     = __webpack_require__(27)
    , TO_STRING_TAG = __webpack_require__(45)('toStringTag');

  for(var collections = ['NodeList', 'DOMTokenList', 'MediaList', 'StyleSheetList', 'CSSRuleList'], i = 0; i < 5; i++){
    var NAME       = collections[i]
      , Collection = global[NAME]
      , proto      = Collection && Collection.prototype;
    if(proto && !proto[TO_STRING_TAG])hide(proto, TO_STRING_TAG, NAME);
    Iterators[NAME] = Iterators.Array;
  }

/***/ },
/* 49 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';
  var addToUnscopables = __webpack_require__(50)
    , step             = __webpack_require__(51)
    , Iterators        = __webpack_require__(27)
    , toIObject        = __webpack_require__(33);

  // 22.1.3.4 Array.prototype.entries()
  // 22.1.3.13 Array.prototype.keys()
  // 22.1.3.29 Array.prototype.values()
  // 22.1.3.30 Array.prototype[@@iterator]()
  module.exports = __webpack_require__(8)(Array, 'Array', function(iterated, kind){
    this._t = toIObject(iterated); // target
    this._i = 0;                   // next index
    this._k = kind;                // kind
  // 22.1.5.2.1 %ArrayIteratorPrototype%.next()
  }, function(){
    var O     = this._t
      , kind  = this._k
      , index = this._i++;
    if(!O || index >= O.length){
      this._t = undefined;
      return step(1);
    }
    if(kind == 'keys'  )return step(0, index);
    if(kind == 'values')return step(0, O[index]);
    return step(0, [index, O[index]]);
  }, 'values');

  // argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)
  Iterators.Arguments = Iterators.Array;

  addToUnscopables('keys');
  addToUnscopables('values');
  addToUnscopables('entries');

/***/ },
/* 50 */
/***/ function(module, exports) {

  module.exports = function(){ /* empty */ };

/***/ },
/* 51 */
/***/ function(module, exports) {

  module.exports = function(done, value){
    return {value: value, done: !!done};
  };

/***/ },
/* 52 */
/***/ function(module, exports, __webpack_require__) {

  exports.f = __webpack_require__(45);

/***/ },
/* 53 */
/***/ function(module, exports, __webpack_require__) {

  module.exports = { "default": __webpack_require__(54), __esModule: true };

/***/ },
/* 54 */
/***/ function(module, exports, __webpack_require__) {

  __webpack_require__(55);
  __webpack_require__(66);
  __webpack_require__(67);
  __webpack_require__(68);
  module.exports = __webpack_require__(12).Symbol;

/***/ },
/* 55 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';
  // ECMAScript 6 symbols shim
  var global         = __webpack_require__(11)
    , has            = __webpack_require__(26)
    , DESCRIPTORS    = __webpack_require__(20)
    , $export        = __webpack_require__(10)
    , redefine       = __webpack_require__(25)
    , META           = __webpack_require__(56).KEY
    , $fails         = __webpack_require__(21)
    , shared         = __webpack_require__(40)
    , setToStringTag = __webpack_require__(44)
    , uid            = __webpack_require__(41)
    , wks            = __webpack_require__(45)
    , wksExt         = __webpack_require__(52)
    , wksDefine      = __webpack_require__(57)
    , keyOf          = __webpack_require__(58)
    , enumKeys       = __webpack_require__(59)
    , isArray        = __webpack_require__(62)
    , anObject       = __webpack_require__(17)
    , toIObject      = __webpack_require__(33)
    , toPrimitive    = __webpack_require__(23)
    , createDesc     = __webpack_require__(24)
    , _create        = __webpack_require__(29)
    , gOPNExt        = __webpack_require__(63)
    , $GOPD          = __webpack_require__(65)
    , $DP            = __webpack_require__(16)
    , $keys          = __webpack_require__(31)
    , gOPD           = $GOPD.f
    , dP             = $DP.f
    , gOPN           = gOPNExt.f
    , $Symbol        = global.Symbol
    , $JSON          = global.JSON
    , _stringify     = $JSON && $JSON.stringify
    , PROTOTYPE      = 'prototype'
    , HIDDEN         = wks('_hidden')
    , TO_PRIMITIVE   = wks('toPrimitive')
    , isEnum         = {}.propertyIsEnumerable
    , SymbolRegistry = shared('symbol-registry')
    , AllSymbols     = shared('symbols')
    , OPSymbols      = shared('op-symbols')
    , ObjectProto    = Object[PROTOTYPE]
    , USE_NATIVE     = typeof $Symbol == 'function'
    , QObject        = global.QObject;
  // Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173
  var setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;

  // fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687
  var setSymbolDesc = DESCRIPTORS && $fails(function(){
    return _create(dP({}, 'a', {
      get: function(){ return dP(this, 'a', {value: 7}).a; }
    })).a != 7;
  }) ? function(it, key, D){
    var protoDesc = gOPD(ObjectProto, key);
    if(protoDesc)delete ObjectProto[key];
    dP(it, key, D);
    if(protoDesc && it !== ObjectProto)dP(ObjectProto, key, protoDesc);
  } : dP;

  var wrap = function(tag){
    var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);
    sym._k = tag;
    return sym;
  };

  var isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function(it){
    return typeof it == 'symbol';
  } : function(it){
    return it instanceof $Symbol;
  };

  var $defineProperty = function defineProperty(it, key, D){
    if(it === ObjectProto)$defineProperty(OPSymbols, key, D);
    anObject(it);
    key = toPrimitive(key, true);
    anObject(D);
    if(has(AllSymbols, key)){
      if(!D.enumerable){
        if(!has(it, HIDDEN))dP(it, HIDDEN, createDesc(1, {}));
        it[HIDDEN][key] = true;
      } else {
        if(has(it, HIDDEN) && it[HIDDEN][key])it[HIDDEN][key] = false;
        D = _create(D, {enumerable: createDesc(0, false)});
      } return setSymbolDesc(it, key, D);
    } return dP(it, key, D);
  };
  var $defineProperties = function defineProperties(it, P){
    anObject(it);
    var keys = enumKeys(P = toIObject(P))
      , i    = 0
      , l = keys.length
      , key;
    while(l > i)$defineProperty(it, key = keys[i++], P[key]);
    return it;
  };
  var $create = function create(it, P){
    return P === undefined ? _create(it) : $defineProperties(_create(it), P);
  };
  var $propertyIsEnumerable = function propertyIsEnumerable(key){
    var E = isEnum.call(this, key = toPrimitive(key, true));
    if(this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key))return false;
    return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;
  };
  var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key){
    it  = toIObject(it);
    key = toPrimitive(key, true);
    if(it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key))return;
    var D = gOPD(it, key);
    if(D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key]))D.enumerable = true;
    return D;
  };
  var $getOwnPropertyNames = function getOwnPropertyNames(it){
    var names  = gOPN(toIObject(it))
      , result = []
      , i      = 0
      , key;
    while(names.length > i){
      if(!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META)result.push(key);
    } return result;
  };
  var $getOwnPropertySymbols = function getOwnPropertySymbols(it){
    var IS_OP  = it === ObjectProto
      , names  = gOPN(IS_OP ? OPSymbols : toIObject(it))
      , result = []
      , i      = 0
      , key;
    while(names.length > i){
      if(has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectProto, key) : true))result.push(AllSymbols[key]);
    } return result;
  };

  // 19.4.1.1 Symbol([description])
  if(!USE_NATIVE){
    $Symbol = function Symbol(){
      if(this instanceof $Symbol)throw TypeError('Symbol is not a constructor!');
      var tag = uid(arguments.length > 0 ? arguments[0] : undefined);
      var $set = function(value){
        if(this === ObjectProto)$set.call(OPSymbols, value);
        if(has(this, HIDDEN) && has(this[HIDDEN], tag))this[HIDDEN][tag] = false;
        setSymbolDesc(this, tag, createDesc(1, value));
      };
      if(DESCRIPTORS && setter)setSymbolDesc(ObjectProto, tag, {configurable: true, set: $set});
      return wrap(tag);
    };
    redefine($Symbol[PROTOTYPE], 'toString', function toString(){
      return this._k;
    });

    $GOPD.f = $getOwnPropertyDescriptor;
    $DP.f   = $defineProperty;
    __webpack_require__(64).f = gOPNExt.f = $getOwnPropertyNames;
    __webpack_require__(61).f  = $propertyIsEnumerable;
    __webpack_require__(60).f = $getOwnPropertySymbols;

    if(DESCRIPTORS && !__webpack_require__(9)){
      redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);
    }

    wksExt.f = function(name){
      return wrap(wks(name));
    }
  }

  $export($export.G + $export.W + $export.F * !USE_NATIVE, {Symbol: $Symbol});

  for(var symbols = (
    // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14
    'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'
  ).split(','), i = 0; symbols.length > i; )wks(symbols[i++]);

  for(var symbols = $keys(wks.store), i = 0; symbols.length > i; )wksDefine(symbols[i++]);

  $export($export.S + $export.F * !USE_NATIVE, 'Symbol', {
    // 19.4.2.1 Symbol.for(key)
    'for': function(key){
      return has(SymbolRegistry, key += '')
        ? SymbolRegistry[key]
        : SymbolRegistry[key] = $Symbol(key);
    },
    // 19.4.2.5 Symbol.keyFor(sym)
    keyFor: function keyFor(key){
      if(isSymbol(key))return keyOf(SymbolRegistry, key);
      throw TypeError(key + ' is not a symbol!');
    },
    useSetter: function(){ setter = true; },
    useSimple: function(){ setter = false; }
  });

  $export($export.S + $export.F * !USE_NATIVE, 'Object', {
    // 19.1.2.2 Object.create(O [, Properties])
    create: $create,
    // 19.1.2.4 Object.defineProperty(O, P, Attributes)
    defineProperty: $defineProperty,
    // 19.1.2.3 Object.defineProperties(O, Properties)
    defineProperties: $defineProperties,
    // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
    getOwnPropertyDescriptor: $getOwnPropertyDescriptor,
    // 19.1.2.7 Object.getOwnPropertyNames(O)
    getOwnPropertyNames: $getOwnPropertyNames,
    // 19.1.2.8 Object.getOwnPropertySymbols(O)
    getOwnPropertySymbols: $getOwnPropertySymbols
  });

  // 24.3.2 JSON.stringify(value [, replacer [, space]])
  $JSON && $export($export.S + $export.F * (!USE_NATIVE || $fails(function(){
    var S = $Symbol();
    // MS Edge converts symbol values to JSON as {}
    // WebKit converts symbol values to JSON as null
    // V8 throws on boxed symbols
    return _stringify([S]) != '[null]' || _stringify({a: S}) != '{}' || _stringify(Object(S)) != '{}';
  })), 'JSON', {
    stringify: function stringify(it){
      if(it === undefined || isSymbol(it))return; // IE8 returns string on undefined
      var args = [it]
        , i    = 1
        , replacer, $replacer;
      while(arguments.length > i)args.push(arguments[i++]);
      replacer = args[1];
      if(typeof replacer == 'function')$replacer = replacer;
      if($replacer || !isArray(replacer))replacer = function(key, value){
        if($replacer)value = $replacer.call(this, key, value);
        if(!isSymbol(value))return value;
      };
      args[1] = replacer;
      return _stringify.apply($JSON, args);
    }
  });

  // 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)
  $Symbol[PROTOTYPE][TO_PRIMITIVE] || __webpack_require__(15)($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);
  // 19.4.3.5 Symbol.prototype[@@toStringTag]
  setToStringTag($Symbol, 'Symbol');
  // 20.2.1.9 Math[@@toStringTag]
  setToStringTag(Math, 'Math', true);
  // 24.3.3 JSON[@@toStringTag]
  setToStringTag(global.JSON, 'JSON', true);

/***/ },
/* 56 */
/***/ function(module, exports, __webpack_require__) {

  var META     = __webpack_require__(41)('meta')
    , isObject = __webpack_require__(18)
    , has      = __webpack_require__(26)
    , setDesc  = __webpack_require__(16).f
    , id       = 0;
  var isExtensible = Object.isExtensible || function(){
    return true;
  };
  var FREEZE = !__webpack_require__(21)(function(){
    return isExtensible(Object.preventExtensions({}));
  });
  var setMeta = function(it){
    setDesc(it, META, {value: {
      i: 'O' + ++id, // object ID
      w: {}          // weak collections IDs
    }});
  };
  var fastKey = function(it, create){
    // return primitive with prefix
    if(!isObject(it))return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;
    if(!has(it, META)){
      // can't set metadata to uncaught frozen object
      if(!isExtensible(it))return 'F';
      // not necessary to add metadata
      if(!create)return 'E';
      // add missing metadata
      setMeta(it);
    // return object ID
    } return it[META].i;
  };
  var getWeak = function(it, create){
    if(!has(it, META)){
      // can't set metadata to uncaught frozen object
      if(!isExtensible(it))return true;
      // not necessary to add metadata
      if(!create)return false;
      // add missing metadata
      setMeta(it);
    // return hash weak collections IDs
    } return it[META].w;
  };
  // add metadata on freeze-family methods calling
  var onFreeze = function(it){
    if(FREEZE && meta.NEED && isExtensible(it) && !has(it, META))setMeta(it);
    return it;
  };
  var meta = module.exports = {
    KEY:      META,
    NEED:     false,
    fastKey:  fastKey,
    getWeak:  getWeak,
    onFreeze: onFreeze
  };

/***/ },
/* 57 */
/***/ function(module, exports, __webpack_require__) {

  var global         = __webpack_require__(11)
    , core           = __webpack_require__(12)
    , LIBRARY        = __webpack_require__(9)
    , wksExt         = __webpack_require__(52)
    , defineProperty = __webpack_require__(16).f;
  module.exports = function(name){
    var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});
    if(name.charAt(0) != '_' && !(name in $Symbol))defineProperty($Symbol, name, {value: wksExt.f(name)});
  };

/***/ },
/* 58 */
/***/ function(module, exports, __webpack_require__) {

  var getKeys   = __webpack_require__(31)
    , toIObject = __webpack_require__(33);
  module.exports = function(object, el){
    var O      = toIObject(object)
      , keys   = getKeys(O)
      , length = keys.length
      , index  = 0
      , key;
    while(length > index)if(O[key = keys[index++]] === el)return key;
  };

/***/ },
/* 59 */
/***/ function(module, exports, __webpack_require__) {

  // all enumerable object keys, includes symbols
  var getKeys = __webpack_require__(31)
    , gOPS    = __webpack_require__(60)
    , pIE     = __webpack_require__(61);
  module.exports = function(it){
    var result     = getKeys(it)
      , getSymbols = gOPS.f;
    if(getSymbols){
      var symbols = getSymbols(it)
        , isEnum  = pIE.f
        , i       = 0
        , key;
      while(symbols.length > i)if(isEnum.call(it, key = symbols[i++]))result.push(key);
    } return result;
  };

/***/ },
/* 60 */
/***/ function(module, exports) {

  exports.f = Object.getOwnPropertySymbols;

/***/ },
/* 61 */
/***/ function(module, exports) {

  exports.f = {}.propertyIsEnumerable;

/***/ },
/* 62 */
/***/ function(module, exports, __webpack_require__) {

  // 7.2.2 IsArray(argument)
  var cof = __webpack_require__(35);
  module.exports = Array.isArray || function isArray(arg){
    return cof(arg) == 'Array';
  };

/***/ },
/* 63 */
/***/ function(module, exports, __webpack_require__) {

  // fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window
  var toIObject = __webpack_require__(33)
    , gOPN      = __webpack_require__(64).f
    , toString  = {}.toString;

  var windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames
    ? Object.getOwnPropertyNames(window) : [];

  var getWindowNames = function(it){
    try {
      return gOPN(it);
    } catch(e){
      return windowNames.slice();
    }
  };

  module.exports.f = function getOwnPropertyNames(it){
    return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));
  };


/***/ },
/* 64 */
/***/ function(module, exports, __webpack_require__) {

  // 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)
  var $keys      = __webpack_require__(32)
    , hiddenKeys = __webpack_require__(42).concat('length', 'prototype');

  exports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O){
    return $keys(O, hiddenKeys);
  };

/***/ },
/* 65 */
/***/ function(module, exports, __webpack_require__) {

  var pIE            = __webpack_require__(61)
    , createDesc     = __webpack_require__(24)
    , toIObject      = __webpack_require__(33)
    , toPrimitive    = __webpack_require__(23)
    , has            = __webpack_require__(26)
    , IE8_DOM_DEFINE = __webpack_require__(19)
    , gOPD           = Object.getOwnPropertyDescriptor;

  exports.f = __webpack_require__(20) ? gOPD : function getOwnPropertyDescriptor(O, P){
    O = toIObject(O);
    P = toPrimitive(P, true);
    if(IE8_DOM_DEFINE)try {
      return gOPD(O, P);
    } catch(e){ /* empty */ }
    if(has(O, P))return createDesc(!pIE.f.call(O, P), O[P]);
  };

/***/ },
/* 66 */
/***/ function(module, exports) {

  

/***/ },
/* 67 */
/***/ function(module, exports, __webpack_require__) {

  __webpack_require__(57)('asyncIterator');

/***/ },
/* 68 */
/***/ function(module, exports, __webpack_require__) {

  __webpack_require__(57)('observable');

/***/ },
/* 69 */
/***/ function(module, exports, __webpack_require__) {

  module.exports = __webpack_require__(70);


/***/ },
/* 70 */
/***/ function(module, exports, __webpack_require__) {

  /* WEBPACK VAR INJECTION */(function(global) {// This method of obtaining a reference to the global object needs to be
  // kept identical to the way it is obtained in runtime.js
  var g =
    typeof global === "object" ? global :
    typeof window === "object" ? window :
    typeof self === "object" ? self : this;

  // Use `getOwnPropertyNames` because not all browsers support calling
  // `hasOwnProperty` on the global `self` object in a worker. See #183.
  var hadRuntime = g.regeneratorRuntime &&
    Object.getOwnPropertyNames(g).indexOf("regeneratorRuntime") >= 0;

  // Save the old regeneratorRuntime in case it needs to be restored later.
  var oldRuntime = hadRuntime && g.regeneratorRuntime;

  // Force reevalutation of runtime.js.
  g.regeneratorRuntime = undefined;

  module.exports = __webpack_require__(71);

  if (hadRuntime) {
    // Restore the original runtime.
    g.regeneratorRuntime = oldRuntime;
  } else {
    // Remove the global property added by runtime.js.
    try {
      delete g.regeneratorRuntime;
    } catch(e) {
      g.regeneratorRuntime = undefined;
    }
  }

  /* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ },
/* 71 */
/***/ function(module, exports, __webpack_require__) {

  /* WEBPACK VAR INJECTION */(function(global, process) {/**
   * Copyright (c) 2014, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * https://raw.github.com/facebook/regenerator/master/LICENSE file. An
   * additional grant of patent rights can be found in the PATENTS file in
   * the same directory.
   */

  !(function(global) {
    "use strict";

    var Op = Object.prototype;
    var hasOwn = Op.hasOwnProperty;
    var undefined; // More compressible than void 0.
    var $Symbol = typeof Symbol === "function" ? Symbol : {};
    var iteratorSymbol = $Symbol.iterator || "@@iterator";
    var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";

    var inModule = typeof module === "object";
    var runtime = global.regeneratorRuntime;
    if (runtime) {
      if (inModule) {
        // If regeneratorRuntime is defined globally and we're in a module,
        // make the exports object identical to regeneratorRuntime.
        module.exports = runtime;
      }
      // Don't bother evaluating the rest of this file if the runtime was
      // already defined globally.
      return;
    }

    // Define the runtime globally (as expected by generated code) as either
    // module.exports (if we're in a module) or a new, empty object.
    runtime = global.regeneratorRuntime = inModule ? module.exports : {};

    function wrap(innerFn, outerFn, self, tryLocsList) {
      // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.
      var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;
      var generator = Object.create(protoGenerator.prototype);
      var context = new Context(tryLocsList || []);

      // The ._invoke method unifies the implementations of the .next,
      // .throw, and .return methods.
      generator._invoke = makeInvokeMethod(innerFn, self, context);

      return generator;
    }
    runtime.wrap = wrap;

    // Try/catch helper to minimize deoptimizations. Returns a completion
    // record like context.tryEntries[i].completion. This interface could
    // have been (and was previously) designed to take a closure to be
    // invoked without arguments, but in all the cases we care about we
    // already have an existing method we want to call, so there's no need
    // to create a new function object. We can even get away with assuming
    // the method takes exactly one argument, since that happens to be true
    // in every case, so we don't have to touch the arguments object. The
    // only additional allocation required is the completion record, which
    // has a stable shape and so hopefully should be cheap to allocate.
    function tryCatch(fn, obj, arg) {
      try {
        return { type: "normal", arg: fn.call(obj, arg) };
      } catch (err) {
        return { type: "throw", arg: err };
      }
    }

    var GenStateSuspendedStart = "suspendedStart";
    var GenStateSuspendedYield = "suspendedYield";
    var GenStateExecuting = "executing";
    var GenStateCompleted = "completed";

    // Returning this object from the innerFn has the same effect as
    // breaking out of the dispatch switch statement.
    var ContinueSentinel = {};

    // Dummy constructor functions that we use as the .constructor and
    // .constructor.prototype properties for functions that return Generator
    // objects. For full spec compliance, you may wish to configure your
    // minifier not to mangle the names of these two functions.
    function Generator() {}
    function GeneratorFunction() {}
    function GeneratorFunctionPrototype() {}

    // This is a polyfill for %IteratorPrototype% for environments that
    // don't natively support it.
    var IteratorPrototype = {};
    IteratorPrototype[iteratorSymbol] = function () {
      return this;
    };

    var getProto = Object.getPrototypeOf;
    var NativeIteratorPrototype = getProto && getProto(getProto(values([])));
    if (NativeIteratorPrototype &&
        NativeIteratorPrototype !== Op &&
        hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {
      // This environment has a native %IteratorPrototype%; use it instead
      // of the polyfill.
      IteratorPrototype = NativeIteratorPrototype;
    }

    var Gp = GeneratorFunctionPrototype.prototype =
      Generator.prototype = Object.create(IteratorPrototype);
    GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;
    GeneratorFunctionPrototype.constructor = GeneratorFunction;
    GeneratorFunctionPrototype[toStringTagSymbol] =
      GeneratorFunction.displayName = "GeneratorFunction";

    // Helper for defining the .next, .throw, and .return methods of the
    // Iterator interface in terms of a single ._invoke method.
    function defineIteratorMethods(prototype) {
      ["next", "throw", "return"].forEach(function(method) {
        prototype[method] = function(arg) {
          return this._invoke(method, arg);
        };
      });
    }

    runtime.isGeneratorFunction = function(genFun) {
      var ctor = typeof genFun === "function" && genFun.constructor;
      return ctor
        ? ctor === GeneratorFunction ||
          // For the native GeneratorFunction constructor, the best we can
          // do is to check its .name property.
          (ctor.displayName || ctor.name) === "GeneratorFunction"
        : false;
    };

    runtime.mark = function(genFun) {
      if (Object.setPrototypeOf) {
        Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
      } else {
        genFun.__proto__ = GeneratorFunctionPrototype;
        if (!(toStringTagSymbol in genFun)) {
          genFun[toStringTagSymbol] = "GeneratorFunction";
        }
      }
      genFun.prototype = Object.create(Gp);
      return genFun;
    };

    // Within the body of any async function, `await x` is transformed to
    // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test
    // `hasOwn.call(value, "__await")` to determine if the yielded value is
    // meant to be awaited.
    runtime.awrap = function(arg) {
      return { __await: arg };
    };

    function AsyncIterator(generator) {
      function invoke(method, arg, resolve, reject) {
        var record = tryCatch(generator[method], generator, arg);
        if (record.type === "throw") {
          reject(record.arg);
        } else {
          var result = record.arg;
          var value = result.value;
          if (value &&
              typeof value === "object" &&
              hasOwn.call(value, "__await")) {
            return Promise.resolve(value.__await).then(function(value) {
              invoke("next", value, resolve, reject);
            }, function(err) {
              invoke("throw", err, resolve, reject);
            });
          }

          return Promise.resolve(value).then(function(unwrapped) {
            // When a yielded Promise is resolved, its final value becomes
            // the .value of the Promise<{value,done}> result for the
            // current iteration. If the Promise is rejected, however, the
            // result for this iteration will be rejected with the same
            // reason. Note that rejections of yielded Promises are not
            // thrown back into the generator function, as is the case
            // when an awaited Promise is rejected. This difference in
            // behavior between yield and await is important, because it
            // allows the consumer to decide what to do with the yielded
            // rejection (swallow it and continue, manually .throw it back
            // into the generator, abandon iteration, whatever). With
            // await, by contrast, there is no opportunity to examine the
            // rejection reason outside the generator function, so the
            // only option is to throw it from the await expression, and
            // let the generator function handle the exception.
            result.value = unwrapped;
            resolve(result);
          }, reject);
        }
      }

      if (typeof process === "object" && process.domain) {
        invoke = process.domain.bind(invoke);
      }

      var previousPromise;

      function enqueue(method, arg) {
        function callInvokeWithMethodAndArg() {
          return new Promise(function(resolve, reject) {
            invoke(method, arg, resolve, reject);
          });
        }

        return previousPromise =
          // If enqueue has been called before, then we want to wait until
          // all previous Promises have been resolved before calling invoke,
          // so that results are always delivered in the correct order. If
          // enqueue has not been called before, then it is important to
          // call invoke immediately, without waiting on a callback to fire,
          // so that the async generator function has the opportunity to do
          // any necessary setup in a predictable way. This predictability
          // is why the Promise constructor synchronously invokes its
          // executor callback, and why async functions synchronously
          // execute code before the first await. Since we implement simple
          // async functions in terms of async generators, it is especially
          // important to get this right, even though it requires care.
          previousPromise ? previousPromise.then(
            callInvokeWithMethodAndArg,
            // Avoid propagating failures to Promises returned by later
            // invocations of the iterator.
            callInvokeWithMethodAndArg
          ) : callInvokeWithMethodAndArg();
      }

      // Define the unified helper method that is used to implement .next,
      // .throw, and .return (see defineIteratorMethods).
      this._invoke = enqueue;
    }

    defineIteratorMethods(AsyncIterator.prototype);
    runtime.AsyncIterator = AsyncIterator;

    // Note that simple async functions are implemented on top of
    // AsyncIterator objects; they just return a Promise for the value of
    // the final result produced by the iterator.
    runtime.async = function(innerFn, outerFn, self, tryLocsList) {
      var iter = new AsyncIterator(
        wrap(innerFn, outerFn, self, tryLocsList)
      );

      return runtime.isGeneratorFunction(outerFn)
        ? iter // If outerFn is a generator, return the full iterator.
        : iter.next().then(function(result) {
            return result.done ? result.value : iter.next();
          });
    };

    function makeInvokeMethod(innerFn, self, context) {
      var state = GenStateSuspendedStart;

      return function invoke(method, arg) {
        if (state === GenStateExecuting) {
          throw new Error("Generator is already running");
        }

        if (state === GenStateCompleted) {
          if (method === "throw") {
            throw arg;
          }

          // Be forgiving, per 25.3.3.3.3 of the spec:
          // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume
          return doneResult();
        }

        while (true) {
          var delegate = context.delegate;
          if (delegate) {
            if (method === "return" ||
                (method === "throw" && delegate.iterator[method] === undefined)) {
              // A return or throw (when the delegate iterator has no throw
              // method) always terminates the yield* loop.
              context.delegate = null;

              // If the delegate iterator has a return method, give it a
              // chance to clean up.
              var returnMethod = delegate.iterator["return"];
              if (returnMethod) {
                var record = tryCatch(returnMethod, delegate.iterator, arg);
                if (record.type === "throw") {
                  // If the return method threw an exception, let that
                  // exception prevail over the original return or throw.
                  method = "throw";
                  arg = record.arg;
                  continue;
                }
              }

              if (method === "return") {
                // Continue with the outer return, now that the delegate
                // iterator has been terminated.
                continue;
              }
            }

            var record = tryCatch(
              delegate.iterator[method],
              delegate.iterator,
              arg
            );

            if (record.type === "throw") {
              context.delegate = null;

              // Like returning generator.throw(uncaught), but without the
              // overhead of an extra function call.
              method = "throw";
              arg = record.arg;
              continue;
            }

            // Delegate generator ran and handled its own exceptions so
            // regardless of what the method was, we continue as if it is
            // "next" with an undefined arg.
            method = "next";
            arg = undefined;

            var info = record.arg;
            if (info.done) {
              context[delegate.resultName] = info.value;
              context.next = delegate.nextLoc;
            } else {
              state = GenStateSuspendedYield;
              return info;
            }

            context.delegate = null;
          }

          if (method === "next") {
            // Setting context._sent for legacy support of Babel's
            // function.sent implementation.
            context.sent = context._sent = arg;

          } else if (method === "throw") {
            if (state === GenStateSuspendedStart) {
              state = GenStateCompleted;
              throw arg;
            }

            if (context.dispatchException(arg)) {
              // If the dispatched exception was caught by a catch block,
              // then let that catch block handle the exception normally.
              method = "next";
              arg = undefined;
            }

          } else if (method === "return") {
            context.abrupt("return", arg);
          }

          state = GenStateExecuting;

          var record = tryCatch(innerFn, self, context);
          if (record.type === "normal") {
            // If an exception is thrown from innerFn, we leave state ===
            // GenStateExecuting and loop back for another invocation.
            state = context.done
              ? GenStateCompleted
              : GenStateSuspendedYield;

            var info = {
              value: record.arg,
              done: context.done
            };

            if (record.arg === ContinueSentinel) {
              if (context.delegate && method === "next") {
                // Deliberately forget the last sent value so that we don't
                // accidentally pass it on to the delegate.
                arg = undefined;
              }
            } else {
              return info;
            }

          } else if (record.type === "throw") {
            state = GenStateCompleted;
            // Dispatch the exception by looping back around to the
            // context.dispatchException(arg) call above.
            method = "throw";
            arg = record.arg;
          }
        }
      };
    }

    // Define Generator.prototype.{next,throw,return} in terms of the
    // unified ._invoke helper method.
    defineIteratorMethods(Gp);

    Gp[toStringTagSymbol] = "Generator";

    Gp.toString = function() {
      return "[object Generator]";
    };

    function pushTryEntry(locs) {
      var entry = { tryLoc: locs[0] };

      if (1 in locs) {
        entry.catchLoc = locs[1];
      }

      if (2 in locs) {
        entry.finallyLoc = locs[2];
        entry.afterLoc = locs[3];
      }

      this.tryEntries.push(entry);
    }

    function resetTryEntry(entry) {
      var record = entry.completion || {};
      record.type = "normal";
      delete record.arg;
      entry.completion = record;
    }

    function Context(tryLocsList) {
      // The root entry object (effectively a try statement without a catch
      // or a finally block) gives us a place to store values thrown from
      // locations where there is no enclosing try statement.
      this.tryEntries = [{ tryLoc: "root" }];
      tryLocsList.forEach(pushTryEntry, this);
      this.reset(true);
    }

    runtime.keys = function(object) {
      var keys = [];
      for (var key in object) {
        keys.push(key);
      }
      keys.reverse();

      // Rather than returning an object with a next method, we keep
      // things simple and return the next function itself.
      return function next() {
        while (keys.length) {
          var key = keys.pop();
          if (key in object) {
            next.value = key;
            next.done = false;
            return next;
          }
        }

        // To avoid creating an additional object, we just hang the .value
        // and .done properties off the next function object itself. This
        // also ensures that the minifier will not anonymize the function.
        next.done = true;
        return next;
      };
    };

    function values(iterable) {
      if (iterable) {
        var iteratorMethod = iterable[iteratorSymbol];
        if (iteratorMethod) {
          return iteratorMethod.call(iterable);
        }

        if (typeof iterable.next === "function") {
          return iterable;
        }

        if (!isNaN(iterable.length)) {
          var i = -1, next = function next() {
            while (++i < iterable.length) {
              if (hasOwn.call(iterable, i)) {
                next.value = iterable[i];
                next.done = false;
                return next;
              }
            }

            next.value = undefined;
            next.done = true;

            return next;
          };

          return next.next = next;
        }
      }

      // Return an iterator with no values.
      return { next: doneResult };
    }
    runtime.values = values;

    function doneResult() {
      return { value: undefined, done: true };
    }

    Context.prototype = {
      constructor: Context,

      reset: function(skipTempReset) {
        this.prev = 0;
        this.next = 0;
        // Resetting context._sent for legacy support of Babel's
        // function.sent implementation.
        this.sent = this._sent = undefined;
        this.done = false;
        this.delegate = null;

        this.tryEntries.forEach(resetTryEntry);

        if (!skipTempReset) {
          for (var name in this) {
            // Not sure about the optimal order of these conditions:
            if (name.charAt(0) === "t" &&
                hasOwn.call(this, name) &&
                !isNaN(+name.slice(1))) {
              this[name] = undefined;
            }
          }
        }
      },

      stop: function() {
        this.done = true;

        var rootEntry = this.tryEntries[0];
        var rootRecord = rootEntry.completion;
        if (rootRecord.type === "throw") {
          throw rootRecord.arg;
        }

        return this.rval;
      },

      dispatchException: function(exception) {
        if (this.done) {
          throw exception;
        }

        var context = this;
        function handle(loc, caught) {
          record.type = "throw";
          record.arg = exception;
          context.next = loc;
          return !!caught;
        }

        for (var i = this.tryEntries.length - 1; i >= 0; --i) {
          var entry = this.tryEntries[i];
          var record = entry.completion;

          if (entry.tryLoc === "root") {
            // Exception thrown outside of any try block that could handle
            // it, so set the completion value of the entire function to
            // throw the exception.
            return handle("end");
          }

          if (entry.tryLoc <= this.prev) {
            var hasCatch = hasOwn.call(entry, "catchLoc");
            var hasFinally = hasOwn.call(entry, "finallyLoc");

            if (hasCatch && hasFinally) {
              if (this.prev < entry.catchLoc) {
                return handle(entry.catchLoc, true);
              } else if (this.prev < entry.finallyLoc) {
                return handle(entry.finallyLoc);
              }

            } else if (hasCatch) {
              if (this.prev < entry.catchLoc) {
                return handle(entry.catchLoc, true);
              }

            } else if (hasFinally) {
              if (this.prev < entry.finallyLoc) {
                return handle(entry.finallyLoc);
              }

            } else {
              throw new Error("try statement without catch or finally");
            }
          }
        }
      },

      abrupt: function(type, arg) {
        for (var i = this.tryEntries.length - 1; i >= 0; --i) {
          var entry = this.tryEntries[i];
          if (entry.tryLoc <= this.prev &&
              hasOwn.call(entry, "finallyLoc") &&
              this.prev < entry.finallyLoc) {
            var finallyEntry = entry;
            break;
          }
        }

        if (finallyEntry &&
            (type === "break" ||
             type === "continue") &&
            finallyEntry.tryLoc <= arg &&
            arg <= finallyEntry.finallyLoc) {
          // Ignore the finally entry if control is not jumping to a
          // location outside the try/catch block.
          finallyEntry = null;
        }

        var record = finallyEntry ? finallyEntry.completion : {};
        record.type = type;
        record.arg = arg;

        if (finallyEntry) {
          this.next = finallyEntry.finallyLoc;
        } else {
          this.complete(record);
        }

        return ContinueSentinel;
      },

      complete: function(record, afterLoc) {
        if (record.type === "throw") {
          throw record.arg;
        }

        if (record.type === "break" ||
            record.type === "continue") {
          this.next = record.arg;
        } else if (record.type === "return") {
          this.rval = record.arg;
          this.next = "end";
        } else if (record.type === "normal" && afterLoc) {
          this.next = afterLoc;
        }
      },

      finish: function(finallyLoc) {
        for (var i = this.tryEntries.length - 1; i >= 0; --i) {
          var entry = this.tryEntries[i];
          if (entry.finallyLoc === finallyLoc) {
            this.complete(entry.completion, entry.afterLoc);
            resetTryEntry(entry);
            return ContinueSentinel;
          }
        }
      },

      "catch": function(tryLoc) {
        for (var i = this.tryEntries.length - 1; i >= 0; --i) {
          var entry = this.tryEntries[i];
          if (entry.tryLoc === tryLoc) {
            var record = entry.completion;
            if (record.type === "throw") {
              var thrown = record.arg;
              resetTryEntry(entry);
            }
            return thrown;
          }
        }

        // The context.catch method must only be called with a location
        // argument that corresponds to a known catch block.
        throw new Error("illegal catch attempt");
      },

      delegateYield: function(iterable, resultName, nextLoc) {
        this.delegate = {
          iterator: values(iterable),
          resultName: resultName,
          nextLoc: nextLoc
        };

        return ContinueSentinel;
      }
    };
  })(
    // Among the various tricks for obtaining a reference to the global
    // object, this seems to be the most reliable technique that does not
    // use indirect eval (which violates Content Security Policy).
    typeof global === "object" ? global :
    typeof window === "object" ? window :
    typeof self === "object" ? self : this
  );

  /* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(72)))

/***/ },
/* 72 */
/***/ function(module, exports) {

  // shim for using process in browser
  var process = module.exports = {};

  // cached from whatever global is present so that test runners that stub it
  // don't break things.  But we need to wrap it in a try catch in case it is
  // wrapped in strict mode code which doesn't define any globals.  It's inside a
  // function because try/catches deoptimize in certain engines.

  var cachedSetTimeout;
  var cachedClearTimeout;

  function defaultSetTimout() {
      throw new Error('setTimeout has not been defined');
  }
  function defaultClearTimeout () {
      throw new Error('clearTimeout has not been defined');
  }
  (function () {
      try {
          if (typeof setTimeout === 'function') {
              cachedSetTimeout = setTimeout;
          } else {
              cachedSetTimeout = defaultSetTimout;
          }
      } catch (e) {
          cachedSetTimeout = defaultSetTimout;
      }
      try {
          if (typeof clearTimeout === 'function') {
              cachedClearTimeout = clearTimeout;
          } else {
              cachedClearTimeout = defaultClearTimeout;
          }
      } catch (e) {
          cachedClearTimeout = defaultClearTimeout;
      }
  } ())
  function runTimeout(fun) {
      if (cachedSetTimeout === setTimeout) {
          //normal enviroments in sane situations
          return setTimeout(fun, 0);
      }
      // if setTimeout wasn't available but was latter defined
      if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
          cachedSetTimeout = setTimeout;
          return setTimeout(fun, 0);
      }
      try {
          // when when somebody has screwed with setTimeout but no I.E. maddness
          return cachedSetTimeout(fun, 0);
      } catch(e){
          try {
              // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
              return cachedSetTimeout.call(null, fun, 0);
          } catch(e){
              // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
              return cachedSetTimeout.call(this, fun, 0);
          }
      }


  }
  function runClearTimeout(marker) {
      if (cachedClearTimeout === clearTimeout) {
          //normal enviroments in sane situations
          return clearTimeout(marker);
      }
      // if clearTimeout wasn't available but was latter defined
      if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
          cachedClearTimeout = clearTimeout;
          return clearTimeout(marker);
      }
      try {
          // when when somebody has screwed with setTimeout but no I.E. maddness
          return cachedClearTimeout(marker);
      } catch (e){
          try {
              // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
              return cachedClearTimeout.call(null, marker);
          } catch (e){
              // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
              // Some versions of I.E. have different rules for clearTimeout vs setTimeout
              return cachedClearTimeout.call(this, marker);
          }
      }



  }
  var queue = [];
  var draining = false;
  var currentQueue;
  var queueIndex = -1;

  function cleanUpNextTick() {
      if (!draining || !currentQueue) {
          return;
      }
      draining = false;
      if (currentQueue.length) {
          queue = currentQueue.concat(queue);
      } else {
          queueIndex = -1;
      }
      if (queue.length) {
          drainQueue();
      }
  }

  function drainQueue() {
      if (draining) {
          return;
      }
      var timeout = runTimeout(cleanUpNextTick);
      draining = true;

      var len = queue.length;
      while(len) {
          currentQueue = queue;
          queue = [];
          while (++queueIndex < len) {
              if (currentQueue) {
                  currentQueue[queueIndex].run();
              }
          }
          queueIndex = -1;
          len = queue.length;
      }
      currentQueue = null;
      draining = false;
      runClearTimeout(timeout);
  }

  process.nextTick = function (fun) {
      var args = new Array(arguments.length - 1);
      if (arguments.length > 1) {
          for (var i = 1; i < arguments.length; i++) {
              args[i - 1] = arguments[i];
          }
      }
      queue.push(new Item(fun, args));
      if (queue.length === 1 && !draining) {
          runTimeout(drainQueue);
      }
  };

  // v8 likes predictible objects
  function Item(fun, array) {
      this.fun = fun;
      this.array = array;
  }
  Item.prototype.run = function () {
      this.fun.apply(null, this.array);
  };
  process.title = 'browser';
  process.browser = true;
  process.env = {};
  process.argv = [];
  process.version = ''; // empty string to avoid regexp issues
  process.versions = {};

  function noop() {}

  process.on = noop;
  process.addListener = noop;
  process.once = noop;
  process.off = noop;
  process.removeListener = noop;
  process.removeAllListeners = noop;
  process.emit = noop;

  process.binding = function (name) {
      throw new Error('process.binding is not supported');
  };

  process.cwd = function () { return '/' };
  process.chdir = function (dir) {
      throw new Error('process.chdir is not supported');
  };
  process.umask = function() { return 0; };


/***/ },
/* 73 */
/***/ function(module, exports, __webpack_require__) {

  "use strict";

  exports.__esModule = true;

  var _promise = __webpack_require__(74);

  var _promise2 = _interopRequireDefault(_promise);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  exports.default = function (fn) {
    return function () {
      var gen = fn.apply(this, arguments);
      return new _promise2.default(function (resolve, reject) {
        function step(key, arg) {
          try {
            var info = gen[key](arg);
            var value = info.value;
          } catch (error) {
            reject(error);
            return;
          }

          if (info.done) {
            resolve(value);
          } else {
            return _promise2.default.resolve(value).then(function (value) {
              step("next", value);
            }, function (err) {
              step("throw", err);
            });
          }
        }

        return step("next");
      });
    };
  };

/***/ },
/* 74 */
/***/ function(module, exports, __webpack_require__) {

  module.exports = { "default": __webpack_require__(75), __esModule: true };

/***/ },
/* 75 */
/***/ function(module, exports, __webpack_require__) {

  __webpack_require__(66);
  __webpack_require__(4);
  __webpack_require__(48);
  __webpack_require__(76);
  module.exports = __webpack_require__(12).Promise;

/***/ },
/* 76 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';
  var LIBRARY            = __webpack_require__(9)
    , global             = __webpack_require__(11)
    , ctx                = __webpack_require__(13)
    , classof            = __webpack_require__(77)
    , $export            = __webpack_require__(10)
    , isObject           = __webpack_require__(18)
    , aFunction          = __webpack_require__(14)
    , anInstance         = __webpack_require__(78)
    , forOf              = __webpack_require__(79)
    , speciesConstructor = __webpack_require__(83)
    , task               = __webpack_require__(84).set
    , microtask          = __webpack_require__(86)()
    , PROMISE            = 'Promise'
    , TypeError          = global.TypeError
    , process            = global.process
    , $Promise           = global[PROMISE]
    , process            = global.process
    , isNode             = classof(process) == 'process'
    , empty              = function(){ /* empty */ }
    , Internal, GenericPromiseCapability, Wrapper;

  var USE_NATIVE = !!function(){
    try {
      // correct subclassing with @@species support
      var promise     = $Promise.resolve(1)
        , FakePromise = (promise.constructor = {})[__webpack_require__(45)('species')] = function(exec){ exec(empty, empty); };
      // unhandled rejections tracking support, NodeJS Promise without it fails @@species test
      return (isNode || typeof PromiseRejectionEvent == 'function') && promise.then(empty) instanceof FakePromise;
    } catch(e){ /* empty */ }
  }();

  // helpers
  var sameConstructor = function(a, b){
    // with library wrapper special case
    return a === b || a === $Promise && b === Wrapper;
  };
  var isThenable = function(it){
    var then;
    return isObject(it) && typeof (then = it.then) == 'function' ? then : false;
  };
  var newPromiseCapability = function(C){
    return sameConstructor($Promise, C)
      ? new PromiseCapability(C)
      : new GenericPromiseCapability(C);
  };
  var PromiseCapability = GenericPromiseCapability = function(C){
    var resolve, reject;
    this.promise = new C(function($$resolve, $$reject){
      if(resolve !== undefined || reject !== undefined)throw TypeError('Bad Promise constructor');
      resolve = $$resolve;
      reject  = $$reject;
    });
    this.resolve = aFunction(resolve);
    this.reject  = aFunction(reject);
  };
  var perform = function(exec){
    try {
      exec();
    } catch(e){
      return {error: e};
    }
  };
  var notify = function(promise, isReject){
    if(promise._n)return;
    promise._n = true;
    var chain = promise._c;
    microtask(function(){
      var value = promise._v
        , ok    = promise._s == 1
        , i     = 0;
      var run = function(reaction){
        var handler = ok ? reaction.ok : reaction.fail
          , resolve = reaction.resolve
          , reject  = reaction.reject
          , domain  = reaction.domain
          , result, then;
        try {
          if(handler){
            if(!ok){
              if(promise._h == 2)onHandleUnhandled(promise);
              promise._h = 1;
            }
            if(handler === true)result = value;
            else {
              if(domain)domain.enter();
              result = handler(value);
              if(domain)domain.exit();
            }
            if(result === reaction.promise){
              reject(TypeError('Promise-chain cycle'));
            } else if(then = isThenable(result)){
              then.call(result, resolve, reject);
            } else resolve(result);
          } else reject(value);
        } catch(e){
          reject(e);
        }
      };
      while(chain.length > i)run(chain[i++]); // variable length - can't use forEach
      promise._c = [];
      promise._n = false;
      if(isReject && !promise._h)onUnhandled(promise);
    });
  };
  var onUnhandled = function(promise){
    task.call(global, function(){
      var value = promise._v
        , abrupt, handler, console;
      if(isUnhandled(promise)){
        abrupt = perform(function(){
          if(isNode){
            process.emit('unhandledRejection', value, promise);
          } else if(handler = global.onunhandledrejection){
            handler({promise: promise, reason: value});
          } else if((console = global.console) && console.error){
            console.error('Unhandled promise rejection', value);
          }
        });
        // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should
        promise._h = isNode || isUnhandled(promise) ? 2 : 1;
      } promise._a = undefined;
      if(abrupt)throw abrupt.error;
    });
  };
  var isUnhandled = function(promise){
    if(promise._h == 1)return false;
    var chain = promise._a || promise._c
      , i     = 0
      , reaction;
    while(chain.length > i){
      reaction = chain[i++];
      if(reaction.fail || !isUnhandled(reaction.promise))return false;
    } return true;
  };
  var onHandleUnhandled = function(promise){
    task.call(global, function(){
      var handler;
      if(isNode){
        process.emit('rejectionHandled', promise);
      } else if(handler = global.onrejectionhandled){
        handler({promise: promise, reason: promise._v});
      }
    });
  };
  var $reject = function(value){
    var promise = this;
    if(promise._d)return;
    promise._d = true;
    promise = promise._w || promise; // unwrap
    promise._v = value;
    promise._s = 2;
    if(!promise._a)promise._a = promise._c.slice();
    notify(promise, true);
  };
  var $resolve = function(value){
    var promise = this
      , then;
    if(promise._d)return;
    promise._d = true;
    promise = promise._w || promise; // unwrap
    try {
      if(promise === value)throw TypeError("Promise can't be resolved itself");
      if(then = isThenable(value)){
        microtask(function(){
          var wrapper = {_w: promise, _d: false}; // wrap
          try {
            then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));
          } catch(e){
            $reject.call(wrapper, e);
          }
        });
      } else {
        promise._v = value;
        promise._s = 1;
        notify(promise, false);
      }
    } catch(e){
      $reject.call({_w: promise, _d: false}, e); // wrap
    }
  };

  // constructor polyfill
  if(!USE_NATIVE){
    // 25.4.3.1 Promise(executor)
    $Promise = function Promise(executor){
      anInstance(this, $Promise, PROMISE, '_h');
      aFunction(executor);
      Internal.call(this);
      try {
        executor(ctx($resolve, this, 1), ctx($reject, this, 1));
      } catch(err){
        $reject.call(this, err);
      }
    };
    Internal = function Promise(executor){
      this._c = [];             // <- awaiting reactions
      this._a = undefined;      // <- checked in isUnhandled reactions
      this._s = 0;              // <- state
      this._d = false;          // <- done
      this._v = undefined;      // <- value
      this._h = 0;              // <- rejection state, 0 - default, 1 - handled, 2 - unhandled
      this._n = false;          // <- notify
    };
    Internal.prototype = __webpack_require__(87)($Promise.prototype, {
      // 25.4.5.3 Promise.prototype.then(onFulfilled, onRejected)
      then: function then(onFulfilled, onRejected){
        var reaction    = newPromiseCapability(speciesConstructor(this, $Promise));
        reaction.ok     = typeof onFulfilled == 'function' ? onFulfilled : true;
        reaction.fail   = typeof onRejected == 'function' && onRejected;
        reaction.domain = isNode ? process.domain : undefined;
        this._c.push(reaction);
        if(this._a)this._a.push(reaction);
        if(this._s)notify(this, false);
        return reaction.promise;
      },
      // 25.4.5.1 Promise.prototype.catch(onRejected)
      'catch': function(onRejected){
        return this.then(undefined, onRejected);
      }
    });
    PromiseCapability = function(){
      var promise  = new Internal;
      this.promise = promise;
      this.resolve = ctx($resolve, promise, 1);
      this.reject  = ctx($reject, promise, 1);
    };
  }

  $export($export.G + $export.W + $export.F * !USE_NATIVE, {Promise: $Promise});
  __webpack_require__(44)($Promise, PROMISE);
  __webpack_require__(88)(PROMISE);
  Wrapper = __webpack_require__(12)[PROMISE];

  // statics
  $export($export.S + $export.F * !USE_NATIVE, PROMISE, {
    // 25.4.4.5 Promise.reject(r)
    reject: function reject(r){
      var capability = newPromiseCapability(this)
        , $$reject   = capability.reject;
      $$reject(r);
      return capability.promise;
    }
  });
  $export($export.S + $export.F * (LIBRARY || !USE_NATIVE), PROMISE, {
    // 25.4.4.6 Promise.resolve(x)
    resolve: function resolve(x){
      // instanceof instead of internal slot check because we should fix it without replacement native Promise core
      if(x instanceof $Promise && sameConstructor(x.constructor, this))return x;
      var capability = newPromiseCapability(this)
        , $$resolve  = capability.resolve;
      $$resolve(x);
      return capability.promise;
    }
  });
  $export($export.S + $export.F * !(USE_NATIVE && __webpack_require__(89)(function(iter){
    $Promise.all(iter)['catch'](empty);
  })), PROMISE, {
    // 25.4.4.1 Promise.all(iterable)
    all: function all(iterable){
      var C          = this
        , capability = newPromiseCapability(C)
        , resolve    = capability.resolve
        , reject     = capability.reject;
      var abrupt = perform(function(){
        var values    = []
          , index     = 0
          , remaining = 1;
        forOf(iterable, false, function(promise){
          var $index        = index++
            , alreadyCalled = false;
          values.push(undefined);
          remaining++;
          C.resolve(promise).then(function(value){
            if(alreadyCalled)return;
            alreadyCalled  = true;
            values[$index] = value;
            --remaining || resolve(values);
          }, reject);
        });
        --remaining || resolve(values);
      });
      if(abrupt)reject(abrupt.error);
      return capability.promise;
    },
    // 25.4.4.4 Promise.race(iterable)
    race: function race(iterable){
      var C          = this
        , capability = newPromiseCapability(C)
        , reject     = capability.reject;
      var abrupt = perform(function(){
        forOf(iterable, false, function(promise){
          C.resolve(promise).then(capability.resolve, reject);
        });
      });
      if(abrupt)reject(abrupt.error);
      return capability.promise;
    }
  });

/***/ },
/* 77 */
/***/ function(module, exports, __webpack_require__) {

  // getting tag from 19.1.3.6 Object.prototype.toString()
  var cof = __webpack_require__(35)
    , TAG = __webpack_require__(45)('toStringTag')
    // ES3 wrong here
    , ARG = cof(function(){ return arguments; }()) == 'Arguments';

  // fallback for IE11 Script Access Denied error
  var tryGet = function(it, key){
    try {
      return it[key];
    } catch(e){ /* empty */ }
  };

  module.exports = function(it){
    var O, T, B;
    return it === undefined ? 'Undefined' : it === null ? 'Null'
      // @@toStringTag case
      : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T
      // builtinTag case
      : ARG ? cof(O)
      // ES3 arguments fallback
      : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;
  };

/***/ },
/* 78 */
/***/ function(module, exports) {

  module.exports = function(it, Constructor, name, forbiddenField){
    if(!(it instanceof Constructor) || (forbiddenField !== undefined && forbiddenField in it)){
      throw TypeError(name + ': incorrect invocation!');
    } return it;
  };

/***/ },
/* 79 */
/***/ function(module, exports, __webpack_require__) {

  var ctx         = __webpack_require__(13)
    , call        = __webpack_require__(80)
    , isArrayIter = __webpack_require__(81)
    , anObject    = __webpack_require__(17)
    , toLength    = __webpack_require__(37)
    , getIterFn   = __webpack_require__(82)
    , BREAK       = {}
    , RETURN      = {};
  var exports = module.exports = function(iterable, entries, fn, that, ITERATOR){
    var iterFn = ITERATOR ? function(){ return iterable; } : getIterFn(iterable)
      , f      = ctx(fn, that, entries ? 2 : 1)
      , index  = 0
      , length, step, iterator, result;
    if(typeof iterFn != 'function')throw TypeError(iterable + ' is not iterable!');
    // fast case for arrays with default iterator
    if(isArrayIter(iterFn))for(length = toLength(iterable.length); length > index; index++){
      result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);
      if(result === BREAK || result === RETURN)return result;
    } else for(iterator = iterFn.call(iterable); !(step = iterator.next()).done; ){
      result = call(iterator, f, step.value, entries);
      if(result === BREAK || result === RETURN)return result;
    }
  };
  exports.BREAK  = BREAK;
  exports.RETURN = RETURN;

/***/ },
/* 80 */
/***/ function(module, exports, __webpack_require__) {

  // call something on iterator step with safe closing on error
  var anObject = __webpack_require__(17);
  module.exports = function(iterator, fn, value, entries){
    try {
      return entries ? fn(anObject(value)[0], value[1]) : fn(value);
    // 7.4.6 IteratorClose(iterator, completion)
    } catch(e){
      var ret = iterator['return'];
      if(ret !== undefined)anObject(ret.call(iterator));
      throw e;
    }
  };

/***/ },
/* 81 */
/***/ function(module, exports, __webpack_require__) {

  // check on default Array iterator
  var Iterators  = __webpack_require__(27)
    , ITERATOR   = __webpack_require__(45)('iterator')
    , ArrayProto = Array.prototype;

  module.exports = function(it){
    return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);
  };

/***/ },
/* 82 */
/***/ function(module, exports, __webpack_require__) {

  var classof   = __webpack_require__(77)
    , ITERATOR  = __webpack_require__(45)('iterator')
    , Iterators = __webpack_require__(27);
  module.exports = __webpack_require__(12).getIteratorMethod = function(it){
    if(it != undefined)return it[ITERATOR]
      || it['@@iterator']
      || Iterators[classof(it)];
  };

/***/ },
/* 83 */
/***/ function(module, exports, __webpack_require__) {

  // 7.3.20 SpeciesConstructor(O, defaultConstructor)
  var anObject  = __webpack_require__(17)
    , aFunction = __webpack_require__(14)
    , SPECIES   = __webpack_require__(45)('species');
  module.exports = function(O, D){
    var C = anObject(O).constructor, S;
    return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);
  };

/***/ },
/* 84 */
/***/ function(module, exports, __webpack_require__) {

  var ctx                = __webpack_require__(13)
    , invoke             = __webpack_require__(85)
    , html               = __webpack_require__(43)
    , cel                = __webpack_require__(22)
    , global             = __webpack_require__(11)
    , process            = global.process
    , setTask            = global.setImmediate
    , clearTask          = global.clearImmediate
    , MessageChannel     = global.MessageChannel
    , counter            = 0
    , queue              = {}
    , ONREADYSTATECHANGE = 'onreadystatechange'
    , defer, channel, port;
  var run = function(){
    var id = +this;
    if(queue.hasOwnProperty(id)){
      var fn = queue[id];
      delete queue[id];
      fn();
    }
  };
  var listener = function(event){
    run.call(event.data);
  };
  // Node.js 0.9+ & IE10+ has setImmediate, otherwise:
  if(!setTask || !clearTask){
    setTask = function setImmediate(fn){
      var args = [], i = 1;
      while(arguments.length > i)args.push(arguments[i++]);
      queue[++counter] = function(){
        invoke(typeof fn == 'function' ? fn : Function(fn), args);
      };
      defer(counter);
      return counter;
    };
    clearTask = function clearImmediate(id){
      delete queue[id];
    };
    // Node.js 0.8-
    if(__webpack_require__(35)(process) == 'process'){
      defer = function(id){
        process.nextTick(ctx(run, id, 1));
      };
    // Browsers with MessageChannel, includes WebWorkers
    } else if(MessageChannel){
      channel = new MessageChannel;
      port    = channel.port2;
      channel.port1.onmessage = listener;
      defer = ctx(port.postMessage, port, 1);
    // Browsers with postMessage, skip WebWorkers
    // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'
    } else if(global.addEventListener && typeof postMessage == 'function' && !global.importScripts){
      defer = function(id){
        global.postMessage(id + '', '*');
      };
      global.addEventListener('message', listener, false);
    // IE8-
    } else if(ONREADYSTATECHANGE in cel('script')){
      defer = function(id){
        html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function(){
          html.removeChild(this);
          run.call(id);
        };
      };
    // Rest old browsers
    } else {
      defer = function(id){
        setTimeout(ctx(run, id, 1), 0);
      };
    }
  }
  module.exports = {
    set:   setTask,
    clear: clearTask
  };

/***/ },
/* 85 */
/***/ function(module, exports) {

  // fast apply, http://jsperf.lnkit.com/fast-apply/5
  module.exports = function(fn, args, that){
    var un = that === undefined;
    switch(args.length){
      case 0: return un ? fn()
                        : fn.call(that);
      case 1: return un ? fn(args[0])
                        : fn.call(that, args[0]);
      case 2: return un ? fn(args[0], args[1])
                        : fn.call(that, args[0], args[1]);
      case 3: return un ? fn(args[0], args[1], args[2])
                        : fn.call(that, args[0], args[1], args[2]);
      case 4: return un ? fn(args[0], args[1], args[2], args[3])
                        : fn.call(that, args[0], args[1], args[2], args[3]);
    } return              fn.apply(that, args);
  };

/***/ },
/* 86 */
/***/ function(module, exports, __webpack_require__) {

  var global    = __webpack_require__(11)
    , macrotask = __webpack_require__(84).set
    , Observer  = global.MutationObserver || global.WebKitMutationObserver
    , process   = global.process
    , Promise   = global.Promise
    , isNode    = __webpack_require__(35)(process) == 'process';

  module.exports = function(){
    var head, last, notify;

    var flush = function(){
      var parent, fn;
      if(isNode && (parent = process.domain))parent.exit();
      while(head){
        fn   = head.fn;
        head = head.next;
        try {
          fn();
        } catch(e){
          if(head)notify();
          else last = undefined;
          throw e;
        }
      } last = undefined;
      if(parent)parent.enter();
    };

    // Node.js
    if(isNode){
      notify = function(){
        process.nextTick(flush);
      };
    // browsers with MutationObserver
    } else if(Observer){
      var toggle = true
        , node   = document.createTextNode('');
      new Observer(flush).observe(node, {characterData: true}); // eslint-disable-line no-new
      notify = function(){
        node.data = toggle = !toggle;
      };
    // environments with maybe non-completely correct, but existent Promise
    } else if(Promise && Promise.resolve){
      var promise = Promise.resolve();
      notify = function(){
        promise.then(flush);
      };
    // for other environments - macrotask based on:
    // - setImmediate
    // - MessageChannel
    // - window.postMessag
    // - onreadystatechange
    // - setTimeout
    } else {
      notify = function(){
        // strange IE + webpack dev server bug - use .call(global)
        macrotask.call(global, flush);
      };
    }

    return function(fn){
      var task = {fn: fn, next: undefined};
      if(last)last.next = task;
      if(!head){
        head = task;
        notify();
      } last = task;
    };
  };

/***/ },
/* 87 */
/***/ function(module, exports, __webpack_require__) {

  var hide = __webpack_require__(15);
  module.exports = function(target, src, safe){
    for(var key in src){
      if(safe && target[key])target[key] = src[key];
      else hide(target, key, src[key]);
    } return target;
  };

/***/ },
/* 88 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';
  var global      = __webpack_require__(11)
    , core        = __webpack_require__(12)
    , dP          = __webpack_require__(16)
    , DESCRIPTORS = __webpack_require__(20)
    , SPECIES     = __webpack_require__(45)('species');

  module.exports = function(KEY){
    var C = typeof core[KEY] == 'function' ? core[KEY] : global[KEY];
    if(DESCRIPTORS && C && !C[SPECIES])dP.f(C, SPECIES, {
      configurable: true,
      get: function(){ return this; }
    });
  };

/***/ },
/* 89 */
/***/ function(module, exports, __webpack_require__) {

  var ITERATOR     = __webpack_require__(45)('iterator')
    , SAFE_CLOSING = false;

  try {
    var riter = [7][ITERATOR]();
    riter['return'] = function(){ SAFE_CLOSING = true; };
    Array.from(riter, function(){ throw 2; });
  } catch(e){ /* empty */ }

  module.exports = function(exec, skipClosing){
    if(!skipClosing && !SAFE_CLOSING)return false;
    var safe = false;
    try {
      var arr  = [7]
        , iter = arr[ITERATOR]();
      iter.next = function(){ return {done: safe = true}; };
      arr[ITERATOR] = function(){ return iter; };
      exec(arr);
    } catch(e){ /* empty */ }
    return safe;
  };

/***/ },
/* 90 */
/***/ function(module, exports, __webpack_require__) {

  /* WEBPACK VAR INJECTION */(function(global) {"use strict";

  __webpack_require__(91);

  __webpack_require__(71);

  __webpack_require__(382);

  if (global._babelPolyfill) {
    throw new Error("only one instance of babel-polyfill is allowed");
  }
  global._babelPolyfill = true;

  var DEFINE_PROPERTY = "defineProperty";
  function define(O, key, value) {
    O[key] || Object[DEFINE_PROPERTY](O, key, {
      writable: true,
      configurable: true,
      value: value
    });
  }

  define(String.prototype, "padLeft", "".padStart);
  define(String.prototype, "padRight", "".padEnd);

  "pop,reverse,shift,keys,values,entries,indexOf,every,some,forEach,map,filter,find,findIndex,includes,join,slice,concat,push,splice,unshift,sort,lastIndexOf,reduce,reduceRight,copyWithin,fill".split(",").forEach(function (key) {
    [][key] && define(Array, key, Function.call.bind([][key]));
  });
  /* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ },
/* 91 */
/***/ function(module, exports, __webpack_require__) {

  __webpack_require__(92);
  __webpack_require__(141);
  __webpack_require__(142);
  __webpack_require__(143);
  __webpack_require__(144);
  __webpack_require__(146);
  __webpack_require__(149);
  __webpack_require__(150);
  __webpack_require__(151);
  __webpack_require__(152);
  __webpack_require__(153);
  __webpack_require__(154);
  __webpack_require__(155);
  __webpack_require__(156);
  __webpack_require__(157);
  __webpack_require__(159);
  __webpack_require__(161);
  __webpack_require__(163);
  __webpack_require__(165);
  __webpack_require__(168);
  __webpack_require__(169);
  __webpack_require__(170);
  __webpack_require__(174);
  __webpack_require__(176);
  __webpack_require__(178);
  __webpack_require__(181);
  __webpack_require__(182);
  __webpack_require__(183);
  __webpack_require__(184);
  __webpack_require__(186);
  __webpack_require__(187);
  __webpack_require__(188);
  __webpack_require__(189);
  __webpack_require__(190);
  __webpack_require__(191);
  __webpack_require__(192);
  __webpack_require__(194);
  __webpack_require__(195);
  __webpack_require__(196);
  __webpack_require__(198);
  __webpack_require__(199);
  __webpack_require__(200);
  __webpack_require__(202);
  __webpack_require__(203);
  __webpack_require__(204);
  __webpack_require__(205);
  __webpack_require__(206);
  __webpack_require__(207);
  __webpack_require__(208);
  __webpack_require__(209);
  __webpack_require__(210);
  __webpack_require__(211);
  __webpack_require__(212);
  __webpack_require__(213);
  __webpack_require__(214);
  __webpack_require__(215);
  __webpack_require__(220);
  __webpack_require__(221);
  __webpack_require__(225);
  __webpack_require__(226);
  __webpack_require__(227);
  __webpack_require__(228);
  __webpack_require__(230);
  __webpack_require__(231);
  __webpack_require__(232);
  __webpack_require__(233);
  __webpack_require__(234);
  __webpack_require__(235);
  __webpack_require__(236);
  __webpack_require__(237);
  __webpack_require__(238);
  __webpack_require__(239);
  __webpack_require__(240);
  __webpack_require__(241);
  __webpack_require__(242);
  __webpack_require__(243);
  __webpack_require__(244);
  __webpack_require__(245);
  __webpack_require__(246);
  __webpack_require__(248);
  __webpack_require__(249);
  __webpack_require__(255);
  __webpack_require__(256);
  __webpack_require__(258);
  __webpack_require__(259);
  __webpack_require__(260);
  __webpack_require__(264);
  __webpack_require__(265);
  __webpack_require__(266);
  __webpack_require__(267);
  __webpack_require__(268);
  __webpack_require__(270);
  __webpack_require__(271);
  __webpack_require__(272);
  __webpack_require__(273);
  __webpack_require__(276);
  __webpack_require__(278);
  __webpack_require__(279);
  __webpack_require__(280);
  __webpack_require__(282);
  __webpack_require__(284);
  __webpack_require__(286);
  __webpack_require__(287);
  __webpack_require__(288);
  __webpack_require__(290);
  __webpack_require__(291);
  __webpack_require__(292);
  __webpack_require__(293);
  __webpack_require__(300);
  __webpack_require__(303);
  __webpack_require__(304);
  __webpack_require__(306);
  __webpack_require__(307);
  __webpack_require__(310);
  __webpack_require__(311);
  __webpack_require__(313);
  __webpack_require__(314);
  __webpack_require__(315);
  __webpack_require__(316);
  __webpack_require__(317);
  __webpack_require__(318);
  __webpack_require__(319);
  __webpack_require__(320);
  __webpack_require__(321);
  __webpack_require__(322);
  __webpack_require__(323);
  __webpack_require__(324);
  __webpack_require__(325);
  __webpack_require__(326);
  __webpack_require__(327);
  __webpack_require__(328);
  __webpack_require__(329);
  __webpack_require__(330);
  __webpack_require__(331);
  __webpack_require__(333);
  __webpack_require__(334);
  __webpack_require__(335);
  __webpack_require__(336);
  __webpack_require__(337);
  __webpack_require__(338);
  __webpack_require__(340);
  __webpack_require__(341);
  __webpack_require__(342);
  __webpack_require__(343);
  __webpack_require__(344);
  __webpack_require__(345);
  __webpack_require__(346);
  __webpack_require__(347);
  __webpack_require__(349);
  __webpack_require__(350);
  __webpack_require__(352);
  __webpack_require__(353);
  __webpack_require__(354);
  __webpack_require__(355);
  __webpack_require__(358);
  __webpack_require__(359);
  __webpack_require__(360);
  __webpack_require__(361);
  __webpack_require__(362);
  __webpack_require__(363);
  __webpack_require__(364);
  __webpack_require__(365);
  __webpack_require__(367);
  __webpack_require__(368);
  __webpack_require__(369);
  __webpack_require__(370);
  __webpack_require__(371);
  __webpack_require__(372);
  __webpack_require__(373);
  __webpack_require__(374);
  __webpack_require__(375);
  __webpack_require__(376);
  __webpack_require__(377);
  __webpack_require__(380);
  __webpack_require__(381);
  module.exports = __webpack_require__(98);

/***/ },
/* 92 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';
  // ECMAScript 6 symbols shim
  var global         = __webpack_require__(93)
    , has            = __webpack_require__(94)
    , DESCRIPTORS    = __webpack_require__(95)
    , $export        = __webpack_require__(97)
    , redefine       = __webpack_require__(107)
    , META           = __webpack_require__(111).KEY
    , $fails         = __webpack_require__(96)
    , shared         = __webpack_require__(112)
    , setToStringTag = __webpack_require__(113)
    , uid            = __webpack_require__(108)
    , wks            = __webpack_require__(114)
    , wksExt         = __webpack_require__(115)
    , wksDefine      = __webpack_require__(116)
    , keyOf          = __webpack_require__(118)
    , enumKeys       = __webpack_require__(131)
    , isArray        = __webpack_require__(134)
    , anObject       = __webpack_require__(101)
    , toIObject      = __webpack_require__(121)
    , toPrimitive    = __webpack_require__(105)
    , createDesc     = __webpack_require__(106)
    , _create        = __webpack_require__(135)
    , gOPNExt        = __webpack_require__(138)
    , $GOPD          = __webpack_require__(140)
    , $DP            = __webpack_require__(100)
    , $keys          = __webpack_require__(119)
    , gOPD           = $GOPD.f
    , dP             = $DP.f
    , gOPN           = gOPNExt.f
    , $Symbol        = global.Symbol
    , $JSON          = global.JSON
    , _stringify     = $JSON && $JSON.stringify
    , PROTOTYPE      = 'prototype'
    , HIDDEN         = wks('_hidden')
    , TO_PRIMITIVE   = wks('toPrimitive')
    , isEnum         = {}.propertyIsEnumerable
    , SymbolRegistry = shared('symbol-registry')
    , AllSymbols     = shared('symbols')
    , OPSymbols      = shared('op-symbols')
    , ObjectProto    = Object[PROTOTYPE]
    , USE_NATIVE     = typeof $Symbol == 'function'
    , QObject        = global.QObject;
  // Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173
  var setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;

  // fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687
  var setSymbolDesc = DESCRIPTORS && $fails(function(){
    return _create(dP({}, 'a', {
      get: function(){ return dP(this, 'a', {value: 7}).a; }
    })).a != 7;
  }) ? function(it, key, D){
    var protoDesc = gOPD(ObjectProto, key);
    if(protoDesc)delete ObjectProto[key];
    dP(it, key, D);
    if(protoDesc && it !== ObjectProto)dP(ObjectProto, key, protoDesc);
  } : dP;

  var wrap = function(tag){
    var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);
    sym._k = tag;
    return sym;
  };

  var isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function(it){
    return typeof it == 'symbol';
  } : function(it){
    return it instanceof $Symbol;
  };

  var $defineProperty = function defineProperty(it, key, D){
    if(it === ObjectProto)$defineProperty(OPSymbols, key, D);
    anObject(it);
    key = toPrimitive(key, true);
    anObject(D);
    if(has(AllSymbols, key)){
      if(!D.enumerable){
        if(!has(it, HIDDEN))dP(it, HIDDEN, createDesc(1, {}));
        it[HIDDEN][key] = true;
      } else {
        if(has(it, HIDDEN) && it[HIDDEN][key])it[HIDDEN][key] = false;
        D = _create(D, {enumerable: createDesc(0, false)});
      } return setSymbolDesc(it, key, D);
    } return dP(it, key, D);
  };
  var $defineProperties = function defineProperties(it, P){
    anObject(it);
    var keys = enumKeys(P = toIObject(P))
      , i    = 0
      , l = keys.length
      , key;
    while(l > i)$defineProperty(it, key = keys[i++], P[key]);
    return it;
  };
  var $create = function create(it, P){
    return P === undefined ? _create(it) : $defineProperties(_create(it), P);
  };
  var $propertyIsEnumerable = function propertyIsEnumerable(key){
    var E = isEnum.call(this, key = toPrimitive(key, true));
    if(this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key))return false;
    return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;
  };
  var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key){
    it  = toIObject(it);
    key = toPrimitive(key, true);
    if(it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key))return;
    var D = gOPD(it, key);
    if(D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key]))D.enumerable = true;
    return D;
  };
  var $getOwnPropertyNames = function getOwnPropertyNames(it){
    var names  = gOPN(toIObject(it))
      , result = []
      , i      = 0
      , key;
    while(names.length > i){
      if(!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META)result.push(key);
    } return result;
  };
  var $getOwnPropertySymbols = function getOwnPropertySymbols(it){
    var IS_OP  = it === ObjectProto
      , names  = gOPN(IS_OP ? OPSymbols : toIObject(it))
      , result = []
      , i      = 0
      , key;
    while(names.length > i){
      if(has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectProto, key) : true))result.push(AllSymbols[key]);
    } return result;
  };

  // 19.4.1.1 Symbol([description])
  if(!USE_NATIVE){
    $Symbol = function Symbol(){
      if(this instanceof $Symbol)throw TypeError('Symbol is not a constructor!');
      var tag = uid(arguments.length > 0 ? arguments[0] : undefined);
      var $set = function(value){
        if(this === ObjectProto)$set.call(OPSymbols, value);
        if(has(this, HIDDEN) && has(this[HIDDEN], tag))this[HIDDEN][tag] = false;
        setSymbolDesc(this, tag, createDesc(1, value));
      };
      if(DESCRIPTORS && setter)setSymbolDesc(ObjectProto, tag, {configurable: true, set: $set});
      return wrap(tag);
    };
    redefine($Symbol[PROTOTYPE], 'toString', function toString(){
      return this._k;
    });

    $GOPD.f = $getOwnPropertyDescriptor;
    $DP.f   = $defineProperty;
    __webpack_require__(139).f = gOPNExt.f = $getOwnPropertyNames;
    __webpack_require__(133).f  = $propertyIsEnumerable;
    __webpack_require__(132).f = $getOwnPropertySymbols;

    if(DESCRIPTORS && !__webpack_require__(117)){
      redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);
    }

    wksExt.f = function(name){
      return wrap(wks(name));
    }
  }

  $export($export.G + $export.W + $export.F * !USE_NATIVE, {Symbol: $Symbol});

  for(var symbols = (
    // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14
    'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'
  ).split(','), i = 0; symbols.length > i; )wks(symbols[i++]);

  for(var symbols = $keys(wks.store), i = 0; symbols.length > i; )wksDefine(symbols[i++]);

  $export($export.S + $export.F * !USE_NATIVE, 'Symbol', {
    // 19.4.2.1 Symbol.for(key)
    'for': function(key){
      return has(SymbolRegistry, key += '')
        ? SymbolRegistry[key]
        : SymbolRegistry[key] = $Symbol(key);
    },
    // 19.4.2.5 Symbol.keyFor(sym)
    keyFor: function keyFor(key){
      if(isSymbol(key))return keyOf(SymbolRegistry, key);
      throw TypeError(key + ' is not a symbol!');
    },
    useSetter: function(){ setter = true; },
    useSimple: function(){ setter = false; }
  });

  $export($export.S + $export.F * !USE_NATIVE, 'Object', {
    // 19.1.2.2 Object.create(O [, Properties])
    create: $create,
    // 19.1.2.4 Object.defineProperty(O, P, Attributes)
    defineProperty: $defineProperty,
    // 19.1.2.3 Object.defineProperties(O, Properties)
    defineProperties: $defineProperties,
    // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
    getOwnPropertyDescriptor: $getOwnPropertyDescriptor,
    // 19.1.2.7 Object.getOwnPropertyNames(O)
    getOwnPropertyNames: $getOwnPropertyNames,
    // 19.1.2.8 Object.getOwnPropertySymbols(O)
    getOwnPropertySymbols: $getOwnPropertySymbols
  });

  // 24.3.2 JSON.stringify(value [, replacer [, space]])
  $JSON && $export($export.S + $export.F * (!USE_NATIVE || $fails(function(){
    var S = $Symbol();
    // MS Edge converts symbol values to JSON as {}
    // WebKit converts symbol values to JSON as null
    // V8 throws on boxed symbols
    return _stringify([S]) != '[null]' || _stringify({a: S}) != '{}' || _stringify(Object(S)) != '{}';
  })), 'JSON', {
    stringify: function stringify(it){
      if(it === undefined || isSymbol(it))return; // IE8 returns string on undefined
      var args = [it]
        , i    = 1
        , replacer, $replacer;
      while(arguments.length > i)args.push(arguments[i++]);
      replacer = args[1];
      if(typeof replacer == 'function')$replacer = replacer;
      if($replacer || !isArray(replacer))replacer = function(key, value){
        if($replacer)value = $replacer.call(this, key, value);
        if(!isSymbol(value))return value;
      };
      args[1] = replacer;
      return _stringify.apply($JSON, args);
    }
  });

  // 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)
  $Symbol[PROTOTYPE][TO_PRIMITIVE] || __webpack_require__(99)($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);
  // 19.4.3.5 Symbol.prototype[@@toStringTag]
  setToStringTag($Symbol, 'Symbol');
  // 20.2.1.9 Math[@@toStringTag]
  setToStringTag(Math, 'Math', true);
  // 24.3.3 JSON[@@toStringTag]
  setToStringTag(global.JSON, 'JSON', true);

/***/ },
/* 93 */
/***/ function(module, exports) {

  // https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
  var global = module.exports = typeof window != 'undefined' && window.Math == Math
    ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();
  if(typeof __g == 'number')__g = global; // eslint-disable-line no-undef

/***/ },
/* 94 */
/***/ function(module, exports) {

  var hasOwnProperty = {}.hasOwnProperty;
  module.exports = function(it, key){
    return hasOwnProperty.call(it, key);
  };

/***/ },
/* 95 */
/***/ function(module, exports, __webpack_require__) {

  // Thank's IE8 for his funny defineProperty
  module.exports = !__webpack_require__(96)(function(){
    return Object.defineProperty({}, 'a', {get: function(){ return 7; }}).a != 7;
  });

/***/ },
/* 96 */
/***/ function(module, exports) {

  module.exports = function(exec){
    try {
      return !!exec();
    } catch(e){
      return true;
    }
  };

/***/ },
/* 97 */
/***/ function(module, exports, __webpack_require__) {

  var global    = __webpack_require__(93)
    , core      = __webpack_require__(98)
    , hide      = __webpack_require__(99)
    , redefine  = __webpack_require__(107)
    , ctx       = __webpack_require__(109)
    , PROTOTYPE = 'prototype';

  var $export = function(type, name, source){
    var IS_FORCED = type & $export.F
      , IS_GLOBAL = type & $export.G
      , IS_STATIC = type & $export.S
      , IS_PROTO  = type & $export.P
      , IS_BIND   = type & $export.B
      , target    = IS_GLOBAL ? global : IS_STATIC ? global[name] || (global[name] = {}) : (global[name] || {})[PROTOTYPE]
      , exports   = IS_GLOBAL ? core : core[name] || (core[name] = {})
      , expProto  = exports[PROTOTYPE] || (exports[PROTOTYPE] = {})
      , key, own, out, exp;
    if(IS_GLOBAL)source = name;
    for(key in source){
      // contains in native
      own = !IS_FORCED && target && target[key] !== undefined;
      // export native or passed
      out = (own ? target : source)[key];
      // bind timers to global for call from export context
      exp = IS_BIND && own ? ctx(out, global) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;
      // extend global
      if(target)redefine(target, key, out, type & $export.U);
      // export
      if(exports[key] != out)hide(exports, key, exp);
      if(IS_PROTO && expProto[key] != out)expProto[key] = out;
    }
  };
  global.core = core;
  // type bitmap
  $export.F = 1;   // forced
  $export.G = 2;   // global
  $export.S = 4;   // static
  $export.P = 8;   // proto
  $export.B = 16;  // bind
  $export.W = 32;  // wrap
  $export.U = 64;  // safe
  $export.R = 128; // real proto method for `library` 
  module.exports = $export;

/***/ },
/* 98 */
/***/ function(module, exports) {

  var core = module.exports = {version: '2.4.0'};
  if(typeof __e == 'number')__e = core; // eslint-disable-line no-undef

/***/ },
/* 99 */
/***/ function(module, exports, __webpack_require__) {

  var dP         = __webpack_require__(100)
    , createDesc = __webpack_require__(106);
  module.exports = __webpack_require__(95) ? function(object, key, value){
    return dP.f(object, key, createDesc(1, value));
  } : function(object, key, value){
    object[key] = value;
    return object;
  };

/***/ },
/* 100 */
/***/ function(module, exports, __webpack_require__) {

  var anObject       = __webpack_require__(101)
    , IE8_DOM_DEFINE = __webpack_require__(103)
    , toPrimitive    = __webpack_require__(105)
    , dP             = Object.defineProperty;

  exports.f = __webpack_require__(95) ? Object.defineProperty : function defineProperty(O, P, Attributes){
    anObject(O);
    P = toPrimitive(P, true);
    anObject(Attributes);
    if(IE8_DOM_DEFINE)try {
      return dP(O, P, Attributes);
    } catch(e){ /* empty */ }
    if('get' in Attributes || 'set' in Attributes)throw TypeError('Accessors not supported!');
    if('value' in Attributes)O[P] = Attributes.value;
    return O;
  };

/***/ },
/* 101 */
/***/ function(module, exports, __webpack_require__) {

  var isObject = __webpack_require__(102);
  module.exports = function(it){
    if(!isObject(it))throw TypeError(it + ' is not an object!');
    return it;
  };

/***/ },
/* 102 */
/***/ function(module, exports) {

  module.exports = function(it){
    return typeof it === 'object' ? it !== null : typeof it === 'function';
  };

/***/ },
/* 103 */
/***/ function(module, exports, __webpack_require__) {

  module.exports = !__webpack_require__(95) && !__webpack_require__(96)(function(){
    return Object.defineProperty(__webpack_require__(104)('div'), 'a', {get: function(){ return 7; }}).a != 7;
  });

/***/ },
/* 104 */
/***/ function(module, exports, __webpack_require__) {

  var isObject = __webpack_require__(102)
    , document = __webpack_require__(93).document
    // in old IE typeof document.createElement is 'object'
    , is = isObject(document) && isObject(document.createElement);
  module.exports = function(it){
    return is ? document.createElement(it) : {};
  };

/***/ },
/* 105 */
/***/ function(module, exports, __webpack_require__) {

  // 7.1.1 ToPrimitive(input [, PreferredType])
  var isObject = __webpack_require__(102);
  // instead of the ES6 spec version, we didn't implement @@toPrimitive case
  // and the second argument - flag - preferred type is a string
  module.exports = function(it, S){
    if(!isObject(it))return it;
    var fn, val;
    if(S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;
    if(typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it)))return val;
    if(!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;
    throw TypeError("Can't convert object to primitive value");
  };

/***/ },
/* 106 */
/***/ function(module, exports) {

  module.exports = function(bitmap, value){
    return {
      enumerable  : !(bitmap & 1),
      configurable: !(bitmap & 2),
      writable    : !(bitmap & 4),
      value       : value
    };
  };

/***/ },
/* 107 */
/***/ function(module, exports, __webpack_require__) {

  var global    = __webpack_require__(93)
    , hide      = __webpack_require__(99)
    , has       = __webpack_require__(94)
    , SRC       = __webpack_require__(108)('src')
    , TO_STRING = 'toString'
    , $toString = Function[TO_STRING]
    , TPL       = ('' + $toString).split(TO_STRING);

  __webpack_require__(98).inspectSource = function(it){
    return $toString.call(it);
  };

  (module.exports = function(O, key, val, safe){
    var isFunction = typeof val == 'function';
    if(isFunction)has(val, 'name') || hide(val, 'name', key);
    if(O[key] === val)return;
    if(isFunction)has(val, SRC) || hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));
    if(O === global){
      O[key] = val;
    } else {
      if(!safe){
        delete O[key];
        hide(O, key, val);
      } else {
        if(O[key])O[key] = val;
        else hide(O, key, val);
      }
    }
  // add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative
  })(Function.prototype, TO_STRING, function toString(){
    return typeof this == 'function' && this[SRC] || $toString.call(this);
  });

/***/ },
/* 108 */
/***/ function(module, exports) {

  var id = 0
    , px = Math.random();
  module.exports = function(key){
    return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
  };

/***/ },
/* 109 */
/***/ function(module, exports, __webpack_require__) {

  // optional / simple context binding
  var aFunction = __webpack_require__(110);
  module.exports = function(fn, that, length){
    aFunction(fn);
    if(that === undefined)return fn;
    switch(length){
      case 1: return function(a){
        return fn.call(that, a);
      };
      case 2: return function(a, b){
        return fn.call(that, a, b);
      };
      case 3: return function(a, b, c){
        return fn.call(that, a, b, c);
      };
    }
    return function(/* ...args */){
      return fn.apply(that, arguments);
    };
  };

/***/ },
/* 110 */
/***/ function(module, exports) {

  module.exports = function(it){
    if(typeof it != 'function')throw TypeError(it + ' is not a function!');
    return it;
  };

/***/ },
/* 111 */
/***/ function(module, exports, __webpack_require__) {

  var META     = __webpack_require__(108)('meta')
    , isObject = __webpack_require__(102)
    , has      = __webpack_require__(94)
    , setDesc  = __webpack_require__(100).f
    , id       = 0;
  var isExtensible = Object.isExtensible || function(){
    return true;
  };
  var FREEZE = !__webpack_require__(96)(function(){
    return isExtensible(Object.preventExtensions({}));
  });
  var setMeta = function(it){
    setDesc(it, META, {value: {
      i: 'O' + ++id, // object ID
      w: {}          // weak collections IDs
    }});
  };
  var fastKey = function(it, create){
    // return primitive with prefix
    if(!isObject(it))return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;
    if(!has(it, META)){
      // can't set metadata to uncaught frozen object
      if(!isExtensible(it))return 'F';
      // not necessary to add metadata
      if(!create)return 'E';
      // add missing metadata
      setMeta(it);
    // return object ID
    } return it[META].i;
  };
  var getWeak = function(it, create){
    if(!has(it, META)){
      // can't set metadata to uncaught frozen object
      if(!isExtensible(it))return true;
      // not necessary to add metadata
      if(!create)return false;
      // add missing metadata
      setMeta(it);
    // return hash weak collections IDs
    } return it[META].w;
  };
  // add metadata on freeze-family methods calling
  var onFreeze = function(it){
    if(FREEZE && meta.NEED && isExtensible(it) && !has(it, META))setMeta(it);
    return it;
  };
  var meta = module.exports = {
    KEY:      META,
    NEED:     false,
    fastKey:  fastKey,
    getWeak:  getWeak,
    onFreeze: onFreeze
  };

/***/ },
/* 112 */
/***/ function(module, exports, __webpack_require__) {

  var global = __webpack_require__(93)
    , SHARED = '__core-js_shared__'
    , store  = global[SHARED] || (global[SHARED] = {});
  module.exports = function(key){
    return store[key] || (store[key] = {});
  };

/***/ },
/* 113 */
/***/ function(module, exports, __webpack_require__) {

  var def = __webpack_require__(100).f
    , has = __webpack_require__(94)
    , TAG = __webpack_require__(114)('toStringTag');

  module.exports = function(it, tag, stat){
    if(it && !has(it = stat ? it : it.prototype, TAG))def(it, TAG, {configurable: true, value: tag});
  };

/***/ },
/* 114 */
/***/ function(module, exports, __webpack_require__) {

  var store      = __webpack_require__(112)('wks')
    , uid        = __webpack_require__(108)
    , Symbol     = __webpack_require__(93).Symbol
    , USE_SYMBOL = typeof Symbol == 'function';

  var $exports = module.exports = function(name){
    return store[name] || (store[name] =
      USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));
  };

  $exports.store = store;

/***/ },
/* 115 */
/***/ function(module, exports, __webpack_require__) {

  exports.f = __webpack_require__(114);

/***/ },
/* 116 */
/***/ function(module, exports, __webpack_require__) {

  var global         = __webpack_require__(93)
    , core           = __webpack_require__(98)
    , LIBRARY        = __webpack_require__(117)
    , wksExt         = __webpack_require__(115)
    , defineProperty = __webpack_require__(100).f;
  module.exports = function(name){
    var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});
    if(name.charAt(0) != '_' && !(name in $Symbol))defineProperty($Symbol, name, {value: wksExt.f(name)});
  };

/***/ },
/* 117 */
/***/ function(module, exports) {

  module.exports = false;

/***/ },
/* 118 */
/***/ function(module, exports, __webpack_require__) {

  var getKeys   = __webpack_require__(119)
    , toIObject = __webpack_require__(121);
  module.exports = function(object, el){
    var O      = toIObject(object)
      , keys   = getKeys(O)
      , length = keys.length
      , index  = 0
      , key;
    while(length > index)if(O[key = keys[index++]] === el)return key;
  };

/***/ },
/* 119 */
/***/ function(module, exports, __webpack_require__) {

  // 19.1.2.14 / 15.2.3.14 Object.keys(O)
  var $keys       = __webpack_require__(120)
    , enumBugKeys = __webpack_require__(130);

  module.exports = Object.keys || function keys(O){
    return $keys(O, enumBugKeys);
  };

/***/ },
/* 120 */
/***/ function(module, exports, __webpack_require__) {

  var has          = __webpack_require__(94)
    , toIObject    = __webpack_require__(121)
    , arrayIndexOf = __webpack_require__(125)(false)
    , IE_PROTO     = __webpack_require__(129)('IE_PROTO');

  module.exports = function(object, names){
    var O      = toIObject(object)
      , i      = 0
      , result = []
      , key;
    for(key in O)if(key != IE_PROTO)has(O, key) && result.push(key);
    // Don't enum bug & hidden keys
    while(names.length > i)if(has(O, key = names[i++])){
      ~arrayIndexOf(result, key) || result.push(key);
    }
    return result;
  };

/***/ },
/* 121 */
/***/ function(module, exports, __webpack_require__) {

  // to indexed object, toObject with fallback for non-array-like ES3 strings
  var IObject = __webpack_require__(122)
    , defined = __webpack_require__(124);
  module.exports = function(it){
    return IObject(defined(it));
  };

/***/ },
/* 122 */
/***/ function(module, exports, __webpack_require__) {

  // fallback for non-array-like ES3 and non-enumerable old V8 strings
  var cof = __webpack_require__(123);
  module.exports = Object('z').propertyIsEnumerable(0) ? Object : function(it){
    return cof(it) == 'String' ? it.split('') : Object(it);
  };

/***/ },
/* 123 */
/***/ function(module, exports) {

  var toString = {}.toString;

  module.exports = function(it){
    return toString.call(it).slice(8, -1);
  };

/***/ },
/* 124 */
/***/ function(module, exports) {

  // 7.2.1 RequireObjectCoercible(argument)
  module.exports = function(it){
    if(it == undefined)throw TypeError("Can't call method on  " + it);
    return it;
  };

/***/ },
/* 125 */
/***/ function(module, exports, __webpack_require__) {

  // false -> Array#indexOf
  // true  -> Array#includes
  var toIObject = __webpack_require__(121)
    , toLength  = __webpack_require__(126)
    , toIndex   = __webpack_require__(128);
  module.exports = function(IS_INCLUDES){
    return function($this, el, fromIndex){
      var O      = toIObject($this)
        , length = toLength(O.length)
        , index  = toIndex(fromIndex, length)
        , value;
      // Array#includes uses SameValueZero equality algorithm
      if(IS_INCLUDES && el != el)while(length > index){
        value = O[index++];
        if(value != value)return true;
      // Array#toIndex ignores holes, Array#includes - not
      } else for(;length > index; index++)if(IS_INCLUDES || index in O){
        if(O[index] === el)return IS_INCLUDES || index || 0;
      } return !IS_INCLUDES && -1;
    };
  };

/***/ },
/* 126 */
/***/ function(module, exports, __webpack_require__) {

  // 7.1.15 ToLength
  var toInteger = __webpack_require__(127)
    , min       = Math.min;
  module.exports = function(it){
    return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
  };

/***/ },
/* 127 */
/***/ function(module, exports) {

  // 7.1.4 ToInteger
  var ceil  = Math.ceil
    , floor = Math.floor;
  module.exports = function(it){
    return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
  };

/***/ },
/* 128 */
/***/ function(module, exports, __webpack_require__) {

  var toInteger = __webpack_require__(127)
    , max       = Math.max
    , min       = Math.min;
  module.exports = function(index, length){
    index = toInteger(index);
    return index < 0 ? max(index + length, 0) : min(index, length);
  };

/***/ },
/* 129 */
/***/ function(module, exports, __webpack_require__) {

  var shared = __webpack_require__(112)('keys')
    , uid    = __webpack_require__(108);
  module.exports = function(key){
    return shared[key] || (shared[key] = uid(key));
  };

/***/ },
/* 130 */
/***/ function(module, exports) {

  // IE 8- don't enum bug keys
  module.exports = (
    'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'
  ).split(',');

/***/ },
/* 131 */
/***/ function(module, exports, __webpack_require__) {

  // all enumerable object keys, includes symbols
  var getKeys = __webpack_require__(119)
    , gOPS    = __webpack_require__(132)
    , pIE     = __webpack_require__(133);
  module.exports = function(it){
    var result     = getKeys(it)
      , getSymbols = gOPS.f;
    if(getSymbols){
      var symbols = getSymbols(it)
        , isEnum  = pIE.f
        , i       = 0
        , key;
      while(symbols.length > i)if(isEnum.call(it, key = symbols[i++]))result.push(key);
    } return result;
  };

/***/ },
/* 132 */
/***/ function(module, exports) {

  exports.f = Object.getOwnPropertySymbols;

/***/ },
/* 133 */
/***/ function(module, exports) {

  exports.f = {}.propertyIsEnumerable;

/***/ },
/* 134 */
/***/ function(module, exports, __webpack_require__) {

  // 7.2.2 IsArray(argument)
  var cof = __webpack_require__(123);
  module.exports = Array.isArray || function isArray(arg){
    return cof(arg) == 'Array';
  };

/***/ },
/* 135 */
/***/ function(module, exports, __webpack_require__) {

  // 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
  var anObject    = __webpack_require__(101)
    , dPs         = __webpack_require__(136)
    , enumBugKeys = __webpack_require__(130)
    , IE_PROTO    = __webpack_require__(129)('IE_PROTO')
    , Empty       = function(){ /* empty */ }
    , PROTOTYPE   = 'prototype';

  // Create object with fake `null` prototype: use iframe Object with cleared prototype
  var createDict = function(){
    // Thrash, waste and sodomy: IE GC bug
    var iframe = __webpack_require__(104)('iframe')
      , i      = enumBugKeys.length
      , lt     = '<'
      , gt     = '>'
      , iframeDocument;
    iframe.style.display = 'none';
    __webpack_require__(137).appendChild(iframe);
    iframe.src = 'javascript:'; // eslint-disable-line no-script-url
    // createDict = iframe.contentWindow.Object;
    // html.removeChild(iframe);
    iframeDocument = iframe.contentWindow.document;
    iframeDocument.open();
    iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);
    iframeDocument.close();
    createDict = iframeDocument.F;
    while(i--)delete createDict[PROTOTYPE][enumBugKeys[i]];
    return createDict();
  };

  module.exports = Object.create || function create(O, Properties){
    var result;
    if(O !== null){
      Empty[PROTOTYPE] = anObject(O);
      result = new Empty;
      Empty[PROTOTYPE] = null;
      // add "__proto__" for Object.getPrototypeOf polyfill
      result[IE_PROTO] = O;
    } else result = createDict();
    return Properties === undefined ? result : dPs(result, Properties);
  };


/***/ },
/* 136 */
/***/ function(module, exports, __webpack_require__) {

  var dP       = __webpack_require__(100)
    , anObject = __webpack_require__(101)
    , getKeys  = __webpack_require__(119);

  module.exports = __webpack_require__(95) ? Object.defineProperties : function defineProperties(O, Properties){
    anObject(O);
    var keys   = getKeys(Properties)
      , length = keys.length
      , i = 0
      , P;
    while(length > i)dP.f(O, P = keys[i++], Properties[P]);
    return O;
  };

/***/ },
/* 137 */
/***/ function(module, exports, __webpack_require__) {

  module.exports = __webpack_require__(93).document && document.documentElement;

/***/ },
/* 138 */
/***/ function(module, exports, __webpack_require__) {

  // fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window
  var toIObject = __webpack_require__(121)
    , gOPN      = __webpack_require__(139).f
    , toString  = {}.toString;

  var windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames
    ? Object.getOwnPropertyNames(window) : [];

  var getWindowNames = function(it){
    try {
      return gOPN(it);
    } catch(e){
      return windowNames.slice();
    }
  };

  module.exports.f = function getOwnPropertyNames(it){
    return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));
  };


/***/ },
/* 139 */
/***/ function(module, exports, __webpack_require__) {

  // 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)
  var $keys      = __webpack_require__(120)
    , hiddenKeys = __webpack_require__(130).concat('length', 'prototype');

  exports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O){
    return $keys(O, hiddenKeys);
  };

/***/ },
/* 140 */
/***/ function(module, exports, __webpack_require__) {

  var pIE            = __webpack_require__(133)
    , createDesc     = __webpack_require__(106)
    , toIObject      = __webpack_require__(121)
    , toPrimitive    = __webpack_require__(105)
    , has            = __webpack_require__(94)
    , IE8_DOM_DEFINE = __webpack_require__(103)
    , gOPD           = Object.getOwnPropertyDescriptor;

  exports.f = __webpack_require__(95) ? gOPD : function getOwnPropertyDescriptor(O, P){
    O = toIObject(O);
    P = toPrimitive(P, true);
    if(IE8_DOM_DEFINE)try {
      return gOPD(O, P);
    } catch(e){ /* empty */ }
    if(has(O, P))return createDesc(!pIE.f.call(O, P), O[P]);
  };

/***/ },
/* 141 */
/***/ function(module, exports, __webpack_require__) {

  var $export = __webpack_require__(97)
  // 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
  $export($export.S, 'Object', {create: __webpack_require__(135)});

/***/ },
/* 142 */
/***/ function(module, exports, __webpack_require__) {

  var $export = __webpack_require__(97);
  // 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)
  $export($export.S + $export.F * !__webpack_require__(95), 'Object', {defineProperty: __webpack_require__(100).f});

/***/ },
/* 143 */
/***/ function(module, exports, __webpack_require__) {

  var $export = __webpack_require__(97);
  // 19.1.2.3 / 15.2.3.7 Object.defineProperties(O, Properties)
  $export($export.S + $export.F * !__webpack_require__(95), 'Object', {defineProperties: __webpack_require__(136)});

/***/ },
/* 144 */
/***/ function(module, exports, __webpack_require__) {

  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
  var toIObject                 = __webpack_require__(121)
    , $getOwnPropertyDescriptor = __webpack_require__(140).f;

  __webpack_require__(145)('getOwnPropertyDescriptor', function(){
    return function getOwnPropertyDescriptor(it, key){
      return $getOwnPropertyDescriptor(toIObject(it), key);
    };
  });

/***/ },
/* 145 */
/***/ function(module, exports, __webpack_require__) {

  // most Object methods by ES6 should accept primitives
  var $export = __webpack_require__(97)
    , core    = __webpack_require__(98)
    , fails   = __webpack_require__(96);
  module.exports = function(KEY, exec){
    var fn  = (core.Object || {})[KEY] || Object[KEY]
      , exp = {};
    exp[KEY] = exec(fn);
    $export($export.S + $export.F * fails(function(){ fn(1); }), 'Object', exp);
  };

/***/ },
/* 146 */
/***/ function(module, exports, __webpack_require__) {

  // 19.1.2.9 Object.getPrototypeOf(O)
  var toObject        = __webpack_require__(147)
    , $getPrototypeOf = __webpack_require__(148);

  __webpack_require__(145)('getPrototypeOf', function(){
    return function getPrototypeOf(it){
      return $getPrototypeOf(toObject(it));
    };
  });

/***/ },
/* 147 */
/***/ function(module, exports, __webpack_require__) {

  // 7.1.13 ToObject(argument)
  var defined = __webpack_require__(124);
  module.exports = function(it){
    return Object(defined(it));
  };

/***/ },
/* 148 */
/***/ function(module, exports, __webpack_require__) {

  // 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)
  var has         = __webpack_require__(94)
    , toObject    = __webpack_require__(147)
    , IE_PROTO    = __webpack_require__(129)('IE_PROTO')
    , ObjectProto = Object.prototype;

  module.exports = Object.getPrototypeOf || function(O){
    O = toObject(O);
    if(has(O, IE_PROTO))return O[IE_PROTO];
    if(typeof O.constructor == 'function' && O instanceof O.constructor){
      return O.constructor.prototype;
    } return O instanceof Object ? ObjectProto : null;
  };

/***/ },
/* 149 */
/***/ function(module, exports, __webpack_require__) {

  // 19.1.2.14 Object.keys(O)
  var toObject = __webpack_require__(147)
    , $keys    = __webpack_require__(119);

  __webpack_require__(145)('keys', function(){
    return function keys(it){
      return $keys(toObject(it));
    };
  });

/***/ },
/* 150 */
/***/ function(module, exports, __webpack_require__) {

  // 19.1.2.7 Object.getOwnPropertyNames(O)
  __webpack_require__(145)('getOwnPropertyNames', function(){
    return __webpack_require__(138).f;
  });

/***/ },
/* 151 */
/***/ function(module, exports, __webpack_require__) {

  // 19.1.2.5 Object.freeze(O)
  var isObject = __webpack_require__(102)
    , meta     = __webpack_require__(111).onFreeze;

  __webpack_require__(145)('freeze', function($freeze){
    return function freeze(it){
      return $freeze && isObject(it) ? $freeze(meta(it)) : it;
    };
  });

/***/ },
/* 152 */
/***/ function(module, exports, __webpack_require__) {

  // 19.1.2.17 Object.seal(O)
  var isObject = __webpack_require__(102)
    , meta     = __webpack_require__(111).onFreeze;

  __webpack_require__(145)('seal', function($seal){
    return function seal(it){
      return $seal && isObject(it) ? $seal(meta(it)) : it;
    };
  });

/***/ },
/* 153 */
/***/ function(module, exports, __webpack_require__) {

  // 19.1.2.15 Object.preventExtensions(O)
  var isObject = __webpack_require__(102)
    , meta     = __webpack_require__(111).onFreeze;

  __webpack_require__(145)('preventExtensions', function($preventExtensions){
    return function preventExtensions(it){
      return $preventExtensions && isObject(it) ? $preventExtensions(meta(it)) : it;
    };
  });

/***/ },
/* 154 */
/***/ function(module, exports, __webpack_require__) {

  // 19.1.2.12 Object.isFrozen(O)
  var isObject = __webpack_require__(102);

  __webpack_require__(145)('isFrozen', function($isFrozen){
    return function isFrozen(it){
      return isObject(it) ? $isFrozen ? $isFrozen(it) : false : true;
    };
  });

/***/ },
/* 155 */
/***/ function(module, exports, __webpack_require__) {

  // 19.1.2.13 Object.isSealed(O)
  var isObject = __webpack_require__(102);

  __webpack_require__(145)('isSealed', function($isSealed){
    return function isSealed(it){
      return isObject(it) ? $isSealed ? $isSealed(it) : false : true;
    };
  });

/***/ },
/* 156 */
/***/ function(module, exports, __webpack_require__) {

  // 19.1.2.11 Object.isExtensible(O)
  var isObject = __webpack_require__(102);

  __webpack_require__(145)('isExtensible', function($isExtensible){
    return function isExtensible(it){
      return isObject(it) ? $isExtensible ? $isExtensible(it) : true : false;
    };
  });

/***/ },
/* 157 */
/***/ function(module, exports, __webpack_require__) {

  // 19.1.3.1 Object.assign(target, source)
  var $export = __webpack_require__(97);

  $export($export.S + $export.F, 'Object', {assign: __webpack_require__(158)});

/***/ },
/* 158 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';
  // 19.1.2.1 Object.assign(target, source, ...)
  var getKeys  = __webpack_require__(119)
    , gOPS     = __webpack_require__(132)
    , pIE      = __webpack_require__(133)
    , toObject = __webpack_require__(147)
    , IObject  = __webpack_require__(122)
    , $assign  = Object.assign;

  // should work with symbols and should have deterministic property order (V8 bug)
  module.exports = !$assign || __webpack_require__(96)(function(){
    var A = {}
      , B = {}
      , S = Symbol()
      , K = 'abcdefghijklmnopqrst';
    A[S] = 7;
    K.split('').forEach(function(k){ B[k] = k; });
    return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;
  }) ? function assign(target, source){ // eslint-disable-line no-unused-vars
    var T     = toObject(target)
      , aLen  = arguments.length
      , index = 1
      , getSymbols = gOPS.f
      , isEnum     = pIE.f;
    while(aLen > index){
      var S      = IObject(arguments[index++])
        , keys   = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S)
        , length = keys.length
        , j      = 0
        , key;
      while(length > j)if(isEnum.call(S, key = keys[j++]))T[key] = S[key];
    } return T;
  } : $assign;

/***/ },
/* 159 */
/***/ function(module, exports, __webpack_require__) {

  // 19.1.3.10 Object.is(value1, value2)
  var $export = __webpack_require__(97);
  $export($export.S, 'Object', {is: __webpack_require__(160)});

/***/ },
/* 160 */
/***/ function(module, exports) {

  // 7.2.9 SameValue(x, y)
  module.exports = Object.is || function is(x, y){
    return x === y ? x !== 0 || 1 / x === 1 / y : x != x && y != y;
  };

/***/ },
/* 161 */
/***/ function(module, exports, __webpack_require__) {

  // 19.1.3.19 Object.setPrototypeOf(O, proto)
  var $export = __webpack_require__(97);
  $export($export.S, 'Object', {setPrototypeOf: __webpack_require__(162).set});

/***/ },
/* 162 */
/***/ function(module, exports, __webpack_require__) {

  // Works with __proto__ only. Old v8 can't work with null proto objects.
  /* eslint-disable no-proto */
  var isObject = __webpack_require__(102)
    , anObject = __webpack_require__(101);
  var check = function(O, proto){
    anObject(O);
    if(!isObject(proto) && proto !== null)throw TypeError(proto + ": can't set as prototype!");
  };
  module.exports = {
    set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line
      function(test, buggy, set){
        try {
          set = __webpack_require__(109)(Function.call, __webpack_require__(140).f(Object.prototype, '__proto__').set, 2);
          set(test, []);
          buggy = !(test instanceof Array);
        } catch(e){ buggy = true; }
        return function setPrototypeOf(O, proto){
          check(O, proto);
          if(buggy)O.__proto__ = proto;
          else set(O, proto);
          return O;
        };
      }({}, false) : undefined),
    check: check
  };

/***/ },
/* 163 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';
  // 19.1.3.6 Object.prototype.toString()
  var classof = __webpack_require__(164)
    , test    = {};
  test[__webpack_require__(114)('toStringTag')] = 'z';
  if(test + '' != '[object z]'){
    __webpack_require__(107)(Object.prototype, 'toString', function toString(){
      return '[object ' + classof(this) + ']';
    }, true);
  }

/***/ },
/* 164 */
/***/ function(module, exports, __webpack_require__) {

  // getting tag from 19.1.3.6 Object.prototype.toString()
  var cof = __webpack_require__(123)
    , TAG = __webpack_require__(114)('toStringTag')
    // ES3 wrong here
    , ARG = cof(function(){ return arguments; }()) == 'Arguments';

  // fallback for IE11 Script Access Denied error
  var tryGet = function(it, key){
    try {
      return it[key];
    } catch(e){ /* empty */ }
  };

  module.exports = function(it){
    var O, T, B;
    return it === undefined ? 'Undefined' : it === null ? 'Null'
      // @@toStringTag case
      : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T
      // builtinTag case
      : ARG ? cof(O)
      // ES3 arguments fallback
      : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;
  };

/***/ },
/* 165 */
/***/ function(module, exports, __webpack_require__) {

  // 19.2.3.2 / 15.3.4.5 Function.prototype.bind(thisArg, args...)
  var $export = __webpack_require__(97);

  $export($export.P, 'Function', {bind: __webpack_require__(166)});

/***/ },
/* 166 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';
  var aFunction  = __webpack_require__(110)
    , isObject   = __webpack_require__(102)
    , invoke     = __webpack_require__(167)
    , arraySlice = [].slice
    , factories  = {};

  var construct = function(F, len, args){
    if(!(len in factories)){
      for(var n = [], i = 0; i < len; i++)n[i] = 'a[' + i + ']';
      factories[len] = Function('F,a', 'return new F(' + n.join(',') + ')');
    } return factories[len](F, args);
  };

  module.exports = Function.bind || function bind(that /*, args... */){
    var fn       = aFunction(this)
      , partArgs = arraySlice.call(arguments, 1);
    var bound = function(/* args... */){
      var args = partArgs.concat(arraySlice.call(arguments));
      return this instanceof bound ? construct(fn, args.length, args) : invoke(fn, args, that);
    };
    if(isObject(fn.prototype))bound.prototype = fn.prototype;
    return bound;
  };

/***/ },
/* 167 */
/***/ function(module, exports) {

  // fast apply, http://jsperf.lnkit.com/fast-apply/5
  module.exports = function(fn, args, that){
    var un = that === undefined;
    switch(args.length){
      case 0: return un ? fn()
                        : fn.call(that);
      case 1: return un ? fn(args[0])
                        : fn.call(that, args[0]);
      case 2: return un ? fn(args[0], args[1])
                        : fn.call(that, args[0], args[1]);
      case 3: return un ? fn(args[0], args[1], args[2])
                        : fn.call(that, args[0], args[1], args[2]);
      case 4: return un ? fn(args[0], args[1], args[2], args[3])
                        : fn.call(that, args[0], args[1], args[2], args[3]);
    } return              fn.apply(that, args);
  };

/***/ },
/* 168 */
/***/ function(module, exports, __webpack_require__) {

  var dP         = __webpack_require__(100).f
    , createDesc = __webpack_require__(106)
    , has        = __webpack_require__(94)
    , FProto     = Function.prototype
    , nameRE     = /^\s*function ([^ (]*)/
    , NAME       = 'name';

  var isExtensible = Object.isExtensible || function(){
    return true;
  };

  // 19.2.4.2 name
  NAME in FProto || __webpack_require__(95) && dP(FProto, NAME, {
    configurable: true,
    get: function(){
      try {
        var that = this
          , name = ('' + that).match(nameRE)[1];
        has(that, NAME) || !isExtensible(that) || dP(that, NAME, createDesc(5, name));
        return name;
      } catch(e){
        return '';
      }
    }
  });

/***/ },
/* 169 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';
  var isObject       = __webpack_require__(102)
    , getPrototypeOf = __webpack_require__(148)
    , HAS_INSTANCE   = __webpack_require__(114)('hasInstance')
    , FunctionProto  = Function.prototype;
  // 19.2.3.6 Function.prototype[@@hasInstance](V)
  if(!(HAS_INSTANCE in FunctionProto))__webpack_require__(100).f(FunctionProto, HAS_INSTANCE, {value: function(O){
    if(typeof this != 'function' || !isObject(O))return false;
    if(!isObject(this.prototype))return O instanceof this;
    // for environment w/o native `@@hasInstance` logic enough `instanceof`, but add this:
    while(O = getPrototypeOf(O))if(this.prototype === O)return true;
    return false;
  }});

/***/ },
/* 170 */
/***/ function(module, exports, __webpack_require__) {

  var $export   = __webpack_require__(97)
    , $parseInt = __webpack_require__(171);
  // 18.2.5 parseInt(string, radix)
  $export($export.G + $export.F * (parseInt != $parseInt), {parseInt: $parseInt});

/***/ },
/* 171 */
/***/ function(module, exports, __webpack_require__) {

  var $parseInt = __webpack_require__(93).parseInt
    , $trim     = __webpack_require__(172).trim
    , ws        = __webpack_require__(173)
    , hex       = /^[\-+]?0[xX]/;

  module.exports = $parseInt(ws + '08') !== 8 || $parseInt(ws + '0x16') !== 22 ? function parseInt(str, radix){
    var string = $trim(String(str), 3);
    return $parseInt(string, (radix >>> 0) || (hex.test(string) ? 16 : 10));
  } : $parseInt;

/***/ },
/* 172 */
/***/ function(module, exports, __webpack_require__) {

  var $export = __webpack_require__(97)
    , defined = __webpack_require__(124)
    , fails   = __webpack_require__(96)
    , spaces  = __webpack_require__(173)
    , space   = '[' + spaces + ']'
    , non     = '\u200b\u0085'
    , ltrim   = RegExp('^' + space + space + '*')
    , rtrim   = RegExp(space + space + '*$');

  var exporter = function(KEY, exec, ALIAS){
    var exp   = {};
    var FORCE = fails(function(){
      return !!spaces[KEY]() || non[KEY]() != non;
    });
    var fn = exp[KEY] = FORCE ? exec(trim) : spaces[KEY];
    if(ALIAS)exp[ALIAS] = fn;
    $export($export.P + $export.F * FORCE, 'String', exp);
  };

  // 1 -> String#trimLeft
  // 2 -> String#trimRight
  // 3 -> String#trim
  var trim = exporter.trim = function(string, TYPE){
    string = String(defined(string));
    if(TYPE & 1)string = string.replace(ltrim, '');
    if(TYPE & 2)string = string.replace(rtrim, '');
    return string;
  };

  module.exports = exporter;

/***/ },
/* 173 */
/***/ function(module, exports) {

  module.exports = '\x09\x0A\x0B\x0C\x0D\x20\xA0\u1680\u180E\u2000\u2001\u2002\u2003' +
    '\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF';

/***/ },
/* 174 */
/***/ function(module, exports, __webpack_require__) {

  var $export     = __webpack_require__(97)
    , $parseFloat = __webpack_require__(175);
  // 18.2.4 parseFloat(string)
  $export($export.G + $export.F * (parseFloat != $parseFloat), {parseFloat: $parseFloat});

/***/ },
/* 175 */
/***/ function(module, exports, __webpack_require__) {

  var $parseFloat = __webpack_require__(93).parseFloat
    , $trim       = __webpack_require__(172).trim;

  module.exports = 1 / $parseFloat(__webpack_require__(173) + '-0') !== -Infinity ? function parseFloat(str){
    var string = $trim(String(str), 3)
      , result = $parseFloat(string);
    return result === 0 && string.charAt(0) == '-' ? -0 : result;
  } : $parseFloat;

/***/ },
/* 176 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';
  var global            = __webpack_require__(93)
    , has               = __webpack_require__(94)
    , cof               = __webpack_require__(123)
    , inheritIfRequired = __webpack_require__(177)
    , toPrimitive       = __webpack_require__(105)
    , fails             = __webpack_require__(96)
    , gOPN              = __webpack_require__(139).f
    , gOPD              = __webpack_require__(140).f
    , dP                = __webpack_require__(100).f
    , $trim             = __webpack_require__(172).trim
    , NUMBER            = 'Number'
    , $Number           = global[NUMBER]
    , Base              = $Number
    , proto             = $Number.prototype
    // Opera ~12 has broken Object#toString
    , BROKEN_COF        = cof(__webpack_require__(135)(proto)) == NUMBER
    , TRIM              = 'trim' in String.prototype;

  // 7.1.3 ToNumber(argument)
  var toNumber = function(argument){
    var it = toPrimitive(argument, false);
    if(typeof it == 'string' && it.length > 2){
      it = TRIM ? it.trim() : $trim(it, 3);
      var first = it.charCodeAt(0)
        , third, radix, maxCode;
      if(first === 43 || first === 45){
        third = it.charCodeAt(2);
        if(third === 88 || third === 120)return NaN; // Number('+0x1') should be NaN, old V8 fix
      } else if(first === 48){
        switch(it.charCodeAt(1)){
          case 66 : case 98  : radix = 2; maxCode = 49; break; // fast equal /^0b[01]+$/i
          case 79 : case 111 : radix = 8; maxCode = 55; break; // fast equal /^0o[0-7]+$/i
          default : return +it;
        }
        for(var digits = it.slice(2), i = 0, l = digits.length, code; i < l; i++){
          code = digits.charCodeAt(i);
          // parseInt parses a string to a first unavailable symbol
          // but ToNumber should return NaN if a string contains unavailable symbols
          if(code < 48 || code > maxCode)return NaN;
        } return parseInt(digits, radix);
      }
    } return +it;
  };

  if(!$Number(' 0o1') || !$Number('0b1') || $Number('+0x1')){
    $Number = function Number(value){
      var it = arguments.length < 1 ? 0 : value
        , that = this;
      return that instanceof $Number
        // check on 1..constructor(foo) case
        && (BROKEN_COF ? fails(function(){ proto.valueOf.call(that); }) : cof(that) != NUMBER)
          ? inheritIfRequired(new Base(toNumber(it)), that, $Number) : toNumber(it);
    };
    for(var keys = __webpack_require__(95) ? gOPN(Base) : (
      // ES3:
      'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' +
      // ES6 (in case, if modules with ES6 Number statics required before):
      'EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,' +
      'MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger'
    ).split(','), j = 0, key; keys.length > j; j++){
      if(has(Base, key = keys[j]) && !has($Number, key)){
        dP($Number, key, gOPD(Base, key));
      }
    }
    $Number.prototype = proto;
    proto.constructor = $Number;
    __webpack_require__(107)(global, NUMBER, $Number);
  }

/***/ },
/* 177 */
/***/ function(module, exports, __webpack_require__) {

  var isObject       = __webpack_require__(102)
    , setPrototypeOf = __webpack_require__(162).set;
  module.exports = function(that, target, C){
    var P, S = target.constructor;
    if(S !== C && typeof S == 'function' && (P = S.prototype) !== C.prototype && isObject(P) && setPrototypeOf){
      setPrototypeOf(that, P);
    } return that;
  };

/***/ },
/* 178 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';
  var $export      = __webpack_require__(97)
    , toInteger    = __webpack_require__(127)
    , aNumberValue = __webpack_require__(179)
    , repeat       = __webpack_require__(180)
    , $toFixed     = 1..toFixed
    , floor        = Math.floor
    , data         = [0, 0, 0, 0, 0, 0]
    , ERROR        = 'Number.toFixed: incorrect invocation!'
    , ZERO         = '0';

  var multiply = function(n, c){
    var i  = -1
      , c2 = c;
    while(++i < 6){
      c2 += n * data[i];
      data[i] = c2 % 1e7;
      c2 = floor(c2 / 1e7);
    }
  };
  var divide = function(n){
    var i = 6
      , c = 0;
    while(--i >= 0){
      c += data[i];
      data[i] = floor(c / n);
      c = (c % n) * 1e7;
    }
  };
  var numToString = function(){
    var i = 6
      , s = '';
    while(--i >= 0){
      if(s !== '' || i === 0 || data[i] !== 0){
        var t = String(data[i]);
        s = s === '' ? t : s + repeat.call(ZERO, 7 - t.length) + t;
      }
    } return s;
  };
  var pow = function(x, n, acc){
    return n === 0 ? acc : n % 2 === 1 ? pow(x, n - 1, acc * x) : pow(x * x, n / 2, acc);
  };
  var log = function(x){
    var n  = 0
      , x2 = x;
    while(x2 >= 4096){
      n += 12;
      x2 /= 4096;
    }
    while(x2 >= 2){
      n  += 1;
      x2 /= 2;
    } return n;
  };

  $export($export.P + $export.F * (!!$toFixed && (
    0.00008.toFixed(3) !== '0.000' ||
    0.9.toFixed(0) !== '1' ||
    1.255.toFixed(2) !== '1.25' ||
    1000000000000000128..toFixed(0) !== '1000000000000000128'
  ) || !__webpack_require__(96)(function(){
    // V8 ~ Android 4.3-
    $toFixed.call({});
  })), 'Number', {
    toFixed: function toFixed(fractionDigits){
      var x = aNumberValue(this, ERROR)
        , f = toInteger(fractionDigits)
        , s = ''
        , m = ZERO
        , e, z, j, k;
      if(f < 0 || f > 20)throw RangeError(ERROR);
      if(x != x)return 'NaN';
      if(x <= -1e21 || x >= 1e21)return String(x);
      if(x < 0){
        s = '-';
        x = -x;
      }
      if(x > 1e-21){
        e = log(x * pow(2, 69, 1)) - 69;
        z = e < 0 ? x * pow(2, -e, 1) : x / pow(2, e, 1);
        z *= 0x10000000000000;
        e = 52 - e;
        if(e > 0){
          multiply(0, z);
          j = f;
          while(j >= 7){
            multiply(1e7, 0);
            j -= 7;
          }
          multiply(pow(10, j, 1), 0);
          j = e - 1;
          while(j >= 23){
            divide(1 << 23);
            j -= 23;
          }
          divide(1 << j);
          multiply(1, 1);
          divide(2);
          m = numToString();
        } else {
          multiply(0, z);
          multiply(1 << -e, 0);
          m = numToString() + repeat.call(ZERO, f);
        }
      }
      if(f > 0){
        k = m.length;
        m = s + (k <= f ? '0.' + repeat.call(ZERO, f - k) + m : m.slice(0, k - f) + '.' + m.slice(k - f));
      } else {
        m = s + m;
      } return m;
    }
  });

/***/ },
/* 179 */
/***/ function(module, exports, __webpack_require__) {

  var cof = __webpack_require__(123);
  module.exports = function(it, msg){
    if(typeof it != 'number' && cof(it) != 'Number')throw TypeError(msg);
    return +it;
  };

/***/ },
/* 180 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';
  var toInteger = __webpack_require__(127)
    , defined   = __webpack_require__(124);

  module.exports = function repeat(count){
    var str = String(defined(this))
      , res = ''
      , n   = toInteger(count);
    if(n < 0 || n == Infinity)throw RangeError("Count can't be negative");
    for(;n > 0; (n >>>= 1) && (str += str))if(n & 1)res += str;
    return res;
  };

/***/ },
/* 181 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';
  var $export      = __webpack_require__(97)
    , $fails       = __webpack_require__(96)
    , aNumberValue = __webpack_require__(179)
    , $toPrecision = 1..toPrecision;

  $export($export.P + $export.F * ($fails(function(){
    // IE7-
    return $toPrecision.call(1, undefined) !== '1';
  }) || !$fails(function(){
    // V8 ~ Android 4.3-
    $toPrecision.call({});
  })), 'Number', {
    toPrecision: function toPrecision(precision){
      var that = aNumberValue(this, 'Number#toPrecision: incorrect invocation!');
      return precision === undefined ? $toPrecision.call(that) : $toPrecision.call(that, precision); 
    }
  });

/***/ },
/* 182 */
/***/ function(module, exports, __webpack_require__) {

  // 20.1.2.1 Number.EPSILON
  var $export = __webpack_require__(97);

  $export($export.S, 'Number', {EPSILON: Math.pow(2, -52)});

/***/ },
/* 183 */
/***/ function(module, exports, __webpack_require__) {

  // 20.1.2.2 Number.isFinite(number)
  var $export   = __webpack_require__(97)
    , _isFinite = __webpack_require__(93).isFinite;

  $export($export.S, 'Number', {
    isFinite: function isFinite(it){
      return typeof it == 'number' && _isFinite(it);
    }
  });

/***/ },
/* 184 */
/***/ function(module, exports, __webpack_require__) {

  // 20.1.2.3 Number.isInteger(number)
  var $export = __webpack_require__(97);

  $export($export.S, 'Number', {isInteger: __webpack_require__(185)});

/***/ },
/* 185 */
/***/ function(module, exports, __webpack_require__) {

  // 20.1.2.3 Number.isInteger(number)
  var isObject = __webpack_require__(102)
    , floor    = Math.floor;
  module.exports = function isInteger(it){
    return !isObject(it) && isFinite(it) && floor(it) === it;
  };

/***/ },
/* 186 */
/***/ function(module, exports, __webpack_require__) {

  // 20.1.2.4 Number.isNaN(number)
  var $export = __webpack_require__(97);

  $export($export.S, 'Number', {
    isNaN: function isNaN(number){
      return number != number;
    }
  });

/***/ },
/* 187 */
/***/ function(module, exports, __webpack_require__) {

  // 20.1.2.5 Number.isSafeInteger(number)
  var $export   = __webpack_require__(97)
    , isInteger = __webpack_require__(185)
    , abs       = Math.abs;

  $export($export.S, 'Number', {
    isSafeInteger: function isSafeInteger(number){
      return isInteger(number) && abs(number) <= 0x1fffffffffffff;
    }
  });

/***/ },
/* 188 */
/***/ function(module, exports, __webpack_require__) {

  // 20.1.2.6 Number.MAX_SAFE_INTEGER
  var $export = __webpack_require__(97);

  $export($export.S, 'Number', {MAX_SAFE_INTEGER: 0x1fffffffffffff});

/***/ },
/* 189 */
/***/ function(module, exports, __webpack_require__) {

  // 20.1.2.10 Number.MIN_SAFE_INTEGER
  var $export = __webpack_require__(97);

  $export($export.S, 'Number', {MIN_SAFE_INTEGER: -0x1fffffffffffff});

/***/ },
/* 190 */
/***/ function(module, exports, __webpack_require__) {

  var $export     = __webpack_require__(97)
    , $parseFloat = __webpack_require__(175);
  // 20.1.2.12 Number.parseFloat(string)
  $export($export.S + $export.F * (Number.parseFloat != $parseFloat), 'Number', {parseFloat: $parseFloat});

/***/ },
/* 191 */
/***/ function(module, exports, __webpack_require__) {

  var $export   = __webpack_require__(97)
    , $parseInt = __webpack_require__(171);
  // 20.1.2.13 Number.parseInt(string, radix)
  $export($export.S + $export.F * (Number.parseInt != $parseInt), 'Number', {parseInt: $parseInt});

/***/ },
/* 192 */
/***/ function(module, exports, __webpack_require__) {

  // 20.2.2.3 Math.acosh(x)
  var $export = __webpack_require__(97)
    , log1p   = __webpack_require__(193)
    , sqrt    = Math.sqrt
    , $acosh  = Math.acosh;

  $export($export.S + $export.F * !($acosh
    // V8 bug: https://code.google.com/p/v8/issues/detail?id=3509
    && Math.floor($acosh(Number.MAX_VALUE)) == 710
    // Tor Browser bug: Math.acosh(Infinity) -> NaN 
    && $acosh(Infinity) == Infinity
  ), 'Math', {
    acosh: function acosh(x){
      return (x = +x) < 1 ? NaN : x > 94906265.62425156
        ? Math.log(x) + Math.LN2
        : log1p(x - 1 + sqrt(x - 1) * sqrt(x + 1));
    }
  });

/***/ },
/* 193 */
/***/ function(module, exports) {

  // 20.2.2.20 Math.log1p(x)
  module.exports = Math.log1p || function log1p(x){
    return (x = +x) > -1e-8 && x < 1e-8 ? x - x * x / 2 : Math.log(1 + x);
  };

/***/ },
/* 194 */
/***/ function(module, exports, __webpack_require__) {

  // 20.2.2.5 Math.asinh(x)
  var $export = __webpack_require__(97)
    , $asinh  = Math.asinh;

  function asinh(x){
    return !isFinite(x = +x) || x == 0 ? x : x < 0 ? -asinh(-x) : Math.log(x + Math.sqrt(x * x + 1));
  }

  // Tor Browser bug: Math.asinh(0) -> -0 
  $export($export.S + $export.F * !($asinh && 1 / $asinh(0) > 0), 'Math', {asinh: asinh});

/***/ },
/* 195 */
/***/ function(module, exports, __webpack_require__) {

  // 20.2.2.7 Math.atanh(x)
  var $export = __webpack_require__(97)
    , $atanh  = Math.atanh;

  // Tor Browser bug: Math.atanh(-0) -> 0 
  $export($export.S + $export.F * !($atanh && 1 / $atanh(-0) < 0), 'Math', {
    atanh: function atanh(x){
      return (x = +x) == 0 ? x : Math.log((1 + x) / (1 - x)) / 2;
    }
  });

/***/ },
/* 196 */
/***/ function(module, exports, __webpack_require__) {

  // 20.2.2.9 Math.cbrt(x)
  var $export = __webpack_require__(97)
    , sign    = __webpack_require__(197);

  $export($export.S, 'Math', {
    cbrt: function cbrt(x){
      return sign(x = +x) * Math.pow(Math.abs(x), 1 / 3);
    }
  });

/***/ },
/* 197 */
/***/ function(module, exports) {

  // 20.2.2.28 Math.sign(x)
  module.exports = Math.sign || function sign(x){
    return (x = +x) == 0 || x != x ? x : x < 0 ? -1 : 1;
  };

/***/ },
/* 198 */
/***/ function(module, exports, __webpack_require__) {

  // 20.2.2.11 Math.clz32(x)
  var $export = __webpack_require__(97);

  $export($export.S, 'Math', {
    clz32: function clz32(x){
      return (x >>>= 0) ? 31 - Math.floor(Math.log(x + 0.5) * Math.LOG2E) : 32;
    }
  });

/***/ },
/* 199 */
/***/ function(module, exports, __webpack_require__) {

  // 20.2.2.12 Math.cosh(x)
  var $export = __webpack_require__(97)
    , exp     = Math.exp;

  $export($export.S, 'Math', {
    cosh: function cosh(x){
      return (exp(x = +x) + exp(-x)) / 2;
    }
  });

/***/ },
/* 200 */
/***/ function(module, exports, __webpack_require__) {

  // 20.2.2.14 Math.expm1(x)
  var $export = __webpack_require__(97)
    , $expm1  = __webpack_require__(201);

  $export($export.S + $export.F * ($expm1 != Math.expm1), 'Math', {expm1: $expm1});

/***/ },
/* 201 */
/***/ function(module, exports) {

  // 20.2.2.14 Math.expm1(x)
  var $expm1 = Math.expm1;
  module.exports = (!$expm1
    // Old FF bug
    || $expm1(10) > 22025.465794806719 || $expm1(10) < 22025.4657948067165168
    // Tor Browser bug
    || $expm1(-2e-17) != -2e-17
  ) ? function expm1(x){
    return (x = +x) == 0 ? x : x > -1e-6 && x < 1e-6 ? x + x * x / 2 : Math.exp(x) - 1;
  } : $expm1;

/***/ },
/* 202 */
/***/ function(module, exports, __webpack_require__) {

  // 20.2.2.16 Math.fround(x)
  var $export   = __webpack_require__(97)
    , sign      = __webpack_require__(197)
    , pow       = Math.pow
    , EPSILON   = pow(2, -52)
    , EPSILON32 = pow(2, -23)
    , MAX32     = pow(2, 127) * (2 - EPSILON32)
    , MIN32     = pow(2, -126);

  var roundTiesToEven = function(n){
    return n + 1 / EPSILON - 1 / EPSILON;
  };


  $export($export.S, 'Math', {
    fround: function fround(x){
      var $abs  = Math.abs(x)
        , $sign = sign(x)
        , a, result;
      if($abs < MIN32)return $sign * roundTiesToEven($abs / MIN32 / EPSILON32) * MIN32 * EPSILON32;
      a = (1 + EPSILON32 / EPSILON) * $abs;
      result = a - (a - $abs);
      if(result > MAX32 || result != result)return $sign * Infinity;
      return $sign * result;
    }
  });

/***/ },
/* 203 */
/***/ function(module, exports, __webpack_require__) {

  // 20.2.2.17 Math.hypot([value1[, value2[, … ]]])
  var $export = __webpack_require__(97)
    , abs     = Math.abs;

  $export($export.S, 'Math', {
    hypot: function hypot(value1, value2){ // eslint-disable-line no-unused-vars
      var sum  = 0
        , i    = 0
        , aLen = arguments.length
        , larg = 0
        , arg, div;
      while(i < aLen){
        arg = abs(arguments[i++]);
        if(larg < arg){
          div  = larg / arg;
          sum  = sum * div * div + 1;
          larg = arg;
        } else if(arg > 0){
          div  = arg / larg;
          sum += div * div;
        } else sum += arg;
      }
      return larg === Infinity ? Infinity : larg * Math.sqrt(sum);
    }
  });

/***/ },
/* 204 */
/***/ function(module, exports, __webpack_require__) {

  // 20.2.2.18 Math.imul(x, y)
  var $export = __webpack_require__(97)
    , $imul   = Math.imul;

  // some WebKit versions fails with big numbers, some has wrong arity
  $export($export.S + $export.F * __webpack_require__(96)(function(){
    return $imul(0xffffffff, 5) != -5 || $imul.length != 2;
  }), 'Math', {
    imul: function imul(x, y){
      var UINT16 = 0xffff
        , xn = +x
        , yn = +y
        , xl = UINT16 & xn
        , yl = UINT16 & yn;
      return 0 | xl * yl + ((UINT16 & xn >>> 16) * yl + xl * (UINT16 & yn >>> 16) << 16 >>> 0);
    }
  });

/***/ },
/* 205 */
/***/ function(module, exports, __webpack_require__) {

  // 20.2.2.21 Math.log10(x)
  var $export = __webpack_require__(97);

  $export($export.S, 'Math', {
    log10: function log10(x){
      return Math.log(x) / Math.LN10;
    }
  });

/***/ },
/* 206 */
/***/ function(module, exports, __webpack_require__) {

  // 20.2.2.20 Math.log1p(x)
  var $export = __webpack_require__(97);

  $export($export.S, 'Math', {log1p: __webpack_require__(193)});

/***/ },
/* 207 */
/***/ function(module, exports, __webpack_require__) {

  // 20.2.2.22 Math.log2(x)
  var $export = __webpack_require__(97);

  $export($export.S, 'Math', {
    log2: function log2(x){
      return Math.log(x) / Math.LN2;
    }
  });

/***/ },
/* 208 */
/***/ function(module, exports, __webpack_require__) {

  // 20.2.2.28 Math.sign(x)
  var $export = __webpack_require__(97);

  $export($export.S, 'Math', {sign: __webpack_require__(197)});

/***/ },
/* 209 */
/***/ function(module, exports, __webpack_require__) {

  // 20.2.2.30 Math.sinh(x)
  var $export = __webpack_require__(97)
    , expm1   = __webpack_require__(201)
    , exp     = Math.exp;

  // V8 near Chromium 38 has a problem with very small numbers
  $export($export.S + $export.F * __webpack_require__(96)(function(){
    return !Math.sinh(-2e-17) != -2e-17;
  }), 'Math', {
    sinh: function sinh(x){
      return Math.abs(x = +x) < 1
        ? (expm1(x) - expm1(-x)) / 2
        : (exp(x - 1) - exp(-x - 1)) * (Math.E / 2);
    }
  });

/***/ },
/* 210 */
/***/ function(module, exports, __webpack_require__) {

  // 20.2.2.33 Math.tanh(x)
  var $export = __webpack_require__(97)
    , expm1   = __webpack_require__(201)
    , exp     = Math.exp;

  $export($export.S, 'Math', {
    tanh: function tanh(x){
      var a = expm1(x = +x)
        , b = expm1(-x);
      return a == Infinity ? 1 : b == Infinity ? -1 : (a - b) / (exp(x) + exp(-x));
    }
  });

/***/ },
/* 211 */
/***/ function(module, exports, __webpack_require__) {

  // 20.2.2.34 Math.trunc(x)
  var $export = __webpack_require__(97);

  $export($export.S, 'Math', {
    trunc: function trunc(it){
      return (it > 0 ? Math.floor : Math.ceil)(it);
    }
  });

/***/ },
/* 212 */
/***/ function(module, exports, __webpack_require__) {

  var $export        = __webpack_require__(97)
    , toIndex        = __webpack_require__(128)
    , fromCharCode   = String.fromCharCode
    , $fromCodePoint = String.fromCodePoint;

  // length should be 1, old FF problem
  $export($export.S + $export.F * (!!$fromCodePoint && $fromCodePoint.length != 1), 'String', {
    // 21.1.2.2 String.fromCodePoint(...codePoints)
    fromCodePoint: function fromCodePoint(x){ // eslint-disable-line no-unused-vars
      var res  = []
        , aLen = arguments.length
        , i    = 0
        , code;
      while(aLen > i){
        code = +arguments[i++];
        if(toIndex(code, 0x10ffff) !== code)throw RangeError(code + ' is not a valid code point');
        res.push(code < 0x10000
          ? fromCharCode(code)
          : fromCharCode(((code -= 0x10000) >> 10) + 0xd800, code % 0x400 + 0xdc00)
        );
      } return res.join('');
    }
  });

/***/ },
/* 213 */
/***/ function(module, exports, __webpack_require__) {

  var $export   = __webpack_require__(97)
    , toIObject = __webpack_require__(121)
    , toLength  = __webpack_require__(126);

  $export($export.S, 'String', {
    // 21.1.2.4 String.raw(callSite, ...substitutions)
    raw: function raw(callSite){
      var tpl  = toIObject(callSite.raw)
        , len  = toLength(tpl.length)
        , aLen = arguments.length
        , res  = []
        , i    = 0;
      while(len > i){
        res.push(String(tpl[i++]));
        if(i < aLen)res.push(String(arguments[i]));
      } return res.join('');
    }
  });

/***/ },
/* 214 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';
  // 21.1.3.25 String.prototype.trim()
  __webpack_require__(172)('trim', function($trim){
    return function trim(){
      return $trim(this, 3);
    };
  });

/***/ },
/* 215 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';
  var $at  = __webpack_require__(216)(true);

  // 21.1.3.27 String.prototype[@@iterator]()
  __webpack_require__(217)(String, 'String', function(iterated){
    this._t = String(iterated); // target
    this._i = 0;                // next index
  // 21.1.5.2.1 %StringIteratorPrototype%.next()
  }, function(){
    var O     = this._t
      , index = this._i
      , point;
    if(index >= O.length)return {value: undefined, done: true};
    point = $at(O, index);
    this._i += point.length;
    return {value: point, done: false};
  });

/***/ },
/* 216 */
/***/ function(module, exports, __webpack_require__) {

  var toInteger = __webpack_require__(127)
    , defined   = __webpack_require__(124);
  // true  -> String#at
  // false -> String#codePointAt
  module.exports = function(TO_STRING){
    return function(that, pos){
      var s = String(defined(that))
        , i = toInteger(pos)
        , l = s.length
        , a, b;
      if(i < 0 || i >= l)return TO_STRING ? '' : undefined;
      a = s.charCodeAt(i);
      return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff
        ? TO_STRING ? s.charAt(i) : a
        : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;
    };
  };

/***/ },
/* 217 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';
  var LIBRARY        = __webpack_require__(117)
    , $export        = __webpack_require__(97)
    , redefine       = __webpack_require__(107)
    , hide           = __webpack_require__(99)
    , has            = __webpack_require__(94)
    , Iterators      = __webpack_require__(218)
    , $iterCreate    = __webpack_require__(219)
    , setToStringTag = __webpack_require__(113)
    , getPrototypeOf = __webpack_require__(148)
    , ITERATOR       = __webpack_require__(114)('iterator')
    , BUGGY          = !([].keys && 'next' in [].keys()) // Safari has buggy iterators w/o `next`
    , FF_ITERATOR    = '@@iterator'
    , KEYS           = 'keys'
    , VALUES         = 'values';

  var returnThis = function(){ return this; };

  module.exports = function(Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED){
    $iterCreate(Constructor, NAME, next);
    var getMethod = function(kind){
      if(!BUGGY && kind in proto)return proto[kind];
      switch(kind){
        case KEYS: return function keys(){ return new Constructor(this, kind); };
        case VALUES: return function values(){ return new Constructor(this, kind); };
      } return function entries(){ return new Constructor(this, kind); };
    };
    var TAG        = NAME + ' Iterator'
      , DEF_VALUES = DEFAULT == VALUES
      , VALUES_BUG = false
      , proto      = Base.prototype
      , $native    = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT]
      , $default   = $native || getMethod(DEFAULT)
      , $entries   = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined
      , $anyNative = NAME == 'Array' ? proto.entries || $native : $native
      , methods, key, IteratorPrototype;
    // Fix native
    if($anyNative){
      IteratorPrototype = getPrototypeOf($anyNative.call(new Base));
      if(IteratorPrototype !== Object.prototype){
        // Set @@toStringTag to native iterators
        setToStringTag(IteratorPrototype, TAG, true);
        // fix for some old engines
        if(!LIBRARY && !has(IteratorPrototype, ITERATOR))hide(IteratorPrototype, ITERATOR, returnThis);
      }
    }
    // fix Array#{values, @@iterator}.name in V8 / FF
    if(DEF_VALUES && $native && $native.name !== VALUES){
      VALUES_BUG = true;
      $default = function values(){ return $native.call(this); };
    }
    // Define iterator
    if((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])){
      hide(proto, ITERATOR, $default);
    }
    // Plug for library
    Iterators[NAME] = $default;
    Iterators[TAG]  = returnThis;
    if(DEFAULT){
      methods = {
        values:  DEF_VALUES ? $default : getMethod(VALUES),
        keys:    IS_SET     ? $default : getMethod(KEYS),
        entries: $entries
      };
      if(FORCED)for(key in methods){
        if(!(key in proto))redefine(proto, key, methods[key]);
      } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);
    }
    return methods;
  };

/***/ },
/* 218 */
/***/ function(module, exports) {

  module.exports = {};

/***/ },
/* 219 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';
  var create         = __webpack_require__(135)
    , descriptor     = __webpack_require__(106)
    , setToStringTag = __webpack_require__(113)
    , IteratorPrototype = {};

  // 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
  __webpack_require__(99)(IteratorPrototype, __webpack_require__(114)('iterator'), function(){ return this; });

  module.exports = function(Constructor, NAME, next){
    Constructor.prototype = create(IteratorPrototype, {next: descriptor(1, next)});
    setToStringTag(Constructor, NAME + ' Iterator');
  };

/***/ },
/* 220 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';
  var $export = __webpack_require__(97)
    , $at     = __webpack_require__(216)(false);
  $export($export.P, 'String', {
    // 21.1.3.3 String.prototype.codePointAt(pos)
    codePointAt: function codePointAt(pos){
      return $at(this, pos);
    }
  });

/***/ },
/* 221 */
/***/ function(module, exports, __webpack_require__) {

  // 21.1.3.6 String.prototype.endsWith(searchString [, endPosition])
  'use strict';
  var $export   = __webpack_require__(97)
    , toLength  = __webpack_require__(126)
    , context   = __webpack_require__(222)
    , ENDS_WITH = 'endsWith'
    , $endsWith = ''[ENDS_WITH];

  $export($export.P + $export.F * __webpack_require__(224)(ENDS_WITH), 'String', {
    endsWith: function endsWith(searchString /*, endPosition = @length */){
      var that = context(this, searchString, ENDS_WITH)
        , endPosition = arguments.length > 1 ? arguments[1] : undefined
        , len    = toLength(that.length)
        , end    = endPosition === undefined ? len : Math.min(toLength(endPosition), len)
        , search = String(searchString);
      return $endsWith
        ? $endsWith.call(that, search, end)
        : that.slice(end - search.length, end) === search;
    }
  });

/***/ },
/* 222 */
/***/ function(module, exports, __webpack_require__) {

  // helper for String#{startsWith, endsWith, includes}
  var isRegExp = __webpack_require__(223)
    , defined  = __webpack_require__(124);

  module.exports = function(that, searchString, NAME){
    if(isRegExp(searchString))throw TypeError('String#' + NAME + " doesn't accept regex!");
    return String(defined(that));
  };

/***/ },
/* 223 */
/***/ function(module, exports, __webpack_require__) {

  // 7.2.8 IsRegExp(argument)
  var isObject = __webpack_require__(102)
    , cof      = __webpack_require__(123)
    , MATCH    = __webpack_require__(114)('match');
  module.exports = function(it){
    var isRegExp;
    return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : cof(it) == 'RegExp');
  };

/***/ },
/* 224 */
/***/ function(module, exports, __webpack_require__) {

  var MATCH = __webpack_require__(114)('match');
  module.exports = function(KEY){
    var re = /./;
    try {
      '/./'[KEY](re);
    } catch(e){
      try {
        re[MATCH] = false;
        return !'/./'[KEY](re);
      } catch(f){ /* empty */ }
    } return true;
  };

/***/ },
/* 225 */
/***/ function(module, exports, __webpack_require__) {

  // 21.1.3.7 String.prototype.includes(searchString, position = 0)
  'use strict';
  var $export  = __webpack_require__(97)
    , context  = __webpack_require__(222)
    , INCLUDES = 'includes';

  $export($export.P + $export.F * __webpack_require__(224)(INCLUDES), 'String', {
    includes: function includes(searchString /*, position = 0 */){
      return !!~context(this, searchString, INCLUDES)
        .indexOf(searchString, arguments.length > 1 ? arguments[1] : undefined);
    }
  });

/***/ },
/* 226 */
/***/ function(module, exports, __webpack_require__) {

  var $export = __webpack_require__(97);

  $export($export.P, 'String', {
    // 21.1.3.13 String.prototype.repeat(count)
    repeat: __webpack_require__(180)
  });

/***/ },
/* 227 */
/***/ function(module, exports, __webpack_require__) {

  // 21.1.3.18 String.prototype.startsWith(searchString [, position ])
  'use strict';
  var $export     = __webpack_require__(97)
    , toLength    = __webpack_require__(126)
    , context     = __webpack_require__(222)
    , STARTS_WITH = 'startsWith'
    , $startsWith = ''[STARTS_WITH];

  $export($export.P + $export.F * __webpack_require__(224)(STARTS_WITH), 'String', {
    startsWith: function startsWith(searchString /*, position = 0 */){
      var that   = context(this, searchString, STARTS_WITH)
        , index  = toLength(Math.min(arguments.length > 1 ? arguments[1] : undefined, that.length))
        , search = String(searchString);
      return $startsWith
        ? $startsWith.call(that, search, index)
        : that.slice(index, index + search.length) === search;
    }
  });

/***/ },
/* 228 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';
  // B.2.3.2 String.prototype.anchor(name)
  __webpack_require__(229)('anchor', function(createHTML){
    return function anchor(name){
      return createHTML(this, 'a', 'name', name);
    }
  });

/***/ },
/* 229 */
/***/ function(module, exports, __webpack_require__) {

  var $export = __webpack_require__(97)
    , fails   = __webpack_require__(96)
    , defined = __webpack_require__(124)
    , quot    = /"/g;
  // B.2.3.2.1 CreateHTML(string, tag, attribute, value)
  var createHTML = function(string, tag, attribute, value) {
    var S  = String(defined(string))
      , p1 = '<' + tag;
    if(attribute !== '')p1 += ' ' + attribute + '="' + String(value).replace(quot, '&quot;') + '"';
    return p1 + '>' + S + '</' + tag + '>';
  };
  module.exports = function(NAME, exec){
    var O = {};
    O[NAME] = exec(createHTML);
    $export($export.P + $export.F * fails(function(){
      var test = ''[NAME]('"');
      return test !== test.toLowerCase() || test.split('"').length > 3;
    }), 'String', O);
  };

/***/ },
/* 230 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';
  // B.2.3.3 String.prototype.big()
  __webpack_require__(229)('big', function(createHTML){
    return function big(){
      return createHTML(this, 'big', '', '');
    }
  });

/***/ },
/* 231 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';
  // B.2.3.4 String.prototype.blink()
  __webpack_require__(229)('blink', function(createHTML){
    return function blink(){
      return createHTML(this, 'blink', '', '');
    }
  });

/***/ },
/* 232 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';
  // B.2.3.5 String.prototype.bold()
  __webpack_require__(229)('bold', function(createHTML){
    return function bold(){
      return createHTML(this, 'b', '', '');
    }
  });

/***/ },
/* 233 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';
  // B.2.3.6 String.prototype.fixed()
  __webpack_require__(229)('fixed', function(createHTML){
    return function fixed(){
      return createHTML(this, 'tt', '', '');
    }
  });

/***/ },
/* 234 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';
  // B.2.3.7 String.prototype.fontcolor(color)
  __webpack_require__(229)('fontcolor', function(createHTML){
    return function fontcolor(color){
      return createHTML(this, 'font', 'color', color);
    }
  });

/***/ },
/* 235 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';
  // B.2.3.8 String.prototype.fontsize(size)
  __webpack_require__(229)('fontsize', function(createHTML){
    return function fontsize(size){
      return createHTML(this, 'font', 'size', size);
    }
  });

/***/ },
/* 236 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';
  // B.2.3.9 String.prototype.italics()
  __webpack_require__(229)('italics', function(createHTML){
    return function italics(){
      return createHTML(this, 'i', '', '');
    }
  });

/***/ },
/* 237 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';
  // B.2.3.10 String.prototype.link(url)
  __webpack_require__(229)('link', function(createHTML){
    return function link(url){
      return createHTML(this, 'a', 'href', url);
    }
  });

/***/ },
/* 238 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';
  // B.2.3.11 String.prototype.small()
  __webpack_require__(229)('small', function(createHTML){
    return function small(){
      return createHTML(this, 'small', '', '');
    }
  });

/***/ },
/* 239 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';
  // B.2.3.12 String.prototype.strike()
  __webpack_require__(229)('strike', function(createHTML){
    return function strike(){
      return createHTML(this, 'strike', '', '');
    }
  });

/***/ },
/* 240 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';
  // B.2.3.13 String.prototype.sub()
  __webpack_require__(229)('sub', function(createHTML){
    return function sub(){
      return createHTML(this, 'sub', '', '');
    }
  });

/***/ },
/* 241 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';
  // B.2.3.14 String.prototype.sup()
  __webpack_require__(229)('sup', function(createHTML){
    return function sup(){
      return createHTML(this, 'sup', '', '');
    }
  });

/***/ },
/* 242 */
/***/ function(module, exports, __webpack_require__) {

  // 20.3.3.1 / 15.9.4.4 Date.now()
  var $export = __webpack_require__(97);

  $export($export.S, 'Date', {now: function(){ return new Date().getTime(); }});

/***/ },
/* 243 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';
  var $export     = __webpack_require__(97)
    , toObject    = __webpack_require__(147)
    , toPrimitive = __webpack_require__(105);

  $export($export.P + $export.F * __webpack_require__(96)(function(){
    return new Date(NaN).toJSON() !== null || Date.prototype.toJSON.call({toISOString: function(){ return 1; }}) !== 1;
  }), 'Date', {
    toJSON: function toJSON(key){
      var O  = toObject(this)
        , pv = toPrimitive(O);
      return typeof pv == 'number' && !isFinite(pv) ? null : O.toISOString();
    }
  });

/***/ },
/* 244 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';
  // 20.3.4.36 / 15.9.5.43 Date.prototype.toISOString()
  var $export = __webpack_require__(97)
    , fails   = __webpack_require__(96)
    , getTime = Date.prototype.getTime;

  var lz = function(num){
    return num > 9 ? num : '0' + num;
  };

  // PhantomJS / old WebKit has a broken implementations
  $export($export.P + $export.F * (fails(function(){
    return new Date(-5e13 - 1).toISOString() != '0385-07-25T07:06:39.999Z';
  }) || !fails(function(){
    new Date(NaN).toISOString();
  })), 'Date', {
    toISOString: function toISOString(){
      if(!isFinite(getTime.call(this)))throw RangeError('Invalid time value');
      var d = this
        , y = d.getUTCFullYear()
        , m = d.getUTCMilliseconds()
        , s = y < 0 ? '-' : y > 9999 ? '+' : '';
      return s + ('00000' + Math.abs(y)).slice(s ? -6 : -4) +
        '-' + lz(d.getUTCMonth() + 1) + '-' + lz(d.getUTCDate()) +
        'T' + lz(d.getUTCHours()) + ':' + lz(d.getUTCMinutes()) +
        ':' + lz(d.getUTCSeconds()) + '.' + (m > 99 ? m : '0' + lz(m)) + 'Z';
    }
  });

/***/ },
/* 245 */
/***/ function(module, exports, __webpack_require__) {

  var DateProto    = Date.prototype
    , INVALID_DATE = 'Invalid Date'
    , TO_STRING    = 'toString'
    , $toString    = DateProto[TO_STRING]
    , getTime      = DateProto.getTime;
  if(new Date(NaN) + '' != INVALID_DATE){
    __webpack_require__(107)(DateProto, TO_STRING, function toString(){
      var value = getTime.call(this);
      return value === value ? $toString.call(this) : INVALID_DATE;
    });
  }

/***/ },
/* 246 */
/***/ function(module, exports, __webpack_require__) {

  var TO_PRIMITIVE = __webpack_require__(114)('toPrimitive')
    , proto        = Date.prototype;

  if(!(TO_PRIMITIVE in proto))__webpack_require__(99)(proto, TO_PRIMITIVE, __webpack_require__(247));

/***/ },
/* 247 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';
  var anObject    = __webpack_require__(101)
    , toPrimitive = __webpack_require__(105)
    , NUMBER      = 'number';

  module.exports = function(hint){
    if(hint !== 'string' && hint !== NUMBER && hint !== 'default')throw TypeError('Incorrect hint');
    return toPrimitive(anObject(this), hint != NUMBER);
  };

/***/ },
/* 248 */
/***/ function(module, exports, __webpack_require__) {

  // 22.1.2.2 / 15.4.3.2 Array.isArray(arg)
  var $export = __webpack_require__(97);

  $export($export.S, 'Array', {isArray: __webpack_require__(134)});

/***/ },
/* 249 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';
  var ctx            = __webpack_require__(109)
    , $export        = __webpack_require__(97)
    , toObject       = __webpack_require__(147)
    , call           = __webpack_require__(250)
    , isArrayIter    = __webpack_require__(251)
    , toLength       = __webpack_require__(126)
    , createProperty = __webpack_require__(252)
    , getIterFn      = __webpack_require__(253);

  $export($export.S + $export.F * !__webpack_require__(254)(function(iter){ Array.from(iter); }), 'Array', {
    // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)
    from: function from(arrayLike/*, mapfn = undefined, thisArg = undefined*/){
      var O       = toObject(arrayLike)
        , C       = typeof this == 'function' ? this : Array
        , aLen    = arguments.length
        , mapfn   = aLen > 1 ? arguments[1] : undefined
        , mapping = mapfn !== undefined
        , index   = 0
        , iterFn  = getIterFn(O)
        , length, result, step, iterator;
      if(mapping)mapfn = ctx(mapfn, aLen > 2 ? arguments[2] : undefined, 2);
      // if object isn't iterable or it's array with default iterator - use simple case
      if(iterFn != undefined && !(C == Array && isArrayIter(iterFn))){
        for(iterator = iterFn.call(O), result = new C; !(step = iterator.next()).done; index++){
          createProperty(result, index, mapping ? call(iterator, mapfn, [step.value, index], true) : step.value);
        }
      } else {
        length = toLength(O.length);
        for(result = new C(length); length > index; index++){
          createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);
        }
      }
      result.length = index;
      return result;
    }
  });


/***/ },
/* 250 */
/***/ function(module, exports, __webpack_require__) {

  // call something on iterator step with safe closing on error
  var anObject = __webpack_require__(101);
  module.exports = function(iterator, fn, value, entries){
    try {
      return entries ? fn(anObject(value)[0], value[1]) : fn(value);
    // 7.4.6 IteratorClose(iterator, completion)
    } catch(e){
      var ret = iterator['return'];
      if(ret !== undefined)anObject(ret.call(iterator));
      throw e;
    }
  };

/***/ },
/* 251 */
/***/ function(module, exports, __webpack_require__) {

  // check on default Array iterator
  var Iterators  = __webpack_require__(218)
    , ITERATOR   = __webpack_require__(114)('iterator')
    , ArrayProto = Array.prototype;

  module.exports = function(it){
    return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);
  };

/***/ },
/* 252 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';
  var $defineProperty = __webpack_require__(100)
    , createDesc      = __webpack_require__(106);

  module.exports = function(object, index, value){
    if(index in object)$defineProperty.f(object, index, createDesc(0, value));
    else object[index] = value;
  };

/***/ },
/* 253 */
/***/ function(module, exports, __webpack_require__) {

  var classof   = __webpack_require__(164)
    , ITERATOR  = __webpack_require__(114)('iterator')
    , Iterators = __webpack_require__(218);
  module.exports = __webpack_require__(98).getIteratorMethod = function(it){
    if(it != undefined)return it[ITERATOR]
      || it['@@iterator']
      || Iterators[classof(it)];
  };

/***/ },
/* 254 */
/***/ function(module, exports, __webpack_require__) {

  var ITERATOR     = __webpack_require__(114)('iterator')
    , SAFE_CLOSING = false;

  try {
    var riter = [7][ITERATOR]();
    riter['return'] = function(){ SAFE_CLOSING = true; };
    Array.from(riter, function(){ throw 2; });
  } catch(e){ /* empty */ }

  module.exports = function(exec, skipClosing){
    if(!skipClosing && !SAFE_CLOSING)return false;
    var safe = false;
    try {
      var arr  = [7]
        , iter = arr[ITERATOR]();
      iter.next = function(){ return {done: safe = true}; };
      arr[ITERATOR] = function(){ return iter; };
      exec(arr);
    } catch(e){ /* empty */ }
    return safe;
  };

/***/ },
/* 255 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';
  var $export        = __webpack_require__(97)
    , createProperty = __webpack_require__(252);

  // WebKit Array.of isn't generic
  $export($export.S + $export.F * __webpack_require__(96)(function(){
    function F(){}
    return !(Array.of.call(F) instanceof F);
  }), 'Array', {
    // 22.1.2.3 Array.of( ...items)
    of: function of(/* ...args */){
      var index  = 0
        , aLen   = arguments.length
        , result = new (typeof this == 'function' ? this : Array)(aLen);
      while(aLen > index)createProperty(result, index, arguments[index++]);
      result.length = aLen;
      return result;
    }
  });

/***/ },
/* 256 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';
  // 22.1.3.13 Array.prototype.join(separator)
  var $export   = __webpack_require__(97)
    , toIObject = __webpack_require__(121)
    , arrayJoin = [].join;

  // fallback for not array-like strings
  $export($export.P + $export.F * (__webpack_require__(122) != Object || !__webpack_require__(257)(arrayJoin)), 'Array', {
    join: function join(separator){
      return arrayJoin.call(toIObject(this), separator === undefined ? ',' : separator);
    }
  });

/***/ },
/* 257 */
/***/ function(module, exports, __webpack_require__) {

  var fails = __webpack_require__(96);

  module.exports = function(method, arg){
    return !!method && fails(function(){
      arg ? method.call(null, function(){}, 1) : method.call(null);
    });
  };

/***/ },
/* 258 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';
  var $export    = __webpack_require__(97)
    , html       = __webpack_require__(137)
    , cof        = __webpack_require__(123)
    , toIndex    = __webpack_require__(128)
    , toLength   = __webpack_require__(126)
    , arraySlice = [].slice;

  // fallback for not array-like ES3 strings and DOM objects
  $export($export.P + $export.F * __webpack_require__(96)(function(){
    if(html)arraySlice.call(html);
  }), 'Array', {
    slice: function slice(begin, end){
      var len   = toLength(this.length)
        , klass = cof(this);
      end = end === undefined ? len : end;
      if(klass == 'Array')return arraySlice.call(this, begin, end);
      var start  = toIndex(begin, len)
        , upTo   = toIndex(end, len)
        , size   = toLength(upTo - start)
        , cloned = Array(size)
        , i      = 0;
      for(; i < size; i++)cloned[i] = klass == 'String'
        ? this.charAt(start + i)
        : this[start + i];
      return cloned;
    }
  });

/***/ },
/* 259 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';
  var $export   = __webpack_require__(97)
    , aFunction = __webpack_require__(110)
    , toObject  = __webpack_require__(147)
    , fails     = __webpack_require__(96)
    , $sort     = [].sort
    , test      = [1, 2, 3];

  $export($export.P + $export.F * (fails(function(){
    // IE8-
    test.sort(undefined);
  }) || !fails(function(){
    // V8 bug
    test.sort(null);
    // Old WebKit
  }) || !__webpack_require__(257)($sort)), 'Array', {
    // 22.1.3.25 Array.prototype.sort(comparefn)
    sort: function sort(comparefn){
      return comparefn === undefined
        ? $sort.call(toObject(this))
        : $sort.call(toObject(this), aFunction(comparefn));
    }
  });

/***/ },
/* 260 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';
  var $export  = __webpack_require__(97)
    , $forEach = __webpack_require__(261)(0)
    , STRICT   = __webpack_require__(257)([].forEach, true);

  $export($export.P + $export.F * !STRICT, 'Array', {
    // 22.1.3.10 / 15.4.4.18 Array.prototype.forEach(callbackfn [, thisArg])
    forEach: function forEach(callbackfn /* , thisArg */){
      return $forEach(this, callbackfn, arguments[1]);
    }
  });

/***/ },
/* 261 */
/***/ function(module, exports, __webpack_require__) {

  // 0 -> Array#forEach
  // 1 -> Array#map
  // 2 -> Array#filter
  // 3 -> Array#some
  // 4 -> Array#every
  // 5 -> Array#find
  // 6 -> Array#findIndex
  var ctx      = __webpack_require__(109)
    , IObject  = __webpack_require__(122)
    , toObject = __webpack_require__(147)
    , toLength = __webpack_require__(126)
    , asc      = __webpack_require__(262);
  module.exports = function(TYPE, $create){
    var IS_MAP        = TYPE == 1
      , IS_FILTER     = TYPE == 2
      , IS_SOME       = TYPE == 3
      , IS_EVERY      = TYPE == 4
      , IS_FIND_INDEX = TYPE == 6
      , NO_HOLES      = TYPE == 5 || IS_FIND_INDEX
      , create        = $create || asc;
    return function($this, callbackfn, that){
      var O      = toObject($this)
        , self   = IObject(O)
        , f      = ctx(callbackfn, that, 3)
        , length = toLength(self.length)
        , index  = 0
        , result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined
        , val, res;
      for(;length > index; index++)if(NO_HOLES || index in self){
        val = self[index];
        res = f(val, index, O);
        if(TYPE){
          if(IS_MAP)result[index] = res;            // map
          else if(res)switch(TYPE){
            case 3: return true;                    // some
            case 5: return val;                     // find
            case 6: return index;                   // findIndex
            case 2: result.push(val);               // filter
          } else if(IS_EVERY)return false;          // every
        }
      }
      return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;
    };
  };

/***/ },
/* 262 */
/***/ function(module, exports, __webpack_require__) {

  // 9.4.2.3 ArraySpeciesCreate(originalArray, length)
  var speciesConstructor = __webpack_require__(263);

  module.exports = function(original, length){
    return new (speciesConstructor(original))(length);
  };

/***/ },
/* 263 */
/***/ function(module, exports, __webpack_require__) {

  var isObject = __webpack_require__(102)
    , isArray  = __webpack_require__(134)
    , SPECIES  = __webpack_require__(114)('species');

  module.exports = function(original){
    var C;
    if(isArray(original)){
      C = original.constructor;
      // cross-realm fallback
      if(typeof C == 'function' && (C === Array || isArray(C.prototype)))C = undefined;
      if(isObject(C)){
        C = C[SPECIES];
        if(C === null)C = undefined;
      }
    } return C === undefined ? Array : C;
  };

/***/ },
/* 264 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';
  var $export = __webpack_require__(97)
    , $map    = __webpack_require__(261)(1);

  $export($export.P + $export.F * !__webpack_require__(257)([].map, true), 'Array', {
    // 22.1.3.15 / 15.4.4.19 Array.prototype.map(callbackfn [, thisArg])
    map: function map(callbackfn /* , thisArg */){
      return $map(this, callbackfn, arguments[1]);
    }
  });

/***/ },
/* 265 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';
  var $export = __webpack_require__(97)
    , $filter = __webpack_require__(261)(2);

  $export($export.P + $export.F * !__webpack_require__(257)([].filter, true), 'Array', {
    // 22.1.3.7 / 15.4.4.20 Array.prototype.filter(callbackfn [, thisArg])
    filter: function filter(callbackfn /* , thisArg */){
      return $filter(this, callbackfn, arguments[1]);
    }
  });

/***/ },
/* 266 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';
  var $export = __webpack_require__(97)
    , $some   = __webpack_require__(261)(3);

  $export($export.P + $export.F * !__webpack_require__(257)([].some, true), 'Array', {
    // 22.1.3.23 / 15.4.4.17 Array.prototype.some(callbackfn [, thisArg])
    some: function some(callbackfn /* , thisArg */){
      return $some(this, callbackfn, arguments[1]);
    }
  });

/***/ },
/* 267 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';
  var $export = __webpack_require__(97)
    , $every  = __webpack_require__(261)(4);

  $export($export.P + $export.F * !__webpack_require__(257)([].every, true), 'Array', {
    // 22.1.3.5 / 15.4.4.16 Array.prototype.every(callbackfn [, thisArg])
    every: function every(callbackfn /* , thisArg */){
      return $every(this, callbackfn, arguments[1]);
    }
  });

/***/ },
/* 268 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';
  var $export = __webpack_require__(97)
    , $reduce = __webpack_require__(269);

  $export($export.P + $export.F * !__webpack_require__(257)([].reduce, true), 'Array', {
    // 22.1.3.18 / 15.4.4.21 Array.prototype.reduce(callbackfn [, initialValue])
    reduce: function reduce(callbackfn /* , initialValue */){
      return $reduce(this, callbackfn, arguments.length, arguments[1], false);
    }
  });

/***/ },
/* 269 */
/***/ function(module, exports, __webpack_require__) {

  var aFunction = __webpack_require__(110)
    , toObject  = __webpack_require__(147)
    , IObject   = __webpack_require__(122)
    , toLength  = __webpack_require__(126);

  module.exports = function(that, callbackfn, aLen, memo, isRight){
    aFunction(callbackfn);
    var O      = toObject(that)
      , self   = IObject(O)
      , length = toLength(O.length)
      , index  = isRight ? length - 1 : 0
      , i      = isRight ? -1 : 1;
    if(aLen < 2)for(;;){
      if(index in self){
        memo = self[index];
        index += i;
        break;
      }
      index += i;
      if(isRight ? index < 0 : length <= index){
        throw TypeError('Reduce of empty array with no initial value');
      }
    }
    for(;isRight ? index >= 0 : length > index; index += i)if(index in self){
      memo = callbackfn(memo, self[index], index, O);
    }
    return memo;
  };

/***/ },
/* 270 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';
  var $export = __webpack_require__(97)
    , $reduce = __webpack_require__(269);

  $export($export.P + $export.F * !__webpack_require__(257)([].reduceRight, true), 'Array', {
    // 22.1.3.19 / 15.4.4.22 Array.prototype.reduceRight(callbackfn [, initialValue])
    reduceRight: function reduceRight(callbackfn /* , initialValue */){
      return $reduce(this, callbackfn, arguments.length, arguments[1], true);
    }
  });

/***/ },
/* 271 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';
  var $export       = __webpack_require__(97)
    , $indexOf      = __webpack_require__(125)(false)
    , $native       = [].indexOf
    , NEGATIVE_ZERO = !!$native && 1 / [1].indexOf(1, -0) < 0;

  $export($export.P + $export.F * (NEGATIVE_ZERO || !__webpack_require__(257)($native)), 'Array', {
    // 22.1.3.11 / 15.4.4.14 Array.prototype.indexOf(searchElement [, fromIndex])
    indexOf: function indexOf(searchElement /*, fromIndex = 0 */){
      return NEGATIVE_ZERO
        // convert -0 to +0
        ? $native.apply(this, arguments) || 0
        : $indexOf(this, searchElement, arguments[1]);
    }
  });

/***/ },
/* 272 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';
  var $export       = __webpack_require__(97)
    , toIObject     = __webpack_require__(121)
    , toInteger     = __webpack_require__(127)
    , toLength      = __webpack_require__(126)
    , $native       = [].lastIndexOf
    , NEGATIVE_ZERO = !!$native && 1 / [1].lastIndexOf(1, -0) < 0;

  $export($export.P + $export.F * (NEGATIVE_ZERO || !__webpack_require__(257)($native)), 'Array', {
    // 22.1.3.14 / 15.4.4.15 Array.prototype.lastIndexOf(searchElement [, fromIndex])
    lastIndexOf: function lastIndexOf(searchElement /*, fromIndex = @[*-1] */){
      // convert -0 to +0
      if(NEGATIVE_ZERO)return $native.apply(this, arguments) || 0;
      var O      = toIObject(this)
        , length = toLength(O.length)
        , index  = length - 1;
      if(arguments.length > 1)index = Math.min(index, toInteger(arguments[1]));
      if(index < 0)index = length + index;
      for(;index >= 0; index--)if(index in O)if(O[index] === searchElement)return index || 0;
      return -1;
    }
  });

/***/ },
/* 273 */
/***/ function(module, exports, __webpack_require__) {

  // 22.1.3.3 Array.prototype.copyWithin(target, start, end = this.length)
  var $export = __webpack_require__(97);

  $export($export.P, 'Array', {copyWithin: __webpack_require__(274)});

  __webpack_require__(275)('copyWithin');

/***/ },
/* 274 */
/***/ function(module, exports, __webpack_require__) {

  // 22.1.3.3 Array.prototype.copyWithin(target, start, end = this.length)
  'use strict';
  var toObject = __webpack_require__(147)
    , toIndex  = __webpack_require__(128)
    , toLength = __webpack_require__(126);

  module.exports = [].copyWithin || function copyWithin(target/*= 0*/, start/*= 0, end = @length*/){
    var O     = toObject(this)
      , len   = toLength(O.length)
      , to    = toIndex(target, len)
      , from  = toIndex(start, len)
      , end   = arguments.length > 2 ? arguments[2] : undefined
      , count = Math.min((end === undefined ? len : toIndex(end, len)) - from, len - to)
      , inc   = 1;
    if(from < to && to < from + count){
      inc  = -1;
      from += count - 1;
      to   += count - 1;
    }
    while(count-- > 0){
      if(from in O)O[to] = O[from];
      else delete O[to];
      to   += inc;
      from += inc;
    } return O;
  };

/***/ },
/* 275 */
/***/ function(module, exports, __webpack_require__) {

  // 22.1.3.31 Array.prototype[@@unscopables]
  var UNSCOPABLES = __webpack_require__(114)('unscopables')
    , ArrayProto  = Array.prototype;
  if(ArrayProto[UNSCOPABLES] == undefined)__webpack_require__(99)(ArrayProto, UNSCOPABLES, {});
  module.exports = function(key){
    ArrayProto[UNSCOPABLES][key] = true;
  };

/***/ },
/* 276 */
/***/ function(module, exports, __webpack_require__) {

  // 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)
  var $export = __webpack_require__(97);

  $export($export.P, 'Array', {fill: __webpack_require__(277)});

  __webpack_require__(275)('fill');

/***/ },
/* 277 */
/***/ function(module, exports, __webpack_require__) {

  // 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)
  'use strict';
  var toObject = __webpack_require__(147)
    , toIndex  = __webpack_require__(128)
    , toLength = __webpack_require__(126);
  module.exports = function fill(value /*, start = 0, end = @length */){
    var O      = toObject(this)
      , length = toLength(O.length)
      , aLen   = arguments.length
      , index  = toIndex(aLen > 1 ? arguments[1] : undefined, length)
      , end    = aLen > 2 ? arguments[2] : undefined
      , endPos = end === undefined ? length : toIndex(end, length);
    while(endPos > index)O[index++] = value;
    return O;
  };

/***/ },
/* 278 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';
  // 22.1.3.8 Array.prototype.find(predicate, thisArg = undefined)
  var $export = __webpack_require__(97)
    , $find   = __webpack_require__(261)(5)
    , KEY     = 'find'
    , forced  = true;
  // Shouldn't skip holes
  if(KEY in [])Array(1)[KEY](function(){ forced = false; });
  $export($export.P + $export.F * forced, 'Array', {
    find: function find(callbackfn/*, that = undefined */){
      return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
    }
  });
  __webpack_require__(275)(KEY);

/***/ },
/* 279 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';
  // 22.1.3.9 Array.prototype.findIndex(predicate, thisArg = undefined)
  var $export = __webpack_require__(97)
    , $find   = __webpack_require__(261)(6)
    , KEY     = 'findIndex'
    , forced  = true;
  // Shouldn't skip holes
  if(KEY in [])Array(1)[KEY](function(){ forced = false; });
  $export($export.P + $export.F * forced, 'Array', {
    findIndex: function findIndex(callbackfn/*, that = undefined */){
      return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
    }
  });
  __webpack_require__(275)(KEY);

/***/ },
/* 280 */
/***/ function(module, exports, __webpack_require__) {

  __webpack_require__(281)('Array');

/***/ },
/* 281 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';
  var global      = __webpack_require__(93)
    , dP          = __webpack_require__(100)
    , DESCRIPTORS = __webpack_require__(95)
    , SPECIES     = __webpack_require__(114)('species');

  module.exports = function(KEY){
    var C = global[KEY];
    if(DESCRIPTORS && C && !C[SPECIES])dP.f(C, SPECIES, {
      configurable: true,
      get: function(){ return this; }
    });
  };

/***/ },
/* 282 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';
  var addToUnscopables = __webpack_require__(275)
    , step             = __webpack_require__(283)
    , Iterators        = __webpack_require__(218)
    , toIObject        = __webpack_require__(121);

  // 22.1.3.4 Array.prototype.entries()
  // 22.1.3.13 Array.prototype.keys()
  // 22.1.3.29 Array.prototype.values()
  // 22.1.3.30 Array.prototype[@@iterator]()
  module.exports = __webpack_require__(217)(Array, 'Array', function(iterated, kind){
    this._t = toIObject(iterated); // target
    this._i = 0;                   // next index
    this._k = kind;                // kind
  // 22.1.5.2.1 %ArrayIteratorPrototype%.next()
  }, function(){
    var O     = this._t
      , kind  = this._k
      , index = this._i++;
    if(!O || index >= O.length){
      this._t = undefined;
      return step(1);
    }
    if(kind == 'keys'  )return step(0, index);
    if(kind == 'values')return step(0, O[index]);
    return step(0, [index, O[index]]);
  }, 'values');

  // argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)
  Iterators.Arguments = Iterators.Array;

  addToUnscopables('keys');
  addToUnscopables('values');
  addToUnscopables('entries');

/***/ },
/* 283 */
/***/ function(module, exports) {

  module.exports = function(done, value){
    return {value: value, done: !!done};
  };

/***/ },
/* 284 */
/***/ function(module, exports, __webpack_require__) {

  var global            = __webpack_require__(93)
    , inheritIfRequired = __webpack_require__(177)
    , dP                = __webpack_require__(100).f
    , gOPN              = __webpack_require__(139).f
    , isRegExp          = __webpack_require__(223)
    , $flags            = __webpack_require__(285)
    , $RegExp           = global.RegExp
    , Base              = $RegExp
    , proto             = $RegExp.prototype
    , re1               = /a/g
    , re2               = /a/g
    // "new" creates a new object, old webkit buggy here
    , CORRECT_NEW       = new $RegExp(re1) !== re1;

  if(__webpack_require__(95) && (!CORRECT_NEW || __webpack_require__(96)(function(){
    re2[__webpack_require__(114)('match')] = false;
    // RegExp constructor can alter flags and IsRegExp works correct with @@match
    return $RegExp(re1) != re1 || $RegExp(re2) == re2 || $RegExp(re1, 'i') != '/a/i';
  }))){
    $RegExp = function RegExp(p, f){
      var tiRE = this instanceof $RegExp
        , piRE = isRegExp(p)
        , fiU  = f === undefined;
      return !tiRE && piRE && p.constructor === $RegExp && fiU ? p
        : inheritIfRequired(CORRECT_NEW
          ? new Base(piRE && !fiU ? p.source : p, f)
          : Base((piRE = p instanceof $RegExp) ? p.source : p, piRE && fiU ? $flags.call(p) : f)
        , tiRE ? this : proto, $RegExp);
    };
    var proxy = function(key){
      key in $RegExp || dP($RegExp, key, {
        configurable: true,
        get: function(){ return Base[key]; },
        set: function(it){ Base[key] = it; }
      });
    };
    for(var keys = gOPN(Base), i = 0; keys.length > i; )proxy(keys[i++]);
    proto.constructor = $RegExp;
    $RegExp.prototype = proto;
    __webpack_require__(107)(global, 'RegExp', $RegExp);
  }

  __webpack_require__(281)('RegExp');

/***/ },
/* 285 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';
  // 21.2.5.3 get RegExp.prototype.flags
  var anObject = __webpack_require__(101);
  module.exports = function(){
    var that   = anObject(this)
      , result = '';
    if(that.global)     result += 'g';
    if(that.ignoreCase) result += 'i';
    if(that.multiline)  result += 'm';
    if(that.unicode)    result += 'u';
    if(that.sticky)     result += 'y';
    return result;
  };

/***/ },
/* 286 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';
  __webpack_require__(287);
  var anObject    = __webpack_require__(101)
    , $flags      = __webpack_require__(285)
    , DESCRIPTORS = __webpack_require__(95)
    , TO_STRING   = 'toString'
    , $toString   = /./[TO_STRING];

  var define = function(fn){
    __webpack_require__(107)(RegExp.prototype, TO_STRING, fn, true);
  };

  // 21.2.5.14 RegExp.prototype.toString()
  if(__webpack_require__(96)(function(){ return $toString.call({source: 'a', flags: 'b'}) != '/a/b'; })){
    define(function toString(){
      var R = anObject(this);
      return '/'.concat(R.source, '/',
        'flags' in R ? R.flags : !DESCRIPTORS && R instanceof RegExp ? $flags.call(R) : undefined);
    });
  // FF44- RegExp#toString has a wrong name
  } else if($toString.name != TO_STRING){
    define(function toString(){
      return $toString.call(this);
    });
  }

/***/ },
/* 287 */
/***/ function(module, exports, __webpack_require__) {

  // 21.2.5.3 get RegExp.prototype.flags()
  if(__webpack_require__(95) && /./g.flags != 'g')__webpack_require__(100).f(RegExp.prototype, 'flags', {
    configurable: true,
    get: __webpack_require__(285)
  });

/***/ },
/* 288 */
/***/ function(module, exports, __webpack_require__) {

  // @@match logic
  __webpack_require__(289)('match', 1, function(defined, MATCH, $match){
    // 21.1.3.11 String.prototype.match(regexp)
    return [function match(regexp){
      'use strict';
      var O  = defined(this)
        , fn = regexp == undefined ? undefined : regexp[MATCH];
      return fn !== undefined ? fn.call(regexp, O) : new RegExp(regexp)[MATCH](String(O));
    }, $match];
  });

/***/ },
/* 289 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';
  var hide     = __webpack_require__(99)
    , redefine = __webpack_require__(107)
    , fails    = __webpack_require__(96)
    , defined  = __webpack_require__(124)
    , wks      = __webpack_require__(114);

  module.exports = function(KEY, length, exec){
    var SYMBOL   = wks(KEY)
      , fns      = exec(defined, SYMBOL, ''[KEY])
      , strfn    = fns[0]
      , rxfn     = fns[1];
    if(fails(function(){
      var O = {};
      O[SYMBOL] = function(){ return 7; };
      return ''[KEY](O) != 7;
    })){
      redefine(String.prototype, KEY, strfn);
      hide(RegExp.prototype, SYMBOL, length == 2
        // 21.2.5.8 RegExp.prototype[@@replace](string, replaceValue)
        // 21.2.5.11 RegExp.prototype[@@split](string, limit)
        ? function(string, arg){ return rxfn.call(string, this, arg); }
        // 21.2.5.6 RegExp.prototype[@@match](string)
        // 21.2.5.9 RegExp.prototype[@@search](string)
        : function(string){ return rxfn.call(string, this); }
      );
    }
  };

/***/ },
/* 290 */
/***/ function(module, exports, __webpack_require__) {

  // @@replace logic
  __webpack_require__(289)('replace', 2, function(defined, REPLACE, $replace){
    // 21.1.3.14 String.prototype.replace(searchValue, replaceValue)
    return [function replace(searchValue, replaceValue){
      'use strict';
      var O  = defined(this)
        , fn = searchValue == undefined ? undefined : searchValue[REPLACE];
      return fn !== undefined
        ? fn.call(searchValue, O, replaceValue)
        : $replace.call(String(O), searchValue, replaceValue);
    }, $replace];
  });

/***/ },
/* 291 */
/***/ function(module, exports, __webpack_require__) {

  // @@search logic
  __webpack_require__(289)('search', 1, function(defined, SEARCH, $search){
    // 21.1.3.15 String.prototype.search(regexp)
    return [function search(regexp){
      'use strict';
      var O  = defined(this)
        , fn = regexp == undefined ? undefined : regexp[SEARCH];
      return fn !== undefined ? fn.call(regexp, O) : new RegExp(regexp)[SEARCH](String(O));
    }, $search];
  });

/***/ },
/* 292 */
/***/ function(module, exports, __webpack_require__) {

  // @@split logic
  __webpack_require__(289)('split', 2, function(defined, SPLIT, $split){
    'use strict';
    var isRegExp   = __webpack_require__(223)
      , _split     = $split
      , $push      = [].push
      , $SPLIT     = 'split'
      , LENGTH     = 'length'
      , LAST_INDEX = 'lastIndex';
    if(
      'abbc'[$SPLIT](/(b)*/)[1] == 'c' ||
      'test'[$SPLIT](/(?:)/, -1)[LENGTH] != 4 ||
      'ab'[$SPLIT](/(?:ab)*/)[LENGTH] != 2 ||
      '.'[$SPLIT](/(.?)(.?)/)[LENGTH] != 4 ||
      '.'[$SPLIT](/()()/)[LENGTH] > 1 ||
      ''[$SPLIT](/.?/)[LENGTH]
    ){
      var NPCG = /()??/.exec('')[1] === undefined; // nonparticipating capturing group
      // based on es5-shim implementation, need to rework it
      $split = function(separator, limit){
        var string = String(this);
        if(separator === undefined && limit === 0)return [];
        // If `separator` is not a regex, use native split
        if(!isRegExp(separator))return _split.call(string, separator, limit);
        var output = [];
        var flags = (separator.ignoreCase ? 'i' : '') +
                    (separator.multiline ? 'm' : '') +
                    (separator.unicode ? 'u' : '') +
                    (separator.sticky ? 'y' : '');
        var lastLastIndex = 0;
        var splitLimit = limit === undefined ? 4294967295 : limit >>> 0;
        // Make `global` and avoid `lastIndex` issues by working with a copy
        var separatorCopy = new RegExp(separator.source, flags + 'g');
        var separator2, match, lastIndex, lastLength, i;
        // Doesn't need flags gy, but they don't hurt
        if(!NPCG)separator2 = new RegExp('^' + separatorCopy.source + '$(?!\\s)', flags);
        while(match = separatorCopy.exec(string)){
          // `separatorCopy.lastIndex` is not reliable cross-browser
          lastIndex = match.index + match[0][LENGTH];
          if(lastIndex > lastLastIndex){
            output.push(string.slice(lastLastIndex, match.index));
            // Fix browsers whose `exec` methods don't consistently return `undefined` for NPCG
            if(!NPCG && match[LENGTH] > 1)match[0].replace(separator2, function(){
              for(i = 1; i < arguments[LENGTH] - 2; i++)if(arguments[i] === undefined)match[i] = undefined;
            });
            if(match[LENGTH] > 1 && match.index < string[LENGTH])$push.apply(output, match.slice(1));
            lastLength = match[0][LENGTH];
            lastLastIndex = lastIndex;
            if(output[LENGTH] >= splitLimit)break;
          }
          if(separatorCopy[LAST_INDEX] === match.index)separatorCopy[LAST_INDEX]++; // Avoid an infinite loop
        }
        if(lastLastIndex === string[LENGTH]){
          if(lastLength || !separatorCopy.test(''))output.push('');
        } else output.push(string.slice(lastLastIndex));
        return output[LENGTH] > splitLimit ? output.slice(0, splitLimit) : output;
      };
    // Chakra, V8
    } else if('0'[$SPLIT](undefined, 0)[LENGTH]){
      $split = function(separator, limit){
        return separator === undefined && limit === 0 ? [] : _split.call(this, separator, limit);
      };
    }
    // 21.1.3.17 String.prototype.split(separator, limit)
    return [function split(separator, limit){
      var O  = defined(this)
        , fn = separator == undefined ? undefined : separator[SPLIT];
      return fn !== undefined ? fn.call(separator, O, limit) : $split.call(String(O), separator, limit);
    }, $split];
  });

/***/ },
/* 293 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';
  var LIBRARY            = __webpack_require__(117)
    , global             = __webpack_require__(93)
    , ctx                = __webpack_require__(109)
    , classof            = __webpack_require__(164)
    , $export            = __webpack_require__(97)
    , isObject           = __webpack_require__(102)
    , aFunction          = __webpack_require__(110)
    , anInstance         = __webpack_require__(294)
    , forOf              = __webpack_require__(295)
    , speciesConstructor = __webpack_require__(296)
    , task               = __webpack_require__(297).set
    , microtask          = __webpack_require__(298)()
    , PROMISE            = 'Promise'
    , TypeError          = global.TypeError
    , process            = global.process
    , $Promise           = global[PROMISE]
    , process            = global.process
    , isNode             = classof(process) == 'process'
    , empty              = function(){ /* empty */ }
    , Internal, GenericPromiseCapability, Wrapper;

  var USE_NATIVE = !!function(){
    try {
      // correct subclassing with @@species support
      var promise     = $Promise.resolve(1)
        , FakePromise = (promise.constructor = {})[__webpack_require__(114)('species')] = function(exec){ exec(empty, empty); };
      // unhandled rejections tracking support, NodeJS Promise without it fails @@species test
      return (isNode || typeof PromiseRejectionEvent == 'function') && promise.then(empty) instanceof FakePromise;
    } catch(e){ /* empty */ }
  }();

  // helpers
  var sameConstructor = function(a, b){
    // with library wrapper special case
    return a === b || a === $Promise && b === Wrapper;
  };
  var isThenable = function(it){
    var then;
    return isObject(it) && typeof (then = it.then) == 'function' ? then : false;
  };
  var newPromiseCapability = function(C){
    return sameConstructor($Promise, C)
      ? new PromiseCapability(C)
      : new GenericPromiseCapability(C);
  };
  var PromiseCapability = GenericPromiseCapability = function(C){
    var resolve, reject;
    this.promise = new C(function($$resolve, $$reject){
      if(resolve !== undefined || reject !== undefined)throw TypeError('Bad Promise constructor');
      resolve = $$resolve;
      reject  = $$reject;
    });
    this.resolve = aFunction(resolve);
    this.reject  = aFunction(reject);
  };
  var perform = function(exec){
    try {
      exec();
    } catch(e){
      return {error: e};
    }
  };
  var notify = function(promise, isReject){
    if(promise._n)return;
    promise._n = true;
    var chain = promise._c;
    microtask(function(){
      var value = promise._v
        , ok    = promise._s == 1
        , i     = 0;
      var run = function(reaction){
        var handler = ok ? reaction.ok : reaction.fail
          , resolve = reaction.resolve
          , reject  = reaction.reject
          , domain  = reaction.domain
          , result, then;
        try {
          if(handler){
            if(!ok){
              if(promise._h == 2)onHandleUnhandled(promise);
              promise._h = 1;
            }
            if(handler === true)result = value;
            else {
              if(domain)domain.enter();
              result = handler(value);
              if(domain)domain.exit();
            }
            if(result === reaction.promise){
              reject(TypeError('Promise-chain cycle'));
            } else if(then = isThenable(result)){
              then.call(result, resolve, reject);
            } else resolve(result);
          } else reject(value);
        } catch(e){
          reject(e);
        }
      };
      while(chain.length > i)run(chain[i++]); // variable length - can't use forEach
      promise._c = [];
      promise._n = false;
      if(isReject && !promise._h)onUnhandled(promise);
    });
  };
  var onUnhandled = function(promise){
    task.call(global, function(){
      var value = promise._v
        , abrupt, handler, console;
      if(isUnhandled(promise)){
        abrupt = perform(function(){
          if(isNode){
            process.emit('unhandledRejection', value, promise);
          } else if(handler = global.onunhandledrejection){
            handler({promise: promise, reason: value});
          } else if((console = global.console) && console.error){
            console.error('Unhandled promise rejection', value);
          }
        });
        // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should
        promise._h = isNode || isUnhandled(promise) ? 2 : 1;
      } promise._a = undefined;
      if(abrupt)throw abrupt.error;
    });
  };
  var isUnhandled = function(promise){
    if(promise._h == 1)return false;
    var chain = promise._a || promise._c
      , i     = 0
      , reaction;
    while(chain.length > i){
      reaction = chain[i++];
      if(reaction.fail || !isUnhandled(reaction.promise))return false;
    } return true;
  };
  var onHandleUnhandled = function(promise){
    task.call(global, function(){
      var handler;
      if(isNode){
        process.emit('rejectionHandled', promise);
      } else if(handler = global.onrejectionhandled){
        handler({promise: promise, reason: promise._v});
      }
    });
  };
  var $reject = function(value){
    var promise = this;
    if(promise._d)return;
    promise._d = true;
    promise = promise._w || promise; // unwrap
    promise._v = value;
    promise._s = 2;
    if(!promise._a)promise._a = promise._c.slice();
    notify(promise, true);
  };
  var $resolve = function(value){
    var promise = this
      , then;
    if(promise._d)return;
    promise._d = true;
    promise = promise._w || promise; // unwrap
    try {
      if(promise === value)throw TypeError("Promise can't be resolved itself");
      if(then = isThenable(value)){
        microtask(function(){
          var wrapper = {_w: promise, _d: false}; // wrap
          try {
            then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));
          } catch(e){
            $reject.call(wrapper, e);
          }
        });
      } else {
        promise._v = value;
        promise._s = 1;
        notify(promise, false);
      }
    } catch(e){
      $reject.call({_w: promise, _d: false}, e); // wrap
    }
  };

  // constructor polyfill
  if(!USE_NATIVE){
    // 25.4.3.1 Promise(executor)
    $Promise = function Promise(executor){
      anInstance(this, $Promise, PROMISE, '_h');
      aFunction(executor);
      Internal.call(this);
      try {
        executor(ctx($resolve, this, 1), ctx($reject, this, 1));
      } catch(err){
        $reject.call(this, err);
      }
    };
    Internal = function Promise(executor){
      this._c = [];             // <- awaiting reactions
      this._a = undefined;      // <- checked in isUnhandled reactions
      this._s = 0;              // <- state
      this._d = false;          // <- done
      this._v = undefined;      // <- value
      this._h = 0;              // <- rejection state, 0 - default, 1 - handled, 2 - unhandled
      this._n = false;          // <- notify
    };
    Internal.prototype = __webpack_require__(299)($Promise.prototype, {
      // 25.4.5.3 Promise.prototype.then(onFulfilled, onRejected)
      then: function then(onFulfilled, onRejected){
        var reaction    = newPromiseCapability(speciesConstructor(this, $Promise));
        reaction.ok     = typeof onFulfilled == 'function' ? onFulfilled : true;
        reaction.fail   = typeof onRejected == 'function' && onRejected;
        reaction.domain = isNode ? process.domain : undefined;
        this._c.push(reaction);
        if(this._a)this._a.push(reaction);
        if(this._s)notify(this, false);
        return reaction.promise;
      },
      // 25.4.5.1 Promise.prototype.catch(onRejected)
      'catch': function(onRejected){
        return this.then(undefined, onRejected);
      }
    });
    PromiseCapability = function(){
      var promise  = new Internal;
      this.promise = promise;
      this.resolve = ctx($resolve, promise, 1);
      this.reject  = ctx($reject, promise, 1);
    };
  }

  $export($export.G + $export.W + $export.F * !USE_NATIVE, {Promise: $Promise});
  __webpack_require__(113)($Promise, PROMISE);
  __webpack_require__(281)(PROMISE);
  Wrapper = __webpack_require__(98)[PROMISE];

  // statics
  $export($export.S + $export.F * !USE_NATIVE, PROMISE, {
    // 25.4.4.5 Promise.reject(r)
    reject: function reject(r){
      var capability = newPromiseCapability(this)
        , $$reject   = capability.reject;
      $$reject(r);
      return capability.promise;
    }
  });
  $export($export.S + $export.F * (LIBRARY || !USE_NATIVE), PROMISE, {
    // 25.4.4.6 Promise.resolve(x)
    resolve: function resolve(x){
      // instanceof instead of internal slot check because we should fix it without replacement native Promise core
      if(x instanceof $Promise && sameConstructor(x.constructor, this))return x;
      var capability = newPromiseCapability(this)
        , $$resolve  = capability.resolve;
      $$resolve(x);
      return capability.promise;
    }
  });
  $export($export.S + $export.F * !(USE_NATIVE && __webpack_require__(254)(function(iter){
    $Promise.all(iter)['catch'](empty);
  })), PROMISE, {
    // 25.4.4.1 Promise.all(iterable)
    all: function all(iterable){
      var C          = this
        , capability = newPromiseCapability(C)
        , resolve    = capability.resolve
        , reject     = capability.reject;
      var abrupt = perform(function(){
        var values    = []
          , index     = 0
          , remaining = 1;
        forOf(iterable, false, function(promise){
          var $index        = index++
            , alreadyCalled = false;
          values.push(undefined);
          remaining++;
          C.resolve(promise).then(function(value){
            if(alreadyCalled)return;
            alreadyCalled  = true;
            values[$index] = value;
            --remaining || resolve(values);
          }, reject);
        });
        --remaining || resolve(values);
      });
      if(abrupt)reject(abrupt.error);
      return capability.promise;
    },
    // 25.4.4.4 Promise.race(iterable)
    race: function race(iterable){
      var C          = this
        , capability = newPromiseCapability(C)
        , reject     = capability.reject;
      var abrupt = perform(function(){
        forOf(iterable, false, function(promise){
          C.resolve(promise).then(capability.resolve, reject);
        });
      });
      if(abrupt)reject(abrupt.error);
      return capability.promise;
    }
  });

/***/ },
/* 294 */
/***/ function(module, exports) {

  module.exports = function(it, Constructor, name, forbiddenField){
    if(!(it instanceof Constructor) || (forbiddenField !== undefined && forbiddenField in it)){
      throw TypeError(name + ': incorrect invocation!');
    } return it;
  };

/***/ },
/* 295 */
/***/ function(module, exports, __webpack_require__) {

  var ctx         = __webpack_require__(109)
    , call        = __webpack_require__(250)
    , isArrayIter = __webpack_require__(251)
    , anObject    = __webpack_require__(101)
    , toLength    = __webpack_require__(126)
    , getIterFn   = __webpack_require__(253)
    , BREAK       = {}
    , RETURN      = {};
  var exports = module.exports = function(iterable, entries, fn, that, ITERATOR){
    var iterFn = ITERATOR ? function(){ return iterable; } : getIterFn(iterable)
      , f      = ctx(fn, that, entries ? 2 : 1)
      , index  = 0
      , length, step, iterator, result;
    if(typeof iterFn != 'function')throw TypeError(iterable + ' is not iterable!');
    // fast case for arrays with default iterator
    if(isArrayIter(iterFn))for(length = toLength(iterable.length); length > index; index++){
      result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);
      if(result === BREAK || result === RETURN)return result;
    } else for(iterator = iterFn.call(iterable); !(step = iterator.next()).done; ){
      result = call(iterator, f, step.value, entries);
      if(result === BREAK || result === RETURN)return result;
    }
  };
  exports.BREAK  = BREAK;
  exports.RETURN = RETURN;

/***/ },
/* 296 */
/***/ function(module, exports, __webpack_require__) {

  // 7.3.20 SpeciesConstructor(O, defaultConstructor)
  var anObject  = __webpack_require__(101)
    , aFunction = __webpack_require__(110)
    , SPECIES   = __webpack_require__(114)('species');
  module.exports = function(O, D){
    var C = anObject(O).constructor, S;
    return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);
  };

/***/ },
/* 297 */
/***/ function(module, exports, __webpack_require__) {

  var ctx                = __webpack_require__(109)
    , invoke             = __webpack_require__(167)
    , html               = __webpack_require__(137)
    , cel                = __webpack_require__(104)
    , global             = __webpack_require__(93)
    , process            = global.process
    , setTask            = global.setImmediate
    , clearTask          = global.clearImmediate
    , MessageChannel     = global.MessageChannel
    , counter            = 0
    , queue              = {}
    , ONREADYSTATECHANGE = 'onreadystatechange'
    , defer, channel, port;
  var run = function(){
    var id = +this;
    if(queue.hasOwnProperty(id)){
      var fn = queue[id];
      delete queue[id];
      fn();
    }
  };
  var listener = function(event){
    run.call(event.data);
  };
  // Node.js 0.9+ & IE10+ has setImmediate, otherwise:
  if(!setTask || !clearTask){
    setTask = function setImmediate(fn){
      var args = [], i = 1;
      while(arguments.length > i)args.push(arguments[i++]);
      queue[++counter] = function(){
        invoke(typeof fn == 'function' ? fn : Function(fn), args);
      };
      defer(counter);
      return counter;
    };
    clearTask = function clearImmediate(id){
      delete queue[id];
    };
    // Node.js 0.8-
    if(__webpack_require__(123)(process) == 'process'){
      defer = function(id){
        process.nextTick(ctx(run, id, 1));
      };
    // Browsers with MessageChannel, includes WebWorkers
    } else if(MessageChannel){
      channel = new MessageChannel;
      port    = channel.port2;
      channel.port1.onmessage = listener;
      defer = ctx(port.postMessage, port, 1);
    // Browsers with postMessage, skip WebWorkers
    // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'
    } else if(global.addEventListener && typeof postMessage == 'function' && !global.importScripts){
      defer = function(id){
        global.postMessage(id + '', '*');
      };
      global.addEventListener('message', listener, false);
    // IE8-
    } else if(ONREADYSTATECHANGE in cel('script')){
      defer = function(id){
        html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function(){
          html.removeChild(this);
          run.call(id);
        };
      };
    // Rest old browsers
    } else {
      defer = function(id){
        setTimeout(ctx(run, id, 1), 0);
      };
    }
  }
  module.exports = {
    set:   setTask,
    clear: clearTask
  };

/***/ },
/* 298 */
/***/ function(module, exports, __webpack_require__) {

  var global    = __webpack_require__(93)
    , macrotask = __webpack_require__(297).set
    , Observer  = global.MutationObserver || global.WebKitMutationObserver
    , process   = global.process
    , Promise   = global.Promise
    , isNode    = __webpack_require__(123)(process) == 'process';

  module.exports = function(){
    var head, last, notify;

    var flush = function(){
      var parent, fn;
      if(isNode && (parent = process.domain))parent.exit();
      while(head){
        fn   = head.fn;
        head = head.next;
        try {
          fn();
        } catch(e){
          if(head)notify();
          else last = undefined;
          throw e;
        }
      } last = undefined;
      if(parent)parent.enter();
    };

    // Node.js
    if(isNode){
      notify = function(){
        process.nextTick(flush);
      };
    // browsers with MutationObserver
    } else if(Observer){
      var toggle = true
        , node   = document.createTextNode('');
      new Observer(flush).observe(node, {characterData: true}); // eslint-disable-line no-new
      notify = function(){
        node.data = toggle = !toggle;
      };
    // environments with maybe non-completely correct, but existent Promise
    } else if(Promise && Promise.resolve){
      var promise = Promise.resolve();
      notify = function(){
        promise.then(flush);
      };
    // for other environments - macrotask based on:
    // - setImmediate
    // - MessageChannel
    // - window.postMessag
    // - onreadystatechange
    // - setTimeout
    } else {
      notify = function(){
        // strange IE + webpack dev server bug - use .call(global)
        macrotask.call(global, flush);
      };
    }

    return function(fn){
      var task = {fn: fn, next: undefined};
      if(last)last.next = task;
      if(!head){
        head = task;
        notify();
      } last = task;
    };
  };

/***/ },
/* 299 */
/***/ function(module, exports, __webpack_require__) {

  var redefine = __webpack_require__(107);
  module.exports = function(target, src, safe){
    for(var key in src)redefine(target, key, src[key], safe);
    return target;
  };

/***/ },
/* 300 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';
  var strong = __webpack_require__(301);

  // 23.1 Map Objects
  module.exports = __webpack_require__(302)('Map', function(get){
    return function Map(){ return get(this, arguments.length > 0 ? arguments[0] : undefined); };
  }, {
    // 23.1.3.6 Map.prototype.get(key)
    get: function get(key){
      var entry = strong.getEntry(this, key);
      return entry && entry.v;
    },
    // 23.1.3.9 Map.prototype.set(key, value)
    set: function set(key, value){
      return strong.def(this, key === 0 ? 0 : key, value);
    }
  }, strong, true);

/***/ },
/* 301 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';
  var dP          = __webpack_require__(100).f
    , create      = __webpack_require__(135)
    , redefineAll = __webpack_require__(299)
    , ctx         = __webpack_require__(109)
    , anInstance  = __webpack_require__(294)
    , defined     = __webpack_require__(124)
    , forOf       = __webpack_require__(295)
    , $iterDefine = __webpack_require__(217)
    , step        = __webpack_require__(283)
    , setSpecies  = __webpack_require__(281)
    , DESCRIPTORS = __webpack_require__(95)
    , fastKey     = __webpack_require__(111).fastKey
    , SIZE        = DESCRIPTORS ? '_s' : 'size';

  var getEntry = function(that, key){
    // fast case
    var index = fastKey(key), entry;
    if(index !== 'F')return that._i[index];
    // frozen object case
    for(entry = that._f; entry; entry = entry.n){
      if(entry.k == key)return entry;
    }
  };

  module.exports = {
    getConstructor: function(wrapper, NAME, IS_MAP, ADDER){
      var C = wrapper(function(that, iterable){
        anInstance(that, C, NAME, '_i');
        that._i = create(null); // index
        that._f = undefined;    // first entry
        that._l = undefined;    // last entry
        that[SIZE] = 0;         // size
        if(iterable != undefined)forOf(iterable, IS_MAP, that[ADDER], that);
      });
      redefineAll(C.prototype, {
        // 23.1.3.1 Map.prototype.clear()
        // 23.2.3.2 Set.prototype.clear()
        clear: function clear(){
          for(var that = this, data = that._i, entry = that._f; entry; entry = entry.n){
            entry.r = true;
            if(entry.p)entry.p = entry.p.n = undefined;
            delete data[entry.i];
          }
          that._f = that._l = undefined;
          that[SIZE] = 0;
        },
        // 23.1.3.3 Map.prototype.delete(key)
        // 23.2.3.4 Set.prototype.delete(value)
        'delete': function(key){
          var that  = this
            , entry = getEntry(that, key);
          if(entry){
            var next = entry.n
              , prev = entry.p;
            delete that._i[entry.i];
            entry.r = true;
            if(prev)prev.n = next;
            if(next)next.p = prev;
            if(that._f == entry)that._f = next;
            if(that._l == entry)that._l = prev;
            that[SIZE]--;
          } return !!entry;
        },
        // 23.2.3.6 Set.prototype.forEach(callbackfn, thisArg = undefined)
        // 23.1.3.5 Map.prototype.forEach(callbackfn, thisArg = undefined)
        forEach: function forEach(callbackfn /*, that = undefined */){
          anInstance(this, C, 'forEach');
          var f = ctx(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3)
            , entry;
          while(entry = entry ? entry.n : this._f){
            f(entry.v, entry.k, this);
            // revert to the last existing entry
            while(entry && entry.r)entry = entry.p;
          }
        },
        // 23.1.3.7 Map.prototype.has(key)
        // 23.2.3.7 Set.prototype.has(value)
        has: function has(key){
          return !!getEntry(this, key);
        }
      });
      if(DESCRIPTORS)dP(C.prototype, 'size', {
        get: function(){
          return defined(this[SIZE]);
        }
      });
      return C;
    },
    def: function(that, key, value){
      var entry = getEntry(that, key)
        , prev, index;
      // change existing entry
      if(entry){
        entry.v = value;
      // create new entry
      } else {
        that._l = entry = {
          i: index = fastKey(key, true), // <- index
          k: key,                        // <- key
          v: value,                      // <- value
          p: prev = that._l,             // <- previous entry
          n: undefined,                  // <- next entry
          r: false                       // <- removed
        };
        if(!that._f)that._f = entry;
        if(prev)prev.n = entry;
        that[SIZE]++;
        // add to index
        if(index !== 'F')that._i[index] = entry;
      } return that;
    },
    getEntry: getEntry,
    setStrong: function(C, NAME, IS_MAP){
      // add .keys, .values, .entries, [@@iterator]
      // 23.1.3.4, 23.1.3.8, 23.1.3.11, 23.1.3.12, 23.2.3.5, 23.2.3.8, 23.2.3.10, 23.2.3.11
      $iterDefine(C, NAME, function(iterated, kind){
        this._t = iterated;  // target
        this._k = kind;      // kind
        this._l = undefined; // previous
      }, function(){
        var that  = this
          , kind  = that._k
          , entry = that._l;
        // revert to the last existing entry
        while(entry && entry.r)entry = entry.p;
        // get next entry
        if(!that._t || !(that._l = entry = entry ? entry.n : that._t._f)){
          // or finish the iteration
          that._t = undefined;
          return step(1);
        }
        // return step by kind
        if(kind == 'keys'  )return step(0, entry.k);
        if(kind == 'values')return step(0, entry.v);
        return step(0, [entry.k, entry.v]);
      }, IS_MAP ? 'entries' : 'values' , !IS_MAP, true);

      // add [@@species], 23.1.2.2, 23.2.2.2
      setSpecies(NAME);
    }
  };

/***/ },
/* 302 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';
  var global            = __webpack_require__(93)
    , $export           = __webpack_require__(97)
    , redefine          = __webpack_require__(107)
    , redefineAll       = __webpack_require__(299)
    , meta              = __webpack_require__(111)
    , forOf             = __webpack_require__(295)
    , anInstance        = __webpack_require__(294)
    , isObject          = __webpack_require__(102)
    , fails             = __webpack_require__(96)
    , $iterDetect       = __webpack_require__(254)
    , setToStringTag    = __webpack_require__(113)
    , inheritIfRequired = __webpack_require__(177);

  module.exports = function(NAME, wrapper, methods, common, IS_MAP, IS_WEAK){
    var Base  = global[NAME]
      , C     = Base
      , ADDER = IS_MAP ? 'set' : 'add'
      , proto = C && C.prototype
      , O     = {};
    var fixMethod = function(KEY){
      var fn = proto[KEY];
      redefine(proto, KEY,
        KEY == 'delete' ? function(a){
          return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);
        } : KEY == 'has' ? function has(a){
          return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);
        } : KEY == 'get' ? function get(a){
          return IS_WEAK && !isObject(a) ? undefined : fn.call(this, a === 0 ? 0 : a);
        } : KEY == 'add' ? function add(a){ fn.call(this, a === 0 ? 0 : a); return this; }
          : function set(a, b){ fn.call(this, a === 0 ? 0 : a, b); return this; }
      );
    };
    if(typeof C != 'function' || !(IS_WEAK || proto.forEach && !fails(function(){
      new C().entries().next();
    }))){
      // create collection constructor
      C = common.getConstructor(wrapper, NAME, IS_MAP, ADDER);
      redefineAll(C.prototype, methods);
      meta.NEED = true;
    } else {
      var instance             = new C
        // early implementations not supports chaining
        , HASNT_CHAINING       = instance[ADDER](IS_WEAK ? {} : -0, 1) != instance
        // V8 ~  Chromium 40- weak-collections throws on primitives, but should return false
        , THROWS_ON_PRIMITIVES = fails(function(){ instance.has(1); })
        // most early implementations doesn't supports iterables, most modern - not close it correctly
        , ACCEPT_ITERABLES     = $iterDetect(function(iter){ new C(iter); }) // eslint-disable-line no-new
        // for early implementations -0 and +0 not the same
        , BUGGY_ZERO = !IS_WEAK && fails(function(){
          // V8 ~ Chromium 42- fails only with 5+ elements
          var $instance = new C()
            , index     = 5;
          while(index--)$instance[ADDER](index, index);
          return !$instance.has(-0);
        });
      if(!ACCEPT_ITERABLES){ 
        C = wrapper(function(target, iterable){
          anInstance(target, C, NAME);
          var that = inheritIfRequired(new Base, target, C);
          if(iterable != undefined)forOf(iterable, IS_MAP, that[ADDER], that);
          return that;
        });
        C.prototype = proto;
        proto.constructor = C;
      }
      if(THROWS_ON_PRIMITIVES || BUGGY_ZERO){
        fixMethod('delete');
        fixMethod('has');
        IS_MAP && fixMethod('get');
      }
      if(BUGGY_ZERO || HASNT_CHAINING)fixMethod(ADDER);
      // weak collections should not contains .clear method
      if(IS_WEAK && proto.clear)delete proto.clear;
    }

    setToStringTag(C, NAME);

    O[NAME] = C;
    $export($export.G + $export.W + $export.F * (C != Base), O);

    if(!IS_WEAK)common.setStrong(C, NAME, IS_MAP);

    return C;
  };

/***/ },
/* 303 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';
  var strong = __webpack_require__(301);

  // 23.2 Set Objects
  module.exports = __webpack_require__(302)('Set', function(get){
    return function Set(){ return get(this, arguments.length > 0 ? arguments[0] : undefined); };
  }, {
    // 23.2.3.1 Set.prototype.add(value)
    add: function add(value){
      return strong.def(this, value = value === 0 ? 0 : value, value);
    }
  }, strong);

/***/ },
/* 304 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';
  var each         = __webpack_require__(261)(0)
    , redefine     = __webpack_require__(107)
    , meta         = __webpack_require__(111)
    , assign       = __webpack_require__(158)
    , weak         = __webpack_require__(305)
    , isObject     = __webpack_require__(102)
    , getWeak      = meta.getWeak
    , isExtensible = Object.isExtensible
    , uncaughtFrozenStore = weak.ufstore
    , tmp          = {}
    , InternalMap;

  var wrapper = function(get){
    return function WeakMap(){
      return get(this, arguments.length > 0 ? arguments[0] : undefined);
    };
  };

  var methods = {
    // 23.3.3.3 WeakMap.prototype.get(key)
    get: function get(key){
      if(isObject(key)){
        var data = getWeak(key);
        if(data === true)return uncaughtFrozenStore(this).get(key);
        return data ? data[this._i] : undefined;
      }
    },
    // 23.3.3.5 WeakMap.prototype.set(key, value)
    set: function set(key, value){
      return weak.def(this, key, value);
    }
  };

  // 23.3 WeakMap Objects
  var $WeakMap = module.exports = __webpack_require__(302)('WeakMap', wrapper, methods, weak, true, true);

  // IE11 WeakMap frozen keys fix
  if(new $WeakMap().set((Object.freeze || Object)(tmp), 7).get(tmp) != 7){
    InternalMap = weak.getConstructor(wrapper);
    assign(InternalMap.prototype, methods);
    meta.NEED = true;
    each(['delete', 'has', 'get', 'set'], function(key){
      var proto  = $WeakMap.prototype
        , method = proto[key];
      redefine(proto, key, function(a, b){
        // store frozen objects on internal weakmap shim
        if(isObject(a) && !isExtensible(a)){
          if(!this._f)this._f = new InternalMap;
          var result = this._f[key](a, b);
          return key == 'set' ? this : result;
        // store all the rest on native weakmap
        } return method.call(this, a, b);
      });
    });
  }

/***/ },
/* 305 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';
  var redefineAll       = __webpack_require__(299)
    , getWeak           = __webpack_require__(111).getWeak
    , anObject          = __webpack_require__(101)
    , isObject          = __webpack_require__(102)
    , anInstance        = __webpack_require__(294)
    , forOf             = __webpack_require__(295)
    , createArrayMethod = __webpack_require__(261)
    , $has              = __webpack_require__(94)
    , arrayFind         = createArrayMethod(5)
    , arrayFindIndex    = createArrayMethod(6)
    , id                = 0;

  // fallback for uncaught frozen keys
  var uncaughtFrozenStore = function(that){
    return that._l || (that._l = new UncaughtFrozenStore);
  };
  var UncaughtFrozenStore = function(){
    this.a = [];
  };
  var findUncaughtFrozen = function(store, key){
    return arrayFind(store.a, function(it){
      return it[0] === key;
    });
  };
  UncaughtFrozenStore.prototype = {
    get: function(key){
      var entry = findUncaughtFrozen(this, key);
      if(entry)return entry[1];
    },
    has: function(key){
      return !!findUncaughtFrozen(this, key);
    },
    set: function(key, value){
      var entry = findUncaughtFrozen(this, key);
      if(entry)entry[1] = value;
      else this.a.push([key, value]);
    },
    'delete': function(key){
      var index = arrayFindIndex(this.a, function(it){
        return it[0] === key;
      });
      if(~index)this.a.splice(index, 1);
      return !!~index;
    }
  };

  module.exports = {
    getConstructor: function(wrapper, NAME, IS_MAP, ADDER){
      var C = wrapper(function(that, iterable){
        anInstance(that, C, NAME, '_i');
        that._i = id++;      // collection id
        that._l = undefined; // leak store for uncaught frozen objects
        if(iterable != undefined)forOf(iterable, IS_MAP, that[ADDER], that);
      });
      redefineAll(C.prototype, {
        // 23.3.3.2 WeakMap.prototype.delete(key)
        // 23.4.3.3 WeakSet.prototype.delete(value)
        'delete': function(key){
          if(!isObject(key))return false;
          var data = getWeak(key);
          if(data === true)return uncaughtFrozenStore(this)['delete'](key);
          return data && $has(data, this._i) && delete data[this._i];
        },
        // 23.3.3.4 WeakMap.prototype.has(key)
        // 23.4.3.4 WeakSet.prototype.has(value)
        has: function has(key){
          if(!isObject(key))return false;
          var data = getWeak(key);
          if(data === true)return uncaughtFrozenStore(this).has(key);
          return data && $has(data, this._i);
        }
      });
      return C;
    },
    def: function(that, key, value){
      var data = getWeak(anObject(key), true);
      if(data === true)uncaughtFrozenStore(that).set(key, value);
      else data[that._i] = value;
      return that;
    },
    ufstore: uncaughtFrozenStore
  };

/***/ },
/* 306 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';
  var weak = __webpack_require__(305);

  // 23.4 WeakSet Objects
  __webpack_require__(302)('WeakSet', function(get){
    return function WeakSet(){ return get(this, arguments.length > 0 ? arguments[0] : undefined); };
  }, {
    // 23.4.3.1 WeakSet.prototype.add(value)
    add: function add(value){
      return weak.def(this, value, true);
    }
  }, weak, false, true);

/***/ },
/* 307 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';
  var $export      = __webpack_require__(97)
    , $typed       = __webpack_require__(308)
    , buffer       = __webpack_require__(309)
    , anObject     = __webpack_require__(101)
    , toIndex      = __webpack_require__(128)
    , toLength     = __webpack_require__(126)
    , isObject     = __webpack_require__(102)
    , ArrayBuffer  = __webpack_require__(93).ArrayBuffer
    , speciesConstructor = __webpack_require__(296)
    , $ArrayBuffer = buffer.ArrayBuffer
    , $DataView    = buffer.DataView
    , $isView      = $typed.ABV && ArrayBuffer.isView
    , $slice       = $ArrayBuffer.prototype.slice
    , VIEW         = $typed.VIEW
    , ARRAY_BUFFER = 'ArrayBuffer';

  $export($export.G + $export.W + $export.F * (ArrayBuffer !== $ArrayBuffer), {ArrayBuffer: $ArrayBuffer});

  $export($export.S + $export.F * !$typed.CONSTR, ARRAY_BUFFER, {
    // 24.1.3.1 ArrayBuffer.isView(arg)
    isView: function isView(it){
      return $isView && $isView(it) || isObject(it) && VIEW in it;
    }
  });

  $export($export.P + $export.U + $export.F * __webpack_require__(96)(function(){
    return !new $ArrayBuffer(2).slice(1, undefined).byteLength;
  }), ARRAY_BUFFER, {
    // 24.1.4.3 ArrayBuffer.prototype.slice(start, end)
    slice: function slice(start, end){
      if($slice !== undefined && end === undefined)return $slice.call(anObject(this), start); // FF fix
      var len    = anObject(this).byteLength
        , first  = toIndex(start, len)
        , final  = toIndex(end === undefined ? len : end, len)
        , result = new (speciesConstructor(this, $ArrayBuffer))(toLength(final - first))
        , viewS  = new $DataView(this)
        , viewT  = new $DataView(result)
        , index  = 0;
      while(first < final){
        viewT.setUint8(index++, viewS.getUint8(first++));
      } return result;
    }
  });

  __webpack_require__(281)(ARRAY_BUFFER);

/***/ },
/* 308 */
/***/ function(module, exports, __webpack_require__) {

  var global = __webpack_require__(93)
    , hide   = __webpack_require__(99)
    , uid    = __webpack_require__(108)
    , TYPED  = uid('typed_array')
    , VIEW   = uid('view')
    , ABV    = !!(global.ArrayBuffer && global.DataView)
    , CONSTR = ABV
    , i = 0, l = 9, Typed;

  var TypedArrayConstructors = (
    'Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array'
  ).split(',');

  while(i < l){
    if(Typed = global[TypedArrayConstructors[i++]]){
      hide(Typed.prototype, TYPED, true);
      hide(Typed.prototype, VIEW, true);
    } else CONSTR = false;
  }

  module.exports = {
    ABV:    ABV,
    CONSTR: CONSTR,
    TYPED:  TYPED,
    VIEW:   VIEW
  };

/***/ },
/* 309 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';
  var global         = __webpack_require__(93)
    , DESCRIPTORS    = __webpack_require__(95)
    , LIBRARY        = __webpack_require__(117)
    , $typed         = __webpack_require__(308)
    , hide           = __webpack_require__(99)
    , redefineAll    = __webpack_require__(299)
    , fails          = __webpack_require__(96)
    , anInstance     = __webpack_require__(294)
    , toInteger      = __webpack_require__(127)
    , toLength       = __webpack_require__(126)
    , gOPN           = __webpack_require__(139).f
    , dP             = __webpack_require__(100).f
    , arrayFill      = __webpack_require__(277)
    , setToStringTag = __webpack_require__(113)
    , ARRAY_BUFFER   = 'ArrayBuffer'
    , DATA_VIEW      = 'DataView'
    , PROTOTYPE      = 'prototype'
    , WRONG_LENGTH   = 'Wrong length!'
    , WRONG_INDEX    = 'Wrong index!'
    , $ArrayBuffer   = global[ARRAY_BUFFER]
    , $DataView      = global[DATA_VIEW]
    , Math           = global.Math
    , RangeError     = global.RangeError
    , Infinity       = global.Infinity
    , BaseBuffer     = $ArrayBuffer
    , abs            = Math.abs
    , pow            = Math.pow
    , floor          = Math.floor
    , log            = Math.log
    , LN2            = Math.LN2
    , BUFFER         = 'buffer'
    , BYTE_LENGTH    = 'byteLength'
    , BYTE_OFFSET    = 'byteOffset'
    , $BUFFER        = DESCRIPTORS ? '_b' : BUFFER
    , $LENGTH        = DESCRIPTORS ? '_l' : BYTE_LENGTH
    , $OFFSET        = DESCRIPTORS ? '_o' : BYTE_OFFSET;

  // IEEE754 conversions based on https://github.com/feross/ieee754
  var packIEEE754 = function(value, mLen, nBytes){
    var buffer = Array(nBytes)
      , eLen   = nBytes * 8 - mLen - 1
      , eMax   = (1 << eLen) - 1
      , eBias  = eMax >> 1
      , rt     = mLen === 23 ? pow(2, -24) - pow(2, -77) : 0
      , i      = 0
      , s      = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0
      , e, m, c;
    value = abs(value)
    if(value != value || value === Infinity){
      m = value != value ? 1 : 0;
      e = eMax;
    } else {
      e = floor(log(value) / LN2);
      if(value * (c = pow(2, -e)) < 1){
        e--;
        c *= 2;
      }
      if(e + eBias >= 1){
        value += rt / c;
      } else {
        value += rt * pow(2, 1 - eBias);
      }
      if(value * c >= 2){
        e++;
        c /= 2;
      }
      if(e + eBias >= eMax){
        m = 0;
        e = eMax;
      } else if(e + eBias >= 1){
        m = (value * c - 1) * pow(2, mLen);
        e = e + eBias;
      } else {
        m = value * pow(2, eBias - 1) * pow(2, mLen);
        e = 0;
      }
    }
    for(; mLen >= 8; buffer[i++] = m & 255, m /= 256, mLen -= 8);
    e = e << mLen | m;
    eLen += mLen;
    for(; eLen > 0; buffer[i++] = e & 255, e /= 256, eLen -= 8);
    buffer[--i] |= s * 128;
    return buffer;
  };
  var unpackIEEE754 = function(buffer, mLen, nBytes){
    var eLen  = nBytes * 8 - mLen - 1
      , eMax  = (1 << eLen) - 1
      , eBias = eMax >> 1
      , nBits = eLen - 7
      , i     = nBytes - 1
      , s     = buffer[i--]
      , e     = s & 127
      , m;
    s >>= 7;
    for(; nBits > 0; e = e * 256 + buffer[i], i--, nBits -= 8);
    m = e & (1 << -nBits) - 1;
    e >>= -nBits;
    nBits += mLen;
    for(; nBits > 0; m = m * 256 + buffer[i], i--, nBits -= 8);
    if(e === 0){
      e = 1 - eBias;
    } else if(e === eMax){
      return m ? NaN : s ? -Infinity : Infinity;
    } else {
      m = m + pow(2, mLen);
      e = e - eBias;
    } return (s ? -1 : 1) * m * pow(2, e - mLen);
  };

  var unpackI32 = function(bytes){
    return bytes[3] << 24 | bytes[2] << 16 | bytes[1] << 8 | bytes[0];
  };
  var packI8 = function(it){
    return [it & 0xff];
  };
  var packI16 = function(it){
    return [it & 0xff, it >> 8 & 0xff];
  };
  var packI32 = function(it){
    return [it & 0xff, it >> 8 & 0xff, it >> 16 & 0xff, it >> 24 & 0xff];
  };
  var packF64 = function(it){
    return packIEEE754(it, 52, 8);
  };
  var packF32 = function(it){
    return packIEEE754(it, 23, 4);
  };

  var addGetter = function(C, key, internal){
    dP(C[PROTOTYPE], key, {get: function(){ return this[internal]; }});
  };

  var get = function(view, bytes, index, isLittleEndian){
    var numIndex = +index
      , intIndex = toInteger(numIndex);
    if(numIndex != intIndex || intIndex < 0 || intIndex + bytes > view[$LENGTH])throw RangeError(WRONG_INDEX);
    var store = view[$BUFFER]._b
      , start = intIndex + view[$OFFSET]
      , pack  = store.slice(start, start + bytes);
    return isLittleEndian ? pack : pack.reverse();
  };
  var set = function(view, bytes, index, conversion, value, isLittleEndian){
    var numIndex = +index
      , intIndex = toInteger(numIndex);
    if(numIndex != intIndex || intIndex < 0 || intIndex + bytes > view[$LENGTH])throw RangeError(WRONG_INDEX);
    var store = view[$BUFFER]._b
      , start = intIndex + view[$OFFSET]
      , pack  = conversion(+value);
    for(var i = 0; i < bytes; i++)store[start + i] = pack[isLittleEndian ? i : bytes - i - 1];
  };

  var validateArrayBufferArguments = function(that, length){
    anInstance(that, $ArrayBuffer, ARRAY_BUFFER);
    var numberLength = +length
      , byteLength   = toLength(numberLength);
    if(numberLength != byteLength)throw RangeError(WRONG_LENGTH);
    return byteLength;
  };

  if(!$typed.ABV){
    $ArrayBuffer = function ArrayBuffer(length){
      var byteLength = validateArrayBufferArguments(this, length);
      this._b       = arrayFill.call(Array(byteLength), 0);
      this[$LENGTH] = byteLength;
    };

    $DataView = function DataView(buffer, byteOffset, byteLength){
      anInstance(this, $DataView, DATA_VIEW);
      anInstance(buffer, $ArrayBuffer, DATA_VIEW);
      var bufferLength = buffer[$LENGTH]
        , offset       = toInteger(byteOffset);
      if(offset < 0 || offset > bufferLength)throw RangeError('Wrong offset!');
      byteLength = byteLength === undefined ? bufferLength - offset : toLength(byteLength);
      if(offset + byteLength > bufferLength)throw RangeError(WRONG_LENGTH);
      this[$BUFFER] = buffer;
      this[$OFFSET] = offset;
      this[$LENGTH] = byteLength;
    };

    if(DESCRIPTORS){
      addGetter($ArrayBuffer, BYTE_LENGTH, '_l');
      addGetter($DataView, BUFFER, '_b');
      addGetter($DataView, BYTE_LENGTH, '_l');
      addGetter($DataView, BYTE_OFFSET, '_o');
    }

    redefineAll($DataView[PROTOTYPE], {
      getInt8: function getInt8(byteOffset){
        return get(this, 1, byteOffset)[0] << 24 >> 24;
      },
      getUint8: function getUint8(byteOffset){
        return get(this, 1, byteOffset)[0];
      },
      getInt16: function getInt16(byteOffset /*, littleEndian */){
        var bytes = get(this, 2, byteOffset, arguments[1]);
        return (bytes[1] << 8 | bytes[0]) << 16 >> 16;
      },
      getUint16: function getUint16(byteOffset /*, littleEndian */){
        var bytes = get(this, 2, byteOffset, arguments[1]);
        return bytes[1] << 8 | bytes[0];
      },
      getInt32: function getInt32(byteOffset /*, littleEndian */){
        return unpackI32(get(this, 4, byteOffset, arguments[1]));
      },
      getUint32: function getUint32(byteOffset /*, littleEndian */){
        return unpackI32(get(this, 4, byteOffset, arguments[1])) >>> 0;
      },
      getFloat32: function getFloat32(byteOffset /*, littleEndian */){
        return unpackIEEE754(get(this, 4, byteOffset, arguments[1]), 23, 4);
      },
      getFloat64: function getFloat64(byteOffset /*, littleEndian */){
        return unpackIEEE754(get(this, 8, byteOffset, arguments[1]), 52, 8);
      },
      setInt8: function setInt8(byteOffset, value){
        set(this, 1, byteOffset, packI8, value);
      },
      setUint8: function setUint8(byteOffset, value){
        set(this, 1, byteOffset, packI8, value);
      },
      setInt16: function setInt16(byteOffset, value /*, littleEndian */){
        set(this, 2, byteOffset, packI16, value, arguments[2]);
      },
      setUint16: function setUint16(byteOffset, value /*, littleEndian */){
        set(this, 2, byteOffset, packI16, value, arguments[2]);
      },
      setInt32: function setInt32(byteOffset, value /*, littleEndian */){
        set(this, 4, byteOffset, packI32, value, arguments[2]);
      },
      setUint32: function setUint32(byteOffset, value /*, littleEndian */){
        set(this, 4, byteOffset, packI32, value, arguments[2]);
      },
      setFloat32: function setFloat32(byteOffset, value /*, littleEndian */){
        set(this, 4, byteOffset, packF32, value, arguments[2]);
      },
      setFloat64: function setFloat64(byteOffset, value /*, littleEndian */){
        set(this, 8, byteOffset, packF64, value, arguments[2]);
      }
    });
  } else {
    if(!fails(function(){
      new $ArrayBuffer;     // eslint-disable-line no-new
    }) || !fails(function(){
      new $ArrayBuffer(.5); // eslint-disable-line no-new
    })){
      $ArrayBuffer = function ArrayBuffer(length){
        return new BaseBuffer(validateArrayBufferArguments(this, length));
      };
      var ArrayBufferProto = $ArrayBuffer[PROTOTYPE] = BaseBuffer[PROTOTYPE];
      for(var keys = gOPN(BaseBuffer), j = 0, key; keys.length > j; ){
        if(!((key = keys[j++]) in $ArrayBuffer))hide($ArrayBuffer, key, BaseBuffer[key]);
      };
      if(!LIBRARY)ArrayBufferProto.constructor = $ArrayBuffer;
    }
    // iOS Safari 7.x bug
    var view = new $DataView(new $ArrayBuffer(2))
      , $setInt8 = $DataView[PROTOTYPE].setInt8;
    view.setInt8(0, 2147483648);
    view.setInt8(1, 2147483649);
    if(view.getInt8(0) || !view.getInt8(1))redefineAll($DataView[PROTOTYPE], {
      setInt8: function setInt8(byteOffset, value){
        $setInt8.call(this, byteOffset, value << 24 >> 24);
      },
      setUint8: function setUint8(byteOffset, value){
        $setInt8.call(this, byteOffset, value << 24 >> 24);
      }
    }, true);
  }
  setToStringTag($ArrayBuffer, ARRAY_BUFFER);
  setToStringTag($DataView, DATA_VIEW);
  hide($DataView[PROTOTYPE], $typed.VIEW, true);
  exports[ARRAY_BUFFER] = $ArrayBuffer;
  exports[DATA_VIEW] = $DataView;

/***/ },
/* 310 */
/***/ function(module, exports, __webpack_require__) {

  var $export = __webpack_require__(97);
  $export($export.G + $export.W + $export.F * !__webpack_require__(308).ABV, {
    DataView: __webpack_require__(309).DataView
  });

/***/ },
/* 311 */
/***/ function(module, exports, __webpack_require__) {

  __webpack_require__(312)('Int8', 1, function(init){
    return function Int8Array(data, byteOffset, length){
      return init(this, data, byteOffset, length);
    };
  });

/***/ },
/* 312 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';
  if(__webpack_require__(95)){
    var LIBRARY             = __webpack_require__(117)
      , global              = __webpack_require__(93)
      , fails               = __webpack_require__(96)
      , $export             = __webpack_require__(97)
      , $typed              = __webpack_require__(308)
      , $buffer             = __webpack_require__(309)
      , ctx                 = __webpack_require__(109)
      , anInstance          = __webpack_require__(294)
      , propertyDesc        = __webpack_require__(106)
      , hide                = __webpack_require__(99)
      , redefineAll         = __webpack_require__(299)
      , toInteger           = __webpack_require__(127)
      , toLength            = __webpack_require__(126)
      , toIndex             = __webpack_require__(128)
      , toPrimitive         = __webpack_require__(105)
      , has                 = __webpack_require__(94)
      , same                = __webpack_require__(160)
      , classof             = __webpack_require__(164)
      , isObject            = __webpack_require__(102)
      , toObject            = __webpack_require__(147)
      , isArrayIter         = __webpack_require__(251)
      , create              = __webpack_require__(135)
      , getPrototypeOf      = __webpack_require__(148)
      , gOPN                = __webpack_require__(139).f
      , getIterFn           = __webpack_require__(253)
      , uid                 = __webpack_require__(108)
      , wks                 = __webpack_require__(114)
      , createArrayMethod   = __webpack_require__(261)
      , createArrayIncludes = __webpack_require__(125)
      , speciesConstructor  = __webpack_require__(296)
      , ArrayIterators      = __webpack_require__(282)
      , Iterators           = __webpack_require__(218)
      , $iterDetect         = __webpack_require__(254)
      , setSpecies          = __webpack_require__(281)
      , arrayFill           = __webpack_require__(277)
      , arrayCopyWithin     = __webpack_require__(274)
      , $DP                 = __webpack_require__(100)
      , $GOPD               = __webpack_require__(140)
      , dP                  = $DP.f
      , gOPD                = $GOPD.f
      , RangeError          = global.RangeError
      , TypeError           = global.TypeError
      , Uint8Array          = global.Uint8Array
      , ARRAY_BUFFER        = 'ArrayBuffer'
      , SHARED_BUFFER       = 'Shared' + ARRAY_BUFFER
      , BYTES_PER_ELEMENT   = 'BYTES_PER_ELEMENT'
      , PROTOTYPE           = 'prototype'
      , ArrayProto          = Array[PROTOTYPE]
      , $ArrayBuffer        = $buffer.ArrayBuffer
      , $DataView           = $buffer.DataView
      , arrayForEach        = createArrayMethod(0)
      , arrayFilter         = createArrayMethod(2)
      , arraySome           = createArrayMethod(3)
      , arrayEvery          = createArrayMethod(4)
      , arrayFind           = createArrayMethod(5)
      , arrayFindIndex      = createArrayMethod(6)
      , arrayIncludes       = createArrayIncludes(true)
      , arrayIndexOf        = createArrayIncludes(false)
      , arrayValues         = ArrayIterators.values
      , arrayKeys           = ArrayIterators.keys
      , arrayEntries        = ArrayIterators.entries
      , arrayLastIndexOf    = ArrayProto.lastIndexOf
      , arrayReduce         = ArrayProto.reduce
      , arrayReduceRight    = ArrayProto.reduceRight
      , arrayJoin           = ArrayProto.join
      , arraySort           = ArrayProto.sort
      , arraySlice          = ArrayProto.slice
      , arrayToString       = ArrayProto.toString
      , arrayToLocaleString = ArrayProto.toLocaleString
      , ITERATOR            = wks('iterator')
      , TAG                 = wks('toStringTag')
      , TYPED_CONSTRUCTOR   = uid('typed_constructor')
      , DEF_CONSTRUCTOR     = uid('def_constructor')
      , ALL_CONSTRUCTORS    = $typed.CONSTR
      , TYPED_ARRAY         = $typed.TYPED
      , VIEW                = $typed.VIEW
      , WRONG_LENGTH        = 'Wrong length!';

    var $map = createArrayMethod(1, function(O, length){
      return allocate(speciesConstructor(O, O[DEF_CONSTRUCTOR]), length);
    });

    var LITTLE_ENDIAN = fails(function(){
      return new Uint8Array(new Uint16Array([1]).buffer)[0] === 1;
    });

    var FORCED_SET = !!Uint8Array && !!Uint8Array[PROTOTYPE].set && fails(function(){
      new Uint8Array(1).set({});
    });

    var strictToLength = function(it, SAME){
      if(it === undefined)throw TypeError(WRONG_LENGTH);
      var number = +it
        , length = toLength(it);
      if(SAME && !same(number, length))throw RangeError(WRONG_LENGTH);
      return length;
    };

    var toOffset = function(it, BYTES){
      var offset = toInteger(it);
      if(offset < 0 || offset % BYTES)throw RangeError('Wrong offset!');
      return offset;
    };

    var validate = function(it){
      if(isObject(it) && TYPED_ARRAY in it)return it;
      throw TypeError(it + ' is not a typed array!');
    };

    var allocate = function(C, length){
      if(!(isObject(C) && TYPED_CONSTRUCTOR in C)){
        throw TypeError('It is not a typed array constructor!');
      } return new C(length);
    };

    var speciesFromList = function(O, list){
      return fromList(speciesConstructor(O, O[DEF_CONSTRUCTOR]), list);
    };

    var fromList = function(C, list){
      var index  = 0
        , length = list.length
        , result = allocate(C, length);
      while(length > index)result[index] = list[index++];
      return result;
    };

    var addGetter = function(it, key, internal){
      dP(it, key, {get: function(){ return this._d[internal]; }});
    };

    var $from = function from(source /*, mapfn, thisArg */){
      var O       = toObject(source)
        , aLen    = arguments.length
        , mapfn   = aLen > 1 ? arguments[1] : undefined
        , mapping = mapfn !== undefined
        , iterFn  = getIterFn(O)
        , i, length, values, result, step, iterator;
      if(iterFn != undefined && !isArrayIter(iterFn)){
        for(iterator = iterFn.call(O), values = [], i = 0; !(step = iterator.next()).done; i++){
          values.push(step.value);
        } O = values;
      }
      if(mapping && aLen > 2)mapfn = ctx(mapfn, arguments[2], 2);
      for(i = 0, length = toLength(O.length), result = allocate(this, length); length > i; i++){
        result[i] = mapping ? mapfn(O[i], i) : O[i];
      }
      return result;
    };

    var $of = function of(/*...items*/){
      var index  = 0
        , length = arguments.length
        , result = allocate(this, length);
      while(length > index)result[index] = arguments[index++];
      return result;
    };

    // iOS Safari 6.x fails here
    var TO_LOCALE_BUG = !!Uint8Array && fails(function(){ arrayToLocaleString.call(new Uint8Array(1)); });

    var $toLocaleString = function toLocaleString(){
      return arrayToLocaleString.apply(TO_LOCALE_BUG ? arraySlice.call(validate(this)) : validate(this), arguments);
    };

    var proto = {
      copyWithin: function copyWithin(target, start /*, end */){
        return arrayCopyWithin.call(validate(this), target, start, arguments.length > 2 ? arguments[2] : undefined);
      },
      every: function every(callbackfn /*, thisArg */){
        return arrayEvery(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
      },
      fill: function fill(value /*, start, end */){ // eslint-disable-line no-unused-vars
        return arrayFill.apply(validate(this), arguments);
      },
      filter: function filter(callbackfn /*, thisArg */){
        return speciesFromList(this, arrayFilter(validate(this), callbackfn,
          arguments.length > 1 ? arguments[1] : undefined));
      },
      find: function find(predicate /*, thisArg */){
        return arrayFind(validate(this), predicate, arguments.length > 1 ? arguments[1] : undefined);
      },
      findIndex: function findIndex(predicate /*, thisArg */){
        return arrayFindIndex(validate(this), predicate, arguments.length > 1 ? arguments[1] : undefined);
      },
      forEach: function forEach(callbackfn /*, thisArg */){
        arrayForEach(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
      },
      indexOf: function indexOf(searchElement /*, fromIndex */){
        return arrayIndexOf(validate(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);
      },
      includes: function includes(searchElement /*, fromIndex */){
        return arrayIncludes(validate(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);
      },
      join: function join(separator){ // eslint-disable-line no-unused-vars
        return arrayJoin.apply(validate(this), arguments);
      },
      lastIndexOf: function lastIndexOf(searchElement /*, fromIndex */){ // eslint-disable-line no-unused-vars
        return arrayLastIndexOf.apply(validate(this), arguments);
      },
      map: function map(mapfn /*, thisArg */){
        return $map(validate(this), mapfn, arguments.length > 1 ? arguments[1] : undefined);
      },
      reduce: function reduce(callbackfn /*, initialValue */){ // eslint-disable-line no-unused-vars
        return arrayReduce.apply(validate(this), arguments);
      },
      reduceRight: function reduceRight(callbackfn /*, initialValue */){ // eslint-disable-line no-unused-vars
        return arrayReduceRight.apply(validate(this), arguments);
      },
      reverse: function reverse(){
        var that   = this
          , length = validate(that).length
          , middle = Math.floor(length / 2)
          , index  = 0
          , value;
        while(index < middle){
          value         = that[index];
          that[index++] = that[--length];
          that[length]  = value;
        } return that;
      },
      some: function some(callbackfn /*, thisArg */){
        return arraySome(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
      },
      sort: function sort(comparefn){
        return arraySort.call(validate(this), comparefn);
      },
      subarray: function subarray(begin, end){
        var O      = validate(this)
          , length = O.length
          , $begin = toIndex(begin, length);
        return new (speciesConstructor(O, O[DEF_CONSTRUCTOR]))(
          O.buffer,
          O.byteOffset + $begin * O.BYTES_PER_ELEMENT,
          toLength((end === undefined ? length : toIndex(end, length)) - $begin)
        );
      }
    };

    var $slice = function slice(start, end){
      return speciesFromList(this, arraySlice.call(validate(this), start, end));
    };

    var $set = function set(arrayLike /*, offset */){
      validate(this);
      var offset = toOffset(arguments[1], 1)
        , length = this.length
        , src    = toObject(arrayLike)
        , len    = toLength(src.length)
        , index  = 0;
      if(len + offset > length)throw RangeError(WRONG_LENGTH);
      while(index < len)this[offset + index] = src[index++];
    };

    var $iterators = {
      entries: function entries(){
        return arrayEntries.call(validate(this));
      },
      keys: function keys(){
        return arrayKeys.call(validate(this));
      },
      values: function values(){
        return arrayValues.call(validate(this));
      }
    };

    var isTAIndex = function(target, key){
      return isObject(target)
        && target[TYPED_ARRAY]
        && typeof key != 'symbol'
        && key in target
        && String(+key) == String(key);
    };
    var $getDesc = function getOwnPropertyDescriptor(target, key){
      return isTAIndex(target, key = toPrimitive(key, true))
        ? propertyDesc(2, target[key])
        : gOPD(target, key);
    };
    var $setDesc = function defineProperty(target, key, desc){
      if(isTAIndex(target, key = toPrimitive(key, true))
        && isObject(desc)
        && has(desc, 'value')
        && !has(desc, 'get')
        && !has(desc, 'set')
        // TODO: add validation descriptor w/o calling accessors
        && !desc.configurable
        && (!has(desc, 'writable') || desc.writable)
        && (!has(desc, 'enumerable') || desc.enumerable)
      ){
        target[key] = desc.value;
        return target;
      } else return dP(target, key, desc);
    };

    if(!ALL_CONSTRUCTORS){
      $GOPD.f = $getDesc;
      $DP.f   = $setDesc;
    }

    $export($export.S + $export.F * !ALL_CONSTRUCTORS, 'Object', {
      getOwnPropertyDescriptor: $getDesc,
      defineProperty:           $setDesc
    });

    if(fails(function(){ arrayToString.call({}); })){
      arrayToString = arrayToLocaleString = function toString(){
        return arrayJoin.call(this);
      }
    }

    var $TypedArrayPrototype$ = redefineAll({}, proto);
    redefineAll($TypedArrayPrototype$, $iterators);
    hide($TypedArrayPrototype$, ITERATOR, $iterators.values);
    redefineAll($TypedArrayPrototype$, {
      slice:          $slice,
      set:            $set,
      constructor:    function(){ /* noop */ },
      toString:       arrayToString,
      toLocaleString: $toLocaleString
    });
    addGetter($TypedArrayPrototype$, 'buffer', 'b');
    addGetter($TypedArrayPrototype$, 'byteOffset', 'o');
    addGetter($TypedArrayPrototype$, 'byteLength', 'l');
    addGetter($TypedArrayPrototype$, 'length', 'e');
    dP($TypedArrayPrototype$, TAG, {
      get: function(){ return this[TYPED_ARRAY]; }
    });

    module.exports = function(KEY, BYTES, wrapper, CLAMPED){
      CLAMPED = !!CLAMPED;
      var NAME       = KEY + (CLAMPED ? 'Clamped' : '') + 'Array'
        , ISNT_UINT8 = NAME != 'Uint8Array'
        , GETTER     = 'get' + KEY
        , SETTER     = 'set' + KEY
        , TypedArray = global[NAME]
        , Base       = TypedArray || {}
        , TAC        = TypedArray && getPrototypeOf(TypedArray)
        , FORCED     = !TypedArray || !$typed.ABV
        , O          = {}
        , TypedArrayPrototype = TypedArray && TypedArray[PROTOTYPE];
      var getter = function(that, index){
        var data = that._d;
        return data.v[GETTER](index * BYTES + data.o, LITTLE_ENDIAN);
      };
      var setter = function(that, index, value){
        var data = that._d;
        if(CLAMPED)value = (value = Math.round(value)) < 0 ? 0 : value > 0xff ? 0xff : value & 0xff;
        data.v[SETTER](index * BYTES + data.o, value, LITTLE_ENDIAN);
      };
      var addElement = function(that, index){
        dP(that, index, {
          get: function(){
            return getter(this, index);
          },
          set: function(value){
            return setter(this, index, value);
          },
          enumerable: true
        });
      };
      if(FORCED){
        TypedArray = wrapper(function(that, data, $offset, $length){
          anInstance(that, TypedArray, NAME, '_d');
          var index  = 0
            , offset = 0
            , buffer, byteLength, length, klass;
          if(!isObject(data)){
            length     = strictToLength(data, true)
            byteLength = length * BYTES;
            buffer     = new $ArrayBuffer(byteLength);
          } else if(data instanceof $ArrayBuffer || (klass = classof(data)) == ARRAY_BUFFER || klass == SHARED_BUFFER){
            buffer = data;
            offset = toOffset($offset, BYTES);
            var $len = data.byteLength;
            if($length === undefined){
              if($len % BYTES)throw RangeError(WRONG_LENGTH);
              byteLength = $len - offset;
              if(byteLength < 0)throw RangeError(WRONG_LENGTH);
            } else {
              byteLength = toLength($length) * BYTES;
              if(byteLength + offset > $len)throw RangeError(WRONG_LENGTH);
            }
            length = byteLength / BYTES;
          } else if(TYPED_ARRAY in data){
            return fromList(TypedArray, data);
          } else {
            return $from.call(TypedArray, data);
          }
          hide(that, '_d', {
            b: buffer,
            o: offset,
            l: byteLength,
            e: length,
            v: new $DataView(buffer)
          });
          while(index < length)addElement(that, index++);
        });
        TypedArrayPrototype = TypedArray[PROTOTYPE] = create($TypedArrayPrototype$);
        hide(TypedArrayPrototype, 'constructor', TypedArray);
      } else if(!$iterDetect(function(iter){
        // V8 works with iterators, but fails in many other cases
        // https://code.google.com/p/v8/issues/detail?id=4552
        new TypedArray(null); // eslint-disable-line no-new
        new TypedArray(iter); // eslint-disable-line no-new
      }, true)){
        TypedArray = wrapper(function(that, data, $offset, $length){
          anInstance(that, TypedArray, NAME);
          var klass;
          // `ws` module bug, temporarily remove validation length for Uint8Array
          // https://github.com/websockets/ws/pull/645
          if(!isObject(data))return new Base(strictToLength(data, ISNT_UINT8));
          if(data instanceof $ArrayBuffer || (klass = classof(data)) == ARRAY_BUFFER || klass == SHARED_BUFFER){
            return $length !== undefined
              ? new Base(data, toOffset($offset, BYTES), $length)
              : $offset !== undefined
                ? new Base(data, toOffset($offset, BYTES))
                : new Base(data);
          }
          if(TYPED_ARRAY in data)return fromList(TypedArray, data);
          return $from.call(TypedArray, data);
        });
        arrayForEach(TAC !== Function.prototype ? gOPN(Base).concat(gOPN(TAC)) : gOPN(Base), function(key){
          if(!(key in TypedArray))hide(TypedArray, key, Base[key]);
        });
        TypedArray[PROTOTYPE] = TypedArrayPrototype;
        if(!LIBRARY)TypedArrayPrototype.constructor = TypedArray;
      }
      var $nativeIterator   = TypedArrayPrototype[ITERATOR]
        , CORRECT_ITER_NAME = !!$nativeIterator && ($nativeIterator.name == 'values' || $nativeIterator.name == undefined)
        , $iterator         = $iterators.values;
      hide(TypedArray, TYPED_CONSTRUCTOR, true);
      hide(TypedArrayPrototype, TYPED_ARRAY, NAME);
      hide(TypedArrayPrototype, VIEW, true);
      hide(TypedArrayPrototype, DEF_CONSTRUCTOR, TypedArray);

      if(CLAMPED ? new TypedArray(1)[TAG] != NAME : !(TAG in TypedArrayPrototype)){
        dP(TypedArrayPrototype, TAG, {
          get: function(){ return NAME; }
        });
      }

      O[NAME] = TypedArray;

      $export($export.G + $export.W + $export.F * (TypedArray != Base), O);

      $export($export.S, NAME, {
        BYTES_PER_ELEMENT: BYTES,
        from: $from,
        of: $of
      });

      if(!(BYTES_PER_ELEMENT in TypedArrayPrototype))hide(TypedArrayPrototype, BYTES_PER_ELEMENT, BYTES);

      $export($export.P, NAME, proto);

      setSpecies(NAME);

      $export($export.P + $export.F * FORCED_SET, NAME, {set: $set});

      $export($export.P + $export.F * !CORRECT_ITER_NAME, NAME, $iterators);

      $export($export.P + $export.F * (TypedArrayPrototype.toString != arrayToString), NAME, {toString: arrayToString});

      $export($export.P + $export.F * fails(function(){
        new TypedArray(1).slice();
      }), NAME, {slice: $slice});

      $export($export.P + $export.F * (fails(function(){
        return [1, 2].toLocaleString() != new TypedArray([1, 2]).toLocaleString()
      }) || !fails(function(){
        TypedArrayPrototype.toLocaleString.call([1, 2]);
      })), NAME, {toLocaleString: $toLocaleString});

      Iterators[NAME] = CORRECT_ITER_NAME ? $nativeIterator : $iterator;
      if(!LIBRARY && !CORRECT_ITER_NAME)hide(TypedArrayPrototype, ITERATOR, $iterator);
    };
  } else module.exports = function(){ /* empty */ };

/***/ },
/* 313 */
/***/ function(module, exports, __webpack_require__) {

  __webpack_require__(312)('Uint8', 1, function(init){
    return function Uint8Array(data, byteOffset, length){
      return init(this, data, byteOffset, length);
    };
  });

/***/ },
/* 314 */
/***/ function(module, exports, __webpack_require__) {

  __webpack_require__(312)('Uint8', 1, function(init){
    return function Uint8ClampedArray(data, byteOffset, length){
      return init(this, data, byteOffset, length);
    };
  }, true);

/***/ },
/* 315 */
/***/ function(module, exports, __webpack_require__) {

  __webpack_require__(312)('Int16', 2, function(init){
    return function Int16Array(data, byteOffset, length){
      return init(this, data, byteOffset, length);
    };
  });

/***/ },
/* 316 */
/***/ function(module, exports, __webpack_require__) {

  __webpack_require__(312)('Uint16', 2, function(init){
    return function Uint16Array(data, byteOffset, length){
      return init(this, data, byteOffset, length);
    };
  });

/***/ },
/* 317 */
/***/ function(module, exports, __webpack_require__) {

  __webpack_require__(312)('Int32', 4, function(init){
    return function Int32Array(data, byteOffset, length){
      return init(this, data, byteOffset, length);
    };
  });

/***/ },
/* 318 */
/***/ function(module, exports, __webpack_require__) {

  __webpack_require__(312)('Uint32', 4, function(init){
    return function Uint32Array(data, byteOffset, length){
      return init(this, data, byteOffset, length);
    };
  });

/***/ },
/* 319 */
/***/ function(module, exports, __webpack_require__) {

  __webpack_require__(312)('Float32', 4, function(init){
    return function Float32Array(data, byteOffset, length){
      return init(this, data, byteOffset, length);
    };
  });

/***/ },
/* 320 */
/***/ function(module, exports, __webpack_require__) {

  __webpack_require__(312)('Float64', 8, function(init){
    return function Float64Array(data, byteOffset, length){
      return init(this, data, byteOffset, length);
    };
  });

/***/ },
/* 321 */
/***/ function(module, exports, __webpack_require__) {

  // 26.1.1 Reflect.apply(target, thisArgument, argumentsList)
  var $export   = __webpack_require__(97)
    , aFunction = __webpack_require__(110)
    , anObject  = __webpack_require__(101)
    , rApply    = (__webpack_require__(93).Reflect || {}).apply
    , fApply    = Function.apply;
  // MS Edge argumentsList argument is optional
  $export($export.S + $export.F * !__webpack_require__(96)(function(){
    rApply(function(){});
  }), 'Reflect', {
    apply: function apply(target, thisArgument, argumentsList){
      var T = aFunction(target)
        , L = anObject(argumentsList);
      return rApply ? rApply(T, thisArgument, L) : fApply.call(T, thisArgument, L);
    }
  });

/***/ },
/* 322 */
/***/ function(module, exports, __webpack_require__) {

  // 26.1.2 Reflect.construct(target, argumentsList [, newTarget])
  var $export    = __webpack_require__(97)
    , create     = __webpack_require__(135)
    , aFunction  = __webpack_require__(110)
    , anObject   = __webpack_require__(101)
    , isObject   = __webpack_require__(102)
    , fails      = __webpack_require__(96)
    , bind       = __webpack_require__(166)
    , rConstruct = (__webpack_require__(93).Reflect || {}).construct;

  // MS Edge supports only 2 arguments and argumentsList argument is optional
  // FF Nightly sets third argument as `new.target`, but does not create `this` from it
  var NEW_TARGET_BUG = fails(function(){
    function F(){}
    return !(rConstruct(function(){}, [], F) instanceof F);
  });
  var ARGS_BUG = !fails(function(){
    rConstruct(function(){});
  });

  $export($export.S + $export.F * (NEW_TARGET_BUG || ARGS_BUG), 'Reflect', {
    construct: function construct(Target, args /*, newTarget*/){
      aFunction(Target);
      anObject(args);
      var newTarget = arguments.length < 3 ? Target : aFunction(arguments[2]);
      if(ARGS_BUG && !NEW_TARGET_BUG)return rConstruct(Target, args, newTarget);
      if(Target == newTarget){
        // w/o altered newTarget, optimization for 0-4 arguments
        switch(args.length){
          case 0: return new Target;
          case 1: return new Target(args[0]);
          case 2: return new Target(args[0], args[1]);
          case 3: return new Target(args[0], args[1], args[2]);
          case 4: return new Target(args[0], args[1], args[2], args[3]);
        }
        // w/o altered newTarget, lot of arguments case
        var $args = [null];
        $args.push.apply($args, args);
        return new (bind.apply(Target, $args));
      }
      // with altered newTarget, not support built-in constructors
      var proto    = newTarget.prototype
        , instance = create(isObject(proto) ? proto : Object.prototype)
        , result   = Function.apply.call(Target, instance, args);
      return isObject(result) ? result : instance;
    }
  });

/***/ },
/* 323 */
/***/ function(module, exports, __webpack_require__) {

  // 26.1.3 Reflect.defineProperty(target, propertyKey, attributes)
  var dP          = __webpack_require__(100)
    , $export     = __webpack_require__(97)
    , anObject    = __webpack_require__(101)
    , toPrimitive = __webpack_require__(105);

  // MS Edge has broken Reflect.defineProperty - throwing instead of returning false
  $export($export.S + $export.F * __webpack_require__(96)(function(){
    Reflect.defineProperty(dP.f({}, 1, {value: 1}), 1, {value: 2});
  }), 'Reflect', {
    defineProperty: function defineProperty(target, propertyKey, attributes){
      anObject(target);
      propertyKey = toPrimitive(propertyKey, true);
      anObject(attributes);
      try {
        dP.f(target, propertyKey, attributes);
        return true;
      } catch(e){
        return false;
      }
    }
  });

/***/ },
/* 324 */
/***/ function(module, exports, __webpack_require__) {

  // 26.1.4 Reflect.deleteProperty(target, propertyKey)
  var $export  = __webpack_require__(97)
    , gOPD     = __webpack_require__(140).f
    , anObject = __webpack_require__(101);

  $export($export.S, 'Reflect', {
    deleteProperty: function deleteProperty(target, propertyKey){
      var desc = gOPD(anObject(target), propertyKey);
      return desc && !desc.configurable ? false : delete target[propertyKey];
    }
  });

/***/ },
/* 325 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';
  // 26.1.5 Reflect.enumerate(target)
  var $export  = __webpack_require__(97)
    , anObject = __webpack_require__(101);
  var Enumerate = function(iterated){
    this._t = anObject(iterated); // target
    this._i = 0;                  // next index
    var keys = this._k = []       // keys
      , key;
    for(key in iterated)keys.push(key);
  };
  __webpack_require__(219)(Enumerate, 'Object', function(){
    var that = this
      , keys = that._k
      , key;
    do {
      if(that._i >= keys.length)return {value: undefined, done: true};
    } while(!((key = keys[that._i++]) in that._t));
    return {value: key, done: false};
  });

  $export($export.S, 'Reflect', {
    enumerate: function enumerate(target){
      return new Enumerate(target);
    }
  });

/***/ },
/* 326 */
/***/ function(module, exports, __webpack_require__) {

  // 26.1.6 Reflect.get(target, propertyKey [, receiver])
  var gOPD           = __webpack_require__(140)
    , getPrototypeOf = __webpack_require__(148)
    , has            = __webpack_require__(94)
    , $export        = __webpack_require__(97)
    , isObject       = __webpack_require__(102)
    , anObject       = __webpack_require__(101);

  function get(target, propertyKey/*, receiver*/){
    var receiver = arguments.length < 3 ? target : arguments[2]
      , desc, proto;
    if(anObject(target) === receiver)return target[propertyKey];
    if(desc = gOPD.f(target, propertyKey))return has(desc, 'value')
      ? desc.value
      : desc.get !== undefined
        ? desc.get.call(receiver)
        : undefined;
    if(isObject(proto = getPrototypeOf(target)))return get(proto, propertyKey, receiver);
  }

  $export($export.S, 'Reflect', {get: get});

/***/ },
/* 327 */
/***/ function(module, exports, __webpack_require__) {

  // 26.1.7 Reflect.getOwnPropertyDescriptor(target, propertyKey)
  var gOPD     = __webpack_require__(140)
    , $export  = __webpack_require__(97)
    , anObject = __webpack_require__(101);

  $export($export.S, 'Reflect', {
    getOwnPropertyDescriptor: function getOwnPropertyDescriptor(target, propertyKey){
      return gOPD.f(anObject(target), propertyKey);
    }
  });

/***/ },
/* 328 */
/***/ function(module, exports, __webpack_require__) {

  // 26.1.8 Reflect.getPrototypeOf(target)
  var $export  = __webpack_require__(97)
    , getProto = __webpack_require__(148)
    , anObject = __webpack_require__(101);

  $export($export.S, 'Reflect', {
    getPrototypeOf: function getPrototypeOf(target){
      return getProto(anObject(target));
    }
  });

/***/ },
/* 329 */
/***/ function(module, exports, __webpack_require__) {

  // 26.1.9 Reflect.has(target, propertyKey)
  var $export = __webpack_require__(97);

  $export($export.S, 'Reflect', {
    has: function has(target, propertyKey){
      return propertyKey in target;
    }
  });

/***/ },
/* 330 */
/***/ function(module, exports, __webpack_require__) {

  // 26.1.10 Reflect.isExtensible(target)
  var $export       = __webpack_require__(97)
    , anObject      = __webpack_require__(101)
    , $isExtensible = Object.isExtensible;

  $export($export.S, 'Reflect', {
    isExtensible: function isExtensible(target){
      anObject(target);
      return $isExtensible ? $isExtensible(target) : true;
    }
  });

/***/ },
/* 331 */
/***/ function(module, exports, __webpack_require__) {

  // 26.1.11 Reflect.ownKeys(target)
  var $export = __webpack_require__(97);

  $export($export.S, 'Reflect', {ownKeys: __webpack_require__(332)});

/***/ },
/* 332 */
/***/ function(module, exports, __webpack_require__) {

  // all object keys, includes non-enumerable and symbols
  var gOPN     = __webpack_require__(139)
    , gOPS     = __webpack_require__(132)
    , anObject = __webpack_require__(101)
    , Reflect  = __webpack_require__(93).Reflect;
  module.exports = Reflect && Reflect.ownKeys || function ownKeys(it){
    var keys       = gOPN.f(anObject(it))
      , getSymbols = gOPS.f;
    return getSymbols ? keys.concat(getSymbols(it)) : keys;
  };

/***/ },
/* 333 */
/***/ function(module, exports, __webpack_require__) {

  // 26.1.12 Reflect.preventExtensions(target)
  var $export            = __webpack_require__(97)
    , anObject           = __webpack_require__(101)
    , $preventExtensions = Object.preventExtensions;

  $export($export.S, 'Reflect', {
    preventExtensions: function preventExtensions(target){
      anObject(target);
      try {
        if($preventExtensions)$preventExtensions(target);
        return true;
      } catch(e){
        return false;
      }
    }
  });

/***/ },
/* 334 */
/***/ function(module, exports, __webpack_require__) {

  // 26.1.13 Reflect.set(target, propertyKey, V [, receiver])
  var dP             = __webpack_require__(100)
    , gOPD           = __webpack_require__(140)
    , getPrototypeOf = __webpack_require__(148)
    , has            = __webpack_require__(94)
    , $export        = __webpack_require__(97)
    , createDesc     = __webpack_require__(106)
    , anObject       = __webpack_require__(101)
    , isObject       = __webpack_require__(102);

  function set(target, propertyKey, V/*, receiver*/){
    var receiver = arguments.length < 4 ? target : arguments[3]
      , ownDesc  = gOPD.f(anObject(target), propertyKey)
      , existingDescriptor, proto;
    if(!ownDesc){
      if(isObject(proto = getPrototypeOf(target))){
        return set(proto, propertyKey, V, receiver);
      }
      ownDesc = createDesc(0);
    }
    if(has(ownDesc, 'value')){
      if(ownDesc.writable === false || !isObject(receiver))return false;
      existingDescriptor = gOPD.f(receiver, propertyKey) || createDesc(0);
      existingDescriptor.value = V;
      dP.f(receiver, propertyKey, existingDescriptor);
      return true;
    }
    return ownDesc.set === undefined ? false : (ownDesc.set.call(receiver, V), true);
  }

  $export($export.S, 'Reflect', {set: set});

/***/ },
/* 335 */
/***/ function(module, exports, __webpack_require__) {

  // 26.1.14 Reflect.setPrototypeOf(target, proto)
  var $export  = __webpack_require__(97)
    , setProto = __webpack_require__(162);

  if(setProto)$export($export.S, 'Reflect', {
    setPrototypeOf: function setPrototypeOf(target, proto){
      setProto.check(target, proto);
      try {
        setProto.set(target, proto);
        return true;
      } catch(e){
        return false;
      }
    }
  });

/***/ },
/* 336 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';
  // https://github.com/tc39/Array.prototype.includes
  var $export   = __webpack_require__(97)
    , $includes = __webpack_require__(125)(true);

  $export($export.P, 'Array', {
    includes: function includes(el /*, fromIndex = 0 */){
      return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);
    }
  });

  __webpack_require__(275)('includes');

/***/ },
/* 337 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';
  // https://github.com/mathiasbynens/String.prototype.at
  var $export = __webpack_require__(97)
    , $at     = __webpack_require__(216)(true);

  $export($export.P, 'String', {
    at: function at(pos){
      return $at(this, pos);
    }
  });

/***/ },
/* 338 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';
  // https://github.com/tc39/proposal-string-pad-start-end
  var $export = __webpack_require__(97)
    , $pad    = __webpack_require__(339);

  $export($export.P, 'String', {
    padStart: function padStart(maxLength /*, fillString = ' ' */){
      return $pad(this, maxLength, arguments.length > 1 ? arguments[1] : undefined, true);
    }
  });

/***/ },
/* 339 */
/***/ function(module, exports, __webpack_require__) {

  // https://github.com/tc39/proposal-string-pad-start-end
  var toLength = __webpack_require__(126)
    , repeat   = __webpack_require__(180)
    , defined  = __webpack_require__(124);

  module.exports = function(that, maxLength, fillString, left){
    var S            = String(defined(that))
      , stringLength = S.length
      , fillStr      = fillString === undefined ? ' ' : String(fillString)
      , intMaxLength = toLength(maxLength);
    if(intMaxLength <= stringLength || fillStr == '')return S;
    var fillLen = intMaxLength - stringLength
      , stringFiller = repeat.call(fillStr, Math.ceil(fillLen / fillStr.length));
    if(stringFiller.length > fillLen)stringFiller = stringFiller.slice(0, fillLen);
    return left ? stringFiller + S : S + stringFiller;
  };


/***/ },
/* 340 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';
  // https://github.com/tc39/proposal-string-pad-start-end
  var $export = __webpack_require__(97)
    , $pad    = __webpack_require__(339);

  $export($export.P, 'String', {
    padEnd: function padEnd(maxLength /*, fillString = ' ' */){
      return $pad(this, maxLength, arguments.length > 1 ? arguments[1] : undefined, false);
    }
  });

/***/ },
/* 341 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';
  // https://github.com/sebmarkbage/ecmascript-string-left-right-trim
  __webpack_require__(172)('trimLeft', function($trim){
    return function trimLeft(){
      return $trim(this, 1);
    };
  }, 'trimStart');

/***/ },
/* 342 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';
  // https://github.com/sebmarkbage/ecmascript-string-left-right-trim
  __webpack_require__(172)('trimRight', function($trim){
    return function trimRight(){
      return $trim(this, 2);
    };
  }, 'trimEnd');

/***/ },
/* 343 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';
  // https://tc39.github.io/String.prototype.matchAll/
  var $export     = __webpack_require__(97)
    , defined     = __webpack_require__(124)
    , toLength    = __webpack_require__(126)
    , isRegExp    = __webpack_require__(223)
    , getFlags    = __webpack_require__(285)
    , RegExpProto = RegExp.prototype;

  var $RegExpStringIterator = function(regexp, string){
    this._r = regexp;
    this._s = string;
  };

  __webpack_require__(219)($RegExpStringIterator, 'RegExp String', function next(){
    var match = this._r.exec(this._s);
    return {value: match, done: match === null};
  });

  $export($export.P, 'String', {
    matchAll: function matchAll(regexp){
      defined(this);
      if(!isRegExp(regexp))throw TypeError(regexp + ' is not a regexp!');
      var S     = String(this)
        , flags = 'flags' in RegExpProto ? String(regexp.flags) : getFlags.call(regexp)
        , rx    = new RegExp(regexp.source, ~flags.indexOf('g') ? flags : 'g' + flags);
      rx.lastIndex = toLength(regexp.lastIndex);
      return new $RegExpStringIterator(rx, S);
    }
  });

/***/ },
/* 344 */
/***/ function(module, exports, __webpack_require__) {

  __webpack_require__(116)('asyncIterator');

/***/ },
/* 345 */
/***/ function(module, exports, __webpack_require__) {

  __webpack_require__(116)('observable');

/***/ },
/* 346 */
/***/ function(module, exports, __webpack_require__) {

  // https://github.com/tc39/proposal-object-getownpropertydescriptors
  var $export        = __webpack_require__(97)
    , ownKeys        = __webpack_require__(332)
    , toIObject      = __webpack_require__(121)
    , gOPD           = __webpack_require__(140)
    , createProperty = __webpack_require__(252);

  $export($export.S, 'Object', {
    getOwnPropertyDescriptors: function getOwnPropertyDescriptors(object){
      var O       = toIObject(object)
        , getDesc = gOPD.f
        , keys    = ownKeys(O)
        , result  = {}
        , i       = 0
        , key;
      while(keys.length > i)createProperty(result, key = keys[i++], getDesc(O, key));
      return result;
    }
  });

/***/ },
/* 347 */
/***/ function(module, exports, __webpack_require__) {

  // https://github.com/tc39/proposal-object-values-entries
  var $export = __webpack_require__(97)
    , $values = __webpack_require__(348)(false);

  $export($export.S, 'Object', {
    values: function values(it){
      return $values(it);
    }
  });

/***/ },
/* 348 */
/***/ function(module, exports, __webpack_require__) {

  var getKeys   = __webpack_require__(119)
    , toIObject = __webpack_require__(121)
    , isEnum    = __webpack_require__(133).f;
  module.exports = function(isEntries){
    return function(it){
      var O      = toIObject(it)
        , keys   = getKeys(O)
        , length = keys.length
        , i      = 0
        , result = []
        , key;
      while(length > i)if(isEnum.call(O, key = keys[i++])){
        result.push(isEntries ? [key, O[key]] : O[key]);
      } return result;
    };
  };

/***/ },
/* 349 */
/***/ function(module, exports, __webpack_require__) {

  // https://github.com/tc39/proposal-object-values-entries
  var $export  = __webpack_require__(97)
    , $entries = __webpack_require__(348)(true);

  $export($export.S, 'Object', {
    entries: function entries(it){
      return $entries(it);
    }
  });

/***/ },
/* 350 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';
  var $export         = __webpack_require__(97)
    , toObject        = __webpack_require__(147)
    , aFunction       = __webpack_require__(110)
    , $defineProperty = __webpack_require__(100);

  // B.2.2.2 Object.prototype.__defineGetter__(P, getter)
  __webpack_require__(95) && $export($export.P + __webpack_require__(351), 'Object', {
    __defineGetter__: function __defineGetter__(P, getter){
      $defineProperty.f(toObject(this), P, {get: aFunction(getter), enumerable: true, configurable: true});
    }
  });

/***/ },
/* 351 */
/***/ function(module, exports, __webpack_require__) {

  // Forced replacement prototype accessors methods
  module.exports = __webpack_require__(117)|| !__webpack_require__(96)(function(){
    var K = Math.random();
    // In FF throws only define methods
    __defineSetter__.call(null, K, function(){ /* empty */});
    delete __webpack_require__(93)[K];
  });

/***/ },
/* 352 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';
  var $export         = __webpack_require__(97)
    , toObject        = __webpack_require__(147)
    , aFunction       = __webpack_require__(110)
    , $defineProperty = __webpack_require__(100);

  // B.2.2.3 Object.prototype.__defineSetter__(P, setter)
  __webpack_require__(95) && $export($export.P + __webpack_require__(351), 'Object', {
    __defineSetter__: function __defineSetter__(P, setter){
      $defineProperty.f(toObject(this), P, {set: aFunction(setter), enumerable: true, configurable: true});
    }
  });

/***/ },
/* 353 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';
  var $export                  = __webpack_require__(97)
    , toObject                 = __webpack_require__(147)
    , toPrimitive              = __webpack_require__(105)
    , getPrototypeOf           = __webpack_require__(148)
    , getOwnPropertyDescriptor = __webpack_require__(140).f;

  // B.2.2.4 Object.prototype.__lookupGetter__(P)
  __webpack_require__(95) && $export($export.P + __webpack_require__(351), 'Object', {
    __lookupGetter__: function __lookupGetter__(P){
      var O = toObject(this)
        , K = toPrimitive(P, true)
        , D;
      do {
        if(D = getOwnPropertyDescriptor(O, K))return D.get;
      } while(O = getPrototypeOf(O));
    }
  });

/***/ },
/* 354 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';
  var $export                  = __webpack_require__(97)
    , toObject                 = __webpack_require__(147)
    , toPrimitive              = __webpack_require__(105)
    , getPrototypeOf           = __webpack_require__(148)
    , getOwnPropertyDescriptor = __webpack_require__(140).f;

  // B.2.2.5 Object.prototype.__lookupSetter__(P)
  __webpack_require__(95) && $export($export.P + __webpack_require__(351), 'Object', {
    __lookupSetter__: function __lookupSetter__(P){
      var O = toObject(this)
        , K = toPrimitive(P, true)
        , D;
      do {
        if(D = getOwnPropertyDescriptor(O, K))return D.set;
      } while(O = getPrototypeOf(O));
    }
  });

/***/ },
/* 355 */
/***/ function(module, exports, __webpack_require__) {

  // https://github.com/DavidBruant/Map-Set.prototype.toJSON
  var $export  = __webpack_require__(97);

  $export($export.P + $export.R, 'Map', {toJSON: __webpack_require__(356)('Map')});

/***/ },
/* 356 */
/***/ function(module, exports, __webpack_require__) {

  // https://github.com/DavidBruant/Map-Set.prototype.toJSON
  var classof = __webpack_require__(164)
    , from    = __webpack_require__(357);
  module.exports = function(NAME){
    return function toJSON(){
      if(classof(this) != NAME)throw TypeError(NAME + "#toJSON isn't generic");
      return from(this);
    };
  };

/***/ },
/* 357 */
/***/ function(module, exports, __webpack_require__) {

  var forOf = __webpack_require__(295);

  module.exports = function(iter, ITERATOR){
    var result = [];
    forOf(iter, false, result.push, result, ITERATOR);
    return result;
  };


/***/ },
/* 358 */
/***/ function(module, exports, __webpack_require__) {

  // https://github.com/DavidBruant/Map-Set.prototype.toJSON
  var $export  = __webpack_require__(97);

  $export($export.P + $export.R, 'Set', {toJSON: __webpack_require__(356)('Set')});

/***/ },
/* 359 */
/***/ function(module, exports, __webpack_require__) {

  // https://github.com/ljharb/proposal-global
  var $export = __webpack_require__(97);

  $export($export.S, 'System', {global: __webpack_require__(93)});

/***/ },
/* 360 */
/***/ function(module, exports, __webpack_require__) {

  // https://github.com/ljharb/proposal-is-error
  var $export = __webpack_require__(97)
    , cof     = __webpack_require__(123);

  $export($export.S, 'Error', {
    isError: function isError(it){
      return cof(it) === 'Error';
    }
  });

/***/ },
/* 361 */
/***/ function(module, exports, __webpack_require__) {

  // https://gist.github.com/BrendanEich/4294d5c212a6d2254703
  var $export = __webpack_require__(97);

  $export($export.S, 'Math', {
    iaddh: function iaddh(x0, x1, y0, y1){
      var $x0 = x0 >>> 0
        , $x1 = x1 >>> 0
        , $y0 = y0 >>> 0;
      return $x1 + (y1 >>> 0) + (($x0 & $y0 | ($x0 | $y0) & ~($x0 + $y0 >>> 0)) >>> 31) | 0;
    }
  });

/***/ },
/* 362 */
/***/ function(module, exports, __webpack_require__) {

  // https://gist.github.com/BrendanEich/4294d5c212a6d2254703
  var $export = __webpack_require__(97);

  $export($export.S, 'Math', {
    isubh: function isubh(x0, x1, y0, y1){
      var $x0 = x0 >>> 0
        , $x1 = x1 >>> 0
        , $y0 = y0 >>> 0;
      return $x1 - (y1 >>> 0) - ((~$x0 & $y0 | ~($x0 ^ $y0) & $x0 - $y0 >>> 0) >>> 31) | 0;
    }
  });

/***/ },
/* 363 */
/***/ function(module, exports, __webpack_require__) {

  // https://gist.github.com/BrendanEich/4294d5c212a6d2254703
  var $export = __webpack_require__(97);

  $export($export.S, 'Math', {
    imulh: function imulh(u, v){
      var UINT16 = 0xffff
        , $u = +u
        , $v = +v
        , u0 = $u & UINT16
        , v0 = $v & UINT16
        , u1 = $u >> 16
        , v1 = $v >> 16
        , t  = (u1 * v0 >>> 0) + (u0 * v0 >>> 16);
      return u1 * v1 + (t >> 16) + ((u0 * v1 >>> 0) + (t & UINT16) >> 16);
    }
  });

/***/ },
/* 364 */
/***/ function(module, exports, __webpack_require__) {

  // https://gist.github.com/BrendanEich/4294d5c212a6d2254703
  var $export = __webpack_require__(97);

  $export($export.S, 'Math', {
    umulh: function umulh(u, v){
      var UINT16 = 0xffff
        , $u = +u
        , $v = +v
        , u0 = $u & UINT16
        , v0 = $v & UINT16
        , u1 = $u >>> 16
        , v1 = $v >>> 16
        , t  = (u1 * v0 >>> 0) + (u0 * v0 >>> 16);
      return u1 * v1 + (t >>> 16) + ((u0 * v1 >>> 0) + (t & UINT16) >>> 16);
    }
  });

/***/ },
/* 365 */
/***/ function(module, exports, __webpack_require__) {

  var metadata                  = __webpack_require__(366)
    , anObject                  = __webpack_require__(101)
    , toMetaKey                 = metadata.key
    , ordinaryDefineOwnMetadata = metadata.set;

  metadata.exp({defineMetadata: function defineMetadata(metadataKey, metadataValue, target, targetKey){
    ordinaryDefineOwnMetadata(metadataKey, metadataValue, anObject(target), toMetaKey(targetKey));
  }});

/***/ },
/* 366 */
/***/ function(module, exports, __webpack_require__) {

  var Map     = __webpack_require__(300)
    , $export = __webpack_require__(97)
    , shared  = __webpack_require__(112)('metadata')
    , store   = shared.store || (shared.store = new (__webpack_require__(304)));

  var getOrCreateMetadataMap = function(target, targetKey, create){
    var targetMetadata = store.get(target);
    if(!targetMetadata){
      if(!create)return undefined;
      store.set(target, targetMetadata = new Map);
    }
    var keyMetadata = targetMetadata.get(targetKey);
    if(!keyMetadata){
      if(!create)return undefined;
      targetMetadata.set(targetKey, keyMetadata = new Map);
    } return keyMetadata;
  };
  var ordinaryHasOwnMetadata = function(MetadataKey, O, P){
    var metadataMap = getOrCreateMetadataMap(O, P, false);
    return metadataMap === undefined ? false : metadataMap.has(MetadataKey);
  };
  var ordinaryGetOwnMetadata = function(MetadataKey, O, P){
    var metadataMap = getOrCreateMetadataMap(O, P, false);
    return metadataMap === undefined ? undefined : metadataMap.get(MetadataKey);
  };
  var ordinaryDefineOwnMetadata = function(MetadataKey, MetadataValue, O, P){
    getOrCreateMetadataMap(O, P, true).set(MetadataKey, MetadataValue);
  };
  var ordinaryOwnMetadataKeys = function(target, targetKey){
    var metadataMap = getOrCreateMetadataMap(target, targetKey, false)
      , keys        = [];
    if(metadataMap)metadataMap.forEach(function(_, key){ keys.push(key); });
    return keys;
  };
  var toMetaKey = function(it){
    return it === undefined || typeof it == 'symbol' ? it : String(it);
  };
  var exp = function(O){
    $export($export.S, 'Reflect', O);
  };

  module.exports = {
    store: store,
    map: getOrCreateMetadataMap,
    has: ordinaryHasOwnMetadata,
    get: ordinaryGetOwnMetadata,
    set: ordinaryDefineOwnMetadata,
    keys: ordinaryOwnMetadataKeys,
    key: toMetaKey,
    exp: exp
  };

/***/ },
/* 367 */
/***/ function(module, exports, __webpack_require__) {

  var metadata               = __webpack_require__(366)
    , anObject               = __webpack_require__(101)
    , toMetaKey              = metadata.key
    , getOrCreateMetadataMap = metadata.map
    , store                  = metadata.store;

  metadata.exp({deleteMetadata: function deleteMetadata(metadataKey, target /*, targetKey */){
    var targetKey   = arguments.length < 3 ? undefined : toMetaKey(arguments[2])
      , metadataMap = getOrCreateMetadataMap(anObject(target), targetKey, false);
    if(metadataMap === undefined || !metadataMap['delete'](metadataKey))return false;
    if(metadataMap.size)return true;
    var targetMetadata = store.get(target);
    targetMetadata['delete'](targetKey);
    return !!targetMetadata.size || store['delete'](target);
  }});

/***/ },
/* 368 */
/***/ function(module, exports, __webpack_require__) {

  var metadata               = __webpack_require__(366)
    , anObject               = __webpack_require__(101)
    , getPrototypeOf         = __webpack_require__(148)
    , ordinaryHasOwnMetadata = metadata.has
    , ordinaryGetOwnMetadata = metadata.get
    , toMetaKey              = metadata.key;

  var ordinaryGetMetadata = function(MetadataKey, O, P){
    var hasOwn = ordinaryHasOwnMetadata(MetadataKey, O, P);
    if(hasOwn)return ordinaryGetOwnMetadata(MetadataKey, O, P);
    var parent = getPrototypeOf(O);
    return parent !== null ? ordinaryGetMetadata(MetadataKey, parent, P) : undefined;
  };

  metadata.exp({getMetadata: function getMetadata(metadataKey, target /*, targetKey */){
    return ordinaryGetMetadata(metadataKey, anObject(target), arguments.length < 3 ? undefined : toMetaKey(arguments[2]));
  }});

/***/ },
/* 369 */
/***/ function(module, exports, __webpack_require__) {

  var Set                     = __webpack_require__(303)
    , from                    = __webpack_require__(357)
    , metadata                = __webpack_require__(366)
    , anObject                = __webpack_require__(101)
    , getPrototypeOf          = __webpack_require__(148)
    , ordinaryOwnMetadataKeys = metadata.keys
    , toMetaKey               = metadata.key;

  var ordinaryMetadataKeys = function(O, P){
    var oKeys  = ordinaryOwnMetadataKeys(O, P)
      , parent = getPrototypeOf(O);
    if(parent === null)return oKeys;
    var pKeys  = ordinaryMetadataKeys(parent, P);
    return pKeys.length ? oKeys.length ? from(new Set(oKeys.concat(pKeys))) : pKeys : oKeys;
  };

  metadata.exp({getMetadataKeys: function getMetadataKeys(target /*, targetKey */){
    return ordinaryMetadataKeys(anObject(target), arguments.length < 2 ? undefined : toMetaKey(arguments[1]));
  }});

/***/ },
/* 370 */
/***/ function(module, exports, __webpack_require__) {

  var metadata               = __webpack_require__(366)
    , anObject               = __webpack_require__(101)
    , ordinaryGetOwnMetadata = metadata.get
    , toMetaKey              = metadata.key;

  metadata.exp({getOwnMetadata: function getOwnMetadata(metadataKey, target /*, targetKey */){
    return ordinaryGetOwnMetadata(metadataKey, anObject(target)
      , arguments.length < 3 ? undefined : toMetaKey(arguments[2]));
  }});

/***/ },
/* 371 */
/***/ function(module, exports, __webpack_require__) {

  var metadata                = __webpack_require__(366)
    , anObject                = __webpack_require__(101)
    , ordinaryOwnMetadataKeys = metadata.keys
    , toMetaKey               = metadata.key;

  metadata.exp({getOwnMetadataKeys: function getOwnMetadataKeys(target /*, targetKey */){
    return ordinaryOwnMetadataKeys(anObject(target), arguments.length < 2 ? undefined : toMetaKey(arguments[1]));
  }});

/***/ },
/* 372 */
/***/ function(module, exports, __webpack_require__) {

  var metadata               = __webpack_require__(366)
    , anObject               = __webpack_require__(101)
    , getPrototypeOf         = __webpack_require__(148)
    , ordinaryHasOwnMetadata = metadata.has
    , toMetaKey              = metadata.key;

  var ordinaryHasMetadata = function(MetadataKey, O, P){
    var hasOwn = ordinaryHasOwnMetadata(MetadataKey, O, P);
    if(hasOwn)return true;
    var parent = getPrototypeOf(O);
    return parent !== null ? ordinaryHasMetadata(MetadataKey, parent, P) : false;
  };

  metadata.exp({hasMetadata: function hasMetadata(metadataKey, target /*, targetKey */){
    return ordinaryHasMetadata(metadataKey, anObject(target), arguments.length < 3 ? undefined : toMetaKey(arguments[2]));
  }});

/***/ },
/* 373 */
/***/ function(module, exports, __webpack_require__) {

  var metadata               = __webpack_require__(366)
    , anObject               = __webpack_require__(101)
    , ordinaryHasOwnMetadata = metadata.has
    , toMetaKey              = metadata.key;

  metadata.exp({hasOwnMetadata: function hasOwnMetadata(metadataKey, target /*, targetKey */){
    return ordinaryHasOwnMetadata(metadataKey, anObject(target)
      , arguments.length < 3 ? undefined : toMetaKey(arguments[2]));
  }});

/***/ },
/* 374 */
/***/ function(module, exports, __webpack_require__) {

  var metadata                  = __webpack_require__(366)
    , anObject                  = __webpack_require__(101)
    , aFunction                 = __webpack_require__(110)
    , toMetaKey                 = metadata.key
    , ordinaryDefineOwnMetadata = metadata.set;

  metadata.exp({metadata: function metadata(metadataKey, metadataValue){
    return function decorator(target, targetKey){
      ordinaryDefineOwnMetadata(
        metadataKey, metadataValue,
        (targetKey !== undefined ? anObject : aFunction)(target),
        toMetaKey(targetKey)
      );
    };
  }});

/***/ },
/* 375 */
/***/ function(module, exports, __webpack_require__) {

  // https://github.com/rwaldron/tc39-notes/blob/master/es6/2014-09/sept-25.md#510-globalasap-for-enqueuing-a-microtask
  var $export   = __webpack_require__(97)
    , microtask = __webpack_require__(298)()
    , process   = __webpack_require__(93).process
    , isNode    = __webpack_require__(123)(process) == 'process';

  $export($export.G, {
    asap: function asap(fn){
      var domain = isNode && process.domain;
      microtask(domain ? domain.bind(fn) : fn);
    }
  });

/***/ },
/* 376 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';
  // https://github.com/zenparsing/es-observable
  var $export     = __webpack_require__(97)
    , global      = __webpack_require__(93)
    , core        = __webpack_require__(98)
    , microtask   = __webpack_require__(298)()
    , OBSERVABLE  = __webpack_require__(114)('observable')
    , aFunction   = __webpack_require__(110)
    , anObject    = __webpack_require__(101)
    , anInstance  = __webpack_require__(294)
    , redefineAll = __webpack_require__(299)
    , hide        = __webpack_require__(99)
    , forOf       = __webpack_require__(295)
    , RETURN      = forOf.RETURN;

  var getMethod = function(fn){
    return fn == null ? undefined : aFunction(fn);
  };

  var cleanupSubscription = function(subscription){
    var cleanup = subscription._c;
    if(cleanup){
      subscription._c = undefined;
      cleanup();
    }
  };

  var subscriptionClosed = function(subscription){
    return subscription._o === undefined;
  };

  var closeSubscription = function(subscription){
    if(!subscriptionClosed(subscription)){
      subscription._o = undefined;
      cleanupSubscription(subscription);
    }
  };

  var Subscription = function(observer, subscriber){
    anObject(observer);
    this._c = undefined;
    this._o = observer;
    observer = new SubscriptionObserver(this);
    try {
      var cleanup      = subscriber(observer)
        , subscription = cleanup;
      if(cleanup != null){
        if(typeof cleanup.unsubscribe === 'function')cleanup = function(){ subscription.unsubscribe(); };
        else aFunction(cleanup);
        this._c = cleanup;
      }
    } catch(e){
      observer.error(e);
      return;
    } if(subscriptionClosed(this))cleanupSubscription(this);
  };

  Subscription.prototype = redefineAll({}, {
    unsubscribe: function unsubscribe(){ closeSubscription(this); }
  });

  var SubscriptionObserver = function(subscription){
    this._s = subscription;
  };

  SubscriptionObserver.prototype = redefineAll({}, {
    next: function next(value){
      var subscription = this._s;
      if(!subscriptionClosed(subscription)){
        var observer = subscription._o;
        try {
          var m = getMethod(observer.next);
          if(m)return m.call(observer, value);
        } catch(e){
          try {
            closeSubscription(subscription);
          } finally {
            throw e;
          }
        }
      }
    },
    error: function error(value){
      var subscription = this._s;
      if(subscriptionClosed(subscription))throw value;
      var observer = subscription._o;
      subscription._o = undefined;
      try {
        var m = getMethod(observer.error);
        if(!m)throw value;
        value = m.call(observer, value);
      } catch(e){
        try {
          cleanupSubscription(subscription);
        } finally {
          throw e;
        }
      } cleanupSubscription(subscription);
      return value;
    },
    complete: function complete(value){
      var subscription = this._s;
      if(!subscriptionClosed(subscription)){
        var observer = subscription._o;
        subscription._o = undefined;
        try {
          var m = getMethod(observer.complete);
          value = m ? m.call(observer, value) : undefined;
        } catch(e){
          try {
            cleanupSubscription(subscription);
          } finally {
            throw e;
          }
        } cleanupSubscription(subscription);
        return value;
      }
    }
  });

  var $Observable = function Observable(subscriber){
    anInstance(this, $Observable, 'Observable', '_f')._f = aFunction(subscriber);
  };

  redefineAll($Observable.prototype, {
    subscribe: function subscribe(observer){
      return new Subscription(observer, this._f);
    },
    forEach: function forEach(fn){
      var that = this;
      return new (core.Promise || global.Promise)(function(resolve, reject){
        aFunction(fn);
        var subscription = that.subscribe({
          next : function(value){
            try {
              return fn(value);
            } catch(e){
              reject(e);
              subscription.unsubscribe();
            }
          },
          error: reject,
          complete: resolve
        });
      });
    }
  });

  redefineAll($Observable, {
    from: function from(x){
      var C = typeof this === 'function' ? this : $Observable;
      var method = getMethod(anObject(x)[OBSERVABLE]);
      if(method){
        var observable = anObject(method.call(x));
        return observable.constructor === C ? observable : new C(function(observer){
          return observable.subscribe(observer);
        });
      }
      return new C(function(observer){
        var done = false;
        microtask(function(){
          if(!done){
            try {
              if(forOf(x, false, function(it){
                observer.next(it);
                if(done)return RETURN;
              }) === RETURN)return;
            } catch(e){
              if(done)throw e;
              observer.error(e);
              return;
            } observer.complete();
          }
        });
        return function(){ done = true; };
      });
    },
    of: function of(){
      for(var i = 0, l = arguments.length, items = Array(l); i < l;)items[i] = arguments[i++];
      return new (typeof this === 'function' ? this : $Observable)(function(observer){
        var done = false;
        microtask(function(){
          if(!done){
            for(var i = 0; i < items.length; ++i){
              observer.next(items[i]);
              if(done)return;
            } observer.complete();
          }
        });
        return function(){ done = true; };
      });
    }
  });

  hide($Observable.prototype, OBSERVABLE, function(){ return this; });

  $export($export.G, {Observable: $Observable});

  __webpack_require__(281)('Observable');

/***/ },
/* 377 */
/***/ function(module, exports, __webpack_require__) {

  // ie9- setTimeout & setInterval additional parameters fix
  var global     = __webpack_require__(93)
    , $export    = __webpack_require__(97)
    , invoke     = __webpack_require__(167)
    , partial    = __webpack_require__(378)
    , navigator  = global.navigator
    , MSIE       = !!navigator && /MSIE .\./.test(navigator.userAgent); // <- dirty ie9- check
  var wrap = function(set){
    return MSIE ? function(fn, time /*, ...args */){
      return set(invoke(
        partial,
        [].slice.call(arguments, 2),
        typeof fn == 'function' ? fn : Function(fn)
      ), time);
    } : set;
  };
  $export($export.G + $export.B + $export.F * MSIE, {
    setTimeout:  wrap(global.setTimeout),
    setInterval: wrap(global.setInterval)
  });

/***/ },
/* 378 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';
  var path      = __webpack_require__(379)
    , invoke    = __webpack_require__(167)
    , aFunction = __webpack_require__(110);
  module.exports = function(/* ...pargs */){
    var fn     = aFunction(this)
      , length = arguments.length
      , pargs  = Array(length)
      , i      = 0
      , _      = path._
      , holder = false;
    while(length > i)if((pargs[i] = arguments[i++]) === _)holder = true;
    return function(/* ...args */){
      var that = this
        , aLen = arguments.length
        , j = 0, k = 0, args;
      if(!holder && !aLen)return invoke(fn, pargs, that);
      args = pargs.slice();
      if(holder)for(;length > j; j++)if(args[j] === _)args[j] = arguments[k++];
      while(aLen > k)args.push(arguments[k++]);
      return invoke(fn, args, that);
    };
  };

/***/ },
/* 379 */
/***/ function(module, exports, __webpack_require__) {

  module.exports = __webpack_require__(93);

/***/ },
/* 380 */
/***/ function(module, exports, __webpack_require__) {

  var $export = __webpack_require__(97)
    , $task   = __webpack_require__(297);
  $export($export.G + $export.B, {
    setImmediate:   $task.set,
    clearImmediate: $task.clear
  });

/***/ },
/* 381 */
/***/ function(module, exports, __webpack_require__) {

  var $iterators    = __webpack_require__(282)
    , redefine      = __webpack_require__(107)
    , global        = __webpack_require__(93)
    , hide          = __webpack_require__(99)
    , Iterators     = __webpack_require__(218)
    , wks           = __webpack_require__(114)
    , ITERATOR      = wks('iterator')
    , TO_STRING_TAG = wks('toStringTag')
    , ArrayValues   = Iterators.Array;

  for(var collections = ['NodeList', 'DOMTokenList', 'MediaList', 'StyleSheetList', 'CSSRuleList'], i = 0; i < 5; i++){
    var NAME       = collections[i]
      , Collection = global[NAME]
      , proto      = Collection && Collection.prototype
      , key;
    if(proto){
      if(!proto[ITERATOR])hide(proto, ITERATOR, ArrayValues);
      if(!proto[TO_STRING_TAG])hide(proto, TO_STRING_TAG, NAME);
      Iterators[NAME] = ArrayValues;
      for(key in $iterators)if(!proto[key])redefine(proto, key, $iterators[key], true);
    }
  }

/***/ },
/* 382 */
/***/ function(module, exports, __webpack_require__) {

  __webpack_require__(383);
  module.exports = __webpack_require__(98).RegExp.escape;

/***/ },
/* 383 */
/***/ function(module, exports, __webpack_require__) {

  // https://github.com/benjamingr/RexExp.escape
  var $export = __webpack_require__(97)
    , $re     = __webpack_require__(384)(/[\\^$*+?.()|[\]{}]/g, '\\$&');

  $export($export.S, 'RegExp', {escape: function escape(it){ return $re(it); }});


/***/ },
/* 384 */
/***/ function(module, exports) {

  module.exports = function(regExp, replace){
    var replacer = replace === Object(replace) ? function(part){
      return replace[part];
    } : replace;
    return function(it){
      return String(it).replace(regExp, replacer);
    };
  };

/***/ },
/* 385 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  module.exports = __webpack_require__(386);


/***/ },
/* 386 */
/***/ function(module, exports, __webpack_require__) {

  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  var _assign = __webpack_require__(387);

  var ReactChildren = __webpack_require__(388);
  var ReactComponent = __webpack_require__(401);
  var ReactPureComponent = __webpack_require__(404);
  var ReactClass = __webpack_require__(405);
  var ReactDOMFactories = __webpack_require__(407);
  var ReactElement = __webpack_require__(392);
  var ReactPropTypes = __webpack_require__(412);
  var ReactVersion = __webpack_require__(413);

  var onlyChild = __webpack_require__(414);
  var warning = __webpack_require__(394);

  var createElement = ReactElement.createElement;
  var createFactory = ReactElement.createFactory;
  var cloneElement = ReactElement.cloneElement;

  if (true) {
    var ReactElementValidator = __webpack_require__(408);
    createElement = ReactElementValidator.createElement;
    createFactory = ReactElementValidator.createFactory;
    cloneElement = ReactElementValidator.cloneElement;
  }

  var __spread = _assign;

  if (true) {
    var warned = false;
    __spread = function () {
       true ? warning(warned, 'React.__spread is deprecated and should not be used. Use ' + 'Object.assign directly or another helper function with similar ' + 'semantics. You may be seeing this warning due to your compiler. ' + 'See https://fb.me/react-spread-deprecation for more details.') : void 0;
      warned = true;
      return _assign.apply(null, arguments);
    };
  }

  var React = {

    // Modern

    Children: {
      map: ReactChildren.map,
      forEach: ReactChildren.forEach,
      count: ReactChildren.count,
      toArray: ReactChildren.toArray,
      only: onlyChild
    },

    Component: ReactComponent,
    PureComponent: ReactPureComponent,

    createElement: createElement,
    cloneElement: cloneElement,
    isValidElement: ReactElement.isValidElement,

    // Classic

    PropTypes: ReactPropTypes,
    createClass: ReactClass.createClass,
    createFactory: createFactory,
    createMixin: function (mixin) {
      // Currently a noop. Will be used to validate and trace mixins.
      return mixin;
    },

    // This looks DOM specific but these are actually isomorphic helpers
    // since they are just generating DOM strings.
    DOM: ReactDOMFactories,

    version: ReactVersion,

    // Deprecated hook for JSX spread, don't use this for anything.
    __spread: __spread
  };

  module.exports = React;

/***/ },
/* 387 */
/***/ function(module, exports) {

  'use strict';
  /* eslint-disable no-unused-vars */
  var hasOwnProperty = Object.prototype.hasOwnProperty;
  var propIsEnumerable = Object.prototype.propertyIsEnumerable;

  function toObject(val) {
  	if (val === null || val === undefined) {
  		throw new TypeError('Object.assign cannot be called with null or undefined');
  	}

  	return Object(val);
  }

  function shouldUseNative() {
  	try {
  		if (!Object.assign) {
  			return false;
  		}

  		// Detect buggy property enumeration order in older V8 versions.

  		// https://bugs.chromium.org/p/v8/issues/detail?id=4118
  		var test1 = new String('abc');  // eslint-disable-line
  		test1[5] = 'de';
  		if (Object.getOwnPropertyNames(test1)[0] === '5') {
  			return false;
  		}

  		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
  		var test2 = {};
  		for (var i = 0; i < 10; i++) {
  			test2['_' + String.fromCharCode(i)] = i;
  		}
  		var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
  			return test2[n];
  		});
  		if (order2.join('') !== '0123456789') {
  			return false;
  		}

  		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
  		var test3 = {};
  		'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
  			test3[letter] = letter;
  		});
  		if (Object.keys(Object.assign({}, test3)).join('') !==
  				'abcdefghijklmnopqrst') {
  			return false;
  		}

  		return true;
  	} catch (e) {
  		// We don't expect any of the above to throw, but better to be safe.
  		return false;
  	}
  }

  module.exports = shouldUseNative() ? Object.assign : function (target, source) {
  	var from;
  	var to = toObject(target);
  	var symbols;

  	for (var s = 1; s < arguments.length; s++) {
  		from = Object(arguments[s]);

  		for (var key in from) {
  			if (hasOwnProperty.call(from, key)) {
  				to[key] = from[key];
  			}
  		}

  		if (Object.getOwnPropertySymbols) {
  			symbols = Object.getOwnPropertySymbols(from);
  			for (var i = 0; i < symbols.length; i++) {
  				if (propIsEnumerable.call(from, symbols[i])) {
  					to[symbols[i]] = from[symbols[i]];
  				}
  			}
  		}
  	}

  	return to;
  };


/***/ },
/* 388 */
/***/ function(module, exports, __webpack_require__) {

  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  var PooledClass = __webpack_require__(389);
  var ReactElement = __webpack_require__(392);

  var emptyFunction = __webpack_require__(395);
  var traverseAllChildren = __webpack_require__(398);

  var twoArgumentPooler = PooledClass.twoArgumentPooler;
  var fourArgumentPooler = PooledClass.fourArgumentPooler;

  var userProvidedKeyEscapeRegex = /\/+/g;
  function escapeUserProvidedKey(text) {
    return ('' + text).replace(userProvidedKeyEscapeRegex, '$&/');
  }

  /**
   * PooledClass representing the bookkeeping associated with performing a child
   * traversal. Allows avoiding binding callbacks.
   *
   * @constructor ForEachBookKeeping
   * @param {!function} forEachFunction Function to perform traversal with.
   * @param {?*} forEachContext Context to perform context with.
   */
  function ForEachBookKeeping(forEachFunction, forEachContext) {
    this.func = forEachFunction;
    this.context = forEachContext;
    this.count = 0;
  }
  ForEachBookKeeping.prototype.destructor = function () {
    this.func = null;
    this.context = null;
    this.count = 0;
  };
  PooledClass.addPoolingTo(ForEachBookKeeping, twoArgumentPooler);

  function forEachSingleChild(bookKeeping, child, name) {
    var func = bookKeeping.func,
        context = bookKeeping.context;

    func.call(context, child, bookKeeping.count++);
  }

  /**
   * Iterates through children that are typically specified as `props.children`.
   *
   * See https://facebook.github.io/react/docs/top-level-api.html#react.children.foreach
   *
   * The provided forEachFunc(child, index) will be called for each
   * leaf child.
   *
   * @param {?*} children Children tree container.
   * @param {function(*, int)} forEachFunc
   * @param {*} forEachContext Context for forEachContext.
   */
  function forEachChildren(children, forEachFunc, forEachContext) {
    if (children == null) {
      return children;
    }
    var traverseContext = ForEachBookKeeping.getPooled(forEachFunc, forEachContext);
    traverseAllChildren(children, forEachSingleChild, traverseContext);
    ForEachBookKeeping.release(traverseContext);
  }

  /**
   * PooledClass representing the bookkeeping associated with performing a child
   * mapping. Allows avoiding binding callbacks.
   *
   * @constructor MapBookKeeping
   * @param {!*} mapResult Object containing the ordered map of results.
   * @param {!function} mapFunction Function to perform mapping with.
   * @param {?*} mapContext Context to perform mapping with.
   */
  function MapBookKeeping(mapResult, keyPrefix, mapFunction, mapContext) {
    this.result = mapResult;
    this.keyPrefix = keyPrefix;
    this.func = mapFunction;
    this.context = mapContext;
    this.count = 0;
  }
  MapBookKeeping.prototype.destructor = function () {
    this.result = null;
    this.keyPrefix = null;
    this.func = null;
    this.context = null;
    this.count = 0;
  };
  PooledClass.addPoolingTo(MapBookKeeping, fourArgumentPooler);

  function mapSingleChildIntoContext(bookKeeping, child, childKey) {
    var result = bookKeeping.result,
        keyPrefix = bookKeeping.keyPrefix,
        func = bookKeeping.func,
        context = bookKeeping.context;


    var mappedChild = func.call(context, child, bookKeeping.count++);
    if (Array.isArray(mappedChild)) {
      mapIntoWithKeyPrefixInternal(mappedChild, result, childKey, emptyFunction.thatReturnsArgument);
    } else if (mappedChild != null) {
      if (ReactElement.isValidElement(mappedChild)) {
        mappedChild = ReactElement.cloneAndReplaceKey(mappedChild,
        // Keep both the (mapped) and old keys if they differ, just as
        // traverseAllChildren used to do for objects as children
        keyPrefix + (mappedChild.key && (!child || child.key !== mappedChild.key) ? escapeUserProvidedKey(mappedChild.key) + '/' : '') + childKey);
      }
      result.push(mappedChild);
    }
  }

  function mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {
    var escapedPrefix = '';
    if (prefix != null) {
      escapedPrefix = escapeUserProvidedKey(prefix) + '/';
    }
    var traverseContext = MapBookKeeping.getPooled(array, escapedPrefix, func, context);
    traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);
    MapBookKeeping.release(traverseContext);
  }

  /**
   * Maps children that are typically specified as `props.children`.
   *
   * See https://facebook.github.io/react/docs/top-level-api.html#react.children.map
   *
   * The provided mapFunction(child, key, index) will be called for each
   * leaf child.
   *
   * @param {?*} children Children tree container.
   * @param {function(*, int)} func The map function.
   * @param {*} context Context for mapFunction.
   * @return {object} Object containing the ordered map of results.
   */
  function mapChildren(children, func, context) {
    if (children == null) {
      return children;
    }
    var result = [];
    mapIntoWithKeyPrefixInternal(children, result, null, func, context);
    return result;
  }

  function forEachSingleChildDummy(traverseContext, child, name) {
    return null;
  }

  /**
   * Count the number of children that are typically specified as
   * `props.children`.
   *
   * See https://facebook.github.io/react/docs/top-level-api.html#react.children.count
   *
   * @param {?*} children Children tree container.
   * @return {number} The number of children.
   */
  function countChildren(children, context) {
    return traverseAllChildren(children, forEachSingleChildDummy, null);
  }

  /**
   * Flatten a children object (typically specified as `props.children`) and
   * return an array with appropriately re-keyed children.
   *
   * See https://facebook.github.io/react/docs/top-level-api.html#react.children.toarray
   */
  function toArray(children) {
    var result = [];
    mapIntoWithKeyPrefixInternal(children, result, null, emptyFunction.thatReturnsArgument);
    return result;
  }

  var ReactChildren = {
    forEach: forEachChildren,
    map: mapChildren,
    mapIntoWithKeyPrefixInternal: mapIntoWithKeyPrefixInternal,
    count: countChildren,
    toArray: toArray
  };

  module.exports = ReactChildren;

/***/ },
/* 389 */
/***/ function(module, exports, __webpack_require__) {

  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   * 
   */

  'use strict';

  var _prodInvariant = __webpack_require__(390);

  var invariant = __webpack_require__(391);

  /**
   * Static poolers. Several custom versions for each potential number of
   * arguments. A completely generic pooler is easy to implement, but would
   * require accessing the `arguments` object. In each of these, `this` refers to
   * the Class itself, not an instance. If any others are needed, simply add them
   * here, or in their own files.
   */
  var oneArgumentPooler = function (copyFieldsFrom) {
    var Klass = this;
    if (Klass.instancePool.length) {
      var instance = Klass.instancePool.pop();
      Klass.call(instance, copyFieldsFrom);
      return instance;
    } else {
      return new Klass(copyFieldsFrom);
    }
  };

  var twoArgumentPooler = function (a1, a2) {
    var Klass = this;
    if (Klass.instancePool.length) {
      var instance = Klass.instancePool.pop();
      Klass.call(instance, a1, a2);
      return instance;
    } else {
      return new Klass(a1, a2);
    }
  };

  var threeArgumentPooler = function (a1, a2, a3) {
    var Klass = this;
    if (Klass.instancePool.length) {
      var instance = Klass.instancePool.pop();
      Klass.call(instance, a1, a2, a3);
      return instance;
    } else {
      return new Klass(a1, a2, a3);
    }
  };

  var fourArgumentPooler = function (a1, a2, a3, a4) {
    var Klass = this;
    if (Klass.instancePool.length) {
      var instance = Klass.instancePool.pop();
      Klass.call(instance, a1, a2, a3, a4);
      return instance;
    } else {
      return new Klass(a1, a2, a3, a4);
    }
  };

  var fiveArgumentPooler = function (a1, a2, a3, a4, a5) {
    var Klass = this;
    if (Klass.instancePool.length) {
      var instance = Klass.instancePool.pop();
      Klass.call(instance, a1, a2, a3, a4, a5);
      return instance;
    } else {
      return new Klass(a1, a2, a3, a4, a5);
    }
  };

  var standardReleaser = function (instance) {
    var Klass = this;
    !(instance instanceof Klass) ?  true ? invariant(false, 'Trying to release an instance into a pool of a different type.') : _prodInvariant('25') : void 0;
    instance.destructor();
    if (Klass.instancePool.length < Klass.poolSize) {
      Klass.instancePool.push(instance);
    }
  };

  var DEFAULT_POOL_SIZE = 10;
  var DEFAULT_POOLER = oneArgumentPooler;

  /**
   * Augments `CopyConstructor` to be a poolable class, augmenting only the class
   * itself (statically) not adding any prototypical fields. Any CopyConstructor
   * you give this may have a `poolSize` property, and will look for a
   * prototypical `destructor` on instances.
   *
   * @param {Function} CopyConstructor Constructor that can be used to reset.
   * @param {Function} pooler Customizable pooler.
   */
  var addPoolingTo = function (CopyConstructor, pooler) {
    // Casting as any so that flow ignores the actual implementation and trusts
    // it to match the type we declared
    var NewKlass = CopyConstructor;
    NewKlass.instancePool = [];
    NewKlass.getPooled = pooler || DEFAULT_POOLER;
    if (!NewKlass.poolSize) {
      NewKlass.poolSize = DEFAULT_POOL_SIZE;
    }
    NewKlass.release = standardReleaser;
    return NewKlass;
  };

  var PooledClass = {
    addPoolingTo: addPoolingTo,
    oneArgumentPooler: oneArgumentPooler,
    twoArgumentPooler: twoArgumentPooler,
    threeArgumentPooler: threeArgumentPooler,
    fourArgumentPooler: fourArgumentPooler,
    fiveArgumentPooler: fiveArgumentPooler
  };

  module.exports = PooledClass;

/***/ },
/* 390 */
/***/ function(module, exports) {

  /**
   * Copyright (c) 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   * 
   */
  'use strict';

  /**
   * WARNING: DO NOT manually require this module.
   * This is a replacement for `invariant(...)` used by the error code system
   * and will _only_ be required by the corresponding babel pass.
   * It always throws.
   */

  function reactProdInvariant(code) {
    var argCount = arguments.length - 1;

    var message = 'Minified React error #' + code + '; visit ' + 'http://facebook.github.io/react/docs/error-decoder.html?invariant=' + code;

    for (var argIdx = 0; argIdx < argCount; argIdx++) {
      message += '&args[]=' + encodeURIComponent(arguments[argIdx + 1]);
    }

    message += ' for the full message or use the non-minified dev environment' + ' for full errors and additional helpful warnings.';

    var error = new Error(message);
    error.name = 'Invariant Violation';
    error.framesToPop = 1; // we don't care about reactProdInvariant's own frame

    throw error;
  }

  module.exports = reactProdInvariant;

/***/ },
/* 391 */
/***/ function(module, exports, __webpack_require__) {

  /**
   * Copyright (c) 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  /**
   * Use invariant() to assert state which your program assumes to be true.
   *
   * Provide sprintf-style format (only %s is supported) and arguments
   * to provide information about what broke and what you were
   * expecting.
   *
   * The invariant message will be stripped in production, but the invariant
   * will remain to ensure logic does not differ in production.
   */

  var validateFormat = function validateFormat(format) {};

  if (true) {
    validateFormat = function validateFormat(format) {
      if (format === undefined) {
        throw new Error('invariant requires an error message argument');
      }
    };
  }

  function invariant(condition, format, a, b, c, d, e, f) {
    validateFormat(format);

    if (!condition) {
      var error;
      if (format === undefined) {
        error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
      } else {
        var args = [a, b, c, d, e, f];
        var argIndex = 0;
        error = new Error(format.replace(/%s/g, function () {
          return args[argIndex++];
        }));
        error.name = 'Invariant Violation';
      }

      error.framesToPop = 1; // we don't care about invariant's own frame
      throw error;
    }
  }

  module.exports = invariant;

/***/ },
/* 392 */
/***/ function(module, exports, __webpack_require__) {

  /**
   * Copyright 2014-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  var _assign = __webpack_require__(387);

  var ReactCurrentOwner = __webpack_require__(393);

  var warning = __webpack_require__(394);
  var canDefineProperty = __webpack_require__(396);
  var hasOwnProperty = Object.prototype.hasOwnProperty;

  var REACT_ELEMENT_TYPE = __webpack_require__(397);

  var RESERVED_PROPS = {
    key: true,
    ref: true,
    __self: true,
    __source: true
  };

  var specialPropKeyWarningShown, specialPropRefWarningShown;

  function hasValidRef(config) {
    if (true) {
      if (hasOwnProperty.call(config, 'ref')) {
        var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;
        if (getter && getter.isReactWarning) {
          return false;
        }
      }
    }
    return config.ref !== undefined;
  }

  function hasValidKey(config) {
    if (true) {
      if (hasOwnProperty.call(config, 'key')) {
        var getter = Object.getOwnPropertyDescriptor(config, 'key').get;
        if (getter && getter.isReactWarning) {
          return false;
        }
      }
    }
    return config.key !== undefined;
  }

  function defineKeyPropWarningGetter(props, displayName) {
    var warnAboutAccessingKey = function () {
      if (!specialPropKeyWarningShown) {
        specialPropKeyWarningShown = true;
         true ? warning(false, '%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName) : void 0;
      }
    };
    warnAboutAccessingKey.isReactWarning = true;
    Object.defineProperty(props, 'key', {
      get: warnAboutAccessingKey,
      configurable: true
    });
  }

  function defineRefPropWarningGetter(props, displayName) {
    var warnAboutAccessingRef = function () {
      if (!specialPropRefWarningShown) {
        specialPropRefWarningShown = true;
         true ? warning(false, '%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName) : void 0;
      }
    };
    warnAboutAccessingRef.isReactWarning = true;
    Object.defineProperty(props, 'ref', {
      get: warnAboutAccessingRef,
      configurable: true
    });
  }

  /**
   * Factory method to create a new React element. This no longer adheres to
   * the class pattern, so do not use new to call it. Also, no instanceof check
   * will work. Instead test $$typeof field against Symbol.for('react.element') to check
   * if something is a React Element.
   *
   * @param {*} type
   * @param {*} key
   * @param {string|object} ref
   * @param {*} self A *temporary* helper to detect places where `this` is
   * different from the `owner` when React.createElement is called, so that we
   * can warn. We want to get rid of owner and replace string `ref`s with arrow
   * functions, and as long as `this` and owner are the same, there will be no
   * change in behavior.
   * @param {*} source An annotation object (added by a transpiler or otherwise)
   * indicating filename, line number, and/or other information.
   * @param {*} owner
   * @param {*} props
   * @internal
   */
  var ReactElement = function (type, key, ref, self, source, owner, props) {
    var element = {
      // This tag allow us to uniquely identify this as a React Element
      $$typeof: REACT_ELEMENT_TYPE,

      // Built-in properties that belong on the element
      type: type,
      key: key,
      ref: ref,
      props: props,

      // Record the component responsible for creating this element.
      _owner: owner
    };

    if (true) {
      // The validation flag is currently mutative. We put it on
      // an external backing store so that we can freeze the whole object.
      // This can be replaced with a WeakMap once they are implemented in
      // commonly used development environments.
      element._store = {};

      // To make comparing ReactElements easier for testing purposes, we make
      // the validation flag non-enumerable (where possible, which should
      // include every environment we run tests in), so the test framework
      // ignores it.
      if (canDefineProperty) {
        Object.defineProperty(element._store, 'validated', {
          configurable: false,
          enumerable: false,
          writable: true,
          value: false
        });
        // self and source are DEV only properties.
        Object.defineProperty(element, '_self', {
          configurable: false,
          enumerable: false,
          writable: false,
          value: self
        });
        // Two elements created in two different places should be considered
        // equal for testing purposes and therefore we hide it from enumeration.
        Object.defineProperty(element, '_source', {
          configurable: false,
          enumerable: false,
          writable: false,
          value: source
        });
      } else {
        element._store.validated = false;
        element._self = self;
        element._source = source;
      }
      if (Object.freeze) {
        Object.freeze(element.props);
        Object.freeze(element);
      }
    }

    return element;
  };

  /**
   * Create and return a new ReactElement of the given type.
   * See https://facebook.github.io/react/docs/top-level-api.html#react.createelement
   */
  ReactElement.createElement = function (type, config, children) {
    var propName;

    // Reserved names are extracted
    var props = {};

    var key = null;
    var ref = null;
    var self = null;
    var source = null;

    if (config != null) {
      if (hasValidRef(config)) {
        ref = config.ref;
      }
      if (hasValidKey(config)) {
        key = '' + config.key;
      }

      self = config.__self === undefined ? null : config.__self;
      source = config.__source === undefined ? null : config.__source;
      // Remaining properties are added to a new props object
      for (propName in config) {
        if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
          props[propName] = config[propName];
        }
      }
    }

    // Children can be more than one argument, and those are transferred onto
    // the newly allocated props object.
    var childrenLength = arguments.length - 2;
    if (childrenLength === 1) {
      props.children = children;
    } else if (childrenLength > 1) {
      var childArray = Array(childrenLength);
      for (var i = 0; i < childrenLength; i++) {
        childArray[i] = arguments[i + 2];
      }
      if (true) {
        if (Object.freeze) {
          Object.freeze(childArray);
        }
      }
      props.children = childArray;
    }

    // Resolve default props
    if (type && type.defaultProps) {
      var defaultProps = type.defaultProps;
      for (propName in defaultProps) {
        if (props[propName] === undefined) {
          props[propName] = defaultProps[propName];
        }
      }
    }
    if (true) {
      if (key || ref) {
        if (typeof props.$$typeof === 'undefined' || props.$$typeof !== REACT_ELEMENT_TYPE) {
          var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;
          if (key) {
            defineKeyPropWarningGetter(props, displayName);
          }
          if (ref) {
            defineRefPropWarningGetter(props, displayName);
          }
        }
      }
    }
    return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
  };

  /**
   * Return a function that produces ReactElements of a given type.
   * See https://facebook.github.io/react/docs/top-level-api.html#react.createfactory
   */
  ReactElement.createFactory = function (type) {
    var factory = ReactElement.createElement.bind(null, type);
    // Expose the type on the factory and the prototype so that it can be
    // easily accessed on elements. E.g. `<Foo />.type === Foo`.
    // This should not be named `constructor` since this may not be the function
    // that created the element, and it may not even be a constructor.
    // Legacy hook TODO: Warn if this is accessed
    factory.type = type;
    return factory;
  };

  ReactElement.cloneAndReplaceKey = function (oldElement, newKey) {
    var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);

    return newElement;
  };

  /**
   * Clone and return a new ReactElement using element as the starting point.
   * See https://facebook.github.io/react/docs/top-level-api.html#react.cloneelement
   */
  ReactElement.cloneElement = function (element, config, children) {
    var propName;

    // Original props are copied
    var props = _assign({}, element.props);

    // Reserved names are extracted
    var key = element.key;
    var ref = element.ref;
    // Self is preserved since the owner is preserved.
    var self = element._self;
    // Source is preserved since cloneElement is unlikely to be targeted by a
    // transpiler, and the original source is probably a better indicator of the
    // true owner.
    var source = element._source;

    // Owner will be preserved, unless ref is overridden
    var owner = element._owner;

    if (config != null) {
      if (hasValidRef(config)) {
        // Silently steal the ref from the parent.
        ref = config.ref;
        owner = ReactCurrentOwner.current;
      }
      if (hasValidKey(config)) {
        key = '' + config.key;
      }

      // Remaining properties override existing props
      var defaultProps;
      if (element.type && element.type.defaultProps) {
        defaultProps = element.type.defaultProps;
      }
      for (propName in config) {
        if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
          if (config[propName] === undefined && defaultProps !== undefined) {
            // Resolve default props
            props[propName] = defaultProps[propName];
          } else {
            props[propName] = config[propName];
          }
        }
      }
    }

    // Children can be more than one argument, and those are transferred onto
    // the newly allocated props object.
    var childrenLength = arguments.length - 2;
    if (childrenLength === 1) {
      props.children = children;
    } else if (childrenLength > 1) {
      var childArray = Array(childrenLength);
      for (var i = 0; i < childrenLength; i++) {
        childArray[i] = arguments[i + 2];
      }
      props.children = childArray;
    }

    return ReactElement(element.type, key, ref, self, source, owner, props);
  };

  /**
   * Verifies the object is a ReactElement.
   * See https://facebook.github.io/react/docs/top-level-api.html#react.isvalidelement
   * @param {?object} object
   * @return {boolean} True if `object` is a valid component.
   * @final
   */
  ReactElement.isValidElement = function (object) {
    return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
  };

  module.exports = ReactElement;

/***/ },
/* 393 */
/***/ function(module, exports) {

  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   * 
   */

  'use strict';

  /**
   * Keeps track of the current owner.
   *
   * The current owner is the component who should own any components that are
   * currently being constructed.
   */
  var ReactCurrentOwner = {

    /**
     * @internal
     * @type {ReactComponent}
     */
    current: null

  };

  module.exports = ReactCurrentOwner;

/***/ },
/* 394 */
/***/ function(module, exports, __webpack_require__) {

  /**
   * Copyright 2014-2015, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  var emptyFunction = __webpack_require__(395);

  /**
   * Similar to invariant but only logs a warning if the condition is not met.
   * This can be used to log issues in development environments in critical
   * paths. Removing the logging code for production environments will keep the
   * same logic and follow the same code paths.
   */

  var warning = emptyFunction;

  if (true) {
    (function () {
      var printWarning = function printWarning(format) {
        for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
          args[_key - 1] = arguments[_key];
        }

        var argIndex = 0;
        var message = 'Warning: ' + format.replace(/%s/g, function () {
          return args[argIndex++];
        });
        if (typeof console !== 'undefined') {
          console.error(message);
        }
        try {
          // --- Welcome to debugging React ---
          // This error was thrown as a convenience so that you can use this stack
          // to find the callsite that caused this warning to fire.
          throw new Error(message);
        } catch (x) {}
      };

      warning = function warning(condition, format) {
        if (format === undefined) {
          throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
        }

        if (format.indexOf('Failed Composite propType: ') === 0) {
          return; // Ignore CompositeComponent proptype check.
        }

        if (!condition) {
          for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
            args[_key2 - 2] = arguments[_key2];
          }

          printWarning.apply(undefined, [format].concat(args));
        }
      };
    })();
  }

  module.exports = warning;

/***/ },
/* 395 */
/***/ function(module, exports) {

  "use strict";

  /**
   * Copyright (c) 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   * 
   */

  function makeEmptyFunction(arg) {
    return function () {
      return arg;
    };
  }

  /**
   * This function accepts and discards inputs; it has no side effects. This is
   * primarily useful idiomatically for overridable function endpoints which
   * always need to be callable, since JS lacks a null-call idiom ala Cocoa.
   */
  var emptyFunction = function emptyFunction() {};

  emptyFunction.thatReturns = makeEmptyFunction;
  emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
  emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
  emptyFunction.thatReturnsNull = makeEmptyFunction(null);
  emptyFunction.thatReturnsThis = function () {
    return this;
  };
  emptyFunction.thatReturnsArgument = function (arg) {
    return arg;
  };

  module.exports = emptyFunction;

/***/ },
/* 396 */
/***/ function(module, exports, __webpack_require__) {

  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   * 
   */

  'use strict';

  var canDefineProperty = false;
  if (true) {
    try {
      // $FlowFixMe https://github.com/facebook/flow/issues/285
      Object.defineProperty({}, 'x', { get: function () {} });
      canDefineProperty = true;
    } catch (x) {
      // IE will fail on defineProperty
    }
  }

  module.exports = canDefineProperty;

/***/ },
/* 397 */
/***/ function(module, exports) {

  /**
   * Copyright 2014-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   * 
   */

  'use strict';

  // The Symbol used to tag the ReactElement type. If there is no native Symbol
  // nor polyfill, then a plain number is used for performance.

  var REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol['for'] && Symbol['for']('react.element') || 0xeac7;

  module.exports = REACT_ELEMENT_TYPE;

/***/ },
/* 398 */
/***/ function(module, exports, __webpack_require__) {

  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  var _prodInvariant = __webpack_require__(390);

  var ReactCurrentOwner = __webpack_require__(393);
  var REACT_ELEMENT_TYPE = __webpack_require__(397);

  var getIteratorFn = __webpack_require__(399);
  var invariant = __webpack_require__(391);
  var KeyEscapeUtils = __webpack_require__(400);
  var warning = __webpack_require__(394);

  var SEPARATOR = '.';
  var SUBSEPARATOR = ':';

  /**
   * This is inlined from ReactElement since this file is shared between
   * isomorphic and renderers. We could extract this to a
   *
   */

  /**
   * TODO: Test that a single child and an array with one item have the same key
   * pattern.
   */

  var didWarnAboutMaps = false;

  /**
   * Generate a key string that identifies a component within a set.
   *
   * @param {*} component A component that could contain a manual key.
   * @param {number} index Index that is used if a manual key is not provided.
   * @return {string}
   */
  function getComponentKey(component, index) {
    // Do some typechecking here since we call this blindly. We want to ensure
    // that we don't block potential future ES APIs.
    if (component && typeof component === 'object' && component.key != null) {
      // Explicit key
      return KeyEscapeUtils.escape(component.key);
    }
    // Implicit key determined by the index in the set
    return index.toString(36);
  }

  /**
   * @param {?*} children Children tree container.
   * @param {!string} nameSoFar Name of the key path so far.
   * @param {!function} callback Callback to invoke with each child found.
   * @param {?*} traverseContext Used to pass information throughout the traversal
   * process.
   * @return {!number} The number of children in this subtree.
   */
  function traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {
    var type = typeof children;

    if (type === 'undefined' || type === 'boolean') {
      // All of the above are perceived as null.
      children = null;
    }

    if (children === null || type === 'string' || type === 'number' ||
    // The following is inlined from ReactElement. This means we can optimize
    // some checks. React Fiber also inlines this logic for similar purposes.
    type === 'object' && children.$$typeof === REACT_ELEMENT_TYPE) {
      callback(traverseContext, children,
      // If it's the only child, treat the name as if it was wrapped in an array
      // so that it's consistent if the number of children grows.
      nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);
      return 1;
    }

    var child;
    var nextName;
    var subtreeCount = 0; // Count of children found in the current subtree.
    var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;

    if (Array.isArray(children)) {
      for (var i = 0; i < children.length; i++) {
        child = children[i];
        nextName = nextNamePrefix + getComponentKey(child, i);
        subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
      }
    } else {
      var iteratorFn = getIteratorFn(children);
      if (iteratorFn) {
        var iterator = iteratorFn.call(children);
        var step;
        if (iteratorFn !== children.entries) {
          var ii = 0;
          while (!(step = iterator.next()).done) {
            child = step.value;
            nextName = nextNamePrefix + getComponentKey(child, ii++);
            subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
          }
        } else {
          if (true) {
            var mapsAsChildrenAddendum = '';
            if (ReactCurrentOwner.current) {
              var mapsAsChildrenOwnerName = ReactCurrentOwner.current.getName();
              if (mapsAsChildrenOwnerName) {
                mapsAsChildrenAddendum = ' Check the render method of `' + mapsAsChildrenOwnerName + '`.';
              }
            }
             true ? warning(didWarnAboutMaps, 'Using Maps as children is not yet fully supported. It is an ' + 'experimental feature that might be removed. Convert it to a ' + 'sequence / iterable of keyed ReactElements instead.%s', mapsAsChildrenAddendum) : void 0;
            didWarnAboutMaps = true;
          }
          // Iterator will provide entry [k,v] tuples rather than values.
          while (!(step = iterator.next()).done) {
            var entry = step.value;
            if (entry) {
              child = entry[1];
              nextName = nextNamePrefix + KeyEscapeUtils.escape(entry[0]) + SUBSEPARATOR + getComponentKey(child, 0);
              subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
            }
          }
        }
      } else if (type === 'object') {
        var addendum = '';
        if (true) {
          addendum = ' If you meant to render a collection of children, use an array ' + 'instead or wrap the object using createFragment(object) from the ' + 'React add-ons.';
          if (children._isReactElement) {
            addendum = ' It looks like you\'re using an element created by a different ' + 'version of React. Make sure to use only one copy of React.';
          }
          if (ReactCurrentOwner.current) {
            var name = ReactCurrentOwner.current.getName();
            if (name) {
              addendum += ' Check the render method of `' + name + '`.';
            }
          }
        }
        var childrenString = String(children);
         true ?  true ? invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : _prodInvariant('31', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : void 0;
      }
    }

    return subtreeCount;
  }

  /**
   * Traverses children that are typically specified as `props.children`, but
   * might also be specified through attributes:
   *
   * - `traverseAllChildren(this.props.children, ...)`
   * - `traverseAllChildren(this.props.leftPanelChildren, ...)`
   *
   * The `traverseContext` is an optional argument that is passed through the
   * entire traversal. It can be used to store accumulations or anything else that
   * the callback might find relevant.
   *
   * @param {?*} children Children tree object.
   * @param {!function} callback To invoke upon traversing each child.
   * @param {?*} traverseContext Context for traversal.
   * @return {!number} The number of children in this subtree.
   */
  function traverseAllChildren(children, callback, traverseContext) {
    if (children == null) {
      return 0;
    }

    return traverseAllChildrenImpl(children, '', callback, traverseContext);
  }

  module.exports = traverseAllChildren;

/***/ },
/* 399 */
/***/ function(module, exports) {

  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   * 
   */

  'use strict';

  /* global Symbol */

  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.

  /**
   * Returns the iterator method function contained on the iterable object.
   *
   * Be sure to invoke the function with the iterable as context:
   *
   *     var iteratorFn = getIteratorFn(myIterable);
   *     if (iteratorFn) {
   *       var iterator = iteratorFn.call(myIterable);
   *       ...
   *     }
   *
   * @param {?object} maybeIterable
   * @return {?function}
   */
  function getIteratorFn(maybeIterable) {
    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
    if (typeof iteratorFn === 'function') {
      return iteratorFn;
    }
  }

  module.exports = getIteratorFn;

/***/ },
/* 400 */
/***/ function(module, exports) {

  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   * 
   */

  'use strict';

  /**
   * Escape and wrap key so it is safe to use as a reactid
   *
   * @param {string} key to be escaped.
   * @return {string} the escaped key.
   */

  function escape(key) {
    var escapeRegex = /[=:]/g;
    var escaperLookup = {
      '=': '=0',
      ':': '=2'
    };
    var escapedString = ('' + key).replace(escapeRegex, function (match) {
      return escaperLookup[match];
    });

    return '$' + escapedString;
  }

  /**
   * Unescape and unwrap key for human-readable display
   *
   * @param {string} key to unescape.
   * @return {string} the unescaped key.
   */
  function unescape(key) {
    var unescapeRegex = /(=0|=2)/g;
    var unescaperLookup = {
      '=0': '=',
      '=2': ':'
    };
    var keySubstring = key[0] === '.' && key[1] === '$' ? key.substring(2) : key.substring(1);

    return ('' + keySubstring).replace(unescapeRegex, function (match) {
      return unescaperLookup[match];
    });
  }

  var KeyEscapeUtils = {
    escape: escape,
    unescape: unescape
  };

  module.exports = KeyEscapeUtils;

/***/ },
/* 401 */
/***/ function(module, exports, __webpack_require__) {

  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  var _prodInvariant = __webpack_require__(390);

  var ReactNoopUpdateQueue = __webpack_require__(402);

  var canDefineProperty = __webpack_require__(396);
  var emptyObject = __webpack_require__(403);
  var invariant = __webpack_require__(391);
  var warning = __webpack_require__(394);

  /**
   * Base class helpers for the updating state of a component.
   */
  function ReactComponent(props, context, updater) {
    this.props = props;
    this.context = context;
    this.refs = emptyObject;
    // We initialize the default updater but the real one gets injected by the
    // renderer.
    this.updater = updater || ReactNoopUpdateQueue;
  }

  ReactComponent.prototype.isReactComponent = {};

  /**
   * Sets a subset of the state. Always use this to mutate
   * state. You should treat `this.state` as immutable.
   *
   * There is no guarantee that `this.state` will be immediately updated, so
   * accessing `this.state` after calling this method may return the old value.
   *
   * There is no guarantee that calls to `setState` will run synchronously,
   * as they may eventually be batched together.  You can provide an optional
   * callback that will be executed when the call to setState is actually
   * completed.
   *
   * When a function is provided to setState, it will be called at some point in
   * the future (not synchronously). It will be called with the up to date
   * component arguments (state, props, context). These values can be different
   * from this.* because your function may be called after receiveProps but before
   * shouldComponentUpdate, and this new state, props, and context will not yet be
   * assigned to this.
   *
   * @param {object|function} partialState Next partial state or function to
   *        produce next partial state to be merged with current state.
   * @param {?function} callback Called after state is updated.
   * @final
   * @protected
   */
  ReactComponent.prototype.setState = function (partialState, callback) {
    !(typeof partialState === 'object' || typeof partialState === 'function' || partialState == null) ?  true ? invariant(false, 'setState(...): takes an object of state variables to update or a function which returns an object of state variables.') : _prodInvariant('85') : void 0;
    this.updater.enqueueSetState(this, partialState);
    if (callback) {
      this.updater.enqueueCallback(this, callback, 'setState');
    }
  };

  /**
   * Forces an update. This should only be invoked when it is known with
   * certainty that we are **not** in a DOM transaction.
   *
   * You may want to call this when you know that some deeper aspect of the
   * component's state has changed but `setState` was not called.
   *
   * This will not invoke `shouldComponentUpdate`, but it will invoke
   * `componentWillUpdate` and `componentDidUpdate`.
   *
   * @param {?function} callback Called after update is complete.
   * @final
   * @protected
   */
  ReactComponent.prototype.forceUpdate = function (callback) {
    this.updater.enqueueForceUpdate(this);
    if (callback) {
      this.updater.enqueueCallback(this, callback, 'forceUpdate');
    }
  };

  /**
   * Deprecated APIs. These APIs used to exist on classic React classes but since
   * we would like to deprecate them, we're not going to move them over to this
   * modern base class. Instead, we define a getter that warns if it's accessed.
   */
  if (true) {
    var deprecatedAPIs = {
      isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],
      replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']
    };
    var defineDeprecationWarning = function (methodName, info) {
      if (canDefineProperty) {
        Object.defineProperty(ReactComponent.prototype, methodName, {
          get: function () {
             true ? warning(false, '%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]) : void 0;
            return undefined;
          }
        });
      }
    };
    for (var fnName in deprecatedAPIs) {
      if (deprecatedAPIs.hasOwnProperty(fnName)) {
        defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
      }
    }
  }

  module.exports = ReactComponent;

/***/ },
/* 402 */
/***/ function(module, exports, __webpack_require__) {

  /**
   * Copyright 2015-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  var warning = __webpack_require__(394);

  function warnNoop(publicInstance, callerName) {
    if (true) {
      var constructor = publicInstance.constructor;
       true ? warning(false, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, constructor && (constructor.displayName || constructor.name) || 'ReactClass') : void 0;
    }
  }

  /**
   * This is the abstract API for an update queue.
   */
  var ReactNoopUpdateQueue = {

    /**
     * Checks whether or not this composite component is mounted.
     * @param {ReactClass} publicInstance The instance we want to test.
     * @return {boolean} True if mounted, false otherwise.
     * @protected
     * @final
     */
    isMounted: function (publicInstance) {
      return false;
    },

    /**
     * Enqueue a callback that will be executed after all the pending updates
     * have processed.
     *
     * @param {ReactClass} publicInstance The instance to use as `this` context.
     * @param {?function} callback Called after state is updated.
     * @internal
     */
    enqueueCallback: function (publicInstance, callback) {},

    /**
     * Forces an update. This should only be invoked when it is known with
     * certainty that we are **not** in a DOM transaction.
     *
     * You may want to call this when you know that some deeper aspect of the
     * component's state has changed but `setState` was not called.
     *
     * This will not invoke `shouldComponentUpdate`, but it will invoke
     * `componentWillUpdate` and `componentDidUpdate`.
     *
     * @param {ReactClass} publicInstance The instance that should rerender.
     * @internal
     */
    enqueueForceUpdate: function (publicInstance) {
      warnNoop(publicInstance, 'forceUpdate');
    },

    /**
     * Replaces all of the state. Always use this or `setState` to mutate state.
     * You should treat `this.state` as immutable.
     *
     * There is no guarantee that `this.state` will be immediately updated, so
     * accessing `this.state` after calling this method may return the old value.
     *
     * @param {ReactClass} publicInstance The instance that should rerender.
     * @param {object} completeState Next state.
     * @internal
     */
    enqueueReplaceState: function (publicInstance, completeState) {
      warnNoop(publicInstance, 'replaceState');
    },

    /**
     * Sets a subset of the state. This only exists because _pendingState is
     * internal. This provides a merging strategy that is not available to deep
     * properties which is confusing. TODO: Expose pendingState or don't use it
     * during the merge.
     *
     * @param {ReactClass} publicInstance The instance that should rerender.
     * @param {object} partialState Next partial state to be merged with state.
     * @internal
     */
    enqueueSetState: function (publicInstance, partialState) {
      warnNoop(publicInstance, 'setState');
    }
  };

  module.exports = ReactNoopUpdateQueue;

/***/ },
/* 403 */
/***/ function(module, exports, __webpack_require__) {

  /**
   * Copyright (c) 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  var emptyObject = {};

  if (true) {
    Object.freeze(emptyObject);
  }

  module.exports = emptyObject;

/***/ },
/* 404 */
/***/ function(module, exports, __webpack_require__) {

  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  var _assign = __webpack_require__(387);

  var ReactComponent = __webpack_require__(401);
  var ReactNoopUpdateQueue = __webpack_require__(402);

  var emptyObject = __webpack_require__(403);

  /**
   * Base class helpers for the updating state of a component.
   */
  function ReactPureComponent(props, context, updater) {
    // Duplicated from ReactComponent.
    this.props = props;
    this.context = context;
    this.refs = emptyObject;
    // We initialize the default updater but the real one gets injected by the
    // renderer.
    this.updater = updater || ReactNoopUpdateQueue;
  }

  function ComponentDummy() {}
  ComponentDummy.prototype = ReactComponent.prototype;
  ReactPureComponent.prototype = new ComponentDummy();
  ReactPureComponent.prototype.constructor = ReactPureComponent;
  // Avoid an extra prototype jump for these methods.
  _assign(ReactPureComponent.prototype, ReactComponent.prototype);
  ReactPureComponent.prototype.isPureReactComponent = true;

  module.exports = ReactPureComponent;

/***/ },
/* 405 */
/***/ function(module, exports, __webpack_require__) {

  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  var _prodInvariant = __webpack_require__(390),
      _assign = __webpack_require__(387);

  var ReactComponent = __webpack_require__(401);
  var ReactElement = __webpack_require__(392);
  var ReactPropTypeLocationNames = __webpack_require__(406);
  var ReactNoopUpdateQueue = __webpack_require__(402);

  var emptyObject = __webpack_require__(403);
  var invariant = __webpack_require__(391);
  var warning = __webpack_require__(394);

  var MIXINS_KEY = 'mixins';

  // Helper function to allow the creation of anonymous functions which do not
  // have .name set to the name of the variable being assigned to.
  function identity(fn) {
    return fn;
  }

  /**
   * Policies that describe methods in `ReactClassInterface`.
   */


  var injectedMixins = [];

  /**
   * Composite components are higher-level components that compose other composite
   * or host components.
   *
   * To create a new type of `ReactClass`, pass a specification of
   * your new class to `React.createClass`. The only requirement of your class
   * specification is that you implement a `render` method.
   *
   *   var MyComponent = React.createClass({
   *     render: function() {
   *       return <div>Hello World</div>;
   *     }
   *   });
   *
   * The class specification supports a specific protocol of methods that have
   * special meaning (e.g. `render`). See `ReactClassInterface` for
   * more the comprehensive protocol. Any other properties and methods in the
   * class specification will be available on the prototype.
   *
   * @interface ReactClassInterface
   * @internal
   */
  var ReactClassInterface = {

    /**
     * An array of Mixin objects to include when defining your component.
     *
     * @type {array}
     * @optional
     */
    mixins: 'DEFINE_MANY',

    /**
     * An object containing properties and methods that should be defined on
     * the component's constructor instead of its prototype (static methods).
     *
     * @type {object}
     * @optional
     */
    statics: 'DEFINE_MANY',

    /**
     * Definition of prop types for this component.
     *
     * @type {object}
     * @optional
     */
    propTypes: 'DEFINE_MANY',

    /**
     * Definition of context types for this component.
     *
     * @type {object}
     * @optional
     */
    contextTypes: 'DEFINE_MANY',

    /**
     * Definition of context types this component sets for its children.
     *
     * @type {object}
     * @optional
     */
    childContextTypes: 'DEFINE_MANY',

    // ==== Definition methods ====

    /**
     * Invoked when the component is mounted. Values in the mapping will be set on
     * `this.props` if that prop is not specified (i.e. using an `in` check).
     *
     * This method is invoked before `getInitialState` and therefore cannot rely
     * on `this.state` or use `this.setState`.
     *
     * @return {object}
     * @optional
     */
    getDefaultProps: 'DEFINE_MANY_MERGED',

    /**
     * Invoked once before the component is mounted. The return value will be used
     * as the initial value of `this.state`.
     *
     *   getInitialState: function() {
     *     return {
     *       isOn: false,
     *       fooBaz: new BazFoo()
     *     }
     *   }
     *
     * @return {object}
     * @optional
     */
    getInitialState: 'DEFINE_MANY_MERGED',

    /**
     * @return {object}
     * @optional
     */
    getChildContext: 'DEFINE_MANY_MERGED',

    /**
     * Uses props from `this.props` and state from `this.state` to render the
     * structure of the component.
     *
     * No guarantees are made about when or how often this method is invoked, so
     * it must not have side effects.
     *
     *   render: function() {
     *     var name = this.props.name;
     *     return <div>Hello, {name}!</div>;
     *   }
     *
     * @return {ReactComponent}
     * @nosideeffects
     * @required
     */
    render: 'DEFINE_ONCE',

    // ==== Delegate methods ====

    /**
     * Invoked when the component is initially created and about to be mounted.
     * This may have side effects, but any external subscriptions or data created
     * by this method must be cleaned up in `componentWillUnmount`.
     *
     * @optional
     */
    componentWillMount: 'DEFINE_MANY',

    /**
     * Invoked when the component has been mounted and has a DOM representation.
     * However, there is no guarantee that the DOM node is in the document.
     *
     * Use this as an opportunity to operate on the DOM when the component has
     * been mounted (initialized and rendered) for the first time.
     *
     * @param {DOMElement} rootNode DOM element representing the component.
     * @optional
     */
    componentDidMount: 'DEFINE_MANY',

    /**
     * Invoked before the component receives new props.
     *
     * Use this as an opportunity to react to a prop transition by updating the
     * state using `this.setState`. Current props are accessed via `this.props`.
     *
     *   componentWillReceiveProps: function(nextProps, nextContext) {
     *     this.setState({
     *       likesIncreasing: nextProps.likeCount > this.props.likeCount
     *     });
     *   }
     *
     * NOTE: There is no equivalent `componentWillReceiveState`. An incoming prop
     * transition may cause a state change, but the opposite is not true. If you
     * need it, you are probably looking for `componentWillUpdate`.
     *
     * @param {object} nextProps
     * @optional
     */
    componentWillReceiveProps: 'DEFINE_MANY',

    /**
     * Invoked while deciding if the component should be updated as a result of
     * receiving new props, state and/or context.
     *
     * Use this as an opportunity to `return false` when you're certain that the
     * transition to the new props/state/context will not require a component
     * update.
     *
     *   shouldComponentUpdate: function(nextProps, nextState, nextContext) {
     *     return !equal(nextProps, this.props) ||
     *       !equal(nextState, this.state) ||
     *       !equal(nextContext, this.context);
     *   }
     *
     * @param {object} nextProps
     * @param {?object} nextState
     * @param {?object} nextContext
     * @return {boolean} True if the component should update.
     * @optional
     */
    shouldComponentUpdate: 'DEFINE_ONCE',

    /**
     * Invoked when the component is about to update due to a transition from
     * `this.props`, `this.state` and `this.context` to `nextProps`, `nextState`
     * and `nextContext`.
     *
     * Use this as an opportunity to perform preparation before an update occurs.
     *
     * NOTE: You **cannot** use `this.setState()` in this method.
     *
     * @param {object} nextProps
     * @param {?object} nextState
     * @param {?object} nextContext
     * @param {ReactReconcileTransaction} transaction
     * @optional
     */
    componentWillUpdate: 'DEFINE_MANY',

    /**
     * Invoked when the component's DOM representation has been updated.
     *
     * Use this as an opportunity to operate on the DOM when the component has
     * been updated.
     *
     * @param {object} prevProps
     * @param {?object} prevState
     * @param {?object} prevContext
     * @param {DOMElement} rootNode DOM element representing the component.
     * @optional
     */
    componentDidUpdate: 'DEFINE_MANY',

    /**
     * Invoked when the component is about to be removed from its parent and have
     * its DOM representation destroyed.
     *
     * Use this as an opportunity to deallocate any external resources.
     *
     * NOTE: There is no `componentDidUnmount` since your component will have been
     * destroyed by that point.
     *
     * @optional
     */
    componentWillUnmount: 'DEFINE_MANY',

    // ==== Advanced methods ====

    /**
     * Updates the component's currently mounted DOM representation.
     *
     * By default, this implements React's rendering and reconciliation algorithm.
     * Sophisticated clients may wish to override this.
     *
     * @param {ReactReconcileTransaction} transaction
     * @internal
     * @overridable
     */
    updateComponent: 'OVERRIDE_BASE'

  };

  /**
   * Mapping from class specification keys to special processing functions.
   *
   * Although these are declared like instance properties in the specification
   * when defining classes using `React.createClass`, they are actually static
   * and are accessible on the constructor instead of the prototype. Despite
   * being static, they must be defined outside of the "statics" key under
   * which all other static methods are defined.
   */
  var RESERVED_SPEC_KEYS = {
    displayName: function (Constructor, displayName) {
      Constructor.displayName = displayName;
    },
    mixins: function (Constructor, mixins) {
      if (mixins) {
        for (var i = 0; i < mixins.length; i++) {
          mixSpecIntoComponent(Constructor, mixins[i]);
        }
      }
    },
    childContextTypes: function (Constructor, childContextTypes) {
      if (true) {
        validateTypeDef(Constructor, childContextTypes, 'childContext');
      }
      Constructor.childContextTypes = _assign({}, Constructor.childContextTypes, childContextTypes);
    },
    contextTypes: function (Constructor, contextTypes) {
      if (true) {
        validateTypeDef(Constructor, contextTypes, 'context');
      }
      Constructor.contextTypes = _assign({}, Constructor.contextTypes, contextTypes);
    },
    /**
     * Special case getDefaultProps which should move into statics but requires
     * automatic merging.
     */
    getDefaultProps: function (Constructor, getDefaultProps) {
      if (Constructor.getDefaultProps) {
        Constructor.getDefaultProps = createMergedResultFunction(Constructor.getDefaultProps, getDefaultProps);
      } else {
        Constructor.getDefaultProps = getDefaultProps;
      }
    },
    propTypes: function (Constructor, propTypes) {
      if (true) {
        validateTypeDef(Constructor, propTypes, 'prop');
      }
      Constructor.propTypes = _assign({}, Constructor.propTypes, propTypes);
    },
    statics: function (Constructor, statics) {
      mixStaticSpecIntoComponent(Constructor, statics);
    },
    autobind: function () {} };

  function validateTypeDef(Constructor, typeDef, location) {
    for (var propName in typeDef) {
      if (typeDef.hasOwnProperty(propName)) {
        // use a warning instead of an invariant so components
        // don't show up in prod but only in __DEV__
         true ? warning(typeof typeDef[propName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'React.PropTypes.', Constructor.displayName || 'ReactClass', ReactPropTypeLocationNames[location], propName) : void 0;
      }
    }
  }

  function validateMethodOverride(isAlreadyDefined, name) {
    var specPolicy = ReactClassInterface.hasOwnProperty(name) ? ReactClassInterface[name] : null;

    // Disallow overriding of base class methods unless explicitly allowed.
    if (ReactClassMixin.hasOwnProperty(name)) {
      !(specPolicy === 'OVERRIDE_BASE') ?  true ? invariant(false, 'ReactClassInterface: You are attempting to override `%s` from your class specification. Ensure that your method names do not overlap with React methods.', name) : _prodInvariant('73', name) : void 0;
    }

    // Disallow defining methods more than once unless explicitly allowed.
    if (isAlreadyDefined) {
      !(specPolicy === 'DEFINE_MANY' || specPolicy === 'DEFINE_MANY_MERGED') ?  true ? invariant(false, 'ReactClassInterface: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.', name) : _prodInvariant('74', name) : void 0;
    }
  }

  /**
   * Mixin helper which handles policy validation and reserved
   * specification keys when building React classes.
   */
  function mixSpecIntoComponent(Constructor, spec) {
    if (!spec) {
      if (true) {
        var typeofSpec = typeof spec;
        var isMixinValid = typeofSpec === 'object' && spec !== null;

         true ? warning(isMixinValid, '%s: You\'re attempting to include a mixin that is either null ' + 'or not an object. Check the mixins included by the component, ' + 'as well as any mixins they include themselves. ' + 'Expected object but got %s.', Constructor.displayName || 'ReactClass', spec === null ? null : typeofSpec) : void 0;
      }

      return;
    }

    !(typeof spec !== 'function') ?  true ? invariant(false, 'ReactClass: You\'re attempting to use a component class or function as a mixin. Instead, just use a regular object.') : _prodInvariant('75') : void 0;
    !!ReactElement.isValidElement(spec) ?  true ? invariant(false, 'ReactClass: You\'re attempting to use a component as a mixin. Instead, just use a regular object.') : _prodInvariant('76') : void 0;

    var proto = Constructor.prototype;
    var autoBindPairs = proto.__reactAutoBindPairs;

    // By handling mixins before any other properties, we ensure the same
    // chaining order is applied to methods with DEFINE_MANY policy, whether
    // mixins are listed before or after these methods in the spec.
    if (spec.hasOwnProperty(MIXINS_KEY)) {
      RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);
    }

    for (var name in spec) {
      if (!spec.hasOwnProperty(name)) {
        continue;
      }

      if (name === MIXINS_KEY) {
        // We have already handled mixins in a special case above.
        continue;
      }

      var property = spec[name];
      var isAlreadyDefined = proto.hasOwnProperty(name);
      validateMethodOverride(isAlreadyDefined, name);

      if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {
        RESERVED_SPEC_KEYS[name](Constructor, property);
      } else {
        // Setup methods on prototype:
        // The following member methods should not be automatically bound:
        // 1. Expected ReactClass methods (in the "interface").
        // 2. Overridden methods (that were mixed in).
        var isReactClassMethod = ReactClassInterface.hasOwnProperty(name);
        var isFunction = typeof property === 'function';
        var shouldAutoBind = isFunction && !isReactClassMethod && !isAlreadyDefined && spec.autobind !== false;

        if (shouldAutoBind) {
          autoBindPairs.push(name, property);
          proto[name] = property;
        } else {
          if (isAlreadyDefined) {
            var specPolicy = ReactClassInterface[name];

            // These cases should already be caught by validateMethodOverride.
            !(isReactClassMethod && (specPolicy === 'DEFINE_MANY_MERGED' || specPolicy === 'DEFINE_MANY')) ?  true ? invariant(false, 'ReactClass: Unexpected spec policy %s for key %s when mixing in component specs.', specPolicy, name) : _prodInvariant('77', specPolicy, name) : void 0;

            // For methods which are defined more than once, call the existing
            // methods before calling the new property, merging if appropriate.
            if (specPolicy === 'DEFINE_MANY_MERGED') {
              proto[name] = createMergedResultFunction(proto[name], property);
            } else if (specPolicy === 'DEFINE_MANY') {
              proto[name] = createChainedFunction(proto[name], property);
            }
          } else {
            proto[name] = property;
            if (true) {
              // Add verbose displayName to the function, which helps when looking
              // at profiling tools.
              if (typeof property === 'function' && spec.displayName) {
                proto[name].displayName = spec.displayName + '_' + name;
              }
            }
          }
        }
      }
    }
  }

  function mixStaticSpecIntoComponent(Constructor, statics) {
    if (!statics) {
      return;
    }
    for (var name in statics) {
      var property = statics[name];
      if (!statics.hasOwnProperty(name)) {
        continue;
      }

      var isReserved = name in RESERVED_SPEC_KEYS;
      !!isReserved ?  true ? invariant(false, 'ReactClass: You are attempting to define a reserved property, `%s`, that shouldn\'t be on the "statics" key. Define it as an instance property instead; it will still be accessible on the constructor.', name) : _prodInvariant('78', name) : void 0;

      var isInherited = name in Constructor;
      !!isInherited ?  true ? invariant(false, 'ReactClass: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.', name) : _prodInvariant('79', name) : void 0;
      Constructor[name] = property;
    }
  }

  /**
   * Merge two objects, but throw if both contain the same key.
   *
   * @param {object} one The first object, which is mutated.
   * @param {object} two The second object
   * @return {object} one after it has been mutated to contain everything in two.
   */
  function mergeIntoWithNoDuplicateKeys(one, two) {
    !(one && two && typeof one === 'object' && typeof two === 'object') ?  true ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.') : _prodInvariant('80') : void 0;

    for (var key in two) {
      if (two.hasOwnProperty(key)) {
        !(one[key] === undefined) ?  true ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): Tried to merge two objects with the same key: `%s`. This conflict may be due to a mixin; in particular, this may be caused by two getInitialState() or getDefaultProps() methods returning objects with clashing keys.', key) : _prodInvariant('81', key) : void 0;
        one[key] = two[key];
      }
    }
    return one;
  }

  /**
   * Creates a function that invokes two functions and merges their return values.
   *
   * @param {function} one Function to invoke first.
   * @param {function} two Function to invoke second.
   * @return {function} Function that invokes the two argument functions.
   * @private
   */
  function createMergedResultFunction(one, two) {
    return function mergedResult() {
      var a = one.apply(this, arguments);
      var b = two.apply(this, arguments);
      if (a == null) {
        return b;
      } else if (b == null) {
        return a;
      }
      var c = {};
      mergeIntoWithNoDuplicateKeys(c, a);
      mergeIntoWithNoDuplicateKeys(c, b);
      return c;
    };
  }

  /**
   * Creates a function that invokes two functions and ignores their return vales.
   *
   * @param {function} one Function to invoke first.
   * @param {function} two Function to invoke second.
   * @return {function} Function that invokes the two argument functions.
   * @private
   */
  function createChainedFunction(one, two) {
    return function chainedFunction() {
      one.apply(this, arguments);
      two.apply(this, arguments);
    };
  }

  /**
   * Binds a method to the component.
   *
   * @param {object} component Component whose method is going to be bound.
   * @param {function} method Method to be bound.
   * @return {function} The bound method.
   */
  function bindAutoBindMethod(component, method) {
    var boundMethod = method.bind(component);
    if (true) {
      boundMethod.__reactBoundContext = component;
      boundMethod.__reactBoundMethod = method;
      boundMethod.__reactBoundArguments = null;
      var componentName = component.constructor.displayName;
      var _bind = boundMethod.bind;
      boundMethod.bind = function (newThis) {
        for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
          args[_key - 1] = arguments[_key];
        }

        // User is trying to bind() an autobound method; we effectively will
        // ignore the value of "this" that the user is trying to use, so
        // let's warn.
        if (newThis !== component && newThis !== null) {
           true ? warning(false, 'bind(): React component methods may only be bound to the ' + 'component instance. See %s', componentName) : void 0;
        } else if (!args.length) {
           true ? warning(false, 'bind(): You are binding a component method to the component. ' + 'React does this for you automatically in a high-performance ' + 'way, so you can safely remove this call. See %s', componentName) : void 0;
          return boundMethod;
        }
        var reboundMethod = _bind.apply(boundMethod, arguments);
        reboundMethod.__reactBoundContext = component;
        reboundMethod.__reactBoundMethod = method;
        reboundMethod.__reactBoundArguments = args;
        return reboundMethod;
      };
    }
    return boundMethod;
  }

  /**
   * Binds all auto-bound methods in a component.
   *
   * @param {object} component Component whose method is going to be bound.
   */
  function bindAutoBindMethods(component) {
    var pairs = component.__reactAutoBindPairs;
    for (var i = 0; i < pairs.length; i += 2) {
      var autoBindKey = pairs[i];
      var method = pairs[i + 1];
      component[autoBindKey] = bindAutoBindMethod(component, method);
    }
  }

  /**
   * Add more to the ReactClass base class. These are all legacy features and
   * therefore not already part of the modern ReactComponent.
   */
  var ReactClassMixin = {

    /**
     * TODO: This will be deprecated because state should always keep a consistent
     * type signature and the only use case for this, is to avoid that.
     */
    replaceState: function (newState, callback) {
      this.updater.enqueueReplaceState(this, newState);
      if (callback) {
        this.updater.enqueueCallback(this, callback, 'replaceState');
      }
    },

    /**
     * Checks whether or not this composite component is mounted.
     * @return {boolean} True if mounted, false otherwise.
     * @protected
     * @final
     */
    isMounted: function () {
      return this.updater.isMounted(this);
    }
  };

  var ReactClassComponent = function () {};
  _assign(ReactClassComponent.prototype, ReactComponent.prototype, ReactClassMixin);

  /**
   * Module for creating composite components.
   *
   * @class ReactClass
   */
  var ReactClass = {

    /**
     * Creates a composite component class given a class specification.
     * See https://facebook.github.io/react/docs/top-level-api.html#react.createclass
     *
     * @param {object} spec Class specification (which must define `render`).
     * @return {function} Component constructor function.
     * @public
     */
    createClass: function (spec) {
      // To keep our warnings more understandable, we'll use a little hack here to
      // ensure that Constructor.name !== 'Constructor'. This makes sure we don't
      // unnecessarily identify a class without displayName as 'Constructor'.
      var Constructor = identity(function (props, context, updater) {
        // This constructor gets overridden by mocks. The argument is used
        // by mocks to assert on what gets mounted.

        if (true) {
           true ? warning(this instanceof Constructor, 'Something is calling a React component directly. Use a factory or ' + 'JSX instead. See: https://fb.me/react-legacyfactory') : void 0;
        }

        // Wire up auto-binding
        if (this.__reactAutoBindPairs.length) {
          bindAutoBindMethods(this);
        }

        this.props = props;
        this.context = context;
        this.refs = emptyObject;
        this.updater = updater || ReactNoopUpdateQueue;

        this.state = null;

        // ReactClasses doesn't have constructors. Instead, they use the
        // getInitialState and componentWillMount methods for initialization.

        var initialState = this.getInitialState ? this.getInitialState() : null;
        if (true) {
          // We allow auto-mocks to proceed as if they're returning null.
          if (initialState === undefined && this.getInitialState._isMockFunction) {
            // This is probably bad practice. Consider warning here and
            // deprecating this convenience.
            initialState = null;
          }
        }
        !(typeof initialState === 'object' && !Array.isArray(initialState)) ?  true ? invariant(false, '%s.getInitialState(): must return an object or null', Constructor.displayName || 'ReactCompositeComponent') : _prodInvariant('82', Constructor.displayName || 'ReactCompositeComponent') : void 0;

        this.state = initialState;
      });
      Constructor.prototype = new ReactClassComponent();
      Constructor.prototype.constructor = Constructor;
      Constructor.prototype.__reactAutoBindPairs = [];

      injectedMixins.forEach(mixSpecIntoComponent.bind(null, Constructor));

      mixSpecIntoComponent(Constructor, spec);

      // Initialize the defaultProps property after all mixins have been merged.
      if (Constructor.getDefaultProps) {
        Constructor.defaultProps = Constructor.getDefaultProps();
      }

      if (true) {
        // This is a tag to indicate that the use of these method names is ok,
        // since it's used with createClass. If it's not, then it's likely a
        // mistake so we'll warn you to use the static property, property
        // initializer or constructor respectively.
        if (Constructor.getDefaultProps) {
          Constructor.getDefaultProps.isReactClassApproved = {};
        }
        if (Constructor.prototype.getInitialState) {
          Constructor.prototype.getInitialState.isReactClassApproved = {};
        }
      }

      !Constructor.prototype.render ?  true ? invariant(false, 'createClass(...): Class specification must implement a `render` method.') : _prodInvariant('83') : void 0;

      if (true) {
         true ? warning(!Constructor.prototype.componentShouldUpdate, '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', spec.displayName || 'A component') : void 0;
         true ? warning(!Constructor.prototype.componentWillRecieveProps, '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', spec.displayName || 'A component') : void 0;
      }

      // Reduce time spent doing lookups by setting these on the prototype.
      for (var methodName in ReactClassInterface) {
        if (!Constructor.prototype[methodName]) {
          Constructor.prototype[methodName] = null;
        }
      }

      return Constructor;
    },

    injection: {
      injectMixin: function (mixin) {
        injectedMixins.push(mixin);
      }
    }

  };

  module.exports = ReactClass;

/***/ },
/* 406 */
/***/ function(module, exports, __webpack_require__) {

  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   * 
   */

  'use strict';

  var ReactPropTypeLocationNames = {};

  if (true) {
    ReactPropTypeLocationNames = {
      prop: 'prop',
      context: 'context',
      childContext: 'child context'
    };
  }

  module.exports = ReactPropTypeLocationNames;

/***/ },
/* 407 */
/***/ function(module, exports, __webpack_require__) {

  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  var ReactElement = __webpack_require__(392);

  /**
   * Create a factory that creates HTML tag elements.
   *
   * @private
   */
  var createDOMFactory = ReactElement.createFactory;
  if (true) {
    var ReactElementValidator = __webpack_require__(408);
    createDOMFactory = ReactElementValidator.createFactory;
  }

  /**
   * Creates a mapping from supported HTML tags to `ReactDOMComponent` classes.
   * This is also accessible via `React.DOM`.
   *
   * @public
   */
  var ReactDOMFactories = {
    a: createDOMFactory('a'),
    abbr: createDOMFactory('abbr'),
    address: createDOMFactory('address'),
    area: createDOMFactory('area'),
    article: createDOMFactory('article'),
    aside: createDOMFactory('aside'),
    audio: createDOMFactory('audio'),
    b: createDOMFactory('b'),
    base: createDOMFactory('base'),
    bdi: createDOMFactory('bdi'),
    bdo: createDOMFactory('bdo'),
    big: createDOMFactory('big'),
    blockquote: createDOMFactory('blockquote'),
    body: createDOMFactory('body'),
    br: createDOMFactory('br'),
    button: createDOMFactory('button'),
    canvas: createDOMFactory('canvas'),
    caption: createDOMFactory('caption'),
    cite: createDOMFactory('cite'),
    code: createDOMFactory('code'),
    col: createDOMFactory('col'),
    colgroup: createDOMFactory('colgroup'),
    data: createDOMFactory('data'),
    datalist: createDOMFactory('datalist'),
    dd: createDOMFactory('dd'),
    del: createDOMFactory('del'),
    details: createDOMFactory('details'),
    dfn: createDOMFactory('dfn'),
    dialog: createDOMFactory('dialog'),
    div: createDOMFactory('div'),
    dl: createDOMFactory('dl'),
    dt: createDOMFactory('dt'),
    em: createDOMFactory('em'),
    embed: createDOMFactory('embed'),
    fieldset: createDOMFactory('fieldset'),
    figcaption: createDOMFactory('figcaption'),
    figure: createDOMFactory('figure'),
    footer: createDOMFactory('footer'),
    form: createDOMFactory('form'),
    h1: createDOMFactory('h1'),
    h2: createDOMFactory('h2'),
    h3: createDOMFactory('h3'),
    h4: createDOMFactory('h4'),
    h5: createDOMFactory('h5'),
    h6: createDOMFactory('h6'),
    head: createDOMFactory('head'),
    header: createDOMFactory('header'),
    hgroup: createDOMFactory('hgroup'),
    hr: createDOMFactory('hr'),
    html: createDOMFactory('html'),
    i: createDOMFactory('i'),
    iframe: createDOMFactory('iframe'),
    img: createDOMFactory('img'),
    input: createDOMFactory('input'),
    ins: createDOMFactory('ins'),
    kbd: createDOMFactory('kbd'),
    keygen: createDOMFactory('keygen'),
    label: createDOMFactory('label'),
    legend: createDOMFactory('legend'),
    li: createDOMFactory('li'),
    link: createDOMFactory('link'),
    main: createDOMFactory('main'),
    map: createDOMFactory('map'),
    mark: createDOMFactory('mark'),
    menu: createDOMFactory('menu'),
    menuitem: createDOMFactory('menuitem'),
    meta: createDOMFactory('meta'),
    meter: createDOMFactory('meter'),
    nav: createDOMFactory('nav'),
    noscript: createDOMFactory('noscript'),
    object: createDOMFactory('object'),
    ol: createDOMFactory('ol'),
    optgroup: createDOMFactory('optgroup'),
    option: createDOMFactory('option'),
    output: createDOMFactory('output'),
    p: createDOMFactory('p'),
    param: createDOMFactory('param'),
    picture: createDOMFactory('picture'),
    pre: createDOMFactory('pre'),
    progress: createDOMFactory('progress'),
    q: createDOMFactory('q'),
    rp: createDOMFactory('rp'),
    rt: createDOMFactory('rt'),
    ruby: createDOMFactory('ruby'),
    s: createDOMFactory('s'),
    samp: createDOMFactory('samp'),
    script: createDOMFactory('script'),
    section: createDOMFactory('section'),
    select: createDOMFactory('select'),
    small: createDOMFactory('small'),
    source: createDOMFactory('source'),
    span: createDOMFactory('span'),
    strong: createDOMFactory('strong'),
    style: createDOMFactory('style'),
    sub: createDOMFactory('sub'),
    summary: createDOMFactory('summary'),
    sup: createDOMFactory('sup'),
    table: createDOMFactory('table'),
    tbody: createDOMFactory('tbody'),
    td: createDOMFactory('td'),
    textarea: createDOMFactory('textarea'),
    tfoot: createDOMFactory('tfoot'),
    th: createDOMFactory('th'),
    thead: createDOMFactory('thead'),
    time: createDOMFactory('time'),
    title: createDOMFactory('title'),
    tr: createDOMFactory('tr'),
    track: createDOMFactory('track'),
    u: createDOMFactory('u'),
    ul: createDOMFactory('ul'),
    'var': createDOMFactory('var'),
    video: createDOMFactory('video'),
    wbr: createDOMFactory('wbr'),

    // SVG
    circle: createDOMFactory('circle'),
    clipPath: createDOMFactory('clipPath'),
    defs: createDOMFactory('defs'),
    ellipse: createDOMFactory('ellipse'),
    g: createDOMFactory('g'),
    image: createDOMFactory('image'),
    line: createDOMFactory('line'),
    linearGradient: createDOMFactory('linearGradient'),
    mask: createDOMFactory('mask'),
    path: createDOMFactory('path'),
    pattern: createDOMFactory('pattern'),
    polygon: createDOMFactory('polygon'),
    polyline: createDOMFactory('polyline'),
    radialGradient: createDOMFactory('radialGradient'),
    rect: createDOMFactory('rect'),
    stop: createDOMFactory('stop'),
    svg: createDOMFactory('svg'),
    text: createDOMFactory('text'),
    tspan: createDOMFactory('tspan')
  };

  module.exports = ReactDOMFactories;

/***/ },
/* 408 */
/***/ function(module, exports, __webpack_require__) {

  /**
   * Copyright 2014-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  /**
   * ReactElementValidator provides a wrapper around a element factory
   * which validates the props passed to the element. This is intended to be
   * used only in DEV and could be replaced by a static type checker for languages
   * that support it.
   */

  'use strict';

  var ReactCurrentOwner = __webpack_require__(393);
  var ReactComponentTreeHook = __webpack_require__(409);
  var ReactElement = __webpack_require__(392);

  var checkReactTypeSpec = __webpack_require__(410);

  var canDefineProperty = __webpack_require__(396);
  var getIteratorFn = __webpack_require__(399);
  var warning = __webpack_require__(394);

  function getDeclarationErrorAddendum() {
    if (ReactCurrentOwner.current) {
      var name = ReactCurrentOwner.current.getName();
      if (name) {
        return ' Check the render method of `' + name + '`.';
      }
    }
    return '';
  }

  /**
   * Warn if there's no key explicitly set on dynamic arrays of children or
   * object keys are not valid. This allows us to keep track of children between
   * updates.
   */
  var ownerHasKeyUseWarning = {};

  function getCurrentComponentErrorInfo(parentType) {
    var info = getDeclarationErrorAddendum();

    if (!info) {
      var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;
      if (parentName) {
        info = ' Check the top-level render call using <' + parentName + '>.';
      }
    }
    return info;
  }

  /**
   * Warn if the element doesn't have an explicit key assigned to it.
   * This element is in an array. The array could grow and shrink or be
   * reordered. All children that haven't already been validated are required to
   * have a "key" property assigned to it. Error statuses are cached so a warning
   * will only be shown once.
   *
   * @internal
   * @param {ReactElement} element Element that requires a key.
   * @param {*} parentType element's parent's type.
   */
  function validateExplicitKey(element, parentType) {
    if (!element._store || element._store.validated || element.key != null) {
      return;
    }
    element._store.validated = true;

    var memoizer = ownerHasKeyUseWarning.uniqueKey || (ownerHasKeyUseWarning.uniqueKey = {});

    var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);
    if (memoizer[currentComponentErrorInfo]) {
      return;
    }
    memoizer[currentComponentErrorInfo] = true;

    // Usually the current owner is the offender, but if it accepts children as a
    // property, it may be the creator of the child that's responsible for
    // assigning it a key.
    var childOwner = '';
    if (element && element._owner && element._owner !== ReactCurrentOwner.current) {
      // Give the component that originally created this child.
      childOwner = ' It was passed a child from ' + element._owner.getName() + '.';
    }

     true ? warning(false, 'Each child in an array or iterator should have a unique "key" prop.' + '%s%s See https://fb.me/react-warning-keys for more information.%s', currentComponentErrorInfo, childOwner, ReactComponentTreeHook.getCurrentStackAddendum(element)) : void 0;
  }

  /**
   * Ensure that every element either is passed in a static location, in an
   * array with an explicit keys property defined, or in an object literal
   * with valid key property.
   *
   * @internal
   * @param {ReactNode} node Statically passed child of any type.
   * @param {*} parentType node's parent's type.
   */
  function validateChildKeys(node, parentType) {
    if (typeof node !== 'object') {
      return;
    }
    if (Array.isArray(node)) {
      for (var i = 0; i < node.length; i++) {
        var child = node[i];
        if (ReactElement.isValidElement(child)) {
          validateExplicitKey(child, parentType);
        }
      }
    } else if (ReactElement.isValidElement(node)) {
      // This element was passed in a valid location.
      if (node._store) {
        node._store.validated = true;
      }
    } else if (node) {
      var iteratorFn = getIteratorFn(node);
      // Entry iterators provide implicit keys.
      if (iteratorFn) {
        if (iteratorFn !== node.entries) {
          var iterator = iteratorFn.call(node);
          var step;
          while (!(step = iterator.next()).done) {
            if (ReactElement.isValidElement(step.value)) {
              validateExplicitKey(step.value, parentType);
            }
          }
        }
      }
    }
  }

  /**
   * Given an element, validate that its props follow the propTypes definition,
   * provided by the type.
   *
   * @param {ReactElement} element
   */
  function validatePropTypes(element) {
    var componentClass = element.type;
    if (typeof componentClass !== 'function') {
      return;
    }
    var name = componentClass.displayName || componentClass.name;
    if (componentClass.propTypes) {
      checkReactTypeSpec(componentClass.propTypes, element.props, 'prop', name, element, null);
    }
    if (typeof componentClass.getDefaultProps === 'function') {
       true ? warning(componentClass.getDefaultProps.isReactClassApproved, 'getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.') : void 0;
    }
  }

  var ReactElementValidator = {

    createElement: function (type, props, children) {
      var validType = typeof type === 'string' || typeof type === 'function';
      // We warn in this case but don't throw. We expect the element creation to
      // succeed and there will likely be errors in render.
      if (!validType) {
         true ? warning(false, 'React.createElement: type should not be null, undefined, boolean, or ' + 'number. It should be a string (for DOM elements) or a ReactClass ' + '(for composite components).%s', getDeclarationErrorAddendum()) : void 0;
      }

      var element = ReactElement.createElement.apply(this, arguments);

      // The result can be nullish if a mock or a custom function is used.
      // TODO: Drop this when these are no longer allowed as the type argument.
      if (element == null) {
        return element;
      }

      // Skip key warning if the type isn't valid since our key validation logic
      // doesn't expect a non-string/function type and can throw confusing errors.
      // We don't want exception behavior to differ between dev and prod.
      // (Rendering will throw with a helpful message and as soon as the type is
      // fixed, the key warnings will appear.)
      if (validType) {
        for (var i = 2; i < arguments.length; i++) {
          validateChildKeys(arguments[i], type);
        }
      }

      validatePropTypes(element);

      return element;
    },

    createFactory: function (type) {
      var validatedFactory = ReactElementValidator.createElement.bind(null, type);
      // Legacy hook TODO: Warn if this is accessed
      validatedFactory.type = type;

      if (true) {
        if (canDefineProperty) {
          Object.defineProperty(validatedFactory, 'type', {
            enumerable: false,
            get: function () {
               true ? warning(false, 'Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.') : void 0;
              Object.defineProperty(this, 'type', {
                value: type
              });
              return type;
            }
          });
        }
      }

      return validatedFactory;
    },

    cloneElement: function (element, props, children) {
      var newElement = ReactElement.cloneElement.apply(this, arguments);
      for (var i = 2; i < arguments.length; i++) {
        validateChildKeys(arguments[i], newElement.type);
      }
      validatePropTypes(newElement);
      return newElement;
    }

  };

  module.exports = ReactElementValidator;

/***/ },
/* 409 */
/***/ function(module, exports, __webpack_require__) {

  /**
   * Copyright 2016-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   * 
   */

  'use strict';

  var _prodInvariant = __webpack_require__(390);

  var ReactCurrentOwner = __webpack_require__(393);

  var invariant = __webpack_require__(391);
  var warning = __webpack_require__(394);

  function isNative(fn) {
    // Based on isNative() from Lodash
    var funcToString = Function.prototype.toString;
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    var reIsNative = RegExp('^' + funcToString
    // Take an example native function source for comparison
    .call(hasOwnProperty)
    // Strip regex characters so we can use it for regex
    .replace(/[\\^$.*+?()[\]{}|]/g, '\\$&')
    // Remove hasOwnProperty from the template to make it generic
    .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$');
    try {
      var source = funcToString.call(fn);
      return reIsNative.test(source);
    } catch (err) {
      return false;
    }
  }

  var canUseCollections =
  // Array.from
  typeof Array.from === 'function' &&
  // Map
  typeof Map === 'function' && isNative(Map) &&
  // Map.prototype.keys
  Map.prototype != null && typeof Map.prototype.keys === 'function' && isNative(Map.prototype.keys) &&
  // Set
  typeof Set === 'function' && isNative(Set) &&
  // Set.prototype.keys
  Set.prototype != null && typeof Set.prototype.keys === 'function' && isNative(Set.prototype.keys);

  var setItem;
  var getItem;
  var removeItem;
  var getItemIDs;
  var addRoot;
  var removeRoot;
  var getRootIDs;

  if (canUseCollections) {
    var itemMap = new Map();
    var rootIDSet = new Set();

    setItem = function (id, item) {
      itemMap.set(id, item);
    };
    getItem = function (id) {
      return itemMap.get(id);
    };
    removeItem = function (id) {
      itemMap['delete'](id);
    };
    getItemIDs = function () {
      return Array.from(itemMap.keys());
    };

    addRoot = function (id) {
      rootIDSet.add(id);
    };
    removeRoot = function (id) {
      rootIDSet['delete'](id);
    };
    getRootIDs = function () {
      return Array.from(rootIDSet.keys());
    };
  } else {
    var itemByKey = {};
    var rootByKey = {};

    // Use non-numeric keys to prevent V8 performance issues:
    // https://github.com/facebook/react/pull/7232
    var getKeyFromID = function (id) {
      return '.' + id;
    };
    var getIDFromKey = function (key) {
      return parseInt(key.substr(1), 10);
    };

    setItem = function (id, item) {
      var key = getKeyFromID(id);
      itemByKey[key] = item;
    };
    getItem = function (id) {
      var key = getKeyFromID(id);
      return itemByKey[key];
    };
    removeItem = function (id) {
      var key = getKeyFromID(id);
      delete itemByKey[key];
    };
    getItemIDs = function () {
      return Object.keys(itemByKey).map(getIDFromKey);
    };

    addRoot = function (id) {
      var key = getKeyFromID(id);
      rootByKey[key] = true;
    };
    removeRoot = function (id) {
      var key = getKeyFromID(id);
      delete rootByKey[key];
    };
    getRootIDs = function () {
      return Object.keys(rootByKey).map(getIDFromKey);
    };
  }

  var unmountedIDs = [];

  function purgeDeep(id) {
    var item = getItem(id);
    if (item) {
      var childIDs = item.childIDs;

      removeItem(id);
      childIDs.forEach(purgeDeep);
    }
  }

  function describeComponentFrame(name, source, ownerName) {
    return '\n    in ' + (name || 'Unknown') + (source ? ' (at ' + source.fileName.replace(/^.*[\\\/]/, '') + ':' + source.lineNumber + ')' : ownerName ? ' (created by ' + ownerName + ')' : '');
  }

  function getDisplayName(element) {
    if (element == null) {
      return '#empty';
    } else if (typeof element === 'string' || typeof element === 'number') {
      return '#text';
    } else if (typeof element.type === 'string') {
      return element.type;
    } else {
      return element.type.displayName || element.type.name || 'Unknown';
    }
  }

  function describeID(id) {
    var name = ReactComponentTreeHook.getDisplayName(id);
    var element = ReactComponentTreeHook.getElement(id);
    var ownerID = ReactComponentTreeHook.getOwnerID(id);
    var ownerName;
    if (ownerID) {
      ownerName = ReactComponentTreeHook.getDisplayName(ownerID);
    }
     true ? warning(element, 'ReactComponentTreeHook: Missing React element for debugID %s when ' + 'building stack', id) : void 0;
    return describeComponentFrame(name, element && element._source, ownerName);
  }

  var ReactComponentTreeHook = {
    onSetChildren: function (id, nextChildIDs) {
      var item = getItem(id);
      !item ?  true ? invariant(false, 'Item must have been set') : _prodInvariant('144') : void 0;
      item.childIDs = nextChildIDs;

      for (var i = 0; i < nextChildIDs.length; i++) {
        var nextChildID = nextChildIDs[i];
        var nextChild = getItem(nextChildID);
        !nextChild ?  true ? invariant(false, 'Expected hook events to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('140') : void 0;
        !(nextChild.childIDs != null || typeof nextChild.element !== 'object' || nextChild.element == null) ?  true ? invariant(false, 'Expected onSetChildren() to fire for a container child before its parent includes it in onSetChildren().') : _prodInvariant('141') : void 0;
        !nextChild.isMounted ?  true ? invariant(false, 'Expected onMountComponent() to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('71') : void 0;
        if (nextChild.parentID == null) {
          nextChild.parentID = id;
          // TODO: This shouldn't be necessary but mounting a new root during in
          // componentWillMount currently causes not-yet-mounted components to
          // be purged from our tree data so their parent id is missing.
        }
        !(nextChild.parentID === id) ?  true ? invariant(false, 'Expected onBeforeMountComponent() parent and onSetChildren() to be consistent (%s has parents %s and %s).', nextChildID, nextChild.parentID, id) : _prodInvariant('142', nextChildID, nextChild.parentID, id) : void 0;
      }
    },
    onBeforeMountComponent: function (id, element, parentID) {
      var item = {
        element: element,
        parentID: parentID,
        text: null,
        childIDs: [],
        isMounted: false,
        updateCount: 0
      };
      setItem(id, item);
    },
    onBeforeUpdateComponent: function (id, element) {
      var item = getItem(id);
      if (!item || !item.isMounted) {
        // We may end up here as a result of setState() in componentWillUnmount().
        // In this case, ignore the element.
        return;
      }
      item.element = element;
    },
    onMountComponent: function (id) {
      var item = getItem(id);
      !item ?  true ? invariant(false, 'Item must have been set') : _prodInvariant('144') : void 0;
      item.isMounted = true;
      var isRoot = item.parentID === 0;
      if (isRoot) {
        addRoot(id);
      }
    },
    onUpdateComponent: function (id) {
      var item = getItem(id);
      if (!item || !item.isMounted) {
        // We may end up here as a result of setState() in componentWillUnmount().
        // In this case, ignore the element.
        return;
      }
      item.updateCount++;
    },
    onUnmountComponent: function (id) {
      var item = getItem(id);
      if (item) {
        // We need to check if it exists.
        // `item` might not exist if it is inside an error boundary, and a sibling
        // error boundary child threw while mounting. Then this instance never
        // got a chance to mount, but it still gets an unmounting event during
        // the error boundary cleanup.
        item.isMounted = false;
        var isRoot = item.parentID === 0;
        if (isRoot) {
          removeRoot(id);
        }
      }
      unmountedIDs.push(id);
    },
    purgeUnmountedComponents: function () {
      if (ReactComponentTreeHook._preventPurging) {
        // Should only be used for testing.
        return;
      }

      for (var i = 0; i < unmountedIDs.length; i++) {
        var id = unmountedIDs[i];
        purgeDeep(id);
      }
      unmountedIDs.length = 0;
    },
    isMounted: function (id) {
      var item = getItem(id);
      return item ? item.isMounted : false;
    },
    getCurrentStackAddendum: function (topElement) {
      var info = '';
      if (topElement) {
        var name = getDisplayName(topElement);
        var owner = topElement._owner;
        info += describeComponentFrame(name, topElement._source, owner && owner.getName());
      }

      var currentOwner = ReactCurrentOwner.current;
      var id = currentOwner && currentOwner._debugID;

      info += ReactComponentTreeHook.getStackAddendumByID(id);
      return info;
    },
    getStackAddendumByID: function (id) {
      var info = '';
      while (id) {
        info += describeID(id);
        id = ReactComponentTreeHook.getParentID(id);
      }
      return info;
    },
    getChildIDs: function (id) {
      var item = getItem(id);
      return item ? item.childIDs : [];
    },
    getDisplayName: function (id) {
      var element = ReactComponentTreeHook.getElement(id);
      if (!element) {
        return null;
      }
      return getDisplayName(element);
    },
    getElement: function (id) {
      var item = getItem(id);
      return item ? item.element : null;
    },
    getOwnerID: function (id) {
      var element = ReactComponentTreeHook.getElement(id);
      if (!element || !element._owner) {
        return null;
      }
      return element._owner._debugID;
    },
    getParentID: function (id) {
      var item = getItem(id);
      return item ? item.parentID : null;
    },
    getSource: function (id) {
      var item = getItem(id);
      var element = item ? item.element : null;
      var source = element != null ? element._source : null;
      return source;
    },
    getText: function (id) {
      var element = ReactComponentTreeHook.getElement(id);
      if (typeof element === 'string') {
        return element;
      } else if (typeof element === 'number') {
        return '' + element;
      } else {
        return null;
      }
    },
    getUpdateCount: function (id) {
      var item = getItem(id);
      return item ? item.updateCount : 0;
    },


    getRootIDs: getRootIDs,
    getRegisteredIDs: getItemIDs
  };

  module.exports = ReactComponentTreeHook;

/***/ },
/* 410 */
/***/ function(module, exports, __webpack_require__) {

  /* WEBPACK VAR INJECTION */(function(process) {/**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  var _prodInvariant = __webpack_require__(390);

  var ReactPropTypeLocationNames = __webpack_require__(406);
  var ReactPropTypesSecret = __webpack_require__(411);

  var invariant = __webpack_require__(391);
  var warning = __webpack_require__(394);

  var ReactComponentTreeHook;

  if (typeof process !== 'undefined' && process.env && ("development") === 'test') {
    // Temporary hack.
    // Inline requires don't work well with Jest:
    // https://github.com/facebook/react/issues/7240
    // Remove the inline requires when we don't need them anymore:
    // https://github.com/facebook/react/pull/7178
    ReactComponentTreeHook = __webpack_require__(409);
  }

  var loggedTypeFailures = {};

  /**
   * Assert that the values match with the type specs.
   * Error messages are memorized and will only be shown once.
   *
   * @param {object} typeSpecs Map of name to a ReactPropType
   * @param {object} values Runtime values that need to be type-checked
   * @param {string} location e.g. "prop", "context", "child context"
   * @param {string} componentName Name of the component for error messages.
   * @param {?object} element The React element that is being type-checked
   * @param {?number} debugID The React component instance that is being type-checked
   * @private
   */
  function checkReactTypeSpec(typeSpecs, values, location, componentName, element, debugID) {
    for (var typeSpecName in typeSpecs) {
      if (typeSpecs.hasOwnProperty(typeSpecName)) {
        var error;
        // Prop type validation may throw. In case they do, we don't want to
        // fail the render phase where it didn't fail before. So we log it.
        // After these have been cleaned up, we'll let them throw.
        try {
          // This is intentionally an invariant that gets caught. It's the same
          // behavior as without this statement except with a better message.
          !(typeof typeSpecs[typeSpecName] === 'function') ?  true ? invariant(false, '%s: %s type `%s` is invalid; it must be a function, usually from React.PropTypes.', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : _prodInvariant('84', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : void 0;
          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
        } catch (ex) {
          error = ex;
        }
         true ? warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName, typeof error) : void 0;
        if (error instanceof Error && !(error.message in loggedTypeFailures)) {
          // Only monitor this failure once because there tends to be a lot of the
          // same error.
          loggedTypeFailures[error.message] = true;

          var componentStackInfo = '';

          if (true) {
            if (!ReactComponentTreeHook) {
              ReactComponentTreeHook = __webpack_require__(409);
            }
            if (debugID !== null) {
              componentStackInfo = ReactComponentTreeHook.getStackAddendumByID(debugID);
            } else if (element !== null) {
              componentStackInfo = ReactComponentTreeHook.getCurrentStackAddendum(element);
            }
          }

           true ? warning(false, 'Failed %s type: %s%s', location, error.message, componentStackInfo) : void 0;
        }
      }
    }
  }

  module.exports = checkReactTypeSpec;
  /* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(72)))

/***/ },
/* 411 */
/***/ function(module, exports) {

  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   * 
   */

  'use strict';

  var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

  module.exports = ReactPropTypesSecret;

/***/ },
/* 412 */
/***/ function(module, exports, __webpack_require__) {

  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  var ReactElement = __webpack_require__(392);
  var ReactPropTypeLocationNames = __webpack_require__(406);
  var ReactPropTypesSecret = __webpack_require__(411);

  var emptyFunction = __webpack_require__(395);
  var getIteratorFn = __webpack_require__(399);
  var warning = __webpack_require__(394);

  /**
   * Collection of methods that allow declaration and validation of props that are
   * supplied to React components. Example usage:
   *
   *   var Props = require('ReactPropTypes');
   *   var MyArticle = React.createClass({
   *     propTypes: {
   *       // An optional string prop named "description".
   *       description: Props.string,
   *
   *       // A required enum prop named "category".
   *       category: Props.oneOf(['News','Photos']).isRequired,
   *
   *       // A prop named "dialog" that requires an instance of Dialog.
   *       dialog: Props.instanceOf(Dialog).isRequired
   *     },
   *     render: function() { ... }
   *   });
   *
   * A more formal specification of how these methods are used:
   *
   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
   *   decl := ReactPropTypes.{type}(.isRequired)?
   *
   * Each and every declaration produces a function with the same signature. This
   * allows the creation of custom validation functions. For example:
   *
   *  var MyLink = React.createClass({
   *    propTypes: {
   *      // An optional string or URI prop named "href".
   *      href: function(props, propName, componentName) {
   *        var propValue = props[propName];
   *        if (propValue != null && typeof propValue !== 'string' &&
   *            !(propValue instanceof URI)) {
   *          return new Error(
   *            'Expected a string or an URI for ' + propName + ' in ' +
   *            componentName
   *          );
   *        }
   *      }
   *    },
   *    render: function() {...}
   *  });
   *
   * @internal
   */

  var ANONYMOUS = '<<anonymous>>';

  var ReactPropTypes = {
    array: createPrimitiveTypeChecker('array'),
    bool: createPrimitiveTypeChecker('boolean'),
    func: createPrimitiveTypeChecker('function'),
    number: createPrimitiveTypeChecker('number'),
    object: createPrimitiveTypeChecker('object'),
    string: createPrimitiveTypeChecker('string'),
    symbol: createPrimitiveTypeChecker('symbol'),

    any: createAnyTypeChecker(),
    arrayOf: createArrayOfTypeChecker,
    element: createElementTypeChecker(),
    instanceOf: createInstanceTypeChecker,
    node: createNodeChecker(),
    objectOf: createObjectOfTypeChecker,
    oneOf: createEnumTypeChecker,
    oneOfType: createUnionTypeChecker,
    shape: createShapeTypeChecker
  };

  /**
   * inlined Object.is polyfill to avoid requiring consumers ship their own
   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
   */
  /*eslint-disable no-self-compare*/
  function is(x, y) {
    // SameValue algorithm
    if (x === y) {
      // Steps 1-5, 7-10
      // Steps 6.b-6.e: +0 != -0
      return x !== 0 || 1 / x === 1 / y;
    } else {
      // Step 6.a: NaN == NaN
      return x !== x && y !== y;
    }
  }
  /*eslint-enable no-self-compare*/

  /**
   * We use an Error-like object for backward compatibility as people may call
   * PropTypes directly and inspect their output. However we don't use real
   * Errors anymore. We don't inspect their stack anyway, and creating them
   * is prohibitively expensive if they are created too often, such as what
   * happens in oneOfType() for any type before the one that matched.
   */
  function PropTypeError(message) {
    this.message = message;
    this.stack = '';
  }
  // Make `instanceof Error` still work for returned errors.
  PropTypeError.prototype = Error.prototype;

  function createChainableTypeChecker(validate) {
    if (true) {
      var manualPropTypeCallCache = {};
    }
    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
      componentName = componentName || ANONYMOUS;
      propFullName = propFullName || propName;
      if (true) {
        if (secret !== ReactPropTypesSecret && typeof console !== 'undefined') {
          var cacheKey = componentName + ':' + propName;
          if (!manualPropTypeCallCache[cacheKey]) {
             true ? warning(false, 'You are manually calling a React.PropTypes validation ' + 'function for the `%s` prop on `%s`. This is deprecated ' + 'and will not work in production with the next major version. ' + 'You may be seeing this warning due to a third-party PropTypes ' + 'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.', propFullName, componentName) : void 0;
            manualPropTypeCallCache[cacheKey] = true;
          }
        }
      }
      if (props[propName] == null) {
        var locationName = ReactPropTypeLocationNames[location];
        if (isRequired) {
          if (props[propName] === null) {
            return new PropTypeError('The ' + locationName + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));
          }
          return new PropTypeError('The ' + locationName + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));
        }
        return null;
      } else {
        return validate(props, propName, componentName, location, propFullName);
      }
    }

    var chainedCheckType = checkType.bind(null, false);
    chainedCheckType.isRequired = checkType.bind(null, true);

    return chainedCheckType;
  }

  function createPrimitiveTypeChecker(expectedType) {
    function validate(props, propName, componentName, location, propFullName, secret) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== expectedType) {
        var locationName = ReactPropTypeLocationNames[location];
        // `propValue` being instance of, say, date/regexp, pass the 'object'
        // check, but we can offer a more precise error message here rather than
        // 'of type `object`'.
        var preciseType = getPreciseType(propValue);

        return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createAnyTypeChecker() {
    return createChainableTypeChecker(emptyFunction.thatReturns(null));
  }

  function createArrayOfTypeChecker(typeChecker) {
    function validate(props, propName, componentName, location, propFullName) {
      if (typeof typeChecker !== 'function') {
        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');
      }
      var propValue = props[propName];
      if (!Array.isArray(propValue)) {
        var locationName = ReactPropTypeLocationNames[location];
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
      }
      for (var i = 0; i < propValue.length; i++) {
        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);
        if (error instanceof Error) {
          return error;
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createElementTypeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      if (!ReactElement.isValidElement(propValue)) {
        var locationName = ReactPropTypeLocationNames[location];
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createInstanceTypeChecker(expectedClass) {
    function validate(props, propName, componentName, location, propFullName) {
      if (!(props[propName] instanceof expectedClass)) {
        var locationName = ReactPropTypeLocationNames[location];
        var expectedClassName = expectedClass.name || ANONYMOUS;
        var actualClassName = getClassName(props[propName]);
        return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createEnumTypeChecker(expectedValues) {
    if (!Array.isArray(expectedValues)) {
       true ? warning(false, 'Invalid argument supplied to oneOf, expected an instance of array.') : void 0;
      return emptyFunction.thatReturnsNull;
    }

    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      for (var i = 0; i < expectedValues.length; i++) {
        if (is(propValue, expectedValues[i])) {
          return null;
        }
      }

      var locationName = ReactPropTypeLocationNames[location];
      var valuesString = JSON.stringify(expectedValues);
      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
    }
    return createChainableTypeChecker(validate);
  }

  function createObjectOfTypeChecker(typeChecker) {
    function validate(props, propName, componentName, location, propFullName) {
      if (typeof typeChecker !== 'function') {
        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');
      }
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        var locationName = ReactPropTypeLocationNames[location];
        return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
      }
      for (var key in propValue) {
        if (propValue.hasOwnProperty(key)) {
          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
          if (error instanceof Error) {
            return error;
          }
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createUnionTypeChecker(arrayOfTypeCheckers) {
    if (!Array.isArray(arrayOfTypeCheckers)) {
       true ? warning(false, 'Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;
      return emptyFunction.thatReturnsNull;
    }

    function validate(props, propName, componentName, location, propFullName) {
      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
        var checker = arrayOfTypeCheckers[i];
        if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {
          return null;
        }
      }

      var locationName = ReactPropTypeLocationNames[location];
      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));
    }
    return createChainableTypeChecker(validate);
  }

  function createNodeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      if (!isNode(props[propName])) {
        var locationName = ReactPropTypeLocationNames[location];
        return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createShapeTypeChecker(shapeTypes) {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        var locationName = ReactPropTypeLocationNames[location];
        return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
      }
      for (var key in shapeTypes) {
        var checker = shapeTypes[key];
        if (!checker) {
          continue;
        }
        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
        if (error) {
          return error;
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function isNode(propValue) {
    switch (typeof propValue) {
      case 'number':
      case 'string':
      case 'undefined':
        return true;
      case 'boolean':
        return !propValue;
      case 'object':
        if (Array.isArray(propValue)) {
          return propValue.every(isNode);
        }
        if (propValue === null || ReactElement.isValidElement(propValue)) {
          return true;
        }

        var iteratorFn = getIteratorFn(propValue);
        if (iteratorFn) {
          var iterator = iteratorFn.call(propValue);
          var step;
          if (iteratorFn !== propValue.entries) {
            while (!(step = iterator.next()).done) {
              if (!isNode(step.value)) {
                return false;
              }
            }
          } else {
            // Iterator will provide entry [k,v] tuples rather than values.
            while (!(step = iterator.next()).done) {
              var entry = step.value;
              if (entry) {
                if (!isNode(entry[1])) {
                  return false;
                }
              }
            }
          }
        } else {
          return false;
        }

        return true;
      default:
        return false;
    }
  }

  function isSymbol(propType, propValue) {
    // Native Symbol.
    if (propType === 'symbol') {
      return true;
    }

    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'
    if (propValue['@@toStringTag'] === 'Symbol') {
      return true;
    }

    // Fallback for non-spec compliant Symbols which are polyfilled.
    if (typeof Symbol === 'function' && propValue instanceof Symbol) {
      return true;
    }

    return false;
  }

  // Equivalent of `typeof` but with special handling for array and regexp.
  function getPropType(propValue) {
    var propType = typeof propValue;
    if (Array.isArray(propValue)) {
      return 'array';
    }
    if (propValue instanceof RegExp) {
      // Old webkits (at least until Android 4.0) return 'function' rather than
      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
      // passes PropTypes.object.
      return 'object';
    }
    if (isSymbol(propType, propValue)) {
      return 'symbol';
    }
    return propType;
  }

  // This handles more types than `getPropType`. Only used for error messages.
  // See `createPrimitiveTypeChecker`.
  function getPreciseType(propValue) {
    var propType = getPropType(propValue);
    if (propType === 'object') {
      if (propValue instanceof Date) {
        return 'date';
      } else if (propValue instanceof RegExp) {
        return 'regexp';
      }
    }
    return propType;
  }

  // Returns class name of the object, if any.
  function getClassName(propValue) {
    if (!propValue.constructor || !propValue.constructor.name) {
      return ANONYMOUS;
    }
    return propValue.constructor.name;
  }

  module.exports = ReactPropTypes;

/***/ },
/* 413 */
/***/ function(module, exports) {

  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  module.exports = '15.4.1';

/***/ },
/* 414 */
/***/ function(module, exports, __webpack_require__) {

  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */
  'use strict';

  var _prodInvariant = __webpack_require__(390);

  var ReactElement = __webpack_require__(392);

  var invariant = __webpack_require__(391);

  /**
   * Returns the first child in a collection of children and verifies that there
   * is only one child in the collection.
   *
   * See https://facebook.github.io/react/docs/top-level-api.html#react.children.only
   *
   * The current implementation of this function assumes that a single child gets
   * passed without a wrapper, but the purpose of this helper function is to
   * abstract away the particular structure of children.
   *
   * @param {?object} children Child collection structure.
   * @return {ReactElement} The first and only `ReactElement` contained in the
   * structure.
   */
  function onlyChild(children) {
    !ReactElement.isValidElement(children) ?  true ? invariant(false, 'React.Children.only expected to receive a single React element child.') : _prodInvariant('143') : void 0;
    return children;
  }

  module.exports = onlyChild;

/***/ },
/* 415 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  module.exports = __webpack_require__(416);


/***/ },
/* 416 */
/***/ function(module, exports, __webpack_require__) {

  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  /* globals __REACT_DEVTOOLS_GLOBAL_HOOK__*/

  'use strict';

  var ReactDOMComponentTree = __webpack_require__(417);
  var ReactDefaultInjection = __webpack_require__(421);
  var ReactMount = __webpack_require__(549);
  var ReactReconciler = __webpack_require__(442);
  var ReactUpdates = __webpack_require__(439);
  var ReactVersion = __webpack_require__(554);

  var findDOMNode = __webpack_require__(555);
  var getHostComponentFromComposite = __webpack_require__(556);
  var renderSubtreeIntoContainer = __webpack_require__(557);
  var warning = __webpack_require__(394);

  ReactDefaultInjection.inject();

  var ReactDOM = {
    findDOMNode: findDOMNode,
    render: ReactMount.render,
    unmountComponentAtNode: ReactMount.unmountComponentAtNode,
    version: ReactVersion,

    /* eslint-disable camelcase */
    unstable_batchedUpdates: ReactUpdates.batchedUpdates,
    unstable_renderSubtreeIntoContainer: renderSubtreeIntoContainer
  };

  // Inject the runtime into a devtools global hook regardless of browser.
  // Allows for debugging when the hook is injected on the page.
  if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.inject === 'function') {
    __REACT_DEVTOOLS_GLOBAL_HOOK__.inject({
      ComponentTree: {
        getClosestInstanceFromNode: ReactDOMComponentTree.getClosestInstanceFromNode,
        getNodeFromInstance: function (inst) {
          // inst is an internal instance (but could be a composite)
          if (inst._renderedComponent) {
            inst = getHostComponentFromComposite(inst);
          }
          if (inst) {
            return ReactDOMComponentTree.getNodeFromInstance(inst);
          } else {
            return null;
          }
        }
      },
      Mount: ReactMount,
      Reconciler: ReactReconciler
    });
  }

  if (true) {
    var ExecutionEnvironment = __webpack_require__(431);
    if (ExecutionEnvironment.canUseDOM && window.top === window.self) {

      // First check if devtools is not installed
      if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {
        // If we're in Chrome or Firefox, provide a download link if not installed.
        if (navigator.userAgent.indexOf('Chrome') > -1 && navigator.userAgent.indexOf('Edge') === -1 || navigator.userAgent.indexOf('Firefox') > -1) {
          // Firefox does not have the issue with devtools loaded over file://
          var showFileUrlMessage = window.location.protocol.indexOf('http') === -1 && navigator.userAgent.indexOf('Firefox') === -1;
          console.debug('Download the React DevTools ' + (showFileUrlMessage ? 'and use an HTTP server (instead of a file: URL) ' : '') + 'for a better development experience: ' + 'https://fb.me/react-devtools');
        }
      }

      var testFunc = function testFn() {};
       true ? warning((testFunc.name || testFunc.toString()).indexOf('testFn') !== -1, 'It looks like you\'re using a minified copy of the development build ' + 'of React. When deploying React apps to production, make sure to use ' + 'the production build which skips development warnings and is faster. ' + 'See https://fb.me/react-minification for more details.') : void 0;

      // If we're in IE8, check to see if we are in compatibility mode and provide
      // information on preventing compatibility mode
      var ieCompatibilityMode = document.documentMode && document.documentMode < 8;

       true ? warning(!ieCompatibilityMode, 'Internet Explorer is running in compatibility mode; please add the ' + 'following tag to your HTML to prevent this from happening: ' + '<meta http-equiv="X-UA-Compatible" content="IE=edge" />') : void 0;

      var expectedFeatures = [
      // shims
      Array.isArray, Array.prototype.every, Array.prototype.forEach, Array.prototype.indexOf, Array.prototype.map, Date.now, Function.prototype.bind, Object.keys, String.prototype.trim];

      for (var i = 0; i < expectedFeatures.length; i++) {
        if (!expectedFeatures[i]) {
           true ? warning(false, 'One or more ES5 shims expected by React are not available: ' + 'https://fb.me/react-warning-polyfills') : void 0;
          break;
        }
      }
    }
  }

  if (true) {
    var ReactInstrumentation = __webpack_require__(445);
    var ReactDOMUnknownPropertyHook = __webpack_require__(558);
    var ReactDOMNullInputValuePropHook = __webpack_require__(559);
    var ReactDOMInvalidARIAHook = __webpack_require__(560);

    ReactInstrumentation.debugTool.addHook(ReactDOMUnknownPropertyHook);
    ReactInstrumentation.debugTool.addHook(ReactDOMNullInputValuePropHook);
    ReactInstrumentation.debugTool.addHook(ReactDOMInvalidARIAHook);
  }

  module.exports = ReactDOM;

/***/ },
/* 417 */
/***/ function(module, exports, __webpack_require__) {

  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  var _prodInvariant = __webpack_require__(418);

  var DOMProperty = __webpack_require__(419);
  var ReactDOMComponentFlags = __webpack_require__(420);

  var invariant = __webpack_require__(391);

  var ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;
  var Flags = ReactDOMComponentFlags;

  var internalInstanceKey = '__reactInternalInstance$' + Math.random().toString(36).slice(2);

  /**
   * Drill down (through composites and empty components) until we get a host or
   * host text component.
   *
   * This is pretty polymorphic but unavoidable with the current structure we have
   * for `_renderedChildren`.
   */
  function getRenderedHostOrTextFromComponent(component) {
    var rendered;
    while (rendered = component._renderedComponent) {
      component = rendered;
    }
    return component;
  }

  /**
   * Populate `_hostNode` on the rendered host/text component with the given
   * DOM node. The passed `inst` can be a composite.
   */
  function precacheNode(inst, node) {
    var hostInst = getRenderedHostOrTextFromComponent(inst);
    hostInst._hostNode = node;
    node[internalInstanceKey] = hostInst;
  }

  function uncacheNode(inst) {
    var node = inst._hostNode;
    if (node) {
      delete node[internalInstanceKey];
      inst._hostNode = null;
    }
  }

  /**
   * Populate `_hostNode` on each child of `inst`, assuming that the children
   * match up with the DOM (element) children of `node`.
   *
   * We cache entire levels at once to avoid an n^2 problem where we access the
   * children of a node sequentially and have to walk from the start to our target
   * node every time.
   *
   * Since we update `_renderedChildren` and the actual DOM at (slightly)
   * different times, we could race here and see a newer `_renderedChildren` than
   * the DOM nodes we see. To avoid this, ReactMultiChild calls
   * `prepareToManageChildren` before we change `_renderedChildren`, at which
   * time the container's child nodes are always cached (until it unmounts).
   */
  function precacheChildNodes(inst, node) {
    if (inst._flags & Flags.hasCachedChildNodes) {
      return;
    }
    var children = inst._renderedChildren;
    var childNode = node.firstChild;
    outer: for (var name in children) {
      if (!children.hasOwnProperty(name)) {
        continue;
      }
      var childInst = children[name];
      var childID = getRenderedHostOrTextFromComponent(childInst)._domID;
      if (childID === 0) {
        // We're currently unmounting this child in ReactMultiChild; skip it.
        continue;
      }
      // We assume the child nodes are in the same order as the child instances.
      for (; childNode !== null; childNode = childNode.nextSibling) {
        if (childNode.nodeType === 1 && childNode.getAttribute(ATTR_NAME) === String(childID) || childNode.nodeType === 8 && childNode.nodeValue === ' react-text: ' + childID + ' ' || childNode.nodeType === 8 && childNode.nodeValue === ' react-empty: ' + childID + ' ') {
          precacheNode(childInst, childNode);
          continue outer;
        }
      }
      // We reached the end of the DOM children without finding an ID match.
       true ?  true ? invariant(false, 'Unable to find element with ID %s.', childID) : _prodInvariant('32', childID) : void 0;
    }
    inst._flags |= Flags.hasCachedChildNodes;
  }

  /**
   * Given a DOM node, return the closest ReactDOMComponent or
   * ReactDOMTextComponent instance ancestor.
   */
  function getClosestInstanceFromNode(node) {
    if (node[internalInstanceKey]) {
      return node[internalInstanceKey];
    }

    // Walk up the tree until we find an ancestor whose instance we have cached.
    var parents = [];
    while (!node[internalInstanceKey]) {
      parents.push(node);
      if (node.parentNode) {
        node = node.parentNode;
      } else {
        // Top of the tree. This node must not be part of a React tree (or is
        // unmounted, potentially).
        return null;
      }
    }

    var closest;
    var inst;
    for (; node && (inst = node[internalInstanceKey]); node = parents.pop()) {
      closest = inst;
      if (parents.length) {
        precacheChildNodes(inst, node);
      }
    }

    return closest;
  }

  /**
   * Given a DOM node, return the ReactDOMComponent or ReactDOMTextComponent
   * instance, or null if the node was not rendered by this React.
   */
  function getInstanceFromNode(node) {
    var inst = getClosestInstanceFromNode(node);
    if (inst != null && inst._hostNode === node) {
      return inst;
    } else {
      return null;
    }
  }

  /**
   * Given a ReactDOMComponent or ReactDOMTextComponent, return the corresponding
   * DOM node.
   */
  function getNodeFromInstance(inst) {
    // Without this first invariant, passing a non-DOM-component triggers the next
    // invariant for a missing parent, which is super confusing.
    !(inst._hostNode !== undefined) ?  true ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;

    if (inst._hostNode) {
      return inst._hostNode;
    }

    // Walk up the tree until we find an ancestor whose DOM node we have cached.
    var parents = [];
    while (!inst._hostNode) {
      parents.push(inst);
      !inst._hostParent ?  true ? invariant(false, 'React DOM tree root should always have a node reference.') : _prodInvariant('34') : void 0;
      inst = inst._hostParent;
    }

    // Now parents contains each ancestor that does *not* have a cached native
    // node, and `inst` is the deepest ancestor that does.
    for (; parents.length; inst = parents.pop()) {
      precacheChildNodes(inst, inst._hostNode);
    }

    return inst._hostNode;
  }

  var ReactDOMComponentTree = {
    getClosestInstanceFromNode: getClosestInstanceFromNode,
    getInstanceFromNode: getInstanceFromNode,
    getNodeFromInstance: getNodeFromInstance,
    precacheChildNodes: precacheChildNodes,
    precacheNode: precacheNode,
    uncacheNode: uncacheNode
  };

  module.exports = ReactDOMComponentTree;

/***/ },
/* 418 */
/***/ function(module, exports) {

  /**
   * Copyright (c) 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   * 
   */
  'use strict';

  /**
   * WARNING: DO NOT manually require this module.
   * This is a replacement for `invariant(...)` used by the error code system
   * and will _only_ be required by the corresponding babel pass.
   * It always throws.
   */

  function reactProdInvariant(code) {
    var argCount = arguments.length - 1;

    var message = 'Minified React error #' + code + '; visit ' + 'http://facebook.github.io/react/docs/error-decoder.html?invariant=' + code;

    for (var argIdx = 0; argIdx < argCount; argIdx++) {
      message += '&args[]=' + encodeURIComponent(arguments[argIdx + 1]);
    }

    message += ' for the full message or use the non-minified dev environment' + ' for full errors and additional helpful warnings.';

    var error = new Error(message);
    error.name = 'Invariant Violation';
    error.framesToPop = 1; // we don't care about reactProdInvariant's own frame

    throw error;
  }

  module.exports = reactProdInvariant;

/***/ },
/* 419 */
/***/ function(module, exports, __webpack_require__) {

  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  var _prodInvariant = __webpack_require__(418);

  var invariant = __webpack_require__(391);

  function checkMask(value, bitmask) {
    return (value & bitmask) === bitmask;
  }

  var DOMPropertyInjection = {
    /**
     * Mapping from normalized, camelcased property names to a configuration that
     * specifies how the associated DOM property should be accessed or rendered.
     */
    MUST_USE_PROPERTY: 0x1,
    HAS_BOOLEAN_VALUE: 0x4,
    HAS_NUMERIC_VALUE: 0x8,
    HAS_POSITIVE_NUMERIC_VALUE: 0x10 | 0x8,
    HAS_OVERLOADED_BOOLEAN_VALUE: 0x20,

    /**
     * Inject some specialized knowledge about the DOM. This takes a config object
     * with the following properties:
     *
     * isCustomAttribute: function that given an attribute name will return true
     * if it can be inserted into the DOM verbatim. Useful for data-* or aria-*
     * attributes where it's impossible to enumerate all of the possible
     * attribute names,
     *
     * Properties: object mapping DOM property name to one of the
     * DOMPropertyInjection constants or null. If your attribute isn't in here,
     * it won't get written to the DOM.
     *
     * DOMAttributeNames: object mapping React attribute name to the DOM
     * attribute name. Attribute names not specified use the **lowercase**
     * normalized name.
     *
     * DOMAttributeNamespaces: object mapping React attribute name to the DOM
     * attribute namespace URL. (Attribute names not specified use no namespace.)
     *
     * DOMPropertyNames: similar to DOMAttributeNames but for DOM properties.
     * Property names not specified use the normalized name.
     *
     * DOMMutationMethods: Properties that require special mutation methods. If
     * `value` is undefined, the mutation method should unset the property.
     *
     * @param {object} domPropertyConfig the config as described above.
     */
    injectDOMPropertyConfig: function (domPropertyConfig) {
      var Injection = DOMPropertyInjection;
      var Properties = domPropertyConfig.Properties || {};
      var DOMAttributeNamespaces = domPropertyConfig.DOMAttributeNamespaces || {};
      var DOMAttributeNames = domPropertyConfig.DOMAttributeNames || {};
      var DOMPropertyNames = domPropertyConfig.DOMPropertyNames || {};
      var DOMMutationMethods = domPropertyConfig.DOMMutationMethods || {};

      if (domPropertyConfig.isCustomAttribute) {
        DOMProperty._isCustomAttributeFunctions.push(domPropertyConfig.isCustomAttribute);
      }

      for (var propName in Properties) {
        !!DOMProperty.properties.hasOwnProperty(propName) ?  true ? invariant(false, 'injectDOMPropertyConfig(...): You\'re trying to inject DOM property \'%s\' which has already been injected. You may be accidentally injecting the same DOM property config twice, or you may be injecting two configs that have conflicting property names.', propName) : _prodInvariant('48', propName) : void 0;

        var lowerCased = propName.toLowerCase();
        var propConfig = Properties[propName];

        var propertyInfo = {
          attributeName: lowerCased,
          attributeNamespace: null,
          propertyName: propName,
          mutationMethod: null,

          mustUseProperty: checkMask(propConfig, Injection.MUST_USE_PROPERTY),
          hasBooleanValue: checkMask(propConfig, Injection.HAS_BOOLEAN_VALUE),
          hasNumericValue: checkMask(propConfig, Injection.HAS_NUMERIC_VALUE),
          hasPositiveNumericValue: checkMask(propConfig, Injection.HAS_POSITIVE_NUMERIC_VALUE),
          hasOverloadedBooleanValue: checkMask(propConfig, Injection.HAS_OVERLOADED_BOOLEAN_VALUE)
        };
        !(propertyInfo.hasBooleanValue + propertyInfo.hasNumericValue + propertyInfo.hasOverloadedBooleanValue <= 1) ?  true ? invariant(false, 'DOMProperty: Value can be one of boolean, overloaded boolean, or numeric value, but not a combination: %s', propName) : _prodInvariant('50', propName) : void 0;

        if (true) {
          DOMProperty.getPossibleStandardName[lowerCased] = propName;
        }

        if (DOMAttributeNames.hasOwnProperty(propName)) {
          var attributeName = DOMAttributeNames[propName];
          propertyInfo.attributeName = attributeName;
          if (true) {
            DOMProperty.getPossibleStandardName[attributeName] = propName;
          }
        }

        if (DOMAttributeNamespaces.hasOwnProperty(propName)) {
          propertyInfo.attributeNamespace = DOMAttributeNamespaces[propName];
        }

        if (DOMPropertyNames.hasOwnProperty(propName)) {
          propertyInfo.propertyName = DOMPropertyNames[propName];
        }

        if (DOMMutationMethods.hasOwnProperty(propName)) {
          propertyInfo.mutationMethod = DOMMutationMethods[propName];
        }

        DOMProperty.properties[propName] = propertyInfo;
      }
    }
  };

  /* eslint-disable max-len */
  var ATTRIBUTE_NAME_START_CHAR = ':A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD';
  /* eslint-enable max-len */

  /**
   * DOMProperty exports lookup objects that can be used like functions:
   *
   *   > DOMProperty.isValid['id']
   *   true
   *   > DOMProperty.isValid['foobar']
   *   undefined
   *
   * Although this may be confusing, it performs better in general.
   *
   * @see http://jsperf.com/key-exists
   * @see http://jsperf.com/key-missing
   */
  var DOMProperty = {

    ID_ATTRIBUTE_NAME: 'data-reactid',
    ROOT_ATTRIBUTE_NAME: 'data-reactroot',

    ATTRIBUTE_NAME_START_CHAR: ATTRIBUTE_NAME_START_CHAR,
    ATTRIBUTE_NAME_CHAR: ATTRIBUTE_NAME_START_CHAR + '\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040',

    /**
     * Map from property "standard name" to an object with info about how to set
     * the property in the DOM. Each object contains:
     *
     * attributeName:
     *   Used when rendering markup or with `*Attribute()`.
     * attributeNamespace
     * propertyName:
     *   Used on DOM node instances. (This includes properties that mutate due to
     *   external factors.)
     * mutationMethod:
     *   If non-null, used instead of the property or `setAttribute()` after
     *   initial render.
     * mustUseProperty:
     *   Whether the property must be accessed and mutated as an object property.
     * hasBooleanValue:
     *   Whether the property should be removed when set to a falsey value.
     * hasNumericValue:
     *   Whether the property must be numeric or parse as a numeric and should be
     *   removed when set to a falsey value.
     * hasPositiveNumericValue:
     *   Whether the property must be positive numeric or parse as a positive
     *   numeric and should be removed when set to a falsey value.
     * hasOverloadedBooleanValue:
     *   Whether the property can be used as a flag as well as with a value.
     *   Removed when strictly equal to false; present without a value when
     *   strictly equal to true; present with a value otherwise.
     */
    properties: {},

    /**
     * Mapping from lowercase property names to the properly cased version, used
     * to warn in the case of missing properties. Available only in __DEV__.
     *
     * autofocus is predefined, because adding it to the property whitelist
     * causes unintended side effects.
     *
     * @type {Object}
     */
    getPossibleStandardName:  true ? { autofocus: 'autoFocus' } : null,

    /**
     * All of the isCustomAttribute() functions that have been injected.
     */
    _isCustomAttributeFunctions: [],

    /**
     * Checks whether a property name is a custom attribute.
     * @method
     */
    isCustomAttribute: function (attributeName) {
      for (var i = 0; i < DOMProperty._isCustomAttributeFunctions.length; i++) {
        var isCustomAttributeFn = DOMProperty._isCustomAttributeFunctions[i];
        if (isCustomAttributeFn(attributeName)) {
          return true;
        }
      }
      return false;
    },

    injection: DOMPropertyInjection
  };

  module.exports = DOMProperty;

/***/ },
/* 420 */
/***/ function(module, exports) {

  /**
   * Copyright 2015-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  var ReactDOMComponentFlags = {
    hasCachedChildNodes: 1 << 0
  };

  module.exports = ReactDOMComponentFlags;

/***/ },
/* 421 */
/***/ function(module, exports, __webpack_require__) {

  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  var ARIADOMPropertyConfig = __webpack_require__(422);
  var BeforeInputEventPlugin = __webpack_require__(423);
  var ChangeEventPlugin = __webpack_require__(438);
  var DefaultEventPluginOrder = __webpack_require__(455);
  var EnterLeaveEventPlugin = __webpack_require__(456);
  var HTMLDOMPropertyConfig = __webpack_require__(461);
  var ReactComponentBrowserEnvironment = __webpack_require__(462);
  var ReactDOMComponent = __webpack_require__(475);
  var ReactDOMComponentTree = __webpack_require__(417);
  var ReactDOMEmptyComponent = __webpack_require__(520);
  var ReactDOMTreeTraversal = __webpack_require__(521);
  var ReactDOMTextComponent = __webpack_require__(522);
  var ReactDefaultBatchingStrategy = __webpack_require__(523);
  var ReactEventListener = __webpack_require__(524);
  var ReactInjection = __webpack_require__(527);
  var ReactReconcileTransaction = __webpack_require__(528);
  var SVGDOMPropertyConfig = __webpack_require__(536);
  var SelectEventPlugin = __webpack_require__(537);
  var SimpleEventPlugin = __webpack_require__(538);

  var alreadyInjected = false;

  function inject() {
    if (alreadyInjected) {
      // TODO: This is currently true because these injections are shared between
      // the client and the server package. They should be built independently
      // and not share any injection state. Then this problem will be solved.
      return;
    }
    alreadyInjected = true;

    ReactInjection.EventEmitter.injectReactEventListener(ReactEventListener);

    /**
     * Inject modules for resolving DOM hierarchy and plugin ordering.
     */
    ReactInjection.EventPluginHub.injectEventPluginOrder(DefaultEventPluginOrder);
    ReactInjection.EventPluginUtils.injectComponentTree(ReactDOMComponentTree);
    ReactInjection.EventPluginUtils.injectTreeTraversal(ReactDOMTreeTraversal);

    /**
     * Some important event plugins included by default (without having to require
     * them).
     */
    ReactInjection.EventPluginHub.injectEventPluginsByName({
      SimpleEventPlugin: SimpleEventPlugin,
      EnterLeaveEventPlugin: EnterLeaveEventPlugin,
      ChangeEventPlugin: ChangeEventPlugin,
      SelectEventPlugin: SelectEventPlugin,
      BeforeInputEventPlugin: BeforeInputEventPlugin
    });

    ReactInjection.HostComponent.injectGenericComponentClass(ReactDOMComponent);

    ReactInjection.HostComponent.injectTextComponentClass(ReactDOMTextComponent);

    ReactInjection.DOMProperty.injectDOMPropertyConfig(ARIADOMPropertyConfig);
    ReactInjection.DOMProperty.injectDOMPropertyConfig(HTMLDOMPropertyConfig);
    ReactInjection.DOMProperty.injectDOMPropertyConfig(SVGDOMPropertyConfig);

    ReactInjection.EmptyComponent.injectEmptyComponentFactory(function (instantiate) {
      return new ReactDOMEmptyComponent(instantiate);
    });

    ReactInjection.Updates.injectReconcileTransaction(ReactReconcileTransaction);
    ReactInjection.Updates.injectBatchingStrategy(ReactDefaultBatchingStrategy);

    ReactInjection.Component.injectEnvironment(ReactComponentBrowserEnvironment);
  }

  module.exports = {
    inject: inject
  };

/***/ },
/* 422 */
/***/ function(module, exports) {

  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  var ARIADOMPropertyConfig = {
    Properties: {
      // Global States and Properties
      'aria-current': 0, // state
      'aria-details': 0,
      'aria-disabled': 0, // state
      'aria-hidden': 0, // state
      'aria-invalid': 0, // state
      'aria-keyshortcuts': 0,
      'aria-label': 0,
      'aria-roledescription': 0,
      // Widget Attributes
      'aria-autocomplete': 0,
      'aria-checked': 0,
      'aria-expanded': 0,
      'aria-haspopup': 0,
      'aria-level': 0,
      'aria-modal': 0,
      'aria-multiline': 0,
      'aria-multiselectable': 0,
      'aria-orientation': 0,
      'aria-placeholder': 0,
      'aria-pressed': 0,
      'aria-readonly': 0,
      'aria-required': 0,
      'aria-selected': 0,
      'aria-sort': 0,
      'aria-valuemax': 0,
      'aria-valuemin': 0,
      'aria-valuenow': 0,
      'aria-valuetext': 0,
      // Live Region Attributes
      'aria-atomic': 0,
      'aria-busy': 0,
      'aria-live': 0,
      'aria-relevant': 0,
      // Drag-and-Drop Attributes
      'aria-dropeffect': 0,
      'aria-grabbed': 0,
      // Relationship Attributes
      'aria-activedescendant': 0,
      'aria-colcount': 0,
      'aria-colindex': 0,
      'aria-colspan': 0,
      'aria-controls': 0,
      'aria-describedby': 0,
      'aria-errormessage': 0,
      'aria-flowto': 0,
      'aria-labelledby': 0,
      'aria-owns': 0,
      'aria-posinset': 0,
      'aria-rowcount': 0,
      'aria-rowindex': 0,
      'aria-rowspan': 0,
      'aria-setsize': 0
    },
    DOMAttributeNames: {},
    DOMPropertyNames: {}
  };

  module.exports = ARIADOMPropertyConfig;

/***/ },
/* 423 */
/***/ function(module, exports, __webpack_require__) {

  /**
   * Copyright 2013-present Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  var EventPropagators = __webpack_require__(424);
  var ExecutionEnvironment = __webpack_require__(431);
  var FallbackCompositionState = __webpack_require__(432);
  var SyntheticCompositionEvent = __webpack_require__(435);
  var SyntheticInputEvent = __webpack_require__(437);

  var END_KEYCODES = [9, 13, 27, 32]; // Tab, Return, Esc, Space
  var START_KEYCODE = 229;

  var canUseCompositionEvent = ExecutionEnvironment.canUseDOM && 'CompositionEvent' in window;

  var documentMode = null;
  if (ExecutionEnvironment.canUseDOM && 'documentMode' in document) {
    documentMode = document.documentMode;
  }

  // Webkit offers a very useful `textInput` event that can be used to
  // directly represent `beforeInput`. The IE `textinput` event is not as
  // useful, so we don't use it.
  var canUseTextInputEvent = ExecutionEnvironment.canUseDOM && 'TextEvent' in window && !documentMode && !isPresto();

  // In IE9+, we have access to composition events, but the data supplied
  // by the native compositionend event may be incorrect. Japanese ideographic
  // spaces, for instance (\u3000) are not recorded correctly.
  var useFallbackCompositionData = ExecutionEnvironment.canUseDOM && (!canUseCompositionEvent || documentMode && documentMode > 8 && documentMode <= 11);

  /**
   * Opera <= 12 includes TextEvent in window, but does not fire
   * text input events. Rely on keypress instead.
   */
  function isPresto() {
    var opera = window.opera;
    return typeof opera === 'object' && typeof opera.version === 'function' && parseInt(opera.version(), 10) <= 12;
  }

  var SPACEBAR_CODE = 32;
  var SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);

  // Events and their corresponding property names.
  var eventTypes = {
    beforeInput: {
      phasedRegistrationNames: {
        bubbled: 'onBeforeInput',
        captured: 'onBeforeInputCapture'
      },
      dependencies: ['topCompositionEnd', 'topKeyPress', 'topTextInput', 'topPaste']
    },
    compositionEnd: {
      phasedRegistrationNames: {
        bubbled: 'onCompositionEnd',
        captured: 'onCompositionEndCapture'
      },
      dependencies: ['topBlur', 'topCompositionEnd', 'topKeyDown', 'topKeyPress', 'topKeyUp', 'topMouseDown']
    },
    compositionStart: {
      phasedRegistrationNames: {
        bubbled: 'onCompositionStart',
        captured: 'onCompositionStartCapture'
      },
      dependencies: ['topBlur', 'topCompositionStart', 'topKeyDown', 'topKeyPress', 'topKeyUp', 'topMouseDown']
    },
    compositionUpdate: {
      phasedRegistrationNames: {
        bubbled: 'onCompositionUpdate',
        captured: 'onCompositionUpdateCapture'
      },
      dependencies: ['topBlur', 'topCompositionUpdate', 'topKeyDown', 'topKeyPress', 'topKeyUp', 'topMouseDown']
    }
  };

  // Track whether we've ever handled a keypress on the space key.
  var hasSpaceKeypress = false;

  /**
   * Return whether a native keypress event is assumed to be a command.
   * This is required because Firefox fires `keypress` events for key commands
   * (cut, copy, select-all, etc.) even though no character is inserted.
   */
  function isKeypressCommand(nativeEvent) {
    return (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) &&
    // ctrlKey && altKey is equivalent to AltGr, and is not a command.
    !(nativeEvent.ctrlKey && nativeEvent.altKey);
  }

  /**
   * Translate native top level events into event types.
   *
   * @param {string} topLevelType
   * @return {object}
   */
  function getCompositionEventType(topLevelType) {
    switch (topLevelType) {
      case 'topCompositionStart':
        return eventTypes.compositionStart;
      case 'topCompositionEnd':
        return eventTypes.compositionEnd;
      case 'topCompositionUpdate':
        return eventTypes.compositionUpdate;
    }
  }

  /**
   * Does our fallback best-guess model think this event signifies that
   * composition has begun?
   *
   * @param {string} topLevelType
   * @param {object} nativeEvent
   * @return {boolean}
   */
  function isFallbackCompositionStart(topLevelType, nativeEvent) {
    return topLevelType === 'topKeyDown' && nativeEvent.keyCode === START_KEYCODE;
  }

  /**
   * Does our fallback mode think that this event is the end of composition?
   *
   * @param {string} topLevelType
   * @param {object} nativeEvent
   * @return {boolean}
   */
  function isFallbackCompositionEnd(topLevelType, nativeEvent) {
    switch (topLevelType) {
      case 'topKeyUp':
        // Command keys insert or clear IME input.
        return END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1;
      case 'topKeyDown':
        // Expect IME keyCode on each keydown. If we get any other
        // code we must have exited earlier.
        return nativeEvent.keyCode !== START_KEYCODE;
      case 'topKeyPress':
      case 'topMouseDown':
      case 'topBlur':
        // Events are not possible without cancelling IME.
        return true;
      default:
        return false;
    }
  }

  /**
   * Google Input Tools provides composition data via a CustomEvent,
   * with the `data` property populated in the `detail` object. If this
   * is available on the event object, use it. If not, this is a plain
   * composition event and we have nothing special to extract.
   *
   * @param {object} nativeEvent
   * @return {?string}
   */
  function getDataFromCustomEvent(nativeEvent) {
    var detail = nativeEvent.detail;
    if (typeof detail === 'object' && 'data' in detail) {
      return detail.data;
    }
    return null;
  }

  // Track the current IME composition fallback object, if any.
  var currentComposition = null;

  /**
   * @return {?object} A SyntheticCompositionEvent.
   */
  function extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    var eventType;
    var fallbackData;

    if (canUseCompositionEvent) {
      eventType = getCompositionEventType(topLevelType);
    } else if (!currentComposition) {
      if (isFallbackCompositionStart(topLevelType, nativeEvent)) {
        eventType = eventTypes.compositionStart;
      }
    } else if (isFallbackCompositionEnd(topLevelType, nativeEvent)) {
      eventType = eventTypes.compositionEnd;
    }

    if (!eventType) {
      return null;
    }

    if (useFallbackCompositionData) {
      // The current composition is stored statically and must not be
      // overwritten while composition continues.
      if (!currentComposition && eventType === eventTypes.compositionStart) {
        currentComposition = FallbackCompositionState.getPooled(nativeEventTarget);
      } else if (eventType === eventTypes.compositionEnd) {
        if (currentComposition) {
          fallbackData = currentComposition.getData();
        }
      }
    }

    var event = SyntheticCompositionEvent.getPooled(eventType, targetInst, nativeEvent, nativeEventTarget);

    if (fallbackData) {
      // Inject data generated from fallback path into the synthetic event.
      // This matches the property of native CompositionEventInterface.
      event.data = fallbackData;
    } else {
      var customData = getDataFromCustomEvent(nativeEvent);
      if (customData !== null) {
        event.data = customData;
      }
    }

    EventPropagators.accumulateTwoPhaseDispatches(event);
    return event;
  }

  /**
   * @param {string} topLevelType Record from `EventConstants`.
   * @param {object} nativeEvent Native browser event.
   * @return {?string} The string corresponding to this `beforeInput` event.
   */
  function getNativeBeforeInputChars(topLevelType, nativeEvent) {
    switch (topLevelType) {
      case 'topCompositionEnd':
        return getDataFromCustomEvent(nativeEvent);
      case 'topKeyPress':
        /**
         * If native `textInput` events are available, our goal is to make
         * use of them. However, there is a special case: the spacebar key.
         * In Webkit, preventing default on a spacebar `textInput` event
         * cancels character insertion, but it *also* causes the browser
         * to fall back to its default spacebar behavior of scrolling the
         * page.
         *
         * Tracking at:
         * https://code.google.com/p/chromium/issues/detail?id=355103
         *
         * To avoid this issue, use the keypress event as if no `textInput`
         * event is available.
         */
        var which = nativeEvent.which;
        if (which !== SPACEBAR_CODE) {
          return null;
        }

        hasSpaceKeypress = true;
        return SPACEBAR_CHAR;

      case 'topTextInput':
        // Record the characters to be added to the DOM.
        var chars = nativeEvent.data;

        // If it's a spacebar character, assume that we have already handled
        // it at the keypress level and bail immediately. Android Chrome
        // doesn't give us keycodes, so we need to blacklist it.
        if (chars === SPACEBAR_CHAR && hasSpaceKeypress) {
          return null;
        }

        return chars;

      default:
        // For other native event types, do nothing.
        return null;
    }
  }

  /**
   * For browsers that do not provide the `textInput` event, extract the
   * appropriate string to use for SyntheticInputEvent.
   *
   * @param {string} topLevelType Record from `EventConstants`.
   * @param {object} nativeEvent Native browser event.
   * @return {?string} The fallback string for this `beforeInput` event.
   */
  function getFallbackBeforeInputChars(topLevelType, nativeEvent) {
    // If we are currently composing (IME) and using a fallback to do so,
    // try to extract the composed characters from the fallback object.
    // If composition event is available, we extract a string only at
    // compositionevent, otherwise extract it at fallback events.
    if (currentComposition) {
      if (topLevelType === 'topCompositionEnd' || !canUseCompositionEvent && isFallbackCompositionEnd(topLevelType, nativeEvent)) {
        var chars = currentComposition.getData();
        FallbackCompositionState.release(currentComposition);
        currentComposition = null;
        return chars;
      }
      return null;
    }

    switch (topLevelType) {
      case 'topPaste':
        // If a paste event occurs after a keypress, throw out the input
        // chars. Paste events should not lead to BeforeInput events.
        return null;
      case 'topKeyPress':
        /**
         * As of v27, Firefox may fire keypress events even when no character
         * will be inserted. A few possibilities:
         *
         * - `which` is `0`. Arrow keys, Esc key, etc.
         *
         * - `which` is the pressed key code, but no char is available.
         *   Ex: 'AltGr + d` in Polish. There is no modified character for
         *   this key combination and no character is inserted into the
         *   document, but FF fires the keypress for char code `100` anyway.
         *   No `input` event will occur.
         *
         * - `which` is the pressed key code, but a command combination is
         *   being used. Ex: `Cmd+C`. No character is inserted, and no
         *   `input` event will occur.
         */
        if (nativeEvent.which && !isKeypressCommand(nativeEvent)) {
          return String.fromCharCode(nativeEvent.which);
        }
        return null;
      case 'topCompositionEnd':
        return useFallbackCompositionData ? null : nativeEvent.data;
      default:
        return null;
    }
  }

  /**
   * Extract a SyntheticInputEvent for `beforeInput`, based on either native
   * `textInput` or fallback behavior.
   *
   * @return {?object} A SyntheticInputEvent.
   */
  function extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    var chars;

    if (canUseTextInputEvent) {
      chars = getNativeBeforeInputChars(topLevelType, nativeEvent);
    } else {
      chars = getFallbackBeforeInputChars(topLevelType, nativeEvent);
    }

    // If no characters are being inserted, no BeforeInput event should
    // be fired.
    if (!chars) {
      return null;
    }

    var event = SyntheticInputEvent.getPooled(eventTypes.beforeInput, targetInst, nativeEvent, nativeEventTarget);

    event.data = chars;
    EventPropagators.accumulateTwoPhaseDispatches(event);
    return event;
  }

  /**
   * Create an `onBeforeInput` event to match
   * http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105/#events-inputevents.
   *
   * This event plugin is based on the native `textInput` event
   * available in Chrome, Safari, Opera, and IE. This event fires after
   * `onKeyPress` and `onCompositionEnd`, but before `onInput`.
   *
   * `beforeInput` is spec'd but not implemented in any browsers, and
   * the `input` event does not provide any useful information about what has
   * actually been added, contrary to the spec. Thus, `textInput` is the best
   * available event to identify the characters that have actually been inserted
   * into the target node.
   *
   * This plugin is also responsible for emitting `composition` events, thus
   * allowing us to share composition fallback code for both `beforeInput` and
   * `composition` event types.
   */
  var BeforeInputEventPlugin = {

    eventTypes: eventTypes,

    extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
      return [extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget), extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget)];
    }
  };

  module.exports = BeforeInputEventPlugin;

/***/ },
/* 424 */
/***/ function(module, exports, __webpack_require__) {

  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  var EventPluginHub = __webpack_require__(425);
  var EventPluginUtils = __webpack_require__(427);

  var accumulateInto = __webpack_require__(429);
  var forEachAccumulated = __webpack_require__(430);
  var warning = __webpack_require__(394);

  var getListener = EventPluginHub.getListener;

  /**
   * Some event types have a notion of different registration names for different
   * "phases" of propagation. This finds listeners by a given phase.
   */
  function listenerAtPhase(inst, event, propagationPhase) {
    var registrationName = event.dispatchConfig.phasedRegistrationNames[propagationPhase];
    return getListener(inst, registrationName);
  }

  /**
   * Tags a `SyntheticEvent` with dispatched listeners. Creating this function
   * here, allows us to not have to bind or create functions for each event.
   * Mutating the event's members allows us to not have to create a wrapping
   * "dispatch" object that pairs the event with the listener.
   */
  function accumulateDirectionalDispatches(inst, phase, event) {
    if (true) {
       true ? warning(inst, 'Dispatching inst must not be null') : void 0;
    }
    var listener = listenerAtPhase(inst, event, phase);
    if (listener) {
      event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
      event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
    }
  }

  /**
   * Collect dispatches (must be entirely collected before dispatching - see unit
   * tests). Lazily allocate the array to conserve memory.  We must loop through
   * each event and perform the traversal for each one. We cannot perform a
   * single traversal for the entire collection of events because each event may
   * have a different target.
   */
  function accumulateTwoPhaseDispatchesSingle(event) {
    if (event && event.dispatchConfig.phasedRegistrationNames) {
      EventPluginUtils.traverseTwoPhase(event._targetInst, accumulateDirectionalDispatches, event);
    }
  }

  /**
   * Same as `accumulateTwoPhaseDispatchesSingle`, but skips over the targetID.
   */
  function accumulateTwoPhaseDispatchesSingleSkipTarget(event) {
    if (event && event.dispatchConfig.phasedRegistrationNames) {
      var targetInst = event._targetInst;
      var parentInst = targetInst ? EventPluginUtils.getParentInstance(targetInst) : null;
      EventPluginUtils.traverseTwoPhase(parentInst, accumulateDirectionalDispatches, event);
    }
  }

  /**
   * Accumulates without regard to direction, does not look for phased
   * registration names. Same as `accumulateDirectDispatchesSingle` but without
   * requiring that the `dispatchMarker` be the same as the dispatched ID.
   */
  function accumulateDispatches(inst, ignoredDirection, event) {
    if (event && event.dispatchConfig.registrationName) {
      var registrationName = event.dispatchConfig.registrationName;
      var listener = getListener(inst, registrationName);
      if (listener) {
        event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
        event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
      }
    }
  }

  /**
   * Accumulates dispatches on an `SyntheticEvent`, but only for the
   * `dispatchMarker`.
   * @param {SyntheticEvent} event
   */
  function accumulateDirectDispatchesSingle(event) {
    if (event && event.dispatchConfig.registrationName) {
      accumulateDispatches(event._targetInst, null, event);
    }
  }

  function accumulateTwoPhaseDispatches(events) {
    forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);
  }

  function accumulateTwoPhaseDispatchesSkipTarget(events) {
    forEachAccumulated(events, accumulateTwoPhaseDispatchesSingleSkipTarget);
  }

  function accumulateEnterLeaveDispatches(leave, enter, from, to) {
    EventPluginUtils.traverseEnterLeave(from, to, accumulateDispatches, leave, enter);
  }

  function accumulateDirectDispatches(events) {
    forEachAccumulated(events, accumulateDirectDispatchesSingle);
  }

  /**
   * A small set of propagation patterns, each of which will accept a small amount
   * of information, and generate a set of "dispatch ready event objects" - which
   * are sets of events that have already been annotated with a set of dispatched
   * listener functions/ids. The API is designed this way to discourage these
   * propagation strategies from actually executing the dispatches, since we
   * always want to collect the entire set of dispatches before executing event a
   * single one.
   *
   * @constructor EventPropagators
   */
  var EventPropagators = {
    accumulateTwoPhaseDispatches: accumulateTwoPhaseDispatches,
    accumulateTwoPhaseDispatchesSkipTarget: accumulateTwoPhaseDispatchesSkipTarget,
    accumulateDirectDispatches: accumulateDirectDispatches,
    accumulateEnterLeaveDispatches: accumulateEnterLeaveDispatches
  };

  module.exports = EventPropagators;

/***/ },
/* 425 */
/***/ function(module, exports, __webpack_require__) {

  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  var _prodInvariant = __webpack_require__(418);

  var EventPluginRegistry = __webpack_require__(426);
  var EventPluginUtils = __webpack_require__(427);
  var ReactErrorUtils = __webpack_require__(428);

  var accumulateInto = __webpack_require__(429);
  var forEachAccumulated = __webpack_require__(430);
  var invariant = __webpack_require__(391);

  /**
   * Internal store for event listeners
   */
  var listenerBank = {};

  /**
   * Internal queue of events that have accumulated their dispatches and are
   * waiting to have their dispatches executed.
   */
  var eventQueue = null;

  /**
   * Dispatches an event and releases it back into the pool, unless persistent.
   *
   * @param {?object} event Synthetic event to be dispatched.
   * @param {boolean} simulated If the event is simulated (changes exn behavior)
   * @private
   */
  var executeDispatchesAndRelease = function (event, simulated) {
    if (event) {
      EventPluginUtils.executeDispatchesInOrder(event, simulated);

      if (!event.isPersistent()) {
        event.constructor.release(event);
      }
    }
  };
  var executeDispatchesAndReleaseSimulated = function (e) {
    return executeDispatchesAndRelease(e, true);
  };
  var executeDispatchesAndReleaseTopLevel = function (e) {
    return executeDispatchesAndRelease(e, false);
  };

  var getDictionaryKey = function (inst) {
    // Prevents V8 performance issue:
    // https://github.com/facebook/react/pull/7232
    return '.' + inst._rootNodeID;
  };

  function isInteractive(tag) {
    return tag === 'button' || tag === 'input' || tag === 'select' || tag === 'textarea';
  }

  function shouldPreventMouseEvent(name, type, props) {
    switch (name) {
      case 'onClick':
      case 'onClickCapture':
      case 'onDoubleClick':
      case 'onDoubleClickCapture':
      case 'onMouseDown':
      case 'onMouseDownCapture':
      case 'onMouseMove':
      case 'onMouseMoveCapture':
      case 'onMouseUp':
      case 'onMouseUpCapture':
        return !!(props.disabled && isInteractive(type));
      default:
        return false;
    }
  }

  /**
   * This is a unified interface for event plugins to be installed and configured.
   *
   * Event plugins can implement the following properties:
   *
   *   `extractEvents` {function(string, DOMEventTarget, string, object): *}
   *     Required. When a top-level event is fired, this method is expected to
   *     extract synthetic events that will in turn be queued and dispatched.
   *
   *   `eventTypes` {object}
   *     Optional, plugins that fire events must publish a mapping of registration
   *     names that are used to register listeners. Values of this mapping must
   *     be objects that contain `registrationName` or `phasedRegistrationNames`.
   *
   *   `executeDispatch` {function(object, function, string)}
   *     Optional, allows plugins to override how an event gets dispatched. By
   *     default, the listener is simply invoked.
   *
   * Each plugin that is injected into `EventsPluginHub` is immediately operable.
   *
   * @public
   */
  var EventPluginHub = {

    /**
     * Methods for injecting dependencies.
     */
    injection: {

      /**
       * @param {array} InjectedEventPluginOrder
       * @public
       */
      injectEventPluginOrder: EventPluginRegistry.injectEventPluginOrder,

      /**
       * @param {object} injectedNamesToPlugins Map from names to plugin modules.
       */
      injectEventPluginsByName: EventPluginRegistry.injectEventPluginsByName

    },

    /**
     * Stores `listener` at `listenerBank[registrationName][key]`. Is idempotent.
     *
     * @param {object} inst The instance, which is the source of events.
     * @param {string} registrationName Name of listener (e.g. `onClick`).
     * @param {function} listener The callback to store.
     */
    putListener: function (inst, registrationName, listener) {
      !(typeof listener === 'function') ?  true ? invariant(false, 'Expected %s listener to be a function, instead got type %s', registrationName, typeof listener) : _prodInvariant('94', registrationName, typeof listener) : void 0;

      var key = getDictionaryKey(inst);
      var bankForRegistrationName = listenerBank[registrationName] || (listenerBank[registrationName] = {});
      bankForRegistrationName[key] = listener;

      var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
      if (PluginModule && PluginModule.didPutListener) {
        PluginModule.didPutListener(inst, registrationName, listener);
      }
    },

    /**
     * @param {object} inst The instance, which is the source of events.
     * @param {string} registrationName Name of listener (e.g. `onClick`).
     * @return {?function} The stored callback.
     */
    getListener: function (inst, registrationName) {
      // TODO: shouldPreventMouseEvent is DOM-specific and definitely should not
      // live here; needs to be moved to a better place soon
      var bankForRegistrationName = listenerBank[registrationName];
      if (shouldPreventMouseEvent(registrationName, inst._currentElement.type, inst._currentElement.props)) {
        return null;
      }
      var key = getDictionaryKey(inst);
      return bankForRegistrationName && bankForRegistrationName[key];
    },

    /**
     * Deletes a listener from the registration bank.
     *
     * @param {object} inst The instance, which is the source of events.
     * @param {string} registrationName Name of listener (e.g. `onClick`).
     */
    deleteListener: function (inst, registrationName) {
      var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
      if (PluginModule && PluginModule.willDeleteListener) {
        PluginModule.willDeleteListener(inst, registrationName);
      }

      var bankForRegistrationName = listenerBank[registrationName];
      // TODO: This should never be null -- when is it?
      if (bankForRegistrationName) {
        var key = getDictionaryKey(inst);
        delete bankForRegistrationName[key];
      }
    },

    /**
     * Deletes all listeners for the DOM element with the supplied ID.
     *
     * @param {object} inst The instance, which is the source of events.
     */
    deleteAllListeners: function (inst) {
      var key = getDictionaryKey(inst);
      for (var registrationName in listenerBank) {
        if (!listenerBank.hasOwnProperty(registrationName)) {
          continue;
        }

        if (!listenerBank[registrationName][key]) {
          continue;
        }

        var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
        if (PluginModule && PluginModule.willDeleteListener) {
          PluginModule.willDeleteListener(inst, registrationName);
        }

        delete listenerBank[registrationName][key];
      }
    },

    /**
     * Allows registered plugins an opportunity to extract events from top-level
     * native browser events.
     *
     * @return {*} An accumulation of synthetic events.
     * @internal
     */
    extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
      var events;
      var plugins = EventPluginRegistry.plugins;
      for (var i = 0; i < plugins.length; i++) {
        // Not every plugin in the ordering may be loaded at runtime.
        var possiblePlugin = plugins[i];
        if (possiblePlugin) {
          var extractedEvents = possiblePlugin.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);
          if (extractedEvents) {
            events = accumulateInto(events, extractedEvents);
          }
        }
      }
      return events;
    },

    /**
     * Enqueues a synthetic event that should be dispatched when
     * `processEventQueue` is invoked.
     *
     * @param {*} events An accumulation of synthetic events.
     * @internal
     */
    enqueueEvents: function (events) {
      if (events) {
        eventQueue = accumulateInto(eventQueue, events);
      }
    },

    /**
     * Dispatches all synthetic events on the event queue.
     *
     * @internal
     */
    processEventQueue: function (simulated) {
      // Set `eventQueue` to null before processing it so that we can tell if more
      // events get enqueued while processing.
      var processingEventQueue = eventQueue;
      eventQueue = null;
      if (simulated) {
        forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseSimulated);
      } else {
        forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseTopLevel);
      }
      !!eventQueue ?  true ? invariant(false, 'processEventQueue(): Additional events were enqueued while processing an event queue. Support for this has not yet been implemented.') : _prodInvariant('95') : void 0;
      // This would be a good time to rethrow if any of the event handlers threw.
      ReactErrorUtils.rethrowCaughtError();
    },

    /**
     * These are needed for tests only. Do not use!
     */
    __purge: function () {
      listenerBank = {};
    },

    __getListenerBank: function () {
      return listenerBank;
    }

  };

  module.exports = EventPluginHub;

/***/ },
/* 426 */
/***/ function(module, exports, __webpack_require__) {

  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   * 
   */

  'use strict';

  var _prodInvariant = __webpack_require__(418);

  var invariant = __webpack_require__(391);

  /**
   * Injectable ordering of event plugins.
   */
  var eventPluginOrder = null;

  /**
   * Injectable mapping from names to event plugin modules.
   */
  var namesToPlugins = {};

  /**
   * Recomputes the plugin list using the injected plugins and plugin ordering.
   *
   * @private
   */
  function recomputePluginOrdering() {
    if (!eventPluginOrder) {
      // Wait until an `eventPluginOrder` is injected.
      return;
    }
    for (var pluginName in namesToPlugins) {
      var pluginModule = namesToPlugins[pluginName];
      var pluginIndex = eventPluginOrder.indexOf(pluginName);
      !(pluginIndex > -1) ?  true ? invariant(false, 'EventPluginRegistry: Cannot inject event plugins that do not exist in the plugin ordering, `%s`.', pluginName) : _prodInvariant('96', pluginName) : void 0;
      if (EventPluginRegistry.plugins[pluginIndex]) {
        continue;
      }
      !pluginModule.extractEvents ?  true ? invariant(false, 'EventPluginRegistry: Event plugins must implement an `extractEvents` method, but `%s` does not.', pluginName) : _prodInvariant('97', pluginName) : void 0;
      EventPluginRegistry.plugins[pluginIndex] = pluginModule;
      var publishedEvents = pluginModule.eventTypes;
      for (var eventName in publishedEvents) {
        !publishEventForPlugin(publishedEvents[eventName], pluginModule, eventName) ?  true ? invariant(false, 'EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.', eventName, pluginName) : _prodInvariant('98', eventName, pluginName) : void 0;
      }
    }
  }

  /**
   * Publishes an event so that it can be dispatched by the supplied plugin.
   *
   * @param {object} dispatchConfig Dispatch configuration for the event.
   * @param {object} PluginModule Plugin publishing the event.
   * @return {boolean} True if the event was successfully published.
   * @private
   */
  function publishEventForPlugin(dispatchConfig, pluginModule, eventName) {
    !!EventPluginRegistry.eventNameDispatchConfigs.hasOwnProperty(eventName) ?  true ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same event name, `%s`.', eventName) : _prodInvariant('99', eventName) : void 0;
    EventPluginRegistry.eventNameDispatchConfigs[eventName] = dispatchConfig;

    var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;
    if (phasedRegistrationNames) {
      for (var phaseName in phasedRegistrationNames) {
        if (phasedRegistrationNames.hasOwnProperty(phaseName)) {
          var phasedRegistrationName = phasedRegistrationNames[phaseName];
          publishRegistrationName(phasedRegistrationName, pluginModule, eventName);
        }
      }
      return true;
    } else if (dispatchConfig.registrationName) {
      publishRegistrationName(dispatchConfig.registrationName, pluginModule, eventName);
      return true;
    }
    return false;
  }

  /**
   * Publishes a registration name that is used to identify dispatched events and
   * can be used with `EventPluginHub.putListener` to register listeners.
   *
   * @param {string} registrationName Registration name to add.
   * @param {object} PluginModule Plugin publishing the event.
   * @private
   */
  function publishRegistrationName(registrationName, pluginModule, eventName) {
    !!EventPluginRegistry.registrationNameModules[registrationName] ?  true ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same registration name, `%s`.', registrationName) : _prodInvariant('100', registrationName) : void 0;
    EventPluginRegistry.registrationNameModules[registrationName] = pluginModule;
    EventPluginRegistry.registrationNameDependencies[registrationName] = pluginModule.eventTypes[eventName].dependencies;

    if (true) {
      var lowerCasedName = registrationName.toLowerCase();
      EventPluginRegistry.possibleRegistrationNames[lowerCasedName] = registrationName;

      if (registrationName === 'onDoubleClick') {
        EventPluginRegistry.possibleRegistrationNames.ondblclick = registrationName;
      }
    }
  }

  /**
   * Registers plugins so that they can extract and dispatch events.
   *
   * @see {EventPluginHub}
   */
  var EventPluginRegistry = {

    /**
     * Ordered list of injected plugins.
     */
    plugins: [],

    /**
     * Mapping from event name to dispatch config
     */
    eventNameDispatchConfigs: {},

    /**
     * Mapping from registration name to plugin module
     */
    registrationNameModules: {},

    /**
     * Mapping from registration name to event name
     */
    registrationNameDependencies: {},

    /**
     * Mapping from lowercase registration names to the properly cased version,
     * used to warn in the case of missing event handlers. Available
     * only in __DEV__.
     * @type {Object}
     */
    possibleRegistrationNames:  true ? {} : null,
    // Trust the developer to only use possibleRegistrationNames in __DEV__

    /**
     * Injects an ordering of plugins (by plugin name). This allows the ordering
     * to be decoupled from injection of the actual plugins so that ordering is
     * always deterministic regardless of packaging, on-the-fly injection, etc.
     *
     * @param {array} InjectedEventPluginOrder
     * @internal
     * @see {EventPluginHub.injection.injectEventPluginOrder}
     */
    injectEventPluginOrder: function (injectedEventPluginOrder) {
      !!eventPluginOrder ?  true ? invariant(false, 'EventPluginRegistry: Cannot inject event plugin ordering more than once. You are likely trying to load more than one copy of React.') : _prodInvariant('101') : void 0;
      // Clone the ordering so it cannot be dynamically mutated.
      eventPluginOrder = Array.prototype.slice.call(injectedEventPluginOrder);
      recomputePluginOrdering();
    },

    /**
     * Injects plugins to be used by `EventPluginHub`. The plugin names must be
     * in the ordering injected by `injectEventPluginOrder`.
     *
     * Plugins can be injected as part of page initialization or on-the-fly.
     *
     * @param {object} injectedNamesToPlugins Map from names to plugin modules.
     * @internal
     * @see {EventPluginHub.injection.injectEventPluginsByName}
     */
    injectEventPluginsByName: function (injectedNamesToPlugins) {
      var isOrderingDirty = false;
      for (var pluginName in injectedNamesToPlugins) {
        if (!injectedNamesToPlugins.hasOwnProperty(pluginName)) {
          continue;
        }
        var pluginModule = injectedNamesToPlugins[pluginName];
        if (!namesToPlugins.hasOwnProperty(pluginName) || namesToPlugins[pluginName] !== pluginModule) {
          !!namesToPlugins[pluginName] ?  true ? invariant(false, 'EventPluginRegistry: Cannot inject two different event plugins using the same name, `%s`.', pluginName) : _prodInvariant('102', pluginName) : void 0;
          namesToPlugins[pluginName] = pluginModule;
          isOrderingDirty = true;
        }
      }
      if (isOrderingDirty) {
        recomputePluginOrdering();
      }
    },

    /**
     * Looks up the plugin for the supplied event.
     *
     * @param {object} event A synthetic event.
     * @return {?object} The plugin that created the supplied event.
     * @internal
     */
    getPluginModuleForEvent: function (event) {
      var dispatchConfig = event.dispatchConfig;
      if (dispatchConfig.registrationName) {
        return EventPluginRegistry.registrationNameModules[dispatchConfig.registrationName] || null;
      }
      if (dispatchConfig.phasedRegistrationNames !== undefined) {
        // pulling phasedRegistrationNames out of dispatchConfig helps Flow see
        // that it is not undefined.
        var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;

        for (var phase in phasedRegistrationNames) {
          if (!phasedRegistrationNames.hasOwnProperty(phase)) {
            continue;
          }
          var pluginModule = EventPluginRegistry.registrationNameModules[phasedRegistrationNames[phase]];
          if (pluginModule) {
            return pluginModule;
          }
        }
      }
      return null;
    },

    /**
     * Exposed for unit testing.
     * @private
     */
    _resetEventPlugins: function () {
      eventPluginOrder = null;
      for (var pluginName in namesToPlugins) {
        if (namesToPlugins.hasOwnProperty(pluginName)) {
          delete namesToPlugins[pluginName];
        }
      }
      EventPluginRegistry.plugins.length = 0;

      var eventNameDispatchConfigs = EventPluginRegistry.eventNameDispatchConfigs;
      for (var eventName in eventNameDispatchConfigs) {
        if (eventNameDispatchConfigs.hasOwnProperty(eventName)) {
          delete eventNameDispatchConfigs[eventName];
        }
      }

      var registrationNameModules = EventPluginRegistry.registrationNameModules;
      for (var registrationName in registrationNameModules) {
        if (registrationNameModules.hasOwnProperty(registrationName)) {
          delete registrationNameModules[registrationName];
        }
      }

      if (true) {
        var possibleRegistrationNames = EventPluginRegistry.possibleRegistrationNames;
        for (var lowerCasedName in possibleRegistrationNames) {
          if (possibleRegistrationNames.hasOwnProperty(lowerCasedName)) {
            delete possibleRegistrationNames[lowerCasedName];
          }
        }
      }
    }

  };

  module.exports = EventPluginRegistry;

/***/ },
/* 427 */
/***/ function(module, exports, __webpack_require__) {

  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  var _prodInvariant = __webpack_require__(418);

  var ReactErrorUtils = __webpack_require__(428);

  var invariant = __webpack_require__(391);
  var warning = __webpack_require__(394);

  /**
   * Injected dependencies:
   */

  /**
   * - `ComponentTree`: [required] Module that can convert between React instances
   *   and actual node references.
   */
  var ComponentTree;
  var TreeTraversal;
  var injection = {
    injectComponentTree: function (Injected) {
      ComponentTree = Injected;
      if (true) {
         true ? warning(Injected && Injected.getNodeFromInstance && Injected.getInstanceFromNode, 'EventPluginUtils.injection.injectComponentTree(...): Injected ' + 'module is missing getNodeFromInstance or getInstanceFromNode.') : void 0;
      }
    },
    injectTreeTraversal: function (Injected) {
      TreeTraversal = Injected;
      if (true) {
         true ? warning(Injected && Injected.isAncestor && Injected.getLowestCommonAncestor, 'EventPluginUtils.injection.injectTreeTraversal(...): Injected ' + 'module is missing isAncestor or getLowestCommonAncestor.') : void 0;
      }
    }
  };

  function isEndish(topLevelType) {
    return topLevelType === 'topMouseUp' || topLevelType === 'topTouchEnd' || topLevelType === 'topTouchCancel';
  }

  function isMoveish(topLevelType) {
    return topLevelType === 'topMouseMove' || topLevelType === 'topTouchMove';
  }
  function isStartish(topLevelType) {
    return topLevelType === 'topMouseDown' || topLevelType === 'topTouchStart';
  }

  var validateEventDispatches;
  if (true) {
    validateEventDispatches = function (event) {
      var dispatchListeners = event._dispatchListeners;
      var dispatchInstances = event._dispatchInstances;

      var listenersIsArr = Array.isArray(dispatchListeners);
      var listenersLen = listenersIsArr ? dispatchListeners.length : dispatchListeners ? 1 : 0;

      var instancesIsArr = Array.isArray(dispatchInstances);
      var instancesLen = instancesIsArr ? dispatchInstances.length : dispatchInstances ? 1 : 0;

       true ? warning(instancesIsArr === listenersIsArr && instancesLen === listenersLen, 'EventPluginUtils: Invalid `event`.') : void 0;
    };
  }

  /**
   * Dispatch the event to the listener.
   * @param {SyntheticEvent} event SyntheticEvent to handle
   * @param {boolean} simulated If the event is simulated (changes exn behavior)
   * @param {function} listener Application-level callback
   * @param {*} inst Internal component instance
   */
  function executeDispatch(event, simulated, listener, inst) {
    var type = event.type || 'unknown-event';
    event.currentTarget = EventPluginUtils.getNodeFromInstance(inst);
    if (simulated) {
      ReactErrorUtils.invokeGuardedCallbackWithCatch(type, listener, event);
    } else {
      ReactErrorUtils.invokeGuardedCallback(type, listener, event);
    }
    event.currentTarget = null;
  }

  /**
   * Standard/simple iteration through an event's collected dispatches.
   */
  function executeDispatchesInOrder(event, simulated) {
    var dispatchListeners = event._dispatchListeners;
    var dispatchInstances = event._dispatchInstances;
    if (true) {
      validateEventDispatches(event);
    }
    if (Array.isArray(dispatchListeners)) {
      for (var i = 0; i < dispatchListeners.length; i++) {
        if (event.isPropagationStopped()) {
          break;
        }
        // Listeners and Instances are two parallel arrays that are always in sync.
        executeDispatch(event, simulated, dispatchListeners[i], dispatchInstances[i]);
      }
    } else if (dispatchListeners) {
      executeDispatch(event, simulated, dispatchListeners, dispatchInstances);
    }
    event._dispatchListeners = null;
    event._dispatchInstances = null;
  }

  /**
   * Standard/simple iteration through an event's collected dispatches, but stops
   * at the first dispatch execution returning true, and returns that id.
   *
   * @return {?string} id of the first dispatch execution who's listener returns
   * true, or null if no listener returned true.
   */
  function executeDispatchesInOrderStopAtTrueImpl(event) {
    var dispatchListeners = event._dispatchListeners;
    var dispatchInstances = event._dispatchInstances;
    if (true) {
      validateEventDispatches(event);
    }
    if (Array.isArray(dispatchListeners)) {
      for (var i = 0; i < dispatchListeners.length; i++) {
        if (event.isPropagationStopped()) {
          break;
        }
        // Listeners and Instances are two parallel arrays that are always in sync.
        if (dispatchListeners[i](event, dispatchInstances[i])) {
          return dispatchInstances[i];
        }
      }
    } else if (dispatchListeners) {
      if (dispatchListeners(event, dispatchInstances)) {
        return dispatchInstances;
      }
    }
    return null;
  }

  /**
   * @see executeDispatchesInOrderStopAtTrueImpl
   */
  function executeDispatchesInOrderStopAtTrue(event) {
    var ret = executeDispatchesInOrderStopAtTrueImpl(event);
    event._dispatchInstances = null;
    event._dispatchListeners = null;
    return ret;
  }

  /**
   * Execution of a "direct" dispatch - there must be at most one dispatch
   * accumulated on the event or it is considered an error. It doesn't really make
   * sense for an event with multiple dispatches (bubbled) to keep track of the
   * return values at each dispatch execution, but it does tend to make sense when
   * dealing with "direct" dispatches.
   *
   * @return {*} The return value of executing the single dispatch.
   */
  function executeDirectDispatch(event) {
    if (true) {
      validateEventDispatches(event);
    }
    var dispatchListener = event._dispatchListeners;
    var dispatchInstance = event._dispatchInstances;
    !!Array.isArray(dispatchListener) ?  true ? invariant(false, 'executeDirectDispatch(...): Invalid `event`.') : _prodInvariant('103') : void 0;
    event.currentTarget = dispatchListener ? EventPluginUtils.getNodeFromInstance(dispatchInstance) : null;
    var res = dispatchListener ? dispatchListener(event) : null;
    event.currentTarget = null;
    event._dispatchListeners = null;
    event._dispatchInstances = null;
    return res;
  }

  /**
   * @param {SyntheticEvent} event
   * @return {boolean} True iff number of dispatches accumulated is greater than 0.
   */
  function hasDispatches(event) {
    return !!event._dispatchListeners;
  }

  /**
   * General utilities that are useful in creating custom Event Plugins.
   */
  var EventPluginUtils = {
    isEndish: isEndish,
    isMoveish: isMoveish,
    isStartish: isStartish,

    executeDirectDispatch: executeDirectDispatch,
    executeDispatchesInOrder: executeDispatchesInOrder,
    executeDispatchesInOrderStopAtTrue: executeDispatchesInOrderStopAtTrue,
    hasDispatches: hasDispatches,

    getInstanceFromNode: function (node) {
      return ComponentTree.getInstanceFromNode(node);
    },
    getNodeFromInstance: function (node) {
      return ComponentTree.getNodeFromInstance(node);
    },
    isAncestor: function (a, b) {
      return TreeTraversal.isAncestor(a, b);
    },
    getLowestCommonAncestor: function (a, b) {
      return TreeTraversal.getLowestCommonAncestor(a, b);
    },
    getParentInstance: function (inst) {
      return TreeTraversal.getParentInstance(inst);
    },
    traverseTwoPhase: function (target, fn, arg) {
      return TreeTraversal.traverseTwoPhase(target, fn, arg);
    },
    traverseEnterLeave: function (from, to, fn, argFrom, argTo) {
      return TreeTraversal.traverseEnterLeave(from, to, fn, argFrom, argTo);
    },

    injection: injection
  };

  module.exports = EventPluginUtils;

/***/ },
/* 428 */
/***/ function(module, exports, __webpack_require__) {

  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   * 
   */

  'use strict';

  var caughtError = null;

  /**
   * Call a function while guarding against errors that happens within it.
   *
   * @param {String} name of the guard to use for logging or debugging
   * @param {Function} func The function to invoke
   * @param {*} a First argument
   * @param {*} b Second argument
   */
  function invokeGuardedCallback(name, func, a) {
    try {
      func(a);
    } catch (x) {
      if (caughtError === null) {
        caughtError = x;
      }
    }
  }

  var ReactErrorUtils = {
    invokeGuardedCallback: invokeGuardedCallback,

    /**
     * Invoked by ReactTestUtils.Simulate so that any errors thrown by the event
     * handler are sure to be rethrown by rethrowCaughtError.
     */
    invokeGuardedCallbackWithCatch: invokeGuardedCallback,

    /**
     * During execution of guarded functions we will capture the first error which
     * we will rethrow to be handled by the top level error handler.
     */
    rethrowCaughtError: function () {
      if (caughtError) {
        var error = caughtError;
        caughtError = null;
        throw error;
      }
    }
  };

  if (true) {
    /**
     * To help development we can get better devtools integration by simulating a
     * real browser event.
     */
    if (typeof window !== 'undefined' && typeof window.dispatchEvent === 'function' && typeof document !== 'undefined' && typeof document.createEvent === 'function') {
      var fakeNode = document.createElement('react');
      ReactErrorUtils.invokeGuardedCallback = function (name, func, a) {
        var boundFunc = func.bind(null, a);
        var evtType = 'react-' + name;
        fakeNode.addEventListener(evtType, boundFunc, false);
        var evt = document.createEvent('Event');
        // $FlowFixMe https://github.com/facebook/flow/issues/2336
        evt.initEvent(evtType, false, false);
        fakeNode.dispatchEvent(evt);
        fakeNode.removeEventListener(evtType, boundFunc, false);
      };
    }
  }

  module.exports = ReactErrorUtils;

/***/ },
/* 429 */
/***/ function(module, exports, __webpack_require__) {

  /**
   * Copyright 2014-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   * 
   */

  'use strict';

  var _prodInvariant = __webpack_require__(418);

  var invariant = __webpack_require__(391);

  /**
   * Accumulates items that must not be null or undefined into the first one. This
   * is used to conserve memory by avoiding array allocations, and thus sacrifices
   * API cleanness. Since `current` can be null before being passed in and not
   * null after this function, make sure to assign it back to `current`:
   *
   * `a = accumulateInto(a, b);`
   *
   * This API should be sparingly used. Try `accumulate` for something cleaner.
   *
   * @return {*|array<*>} An accumulation of items.
   */

  function accumulateInto(current, next) {
    !(next != null) ?  true ? invariant(false, 'accumulateInto(...): Accumulated items must not be null or undefined.') : _prodInvariant('30') : void 0;

    if (current == null) {
      return next;
    }

    // Both are not empty. Warning: Never call x.concat(y) when you are not
    // certain that x is an Array (x could be a string with concat method).
    if (Array.isArray(current)) {
      if (Array.isArray(next)) {
        current.push.apply(current, next);
        return current;
      }
      current.push(next);
      return current;
    }

    if (Array.isArray(next)) {
      // A bit too dangerous to mutate `next`.
      return [current].concat(next);
    }

    return [current, next];
  }

  module.exports = accumulateInto;

/***/ },
/* 430 */
/***/ function(module, exports) {

  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   * 
   */

  'use strict';

  /**
   * @param {array} arr an "accumulation" of items which is either an Array or
   * a single item. Useful when paired with the `accumulate` module. This is a
   * simple utility that allows us to reason about a collection of items, but
   * handling the case when there is exactly one item (and we do not need to
   * allocate an array).
   */

  function forEachAccumulated(arr, cb, scope) {
    if (Array.isArray(arr)) {
      arr.forEach(cb, scope);
    } else if (arr) {
      cb.call(scope, arr);
    }
  }

  module.exports = forEachAccumulated;

/***/ },
/* 431 */
/***/ function(module, exports) {

  /**
   * Copyright (c) 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);

  /**
   * Simple, lightweight module assisting with the detection and context of
   * Worker. Helps avoid circular dependencies and allows code to reason about
   * whether or not they are in a Worker, even if they never include the main
   * `ReactWorker` dependency.
   */
  var ExecutionEnvironment = {

    canUseDOM: canUseDOM,

    canUseWorkers: typeof Worker !== 'undefined',

    canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),

    canUseViewport: canUseDOM && !!window.screen,

    isInWorker: !canUseDOM // For now, this is true - might change in the future.

  };

  module.exports = ExecutionEnvironment;

/***/ },
/* 432 */
/***/ function(module, exports, __webpack_require__) {

  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  var _assign = __webpack_require__(387);

  var PooledClass = __webpack_require__(433);

  var getTextContentAccessor = __webpack_require__(434);

  /**
   * This helper class stores information about text content of a target node,
   * allowing comparison of content before and after a given event.
   *
   * Identify the node where selection currently begins, then observe
   * both its text content and its current position in the DOM. Since the
   * browser may natively replace the target node during composition, we can
   * use its position to find its replacement.
   *
   * @param {DOMEventTarget} root
   */
  function FallbackCompositionState(root) {
    this._root = root;
    this._startText = this.getText();
    this._fallbackText = null;
  }

  _assign(FallbackCompositionState.prototype, {
    destructor: function () {
      this._root = null;
      this._startText = null;
      this._fallbackText = null;
    },

    /**
     * Get current text of input.
     *
     * @return {string}
     */
    getText: function () {
      if ('value' in this._root) {
        return this._root.value;
      }
      return this._root[getTextContentAccessor()];
    },

    /**
     * Determine the differing substring between the initially stored
     * text content and the current content.
     *
     * @return {string}
     */
    getData: function () {
      if (this._fallbackText) {
        return this._fallbackText;
      }

      var start;
      var startValue = this._startText;
      var startLength = startValue.length;
      var end;
      var endValue = this.getText();
      var endLength = endValue.length;

      for (start = 0; start < startLength; start++) {
        if (startValue[start] !== endValue[start]) {
          break;
        }
      }

      var minEnd = startLength - start;
      for (end = 1; end <= minEnd; end++) {
        if (startValue[startLength - end] !== endValue[endLength - end]) {
          break;
        }
      }

      var sliceTail = end > 1 ? 1 - end : undefined;
      this._fallbackText = endValue.slice(start, sliceTail);
      return this._fallbackText;
    }
  });

  PooledClass.addPoolingTo(FallbackCompositionState);

  module.exports = FallbackCompositionState;

/***/ },
/* 433 */
/***/ function(module, exports, __webpack_require__) {

  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   * 
   */

  'use strict';

  var _prodInvariant = __webpack_require__(418);

  var invariant = __webpack_require__(391);

  /**
   * Static poolers. Several custom versions for each potential number of
   * arguments. A completely generic pooler is easy to implement, but would
   * require accessing the `arguments` object. In each of these, `this` refers to
   * the Class itself, not an instance. If any others are needed, simply add them
   * here, or in their own files.
   */
  var oneArgumentPooler = function (copyFieldsFrom) {
    var Klass = this;
    if (Klass.instancePool.length) {
      var instance = Klass.instancePool.pop();
      Klass.call(instance, copyFieldsFrom);
      return instance;
    } else {
      return new Klass(copyFieldsFrom);
    }
  };

  var twoArgumentPooler = function (a1, a2) {
    var Klass = this;
    if (Klass.instancePool.length) {
      var instance = Klass.instancePool.pop();
      Klass.call(instance, a1, a2);
      return instance;
    } else {
      return new Klass(a1, a2);
    }
  };

  var threeArgumentPooler = function (a1, a2, a3) {
    var Klass = this;
    if (Klass.instancePool.length) {
      var instance = Klass.instancePool.pop();
      Klass.call(instance, a1, a2, a3);
      return instance;
    } else {
      return new Klass(a1, a2, a3);
    }
  };

  var fourArgumentPooler = function (a1, a2, a3, a4) {
    var Klass = this;
    if (Klass.instancePool.length) {
      var instance = Klass.instancePool.pop();
      Klass.call(instance, a1, a2, a3, a4);
      return instance;
    } else {
      return new Klass(a1, a2, a3, a4);
    }
  };

  var fiveArgumentPooler = function (a1, a2, a3, a4, a5) {
    var Klass = this;
    if (Klass.instancePool.length) {
      var instance = Klass.instancePool.pop();
      Klass.call(instance, a1, a2, a3, a4, a5);
      return instance;
    } else {
      return new Klass(a1, a2, a3, a4, a5);
    }
  };

  var standardReleaser = function (instance) {
    var Klass = this;
    !(instance instanceof Klass) ?  true ? invariant(false, 'Trying to release an instance into a pool of a different type.') : _prodInvariant('25') : void 0;
    instance.destructor();
    if (Klass.instancePool.length < Klass.poolSize) {
      Klass.instancePool.push(instance);
    }
  };

  var DEFAULT_POOL_SIZE = 10;
  var DEFAULT_POOLER = oneArgumentPooler;

  /**
   * Augments `CopyConstructor` to be a poolable class, augmenting only the class
   * itself (statically) not adding any prototypical fields. Any CopyConstructor
   * you give this may have a `poolSize` property, and will look for a
   * prototypical `destructor` on instances.
   *
   * @param {Function} CopyConstructor Constructor that can be used to reset.
   * @param {Function} pooler Customizable pooler.
   */
  var addPoolingTo = function (CopyConstructor, pooler) {
    // Casting as any so that flow ignores the actual implementation and trusts
    // it to match the type we declared
    var NewKlass = CopyConstructor;
    NewKlass.instancePool = [];
    NewKlass.getPooled = pooler || DEFAULT_POOLER;
    if (!NewKlass.poolSize) {
      NewKlass.poolSize = DEFAULT_POOL_SIZE;
    }
    NewKlass.release = standardReleaser;
    return NewKlass;
  };

  var PooledClass = {
    addPoolingTo: addPoolingTo,
    oneArgumentPooler: oneArgumentPooler,
    twoArgumentPooler: twoArgumentPooler,
    threeArgumentPooler: threeArgumentPooler,
    fourArgumentPooler: fourArgumentPooler,
    fiveArgumentPooler: fiveArgumentPooler
  };

  module.exports = PooledClass;

/***/ },
/* 434 */
/***/ function(module, exports, __webpack_require__) {

  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  var ExecutionEnvironment = __webpack_require__(431);

  var contentKey = null;

  /**
   * Gets the key used to access text content on a DOM node.
   *
   * @return {?string} Key used to access text content.
   * @internal
   */
  function getTextContentAccessor() {
    if (!contentKey && ExecutionEnvironment.canUseDOM) {
      // Prefer textContent to innerText because many browsers support both but
      // SVG <text> elements don't support innerText even when <div> does.
      contentKey = 'textContent' in document.documentElement ? 'textContent' : 'innerText';
    }
    return contentKey;
  }

  module.exports = getTextContentAccessor;

/***/ },
/* 435 */
/***/ function(module, exports, __webpack_require__) {

  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  var SyntheticEvent = __webpack_require__(436);

  /**
   * @interface Event
   * @see http://www.w3.org/TR/DOM-Level-3-Events/#events-compositionevents
   */
  var CompositionEventInterface = {
    data: null
  };

  /**
   * @param {object} dispatchConfig Configuration used to dispatch this event.
   * @param {string} dispatchMarker Marker identifying the event target.
   * @param {object} nativeEvent Native browser event.
   * @extends {SyntheticUIEvent}
   */
  function SyntheticCompositionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
    return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
  }

  SyntheticEvent.augmentClass(SyntheticCompositionEvent, CompositionEventInterface);

  module.exports = SyntheticCompositionEvent;

/***/ },
/* 436 */
/***/ function(module, exports, __webpack_require__) {

  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  var _assign = __webpack_require__(387);

  var PooledClass = __webpack_require__(433);

  var emptyFunction = __webpack_require__(395);
  var warning = __webpack_require__(394);

  var didWarnForAddedNewProperty = false;
  var isProxySupported = typeof Proxy === 'function';

  var shouldBeReleasedProperties = ['dispatchConfig', '_targetInst', 'nativeEvent', 'isDefaultPrevented', 'isPropagationStopped', '_dispatchListeners', '_dispatchInstances'];

  /**
   * @interface Event
   * @see http://www.w3.org/TR/DOM-Level-3-Events/
   */
  var EventInterface = {
    type: null,
    target: null,
    // currentTarget is set when dispatching; no use in copying it here
    currentTarget: emptyFunction.thatReturnsNull,
    eventPhase: null,
    bubbles: null,
    cancelable: null,
    timeStamp: function (event) {
      return event.timeStamp || Date.now();
    },
    defaultPrevented: null,
    isTrusted: null
  };

  /**
   * Synthetic events are dispatched by event plugins, typically in response to a
   * top-level event delegation handler.
   *
   * These systems should generally use pooling to reduce the frequency of garbage
   * collection. The system should check `isPersistent` to determine whether the
   * event should be released into the pool after being dispatched. Users that
   * need a persisted event should invoke `persist`.
   *
   * Synthetic events (and subclasses) implement the DOM Level 3 Events API by
   * normalizing browser quirks. Subclasses do not necessarily have to implement a
   * DOM interface; custom application-specific events can also subclass this.
   *
   * @param {object} dispatchConfig Configuration used to dispatch this event.
   * @param {*} targetInst Marker identifying the event target.
   * @param {object} nativeEvent Native browser event.
   * @param {DOMEventTarget} nativeEventTarget Target node.
   */
  function SyntheticEvent(dispatchConfig, targetInst, nativeEvent, nativeEventTarget) {
    if (true) {
      // these have a getter/setter for warnings
      delete this.nativeEvent;
      delete this.preventDefault;
      delete this.stopPropagation;
    }

    this.dispatchConfig = dispatchConfig;
    this._targetInst = targetInst;
    this.nativeEvent = nativeEvent;

    var Interface = this.constructor.Interface;
    for (var propName in Interface) {
      if (!Interface.hasOwnProperty(propName)) {
        continue;
      }
      if (true) {
        delete this[propName]; // this has a getter/setter for warnings
      }
      var normalize = Interface[propName];
      if (normalize) {
        this[propName] = normalize(nativeEvent);
      } else {
        if (propName === 'target') {
          this.target = nativeEventTarget;
        } else {
          this[propName] = nativeEvent[propName];
        }
      }
    }

    var defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === false;
    if (defaultPrevented) {
      this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
    } else {
      this.isDefaultPrevented = emptyFunction.thatReturnsFalse;
    }
    this.isPropagationStopped = emptyFunction.thatReturnsFalse;
    return this;
  }

  _assign(SyntheticEvent.prototype, {

    preventDefault: function () {
      this.defaultPrevented = true;
      var event = this.nativeEvent;
      if (!event) {
        return;
      }

      if (event.preventDefault) {
        event.preventDefault();
      } else if (typeof event.returnValue !== 'unknown') {
        // eslint-disable-line valid-typeof
        event.returnValue = false;
      }
      this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
    },

    stopPropagation: function () {
      var event = this.nativeEvent;
      if (!event) {
        return;
      }

      if (event.stopPropagation) {
        event.stopPropagation();
      } else if (typeof event.cancelBubble !== 'unknown') {
        // eslint-disable-line valid-typeof
        // The ChangeEventPlugin registers a "propertychange" event for
        // IE. This event does not support bubbling or cancelling, and
        // any references to cancelBubble throw "Member not found".  A
        // typeof check of "unknown" circumvents this issue (and is also
        // IE specific).
        event.cancelBubble = true;
      }

      this.isPropagationStopped = emptyFunction.thatReturnsTrue;
    },

    /**
     * We release all dispatched `SyntheticEvent`s after each event loop, adding
     * them back into the pool. This allows a way to hold onto a reference that
     * won't be added back into the pool.
     */
    persist: function () {
      this.isPersistent = emptyFunction.thatReturnsTrue;
    },

    /**
     * Checks if this event should be released back into the pool.
     *
     * @return {boolean} True if this should not be released, false otherwise.
     */
    isPersistent: emptyFunction.thatReturnsFalse,

    /**
     * `PooledClass` looks for `destructor` on each instance it releases.
     */
    destructor: function () {
      var Interface = this.constructor.Interface;
      for (var propName in Interface) {
        if (true) {
          Object.defineProperty(this, propName, getPooledWarningPropertyDefinition(propName, Interface[propName]));
        } else {
          this[propName] = null;
        }
      }
      for (var i = 0; i < shouldBeReleasedProperties.length; i++) {
        this[shouldBeReleasedProperties[i]] = null;
      }
      if (true) {
        Object.defineProperty(this, 'nativeEvent', getPooledWarningPropertyDefinition('nativeEvent', null));
        Object.defineProperty(this, 'preventDefault', getPooledWarningPropertyDefinition('preventDefault', emptyFunction));
        Object.defineProperty(this, 'stopPropagation', getPooledWarningPropertyDefinition('stopPropagation', emptyFunction));
      }
    }

  });

  SyntheticEvent.Interface = EventInterface;

  if (true) {
    if (isProxySupported) {
      /*eslint-disable no-func-assign */
      SyntheticEvent = new Proxy(SyntheticEvent, {
        construct: function (target, args) {
          return this.apply(target, Object.create(target.prototype), args);
        },
        apply: function (constructor, that, args) {
          return new Proxy(constructor.apply(that, args), {
            set: function (target, prop, value) {
              if (prop !== 'isPersistent' && !target.constructor.Interface.hasOwnProperty(prop) && shouldBeReleasedProperties.indexOf(prop) === -1) {
                 true ? warning(didWarnForAddedNewProperty || target.isPersistent(), 'This synthetic event is reused for performance reasons. If you\'re ' + 'seeing this, you\'re adding a new property in the synthetic event object. ' + 'The property is never released. See ' + 'https://fb.me/react-event-pooling for more information.') : void 0;
                didWarnForAddedNewProperty = true;
              }
              target[prop] = value;
              return true;
            }
          });
        }
      });
      /*eslint-enable no-func-assign */
    }
  }
  /**
   * Helper to reduce boilerplate when creating subclasses.
   *
   * @param {function} Class
   * @param {?object} Interface
   */
  SyntheticEvent.augmentClass = function (Class, Interface) {
    var Super = this;

    var E = function () {};
    E.prototype = Super.prototype;
    var prototype = new E();

    _assign(prototype, Class.prototype);
    Class.prototype = prototype;
    Class.prototype.constructor = Class;

    Class.Interface = _assign({}, Super.Interface, Interface);
    Class.augmentClass = Super.augmentClass;

    PooledClass.addPoolingTo(Class, PooledClass.fourArgumentPooler);
  };

  PooledClass.addPoolingTo(SyntheticEvent, PooledClass.fourArgumentPooler);

  module.exports = SyntheticEvent;

  /**
    * Helper to nullify syntheticEvent instance properties when destructing
    *
    * @param {object} SyntheticEvent
    * @param {String} propName
    * @return {object} defineProperty object
    */
  function getPooledWarningPropertyDefinition(propName, getVal) {
    var isFunction = typeof getVal === 'function';
    return {
      configurable: true,
      set: set,
      get: get
    };

    function set(val) {
      var action = isFunction ? 'setting the method' : 'setting the property';
      warn(action, 'This is effectively a no-op');
      return val;
    }

    function get() {
      var action = isFunction ? 'accessing the method' : 'accessing the property';
      var result = isFunction ? 'This is a no-op function' : 'This is set to null';
      warn(action, result);
      return getVal;
    }

    function warn(action, result) {
      var warningCondition = false;
       true ? warning(warningCondition, 'This synthetic event is reused for performance reasons. If you\'re seeing this, ' + 'you\'re %s `%s` on a released/nullified synthetic event. %s. ' + 'If you must keep the original synthetic event around, use event.persist(). ' + 'See https://fb.me/react-event-pooling for more information.', action, propName, result) : void 0;
    }
  }

/***/ },
/* 437 */
/***/ function(module, exports, __webpack_require__) {

  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  var SyntheticEvent = __webpack_require__(436);

  /**
   * @interface Event
   * @see http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105
   *      /#events-inputevents
   */
  var InputEventInterface = {
    data: null
  };

  /**
   * @param {object} dispatchConfig Configuration used to dispatch this event.
   * @param {string} dispatchMarker Marker identifying the event target.
   * @param {object} nativeEvent Native browser event.
   * @extends {SyntheticUIEvent}
   */
  function SyntheticInputEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
    return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
  }

  SyntheticEvent.augmentClass(SyntheticInputEvent, InputEventInterface);

  module.exports = SyntheticInputEvent;

/***/ },
/* 438 */
/***/ function(module, exports, __webpack_require__) {

  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  var EventPluginHub = __webpack_require__(425);
  var EventPropagators = __webpack_require__(424);
  var ExecutionEnvironment = __webpack_require__(431);
  var ReactDOMComponentTree = __webpack_require__(417);
  var ReactUpdates = __webpack_require__(439);
  var SyntheticEvent = __webpack_require__(436);

  var getEventTarget = __webpack_require__(452);
  var isEventSupported = __webpack_require__(453);
  var isTextInputElement = __webpack_require__(454);

  var eventTypes = {
    change: {
      phasedRegistrationNames: {
        bubbled: 'onChange',
        captured: 'onChangeCapture'
      },
      dependencies: ['topBlur', 'topChange', 'topClick', 'topFocus', 'topInput', 'topKeyDown', 'topKeyUp', 'topSelectionChange']
    }
  };

  /**
   * For IE shims
   */
  var activeElement = null;
  var activeElementInst = null;
  var activeElementValue = null;
  var activeElementValueProp = null;

  /**
   * SECTION: handle `change` event
   */
  function shouldUseChangeEvent(elem) {
    var nodeName = elem.nodeName && elem.nodeName.toLowerCase();
    return nodeName === 'select' || nodeName === 'input' && elem.type === 'file';
  }

  var doesChangeEventBubble = false;
  if (ExecutionEnvironment.canUseDOM) {
    // See `handleChange` comment below
    doesChangeEventBubble = isEventSupported('change') && (!document.documentMode || document.documentMode > 8);
  }

  function manualDispatchChangeEvent(nativeEvent) {
    var event = SyntheticEvent.getPooled(eventTypes.change, activeElementInst, nativeEvent, getEventTarget(nativeEvent));
    EventPropagators.accumulateTwoPhaseDispatches(event);

    // If change and propertychange bubbled, we'd just bind to it like all the
    // other events and have it go through ReactBrowserEventEmitter. Since it
    // doesn't, we manually listen for the events and so we have to enqueue and
    // process the abstract event manually.
    //
    // Batching is necessary here in order to ensure that all event handlers run
    // before the next rerender (including event handlers attached to ancestor
    // elements instead of directly on the input). Without this, controlled
    // components don't work properly in conjunction with event bubbling because
    // the component is rerendered and the value reverted before all the event
    // handlers can run. See https://github.com/facebook/react/issues/708.
    ReactUpdates.batchedUpdates(runEventInBatch, event);
  }

  function runEventInBatch(event) {
    EventPluginHub.enqueueEvents(event);
    EventPluginHub.processEventQueue(false);
  }

  function startWatchingForChangeEventIE8(target, targetInst) {
    activeElement = target;
    activeElementInst = targetInst;
    activeElement.attachEvent('onchange', manualDispatchChangeEvent);
  }

  function stopWatchingForChangeEventIE8() {
    if (!activeElement) {
      return;
    }
    activeElement.detachEvent('onchange', manualDispatchChangeEvent);
    activeElement = null;
    activeElementInst = null;
  }

  function getTargetInstForChangeEvent(topLevelType, targetInst) {
    if (topLevelType === 'topChange') {
      return targetInst;
    }
  }
  function handleEventsForChangeEventIE8(topLevelType, target, targetInst) {
    if (topLevelType === 'topFocus') {
      // stopWatching() should be a noop here but we call it just in case we
      // missed a blur event somehow.
      stopWatchingForChangeEventIE8();
      startWatchingForChangeEventIE8(target, targetInst);
    } else if (topLevelType === 'topBlur') {
      stopWatchingForChangeEventIE8();
    }
  }

  /**
   * SECTION: handle `input` event
   */
  var isInputEventSupported = false;
  if (ExecutionEnvironment.canUseDOM) {
    // IE9 claims to support the input event but fails to trigger it when
    // deleting text, so we ignore its input events.
    // IE10+ fire input events to often, such when a placeholder
    // changes or when an input with a placeholder is focused.
    isInputEventSupported = isEventSupported('input') && (!document.documentMode || document.documentMode > 11);
  }

  /**
   * (For IE <=11) Replacement getter/setter for the `value` property that gets
   * set on the active element.
   */
  var newValueProp = {
    get: function () {
      return activeElementValueProp.get.call(this);
    },
    set: function (val) {
      // Cast to a string so we can do equality checks.
      activeElementValue = '' + val;
      activeElementValueProp.set.call(this, val);
    }
  };

  /**
   * (For IE <=11) Starts tracking propertychange events on the passed-in element
   * and override the value property so that we can distinguish user events from
   * value changes in JS.
   */
  function startWatchingForValueChange(target, targetInst) {
    activeElement = target;
    activeElementInst = targetInst;
    activeElementValue = target.value;
    activeElementValueProp = Object.getOwnPropertyDescriptor(target.constructor.prototype, 'value');

    // Not guarded in a canDefineProperty check: IE8 supports defineProperty only
    // on DOM elements
    Object.defineProperty(activeElement, 'value', newValueProp);
    if (activeElement.attachEvent) {
      activeElement.attachEvent('onpropertychange', handlePropertyChange);
    } else {
      activeElement.addEventListener('propertychange', handlePropertyChange, false);
    }
  }

  /**
   * (For IE <=11) Removes the event listeners from the currently-tracked element,
   * if any exists.
   */
  function stopWatchingForValueChange() {
    if (!activeElement) {
      return;
    }

    // delete restores the original property definition
    delete activeElement.value;

    if (activeElement.detachEvent) {
      activeElement.detachEvent('onpropertychange', handlePropertyChange);
    } else {
      activeElement.removeEventListener('propertychange', handlePropertyChange, false);
    }

    activeElement = null;
    activeElementInst = null;
    activeElementValue = null;
    activeElementValueProp = null;
  }

  /**
   * (For IE <=11) Handles a propertychange event, sending a `change` event if
   * the value of the active element has changed.
   */
  function handlePropertyChange(nativeEvent) {
    if (nativeEvent.propertyName !== 'value') {
      return;
    }
    var value = nativeEvent.srcElement.value;
    if (value === activeElementValue) {
      return;
    }
    activeElementValue = value;

    manualDispatchChangeEvent(nativeEvent);
  }

  /**
   * If a `change` event should be fired, returns the target's ID.
   */
  function getTargetInstForInputEvent(topLevelType, targetInst) {
    if (topLevelType === 'topInput') {
      // In modern browsers (i.e., not IE8 or IE9), the input event is exactly
      // what we want so fall through here and trigger an abstract event
      return targetInst;
    }
  }

  function handleEventsForInputEventIE(topLevelType, target, targetInst) {
    if (topLevelType === 'topFocus') {
      // In IE8, we can capture almost all .value changes by adding a
      // propertychange handler and looking for events with propertyName
      // equal to 'value'
      // In IE9-11, propertychange fires for most input events but is buggy and
      // doesn't fire when text is deleted, but conveniently, selectionchange
      // appears to fire in all of the remaining cases so we catch those and
      // forward the event if the value has changed
      // In either case, we don't want to call the event handler if the value
      // is changed from JS so we redefine a setter for `.value` that updates
      // our activeElementValue variable, allowing us to ignore those changes
      //
      // stopWatching() should be a noop here but we call it just in case we
      // missed a blur event somehow.
      stopWatchingForValueChange();
      startWatchingForValueChange(target, targetInst);
    } else if (topLevelType === 'topBlur') {
      stopWatchingForValueChange();
    }
  }

  // For IE8 and IE9.
  function getTargetInstForInputEventIE(topLevelType, targetInst) {
    if (topLevelType === 'topSelectionChange' || topLevelType === 'topKeyUp' || topLevelType === 'topKeyDown') {
      // On the selectionchange event, the target is just document which isn't
      // helpful for us so just check activeElement instead.
      //
      // 99% of the time, keydown and keyup aren't necessary. IE8 fails to fire
      // propertychange on the first input event after setting `value` from a
      // script and fires only keydown, keypress, keyup. Catching keyup usually
      // gets it and catching keydown lets us fire an event for the first
      // keystroke if user does a key repeat (it'll be a little delayed: right
      // before the second keystroke). Other input methods (e.g., paste) seem to
      // fire selectionchange normally.
      if (activeElement && activeElement.value !== activeElementValue) {
        activeElementValue = activeElement.value;
        return activeElementInst;
      }
    }
  }

  /**
   * SECTION: handle `click` event
   */
  function shouldUseClickEvent(elem) {
    // Use the `click` event to detect changes to checkbox and radio inputs.
    // This approach works across all browsers, whereas `change` does not fire
    // until `blur` in IE8.
    return elem.nodeName && elem.nodeName.toLowerCase() === 'input' && (elem.type === 'checkbox' || elem.type === 'radio');
  }

  function getTargetInstForClickEvent(topLevelType, targetInst) {
    if (topLevelType === 'topClick') {
      return targetInst;
    }
  }

  /**
   * This plugin creates an `onChange` event that normalizes change events
   * across form elements. This event fires at a time when it's possible to
   * change the element's value without seeing a flicker.
   *
   * Supported elements are:
   * - input (see `isTextInputElement`)
   * - textarea
   * - select
   */
  var ChangeEventPlugin = {

    eventTypes: eventTypes,

    extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
      var targetNode = targetInst ? ReactDOMComponentTree.getNodeFromInstance(targetInst) : window;

      var getTargetInstFunc, handleEventFunc;
      if (shouldUseChangeEvent(targetNode)) {
        if (doesChangeEventBubble) {
          getTargetInstFunc = getTargetInstForChangeEvent;
        } else {
          handleEventFunc = handleEventsForChangeEventIE8;
        }
      } else if (isTextInputElement(targetNode)) {
        if (isInputEventSupported) {
          getTargetInstFunc = getTargetInstForInputEvent;
        } else {
          getTargetInstFunc = getTargetInstForInputEventIE;
          handleEventFunc = handleEventsForInputEventIE;
        }
      } else if (shouldUseClickEvent(targetNode)) {
        getTargetInstFunc = getTargetInstForClickEvent;
      }

      if (getTargetInstFunc) {
        var inst = getTargetInstFunc(topLevelType, targetInst);
        if (inst) {
          var event = SyntheticEvent.getPooled(eventTypes.change, inst, nativeEvent, nativeEventTarget);
          event.type = 'change';
          EventPropagators.accumulateTwoPhaseDispatches(event);
          return event;
        }
      }

      if (handleEventFunc) {
        handleEventFunc(topLevelType, targetNode, targetInst);
      }
    }

  };

  module.exports = ChangeEventPlugin;

/***/ },
/* 439 */
/***/ function(module, exports, __webpack_require__) {

  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  var _prodInvariant = __webpack_require__(418),
      _assign = __webpack_require__(387);

  var CallbackQueue = __webpack_require__(440);
  var PooledClass = __webpack_require__(433);
  var ReactFeatureFlags = __webpack_require__(441);
  var ReactReconciler = __webpack_require__(442);
  var Transaction = __webpack_require__(451);

  var invariant = __webpack_require__(391);

  var dirtyComponents = [];
  var updateBatchNumber = 0;
  var asapCallbackQueue = CallbackQueue.getPooled();
  var asapEnqueued = false;

  var batchingStrategy = null;

  function ensureInjected() {
    !(ReactUpdates.ReactReconcileTransaction && batchingStrategy) ?  true ? invariant(false, 'ReactUpdates: must inject a reconcile transaction class and batching strategy') : _prodInvariant('123') : void 0;
  }

  var NESTED_UPDATES = {
    initialize: function () {
      this.dirtyComponentsLength = dirtyComponents.length;
    },
    close: function () {
      if (this.dirtyComponentsLength !== dirtyComponents.length) {
        // Additional updates were enqueued by componentDidUpdate handlers or
        // similar; before our own UPDATE_QUEUEING wrapper closes, we want to run
        // these new updates so that if A's componentDidUpdate calls setState on
        // B, B will update before the callback A's updater provided when calling
        // setState.
        dirtyComponents.splice(0, this.dirtyComponentsLength);
        flushBatchedUpdates();
      } else {
        dirtyComponents.length = 0;
      }
    }
  };

  var UPDATE_QUEUEING = {
    initialize: function () {
      this.callbackQueue.reset();
    },
    close: function () {
      this.callbackQueue.notifyAll();
    }
  };

  var TRANSACTION_WRAPPERS = [NESTED_UPDATES, UPDATE_QUEUEING];

  function ReactUpdatesFlushTransaction() {
    this.reinitializeTransaction();
    this.dirtyComponentsLength = null;
    this.callbackQueue = CallbackQueue.getPooled();
    this.reconcileTransaction = ReactUpdates.ReactReconcileTransaction.getPooled(
    /* useCreateElement */true);
  }

  _assign(ReactUpdatesFlushTransaction.prototype, Transaction, {
    getTransactionWrappers: function () {
      return TRANSACTION_WRAPPERS;
    },

    destructor: function () {
      this.dirtyComponentsLength = null;
      CallbackQueue.release(this.callbackQueue);
      this.callbackQueue = null;
      ReactUpdates.ReactReconcileTransaction.release(this.reconcileTransaction);
      this.reconcileTransaction = null;
    },

    perform: function (method, scope, a) {
      // Essentially calls `this.reconcileTransaction.perform(method, scope, a)`
      // with this transaction's wrappers around it.
      return Transaction.perform.call(this, this.reconcileTransaction.perform, this.reconcileTransaction, method, scope, a);
    }
  });

  PooledClass.addPoolingTo(ReactUpdatesFlushTransaction);

  function batchedUpdates(callback, a, b, c, d, e) {
    ensureInjected();
    return batchingStrategy.batchedUpdates(callback, a, b, c, d, e);
  }

  /**
   * Array comparator for ReactComponents by mount ordering.
   *
   * @param {ReactComponent} c1 first component you're comparing
   * @param {ReactComponent} c2 second component you're comparing
   * @return {number} Return value usable by Array.prototype.sort().
   */
  function mountOrderComparator(c1, c2) {
    return c1._mountOrder - c2._mountOrder;
  }

  function runBatchedUpdates(transaction) {
    var len = transaction.dirtyComponentsLength;
    !(len === dirtyComponents.length) ?  true ? invariant(false, 'Expected flush transaction\'s stored dirty-components length (%s) to match dirty-components array length (%s).', len, dirtyComponents.length) : _prodInvariant('124', len, dirtyComponents.length) : void 0;

    // Since reconciling a component higher in the owner hierarchy usually (not
    // always -- see shouldComponentUpdate()) will reconcile children, reconcile
    // them before their children by sorting the array.
    dirtyComponents.sort(mountOrderComparator);

    // Any updates enqueued while reconciling must be performed after this entire
    // batch. Otherwise, if dirtyComponents is [A, B] where A has children B and
    // C, B could update twice in a single batch if C's render enqueues an update
    // to B (since B would have already updated, we should skip it, and the only
    // way we can know to do so is by checking the batch counter).
    updateBatchNumber++;

    for (var i = 0; i < len; i++) {
      // If a component is unmounted before pending changes apply, it will still
      // be here, but we assume that it has cleared its _pendingCallbacks and
      // that performUpdateIfNecessary is a noop.
      var component = dirtyComponents[i];

      // If performUpdateIfNecessary happens to enqueue any new updates, we
      // shouldn't execute the callbacks until the next render happens, so
      // stash the callbacks first
      var callbacks = component._pendingCallbacks;
      component._pendingCallbacks = null;

      var markerName;
      if (ReactFeatureFlags.logTopLevelRenders) {
        var namedComponent = component;
        // Duck type TopLevelWrapper. This is probably always true.
        if (component._currentElement.type.isReactTopLevelWrapper) {
          namedComponent = component._renderedComponent;
        }
        markerName = 'React update: ' + namedComponent.getName();
        console.time(markerName);
      }

      ReactReconciler.performUpdateIfNecessary(component, transaction.reconcileTransaction, updateBatchNumber);

      if (markerName) {
        console.timeEnd(markerName);
      }

      if (callbacks) {
        for (var j = 0; j < callbacks.length; j++) {
          transaction.callbackQueue.enqueue(callbacks[j], component.getPublicInstance());
        }
      }
    }
  }

  var flushBatchedUpdates = function () {
    // ReactUpdatesFlushTransaction's wrappers will clear the dirtyComponents
    // array and perform any updates enqueued by mount-ready handlers (i.e.,
    // componentDidUpdate) but we need to check here too in order to catch
    // updates enqueued by setState callbacks and asap calls.
    while (dirtyComponents.length || asapEnqueued) {
      if (dirtyComponents.length) {
        var transaction = ReactUpdatesFlushTransaction.getPooled();
        transaction.perform(runBatchedUpdates, null, transaction);
        ReactUpdatesFlushTransaction.release(transaction);
      }

      if (asapEnqueued) {
        asapEnqueued = false;
        var queue = asapCallbackQueue;
        asapCallbackQueue = CallbackQueue.getPooled();
        queue.notifyAll();
        CallbackQueue.release(queue);
      }
    }
  };

  /**
   * Mark a component as needing a rerender, adding an optional callback to a
   * list of functions which will be executed once the rerender occurs.
   */
  function enqueueUpdate(component) {
    ensureInjected();

    // Various parts of our code (such as ReactCompositeComponent's
    // _renderValidatedComponent) assume that calls to render aren't nested;
    // verify that that's the case. (This is called by each top-level update
    // function, like setState, forceUpdate, etc.; creation and
    // destruction of top-level components is guarded in ReactMount.)

    if (!batchingStrategy.isBatchingUpdates) {
      batchingStrategy.batchedUpdates(enqueueUpdate, component);
      return;
    }

    dirtyComponents.push(component);
    if (component._updateBatchNumber == null) {
      component._updateBatchNumber = updateBatchNumber + 1;
    }
  }

  /**
   * Enqueue a callback to be run at the end of the current batching cycle. Throws
   * if no updates are currently being performed.
   */
  function asap(callback, context) {
    !batchingStrategy.isBatchingUpdates ?  true ? invariant(false, 'ReactUpdates.asap: Can\'t enqueue an asap callback in a context whereupdates are not being batched.') : _prodInvariant('125') : void 0;
    asapCallbackQueue.enqueue(callback, context);
    asapEnqueued = true;
  }

  var ReactUpdatesInjection = {
    injectReconcileTransaction: function (ReconcileTransaction) {
      !ReconcileTransaction ?  true ? invariant(false, 'ReactUpdates: must provide a reconcile transaction class') : _prodInvariant('126') : void 0;
      ReactUpdates.ReactReconcileTransaction = ReconcileTransaction;
    },

    injectBatchingStrategy: function (_batchingStrategy) {
      !_batchingStrategy ?  true ? invariant(false, 'ReactUpdates: must provide a batching strategy') : _prodInvariant('127') : void 0;
      !(typeof _batchingStrategy.batchedUpdates === 'function') ?  true ? invariant(false, 'ReactUpdates: must provide a batchedUpdates() function') : _prodInvariant('128') : void 0;
      !(typeof _batchingStrategy.isBatchingUpdates === 'boolean') ?  true ? invariant(false, 'ReactUpdates: must provide an isBatchingUpdates boolean attribute') : _prodInvariant('129') : void 0;
      batchingStrategy = _batchingStrategy;
    }
  };

  var ReactUpdates = {
    /**
     * React references `ReactReconcileTransaction` using this property in order
     * to allow dependency injection.
     *
     * @internal
     */
    ReactReconcileTransaction: null,

    batchedUpdates: batchedUpdates,
    enqueueUpdate: enqueueUpdate,
    flushBatchedUpdates: flushBatchedUpdates,
    injection: ReactUpdatesInjection,
    asap: asap
  };

  module.exports = ReactUpdates;

/***/ },
/* 440 */
/***/ function(module, exports, __webpack_require__) {

  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   * 
   */

  'use strict';

  var _prodInvariant = __webpack_require__(418);

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  var PooledClass = __webpack_require__(433);

  var invariant = __webpack_require__(391);

  /**
   * A specialized pseudo-event module to help keep track of components waiting to
   * be notified when their DOM representations are available for use.
   *
   * This implements `PooledClass`, so you should never need to instantiate this.
   * Instead, use `CallbackQueue.getPooled()`.
   *
   * @class ReactMountReady
   * @implements PooledClass
   * @internal
   */

  var CallbackQueue = function () {
    function CallbackQueue(arg) {
      _classCallCheck(this, CallbackQueue);

      this._callbacks = null;
      this._contexts = null;
      this._arg = arg;
    }

    /**
     * Enqueues a callback to be invoked when `notifyAll` is invoked.
     *
     * @param {function} callback Invoked when `notifyAll` is invoked.
     * @param {?object} context Context to call `callback` with.
     * @internal
     */


    CallbackQueue.prototype.enqueue = function enqueue(callback, context) {
      this._callbacks = this._callbacks || [];
      this._callbacks.push(callback);
      this._contexts = this._contexts || [];
      this._contexts.push(context);
    };

    /**
     * Invokes all enqueued callbacks and clears the queue. This is invoked after
     * the DOM representation of a component has been created or updated.
     *
     * @internal
     */


    CallbackQueue.prototype.notifyAll = function notifyAll() {
      var callbacks = this._callbacks;
      var contexts = this._contexts;
      var arg = this._arg;
      if (callbacks && contexts) {
        !(callbacks.length === contexts.length) ?  true ? invariant(false, 'Mismatched list of contexts in callback queue') : _prodInvariant('24') : void 0;
        this._callbacks = null;
        this._contexts = null;
        for (var i = 0; i < callbacks.length; i++) {
          callbacks[i].call(contexts[i], arg);
        }
        callbacks.length = 0;
        contexts.length = 0;
      }
    };

    CallbackQueue.prototype.checkpoint = function checkpoint() {
      return this._callbacks ? this._callbacks.length : 0;
    };

    CallbackQueue.prototype.rollback = function rollback(len) {
      if (this._callbacks && this._contexts) {
        this._callbacks.length = len;
        this._contexts.length = len;
      }
    };

    /**
     * Resets the internal queue.
     *
     * @internal
     */


    CallbackQueue.prototype.reset = function reset() {
      this._callbacks = null;
      this._contexts = null;
    };

    /**
     * `PooledClass` looks for this.
     */


    CallbackQueue.prototype.destructor = function destructor() {
      this.reset();
    };

    return CallbackQueue;
  }();

  module.exports = PooledClass.addPoolingTo(CallbackQueue);

/***/ },
/* 441 */
/***/ function(module, exports) {

  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   * 
   */

  'use strict';

  var ReactFeatureFlags = {
    // When true, call console.time() before and .timeEnd() after each top-level
    // render (both initial renders and updates). Useful when looking at prod-mode
    // timeline profiles in Chrome, for example.
    logTopLevelRenders: false
  };

  module.exports = ReactFeatureFlags;

/***/ },
/* 442 */
/***/ function(module, exports, __webpack_require__) {

  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  var ReactRef = __webpack_require__(443);
  var ReactInstrumentation = __webpack_require__(445);

  var warning = __webpack_require__(394);

  /**
   * Helper to call ReactRef.attachRefs with this composite component, split out
   * to avoid allocations in the transaction mount-ready queue.
   */
  function attachRefs() {
    ReactRef.attachRefs(this, this._currentElement);
  }

  var ReactReconciler = {

    /**
     * Initializes the component, renders markup, and registers event listeners.
     *
     * @param {ReactComponent} internalInstance
     * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
     * @param {?object} the containing host component instance
     * @param {?object} info about the host container
     * @return {?string} Rendered markup to be inserted into the DOM.
     * @final
     * @internal
     */
    mountComponent: function (internalInstance, transaction, hostParent, hostContainerInfo, context, parentDebugID // 0 in production and for roots
    ) {
      if (true) {
        if (internalInstance._debugID !== 0) {
          ReactInstrumentation.debugTool.onBeforeMountComponent(internalInstance._debugID, internalInstance._currentElement, parentDebugID);
        }
      }
      var markup = internalInstance.mountComponent(transaction, hostParent, hostContainerInfo, context, parentDebugID);
      if (internalInstance._currentElement && internalInstance._currentElement.ref != null) {
        transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
      }
      if (true) {
        if (internalInstance._debugID !== 0) {
          ReactInstrumentation.debugTool.onMountComponent(internalInstance._debugID);
        }
      }
      return markup;
    },

    /**
     * Returns a value that can be passed to
     * ReactComponentEnvironment.replaceNodeWithMarkup.
     */
    getHostNode: function (internalInstance) {
      return internalInstance.getHostNode();
    },

    /**
     * Releases any resources allocated by `mountComponent`.
     *
     * @final
     * @internal
     */
    unmountComponent: function (internalInstance, safely) {
      if (true) {
        if (internalInstance._debugID !== 0) {
          ReactInstrumentation.debugTool.onBeforeUnmountComponent(internalInstance._debugID);
        }
      }
      ReactRef.detachRefs(internalInstance, internalInstance._currentElement);
      internalInstance.unmountComponent(safely);
      if (true) {
        if (internalInstance._debugID !== 0) {
          ReactInstrumentation.debugTool.onUnmountComponent(internalInstance._debugID);
        }
      }
    },

    /**
     * Update a component using a new element.
     *
     * @param {ReactComponent} internalInstance
     * @param {ReactElement} nextElement
     * @param {ReactReconcileTransaction} transaction
     * @param {object} context
     * @internal
     */
    receiveComponent: function (internalInstance, nextElement, transaction, context) {
      var prevElement = internalInstance._currentElement;

      if (nextElement === prevElement && context === internalInstance._context) {
        // Since elements are immutable after the owner is rendered,
        // we can do a cheap identity compare here to determine if this is a
        // superfluous reconcile. It's possible for state to be mutable but such
        // change should trigger an update of the owner which would recreate
        // the element. We explicitly check for the existence of an owner since
        // it's possible for an element created outside a composite to be
        // deeply mutated and reused.

        // TODO: Bailing out early is just a perf optimization right?
        // TODO: Removing the return statement should affect correctness?
        return;
      }

      if (true) {
        if (internalInstance._debugID !== 0) {
          ReactInstrumentation.debugTool.onBeforeUpdateComponent(internalInstance._debugID, nextElement);
        }
      }

      var refsChanged = ReactRef.shouldUpdateRefs(prevElement, nextElement);

      if (refsChanged) {
        ReactRef.detachRefs(internalInstance, prevElement);
      }

      internalInstance.receiveComponent(nextElement, transaction, context);

      if (refsChanged && internalInstance._currentElement && internalInstance._currentElement.ref != null) {
        transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
      }

      if (true) {
        if (internalInstance._debugID !== 0) {
          ReactInstrumentation.debugTool.onUpdateComponent(internalInstance._debugID);
        }
      }
    },

    /**
     * Flush any dirty changes in a component.
     *
     * @param {ReactComponent} internalInstance
     * @param {ReactReconcileTransaction} transaction
     * @internal
     */
    performUpdateIfNecessary: function (internalInstance, transaction, updateBatchNumber) {
      if (internalInstance._updateBatchNumber !== updateBatchNumber) {
        // The component's enqueued batch number should always be the current
        // batch or the following one.
         true ? warning(internalInstance._updateBatchNumber == null || internalInstance._updateBatchNumber === updateBatchNumber + 1, 'performUpdateIfNecessary: Unexpected batch number (current %s, ' + 'pending %s)', updateBatchNumber, internalInstance._updateBatchNumber) : void 0;
        return;
      }
      if (true) {
        if (internalInstance._debugID !== 0) {
          ReactInstrumentation.debugTool.onBeforeUpdateComponent(internalInstance._debugID, internalInstance._currentElement);
        }
      }
      internalInstance.performUpdateIfNecessary(transaction);
      if (true) {
        if (internalInstance._debugID !== 0) {
          ReactInstrumentation.debugTool.onUpdateComponent(internalInstance._debugID);
        }
      }
    }

  };

  module.exports = ReactReconciler;

/***/ },
/* 443 */
/***/ function(module, exports, __webpack_require__) {

  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   * 
   */

  'use strict';

  var ReactOwner = __webpack_require__(444);

  var ReactRef = {};

  function attachRef(ref, component, owner) {
    if (typeof ref === 'function') {
      ref(component.getPublicInstance());
    } else {
      // Legacy ref
      ReactOwner.addComponentAsRefTo(component, ref, owner);
    }
  }

  function detachRef(ref, component, owner) {
    if (typeof ref === 'function') {
      ref(null);
    } else {
      // Legacy ref
      ReactOwner.removeComponentAsRefFrom(component, ref, owner);
    }
  }

  ReactRef.attachRefs = function (instance, element) {
    if (element === null || typeof element !== 'object') {
      return;
    }
    var ref = element.ref;
    if (ref != null) {
      attachRef(ref, instance, element._owner);
    }
  };

  ReactRef.shouldUpdateRefs = function (prevElement, nextElement) {
    // If either the owner or a `ref` has changed, make sure the newest owner
    // has stored a reference to `this`, and the previous owner (if different)
    // has forgotten the reference to `this`. We use the element instead
    // of the public this.props because the post processing cannot determine
    // a ref. The ref conceptually lives on the element.

    // TODO: Should this even be possible? The owner cannot change because
    // it's forbidden by shouldUpdateReactComponent. The ref can change
    // if you swap the keys of but not the refs. Reconsider where this check
    // is made. It probably belongs where the key checking and
    // instantiateReactComponent is done.

    var prevRef = null;
    var prevOwner = null;
    if (prevElement !== null && typeof prevElement === 'object') {
      prevRef = prevElement.ref;
      prevOwner = prevElement._owner;
    }

    var nextRef = null;
    var nextOwner = null;
    if (nextElement !== null && typeof nextElement === 'object') {
      nextRef = nextElement.ref;
      nextOwner = nextElement._owner;
    }

    return prevRef !== nextRef ||
    // If owner changes but we have an unchanged function ref, don't update refs
    typeof nextRef === 'string' && nextOwner !== prevOwner;
  };

  ReactRef.detachRefs = function (instance, element) {
    if (element === null || typeof element !== 'object') {
      return;
    }
    var ref = element.ref;
    if (ref != null) {
      detachRef(ref, instance, element._owner);
    }
  };

  module.exports = ReactRef;

/***/ },
/* 444 */
/***/ function(module, exports, __webpack_require__) {

  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   * 
   */

  'use strict';

  var _prodInvariant = __webpack_require__(418);

  var invariant = __webpack_require__(391);

  /**
   * @param {?object} object
   * @return {boolean} True if `object` is a valid owner.
   * @final
   */
  function isValidOwner(object) {
    return !!(object && typeof object.attachRef === 'function' && typeof object.detachRef === 'function');
  }

  /**
   * ReactOwners are capable of storing references to owned components.
   *
   * All components are capable of //being// referenced by owner components, but
   * only ReactOwner components are capable of //referencing// owned components.
   * The named reference is known as a "ref".
   *
   * Refs are available when mounted and updated during reconciliation.
   *
   *   var MyComponent = React.createClass({
   *     render: function() {
   *       return (
   *         <div onClick={this.handleClick}>
   *           <CustomComponent ref="custom" />
   *         </div>
   *       );
   *     },
   *     handleClick: function() {
   *       this.refs.custom.handleClick();
   *     },
   *     componentDidMount: function() {
   *       this.refs.custom.initialize();
   *     }
   *   });
   *
   * Refs should rarely be used. When refs are used, they should only be done to
   * control data that is not handled by React's data flow.
   *
   * @class ReactOwner
   */
  var ReactOwner = {
    /**
     * Adds a component by ref to an owner component.
     *
     * @param {ReactComponent} component Component to reference.
     * @param {string} ref Name by which to refer to the component.
     * @param {ReactOwner} owner Component on which to record the ref.
     * @final
     * @internal
     */
    addComponentAsRefTo: function (component, ref, owner) {
      !isValidOwner(owner) ?  true ? invariant(false, 'addComponentAsRefTo(...): Only a ReactOwner can have refs. You might be adding a ref to a component that was not created inside a component\'s `render` method, or you have multiple copies of React loaded (details: https://fb.me/react-refs-must-have-owner).') : _prodInvariant('119') : void 0;
      owner.attachRef(ref, component);
    },

    /**
     * Removes a component by ref from an owner component.
     *
     * @param {ReactComponent} component Component to dereference.
     * @param {string} ref Name of the ref to remove.
     * @param {ReactOwner} owner Component on which the ref is recorded.
     * @final
     * @internal
     */
    removeComponentAsRefFrom: function (component, ref, owner) {
      !isValidOwner(owner) ?  true ? invariant(false, 'removeComponentAsRefFrom(...): Only a ReactOwner can have refs. You might be removing a ref to a component that was not created inside a component\'s `render` method, or you have multiple copies of React loaded (details: https://fb.me/react-refs-must-have-owner).') : _prodInvariant('120') : void 0;
      var ownerPublicInstance = owner.getPublicInstance();
      // Check that `component`'s owner is still alive and that `component` is still the current ref
      // because we do not want to detach the ref if another component stole it.
      if (ownerPublicInstance && ownerPublicInstance.refs[ref] === component.getPublicInstance()) {
        owner.detachRef(ref);
      }
    }

  };

  module.exports = ReactOwner;

/***/ },
/* 445 */
/***/ function(module, exports, __webpack_require__) {

  /**
   * Copyright 2016-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   * 
   */

  'use strict';

  // Trust the developer to only use ReactInstrumentation with a __DEV__ check

  var debugTool = null;

  if (true) {
    var ReactDebugTool = __webpack_require__(446);
    debugTool = ReactDebugTool;
  }

  module.exports = { debugTool: debugTool };

/***/ },
/* 446 */
/***/ function(module, exports, __webpack_require__) {

  /**
   * Copyright 2016-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   * 
   */

  'use strict';

  var ReactInvalidSetStateWarningHook = __webpack_require__(447);
  var ReactHostOperationHistoryHook = __webpack_require__(448);
  var ReactComponentTreeHook = __webpack_require__(409);
  var ExecutionEnvironment = __webpack_require__(431);

  var performanceNow = __webpack_require__(449);
  var warning = __webpack_require__(394);

  var hooks = [];
  var didHookThrowForEvent = {};

  function callHook(event, fn, context, arg1, arg2, arg3, arg4, arg5) {
    try {
      fn.call(context, arg1, arg2, arg3, arg4, arg5);
    } catch (e) {
       true ? warning(didHookThrowForEvent[event], 'Exception thrown by hook while handling %s: %s', event, e + '\n' + e.stack) : void 0;
      didHookThrowForEvent[event] = true;
    }
  }

  function emitEvent(event, arg1, arg2, arg3, arg4, arg5) {
    for (var i = 0; i < hooks.length; i++) {
      var hook = hooks[i];
      var fn = hook[event];
      if (fn) {
        callHook(event, fn, hook, arg1, arg2, arg3, arg4, arg5);
      }
    }
  }

  var isProfiling = false;
  var flushHistory = [];
  var lifeCycleTimerStack = [];
  var currentFlushNesting = 0;
  var currentFlushMeasurements = [];
  var currentFlushStartTime = 0;
  var currentTimerDebugID = null;
  var currentTimerStartTime = 0;
  var currentTimerNestedFlushDuration = 0;
  var currentTimerType = null;

  var lifeCycleTimerHasWarned = false;

  function clearHistory() {
    ReactComponentTreeHook.purgeUnmountedComponents();
    ReactHostOperationHistoryHook.clearHistory();
  }

  function getTreeSnapshot(registeredIDs) {
    return registeredIDs.reduce(function (tree, id) {
      var ownerID = ReactComponentTreeHook.getOwnerID(id);
      var parentID = ReactComponentTreeHook.getParentID(id);
      tree[id] = {
        displayName: ReactComponentTreeHook.getDisplayName(id),
        text: ReactComponentTreeHook.getText(id),
        updateCount: ReactComponentTreeHook.getUpdateCount(id),
        childIDs: ReactComponentTreeHook.getChildIDs(id),
        // Text nodes don't have owners but this is close enough.
        ownerID: ownerID || parentID && ReactComponentTreeHook.getOwnerID(parentID) || 0,
        parentID: parentID
      };
      return tree;
    }, {});
  }

  function resetMeasurements() {
    var previousStartTime = currentFlushStartTime;
    var previousMeasurements = currentFlushMeasurements;
    var previousOperations = ReactHostOperationHistoryHook.getHistory();

    if (currentFlushNesting === 0) {
      currentFlushStartTime = 0;
      currentFlushMeasurements = [];
      clearHistory();
      return;
    }

    if (previousMeasurements.length || previousOperations.length) {
      var registeredIDs = ReactComponentTreeHook.getRegisteredIDs();
      flushHistory.push({
        duration: performanceNow() - previousStartTime,
        measurements: previousMeasurements || [],
        operations: previousOperations || [],
        treeSnapshot: getTreeSnapshot(registeredIDs)
      });
    }

    clearHistory();
    currentFlushStartTime = performanceNow();
    currentFlushMeasurements = [];
  }

  function checkDebugID(debugID) {
    var allowRoot = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

    if (allowRoot && debugID === 0) {
      return;
    }
    if (!debugID) {
       true ? warning(false, 'ReactDebugTool: debugID may not be empty.') : void 0;
    }
  }

  function beginLifeCycleTimer(debugID, timerType) {
    if (currentFlushNesting === 0) {
      return;
    }
    if (currentTimerType && !lifeCycleTimerHasWarned) {
       true ? warning(false, 'There is an internal error in the React performance measurement code. ' + 'Did not expect %s timer to start while %s timer is still in ' + 'progress for %s instance.', timerType, currentTimerType || 'no', debugID === currentTimerDebugID ? 'the same' : 'another') : void 0;
      lifeCycleTimerHasWarned = true;
    }
    currentTimerStartTime = performanceNow();
    currentTimerNestedFlushDuration = 0;
    currentTimerDebugID = debugID;
    currentTimerType = timerType;
  }

  function endLifeCycleTimer(debugID, timerType) {
    if (currentFlushNesting === 0) {
      return;
    }
    if (currentTimerType !== timerType && !lifeCycleTimerHasWarned) {
       true ? warning(false, 'There is an internal error in the React performance measurement code. ' + 'We did not expect %s timer to stop while %s timer is still in ' + 'progress for %s instance. Please report this as a bug in React.', timerType, currentTimerType || 'no', debugID === currentTimerDebugID ? 'the same' : 'another') : void 0;
      lifeCycleTimerHasWarned = true;
    }
    if (isProfiling) {
      currentFlushMeasurements.push({
        timerType: timerType,
        instanceID: debugID,
        duration: performanceNow() - currentTimerStartTime - currentTimerNestedFlushDuration
      });
    }
    currentTimerStartTime = 0;
    currentTimerNestedFlushDuration = 0;
    currentTimerDebugID = null;
    currentTimerType = null;
  }

  function pauseCurrentLifeCycleTimer() {
    var currentTimer = {
      startTime: currentTimerStartTime,
      nestedFlushStartTime: performanceNow(),
      debugID: currentTimerDebugID,
      timerType: currentTimerType
    };
    lifeCycleTimerStack.push(currentTimer);
    currentTimerStartTime = 0;
    currentTimerNestedFlushDuration = 0;
    currentTimerDebugID = null;
    currentTimerType = null;
  }

  function resumeCurrentLifeCycleTimer() {
    var _lifeCycleTimerStack$ = lifeCycleTimerStack.pop(),
        startTime = _lifeCycleTimerStack$.startTime,
        nestedFlushStartTime = _lifeCycleTimerStack$.nestedFlushStartTime,
        debugID = _lifeCycleTimerStack$.debugID,
        timerType = _lifeCycleTimerStack$.timerType;

    var nestedFlushDuration = performanceNow() - nestedFlushStartTime;
    currentTimerStartTime = startTime;
    currentTimerNestedFlushDuration += nestedFlushDuration;
    currentTimerDebugID = debugID;
    currentTimerType = timerType;
  }

  var lastMarkTimeStamp = 0;
  var canUsePerformanceMeasure =
  // $FlowFixMe https://github.com/facebook/flow/issues/2345
  typeof performance !== 'undefined' && typeof performance.mark === 'function' && typeof performance.clearMarks === 'function' && typeof performance.measure === 'function' && typeof performance.clearMeasures === 'function';

  function shouldMark(debugID) {
    if (!isProfiling || !canUsePerformanceMeasure) {
      return false;
    }
    var element = ReactComponentTreeHook.getElement(debugID);
    if (element == null || typeof element !== 'object') {
      return false;
    }
    var isHostElement = typeof element.type === 'string';
    if (isHostElement) {
      return false;
    }
    return true;
  }

  function markBegin(debugID, markType) {
    if (!shouldMark(debugID)) {
      return;
    }

    var markName = debugID + '::' + markType;
    lastMarkTimeStamp = performanceNow();
    performance.mark(markName);
  }

  function markEnd(debugID, markType) {
    if (!shouldMark(debugID)) {
      return;
    }

    var markName = debugID + '::' + markType;
    var displayName = ReactComponentTreeHook.getDisplayName(debugID) || 'Unknown';

    // Chrome has an issue of dropping markers recorded too fast:
    // https://bugs.chromium.org/p/chromium/issues/detail?id=640652
    // To work around this, we will not report very small measurements.
    // I determined the magic number by tweaking it back and forth.
    // 0.05ms was enough to prevent the issue, but I set it to 0.1ms to be safe.
    // When the bug is fixed, we can `measure()` unconditionally if we want to.
    var timeStamp = performanceNow();
    if (timeStamp - lastMarkTimeStamp > 0.1) {
      var measurementName = displayName + ' [' + markType + ']';
      performance.measure(measurementName, markName);
    }

    performance.clearMarks(markName);
    performance.clearMeasures(measurementName);
  }

  var ReactDebugTool = {
    addHook: function (hook) {
      hooks.push(hook);
    },
    removeHook: function (hook) {
      for (var i = 0; i < hooks.length; i++) {
        if (hooks[i] === hook) {
          hooks.splice(i, 1);
          i--;
        }
      }
    },
    isProfiling: function () {
      return isProfiling;
    },
    beginProfiling: function () {
      if (isProfiling) {
        return;
      }

      isProfiling = true;
      flushHistory.length = 0;
      resetMeasurements();
      ReactDebugTool.addHook(ReactHostOperationHistoryHook);
    },
    endProfiling: function () {
      if (!isProfiling) {
        return;
      }

      isProfiling = false;
      resetMeasurements();
      ReactDebugTool.removeHook(ReactHostOperationHistoryHook);
    },
    getFlushHistory: function () {
      return flushHistory;
    },
    onBeginFlush: function () {
      currentFlushNesting++;
      resetMeasurements();
      pauseCurrentLifeCycleTimer();
      emitEvent('onBeginFlush');
    },
    onEndFlush: function () {
      resetMeasurements();
      currentFlushNesting--;
      resumeCurrentLifeCycleTimer();
      emitEvent('onEndFlush');
    },
    onBeginLifeCycleTimer: function (debugID, timerType) {
      checkDebugID(debugID);
      emitEvent('onBeginLifeCycleTimer', debugID, timerType);
      markBegin(debugID, timerType);
      beginLifeCycleTimer(debugID, timerType);
    },
    onEndLifeCycleTimer: function (debugID, timerType) {
      checkDebugID(debugID);
      endLifeCycleTimer(debugID, timerType);
      markEnd(debugID, timerType);
      emitEvent('onEndLifeCycleTimer', debugID, timerType);
    },
    onBeginProcessingChildContext: function () {
      emitEvent('onBeginProcessingChildContext');
    },
    onEndProcessingChildContext: function () {
      emitEvent('onEndProcessingChildContext');
    },
    onHostOperation: function (operation) {
      checkDebugID(operation.instanceID);
      emitEvent('onHostOperation', operation);
    },
    onSetState: function () {
      emitEvent('onSetState');
    },
    onSetChildren: function (debugID, childDebugIDs) {
      checkDebugID(debugID);
      childDebugIDs.forEach(checkDebugID);
      emitEvent('onSetChildren', debugID, childDebugIDs);
    },
    onBeforeMountComponent: function (debugID, element, parentDebugID) {
      checkDebugID(debugID);
      checkDebugID(parentDebugID, true);
      emitEvent('onBeforeMountComponent', debugID, element, parentDebugID);
      markBegin(debugID, 'mount');
    },
    onMountComponent: function (debugID) {
      checkDebugID(debugID);
      markEnd(debugID, 'mount');
      emitEvent('onMountComponent', debugID);
    },
    onBeforeUpdateComponent: function (debugID, element) {
      checkDebugID(debugID);
      emitEvent('onBeforeUpdateComponent', debugID, element);
      markBegin(debugID, 'update');
    },
    onUpdateComponent: function (debugID) {
      checkDebugID(debugID);
      markEnd(debugID, 'update');
      emitEvent('onUpdateComponent', debugID);
    },
    onBeforeUnmountComponent: function (debugID) {
      checkDebugID(debugID);
      emitEvent('onBeforeUnmountComponent', debugID);
      markBegin(debugID, 'unmount');
    },
    onUnmountComponent: function (debugID) {
      checkDebugID(debugID);
      markEnd(debugID, 'unmount');
      emitEvent('onUnmountComponent', debugID);
    },
    onTestEvent: function () {
      emitEvent('onTestEvent');
    }
  };

  // TODO remove these when RN/www gets updated
  ReactDebugTool.addDevtool = ReactDebugTool.addHook;
  ReactDebugTool.removeDevtool = ReactDebugTool.removeHook;

  ReactDebugTool.addHook(ReactInvalidSetStateWarningHook);
  ReactDebugTool.addHook(ReactComponentTreeHook);
  var url = ExecutionEnvironment.canUseDOM && window.location.href || '';
  if (/[?&]react_perf\b/.test(url)) {
    ReactDebugTool.beginProfiling();
  }

  module.exports = ReactDebugTool;

/***/ },
/* 447 */
/***/ function(module, exports, __webpack_require__) {

  /**
   * Copyright 2016-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   * 
   */

  'use strict';

  var warning = __webpack_require__(394);

  if (true) {
    var processingChildContext = false;

    var warnInvalidSetState = function () {
       true ? warning(!processingChildContext, 'setState(...): Cannot call setState() inside getChildContext()') : void 0;
    };
  }

  var ReactInvalidSetStateWarningHook = {
    onBeginProcessingChildContext: function () {
      processingChildContext = true;
    },
    onEndProcessingChildContext: function () {
      processingChildContext = false;
    },
    onSetState: function () {
      warnInvalidSetState();
    }
  };

  module.exports = ReactInvalidSetStateWarningHook;

/***/ },
/* 448 */
/***/ function(module, exports) {

  /**
   * Copyright 2016-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   * 
   */

  'use strict';

  var history = [];

  var ReactHostOperationHistoryHook = {
    onHostOperation: function (operation) {
      history.push(operation);
    },
    clearHistory: function () {
      if (ReactHostOperationHistoryHook._preventClearing) {
        // Should only be used for tests.
        return;
      }

      history = [];
    },
    getHistory: function () {
      return history;
    }
  };

  module.exports = ReactHostOperationHistoryHook;

/***/ },
/* 449 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  /**
   * Copyright (c) 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   * @typechecks
   */

  var performance = __webpack_require__(450);

  var performanceNow;

  /**
   * Detect if we can use `window.performance.now()` and gracefully fallback to
   * `Date.now()` if it doesn't exist. We need to support Firefox < 15 for now
   * because of Facebook's testing infrastructure.
   */
  if (performance.now) {
    performanceNow = function performanceNow() {
      return performance.now();
    };
  } else {
    performanceNow = function performanceNow() {
      return Date.now();
    };
  }

  module.exports = performanceNow;

/***/ },
/* 450 */
/***/ function(module, exports, __webpack_require__) {

  /**
   * Copyright (c) 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   * @typechecks
   */

  'use strict';

  var ExecutionEnvironment = __webpack_require__(431);

  var performance;

  if (ExecutionEnvironment.canUseDOM) {
    performance = window.performance || window.msPerformance || window.webkitPerformance;
  }

  module.exports = performance || {};

/***/ },
/* 451 */
/***/ function(module, exports, __webpack_require__) {

  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   * 
   */

  'use strict';

  var _prodInvariant = __webpack_require__(418);

  var invariant = __webpack_require__(391);

  var OBSERVED_ERROR = {};

  /**
   * `Transaction` creates a black box that is able to wrap any method such that
   * certain invariants are maintained before and after the method is invoked
   * (Even if an exception is thrown while invoking the wrapped method). Whoever
   * instantiates a transaction can provide enforcers of the invariants at
   * creation time. The `Transaction` class itself will supply one additional
   * automatic invariant for you - the invariant that any transaction instance
   * should not be run while it is already being run. You would typically create a
   * single instance of a `Transaction` for reuse multiple times, that potentially
   * is used to wrap several different methods. Wrappers are extremely simple -
   * they only require implementing two methods.
   *
   * <pre>
   *                       wrappers (injected at creation time)
   *                                      +        +
   *                                      |        |
   *                    +-----------------|--------|--------------+
   *                    |                 v        |              |
   *                    |      +---------------+   |              |
   *                    |   +--|    wrapper1   |---|----+         |
   *                    |   |  +---------------+   v    |         |
   *                    |   |          +-------------+  |         |
   *                    |   |     +----|   wrapper2  |--------+   |
   *                    |   |     |    +-------------+  |     |   |
   *                    |   |     |                     |     |   |
   *                    |   v     v                     v     v   | wrapper
   *                    | +---+ +---+   +---------+   +---+ +---+ | invariants
   * perform(anyMethod) | |   | |   |   |         |   |   | |   | | maintained
   * +----------------->|-|---|-|---|-->|anyMethod|---|---|-|---|-|-------->
   *                    | |   | |   |   |         |   |   | |   | |
   *                    | |   | |   |   |         |   |   | |   | |
   *                    | |   | |   |   |         |   |   | |   | |
   *                    | +---+ +---+   +---------+   +---+ +---+ |
   *                    |  initialize                    close    |
   *                    +-----------------------------------------+
   * </pre>
   *
   * Use cases:
   * - Preserving the input selection ranges before/after reconciliation.
   *   Restoring selection even in the event of an unexpected error.
   * - Deactivating events while rearranging the DOM, preventing blurs/focuses,
   *   while guaranteeing that afterwards, the event system is reactivated.
   * - Flushing a queue of collected DOM mutations to the main UI thread after a
   *   reconciliation takes place in a worker thread.
   * - Invoking any collected `componentDidUpdate` callbacks after rendering new
   *   content.
   * - (Future use case): Wrapping particular flushes of the `ReactWorker` queue
   *   to preserve the `scrollTop` (an automatic scroll aware DOM).
   * - (Future use case): Layout calculations before and after DOM updates.
   *
   * Transactional plugin API:
   * - A module that has an `initialize` method that returns any precomputation.
   * - and a `close` method that accepts the precomputation. `close` is invoked
   *   when the wrapped process is completed, or has failed.
   *
   * @param {Array<TransactionalWrapper>} transactionWrapper Wrapper modules
   * that implement `initialize` and `close`.
   * @return {Transaction} Single transaction for reuse in thread.
   *
   * @class Transaction
   */
  var TransactionImpl = {
    /**
     * Sets up this instance so that it is prepared for collecting metrics. Does
     * so such that this setup method may be used on an instance that is already
     * initialized, in a way that does not consume additional memory upon reuse.
     * That can be useful if you decide to make your subclass of this mixin a
     * "PooledClass".
     */
    reinitializeTransaction: function () {
      this.transactionWrappers = this.getTransactionWrappers();
      if (this.wrapperInitData) {
        this.wrapperInitData.length = 0;
      } else {
        this.wrapperInitData = [];
      }
      this._isInTransaction = false;
    },

    _isInTransaction: false,

    /**
     * @abstract
     * @return {Array<TransactionWrapper>} Array of transaction wrappers.
     */
    getTransactionWrappers: null,

    isInTransaction: function () {
      return !!this._isInTransaction;
    },

    /**
     * Executes the function within a safety window. Use this for the top level
     * methods that result in large amounts of computation/mutations that would
     * need to be safety checked. The optional arguments helps prevent the need
     * to bind in many cases.
     *
     * @param {function} method Member of scope to call.
     * @param {Object} scope Scope to invoke from.
     * @param {Object?=} a Argument to pass to the method.
     * @param {Object?=} b Argument to pass to the method.
     * @param {Object?=} c Argument to pass to the method.
     * @param {Object?=} d Argument to pass to the method.
     * @param {Object?=} e Argument to pass to the method.
     * @param {Object?=} f Argument to pass to the method.
     *
     * @return {*} Return value from `method`.
     */
    perform: function (method, scope, a, b, c, d, e, f) {
      !!this.isInTransaction() ?  true ? invariant(false, 'Transaction.perform(...): Cannot initialize a transaction when there is already an outstanding transaction.') : _prodInvariant('27') : void 0;
      var errorThrown;
      var ret;
      try {
        this._isInTransaction = true;
        // Catching errors makes debugging more difficult, so we start with
        // errorThrown set to true before setting it to false after calling
        // close -- if it's still set to true in the finally block, it means
        // one of these calls threw.
        errorThrown = true;
        this.initializeAll(0);
        ret = method.call(scope, a, b, c, d, e, f);
        errorThrown = false;
      } finally {
        try {
          if (errorThrown) {
            // If `method` throws, prefer to show that stack trace over any thrown
            // by invoking `closeAll`.
            try {
              this.closeAll(0);
            } catch (err) {}
          } else {
            // Since `method` didn't throw, we don't want to silence the exception
            // here.
            this.closeAll(0);
          }
        } finally {
          this._isInTransaction = false;
        }
      }
      return ret;
    },

    initializeAll: function (startIndex) {
      var transactionWrappers = this.transactionWrappers;
      for (var i = startIndex; i < transactionWrappers.length; i++) {
        var wrapper = transactionWrappers[i];
        try {
          // Catching errors makes debugging more difficult, so we start with the
          // OBSERVED_ERROR state before overwriting it with the real return value
          // of initialize -- if it's still set to OBSERVED_ERROR in the finally
          // block, it means wrapper.initialize threw.
          this.wrapperInitData[i] = OBSERVED_ERROR;
          this.wrapperInitData[i] = wrapper.initialize ? wrapper.initialize.call(this) : null;
        } finally {
          if (this.wrapperInitData[i] === OBSERVED_ERROR) {
            // The initializer for wrapper i threw an error; initialize the
            // remaining wrappers but silence any exceptions from them to ensure
            // that the first error is the one to bubble up.
            try {
              this.initializeAll(i + 1);
            } catch (err) {}
          }
        }
      }
    },

    /**
     * Invokes each of `this.transactionWrappers.close[i]` functions, passing into
     * them the respective return values of `this.transactionWrappers.init[i]`
     * (`close`rs that correspond to initializers that failed will not be
     * invoked).
     */
    closeAll: function (startIndex) {
      !this.isInTransaction() ?  true ? invariant(false, 'Transaction.closeAll(): Cannot close transaction when none are open.') : _prodInvariant('28') : void 0;
      var transactionWrappers = this.transactionWrappers;
      for (var i = startIndex; i < transactionWrappers.length; i++) {
        var wrapper = transactionWrappers[i];
        var initData = this.wrapperInitData[i];
        var errorThrown;
        try {
          // Catching errors makes debugging more difficult, so we start with
          // errorThrown set to true before setting it to false after calling
          // close -- if it's still set to true in the finally block, it means
          // wrapper.close threw.
          errorThrown = true;
          if (initData !== OBSERVED_ERROR && wrapper.close) {
            wrapper.close.call(this, initData);
          }
          errorThrown = false;
        } finally {
          if (errorThrown) {
            // The closer for wrapper i threw an error; close the remaining
            // wrappers but silence any exceptions from them to ensure that the
            // first error is the one to bubble up.
            try {
              this.closeAll(i + 1);
            } catch (e) {}
          }
        }
      }
      this.wrapperInitData.length = 0;
    }
  };

  module.exports = TransactionImpl;

/***/ },
/* 452 */
/***/ function(module, exports) {

  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  /**
   * Gets the target node from a native browser event by accounting for
   * inconsistencies in browser DOM APIs.
   *
   * @param {object} nativeEvent Native browser event.
   * @return {DOMEventTarget} Target node.
   */

  function getEventTarget(nativeEvent) {
    var target = nativeEvent.target || nativeEvent.srcElement || window;

    // Normalize SVG <use> element events #4963
    if (target.correspondingUseElement) {
      target = target.correspondingUseElement;
    }

    // Safari may fire events on text nodes (Node.TEXT_NODE is 3).
    // @see http://www.quirksmode.org/js/events_properties.html
    return target.nodeType === 3 ? target.parentNode : target;
  }

  module.exports = getEventTarget;

/***/ },
/* 453 */
/***/ function(module, exports, __webpack_require__) {

  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  var ExecutionEnvironment = __webpack_require__(431);

  var useHasFeature;
  if (ExecutionEnvironment.canUseDOM) {
    useHasFeature = document.implementation && document.implementation.hasFeature &&
    // always returns true in newer browsers as per the standard.
    // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature
    document.implementation.hasFeature('', '') !== true;
  }

  /**
   * Checks if an event is supported in the current execution environment.
   *
   * NOTE: This will not work correctly for non-generic events such as `change`,
   * `reset`, `load`, `error`, and `select`.
   *
   * Borrows from Modernizr.
   *
   * @param {string} eventNameSuffix Event name, e.g. "click".
   * @param {?boolean} capture Check if the capture phase is supported.
   * @return {boolean} True if the event is supported.
   * @internal
   * @license Modernizr 3.0.0pre (Custom Build) | MIT
   */
  function isEventSupported(eventNameSuffix, capture) {
    if (!ExecutionEnvironment.canUseDOM || capture && !('addEventListener' in document)) {
      return false;
    }

    var eventName = 'on' + eventNameSuffix;
    var isSupported = eventName in document;

    if (!isSupported) {
      var element = document.createElement('div');
      element.setAttribute(eventName, 'return;');
      isSupported = typeof element[eventName] === 'function';
    }

    if (!isSupported && useHasFeature && eventNameSuffix === 'wheel') {
      // This is the only way to test support for the `wheel` event in IE9+.
      isSupported = document.implementation.hasFeature('Events.wheel', '3.0');
    }

    return isSupported;
  }

  module.exports = isEventSupported;

/***/ },
/* 454 */
/***/ function(module, exports) {

  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   * 
   */

  'use strict';

  /**
   * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary
   */

  var supportedInputTypes = {
    'color': true,
    'date': true,
    'datetime': true,
    'datetime-local': true,
    'email': true,
    'month': true,
    'number': true,
    'password': true,
    'range': true,
    'search': true,
    'tel': true,
    'text': true,
    'time': true,
    'url': true,
    'week': true
  };

  function isTextInputElement(elem) {
    var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();

    if (nodeName === 'input') {
      return !!supportedInputTypes[elem.type];
    }

    if (nodeName === 'textarea') {
      return true;
    }

    return false;
  }

  module.exports = isTextInputElement;

/***/ },
/* 455 */
/***/ function(module, exports) {

  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  /**
   * Module that is injectable into `EventPluginHub`, that specifies a
   * deterministic ordering of `EventPlugin`s. A convenient way to reason about
   * plugins, without having to package every one of them. This is better than
   * having plugins be ordered in the same order that they are injected because
   * that ordering would be influenced by the packaging order.
   * `ResponderEventPlugin` must occur before `SimpleEventPlugin` so that
   * preventing default on events is convenient in `SimpleEventPlugin` handlers.
   */

  var DefaultEventPluginOrder = ['ResponderEventPlugin', 'SimpleEventPlugin', 'TapEventPlugin', 'EnterLeaveEventPlugin', 'ChangeEventPlugin', 'SelectEventPlugin', 'BeforeInputEventPlugin'];

  module.exports = DefaultEventPluginOrder;

/***/ },
/* 456 */
/***/ function(module, exports, __webpack_require__) {

  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  var EventPropagators = __webpack_require__(424);
  var ReactDOMComponentTree = __webpack_require__(417);
  var SyntheticMouseEvent = __webpack_require__(457);

  var eventTypes = {
    mouseEnter: {
      registrationName: 'onMouseEnter',
      dependencies: ['topMouseOut', 'topMouseOver']
    },
    mouseLeave: {
      registrationName: 'onMouseLeave',
      dependencies: ['topMouseOut', 'topMouseOver']
    }
  };

  var EnterLeaveEventPlugin = {

    eventTypes: eventTypes,

    /**
     * For almost every interaction we care about, there will be both a top-level
     * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that
     * we do not extract duplicate events. However, moving the mouse into the
     * browser from outside will not fire a `mouseout` event. In this case, we use
     * the `mouseover` top-level event.
     */
    extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
      if (topLevelType === 'topMouseOver' && (nativeEvent.relatedTarget || nativeEvent.fromElement)) {
        return null;
      }
      if (topLevelType !== 'topMouseOut' && topLevelType !== 'topMouseOver') {
        // Must not be a mouse in or mouse out - ignoring.
        return null;
      }

      var win;
      if (nativeEventTarget.window === nativeEventTarget) {
        // `nativeEventTarget` is probably a window object.
        win = nativeEventTarget;
      } else {
        // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
        var doc = nativeEventTarget.ownerDocument;
        if (doc) {
          win = doc.defaultView || doc.parentWindow;
        } else {
          win = window;
        }
      }

      var from;
      var to;
      if (topLevelType === 'topMouseOut') {
        from = targetInst;
        var related = nativeEvent.relatedTarget || nativeEvent.toElement;
        to = related ? ReactDOMComponentTree.getClosestInstanceFromNode(related) : null;
      } else {
        // Moving to a node from outside the window.
        from = null;
        to = targetInst;
      }

      if (from === to) {
        // Nothing pertains to our managed components.
        return null;
      }

      var fromNode = from == null ? win : ReactDOMComponentTree.getNodeFromInstance(from);
      var toNode = to == null ? win : ReactDOMComponentTree.getNodeFromInstance(to);

      var leave = SyntheticMouseEvent.getPooled(eventTypes.mouseLeave, from, nativeEvent, nativeEventTarget);
      leave.type = 'mouseleave';
      leave.target = fromNode;
      leave.relatedTarget = toNode;

      var enter = SyntheticMouseEvent.getPooled(eventTypes.mouseEnter, to, nativeEvent, nativeEventTarget);
      enter.type = 'mouseenter';
      enter.target = toNode;
      enter.relatedTarget = fromNode;

      EventPropagators.accumulateEnterLeaveDispatches(leave, enter, from, to);

      return [leave, enter];
    }

  };

  module.exports = EnterLeaveEventPlugin;

/***/ },
/* 457 */
/***/ function(module, exports, __webpack_require__) {

  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  var SyntheticUIEvent = __webpack_require__(458);
  var ViewportMetrics = __webpack_require__(459);

  var getEventModifierState = __webpack_require__(460);

  /**
   * @interface MouseEvent
   * @see http://www.w3.org/TR/DOM-Level-3-Events/
   */
  var MouseEventInterface = {
    screenX: null,
    screenY: null,
    clientX: null,
    clientY: null,
    ctrlKey: null,
    shiftKey: null,
    altKey: null,
    metaKey: null,
    getModifierState: getEventModifierState,
    button: function (event) {
      // Webkit, Firefox, IE9+
      // which:  1 2 3
      // button: 0 1 2 (standard)
      var button = event.button;
      if ('which' in event) {
        return button;
      }
      // IE<9
      // which:  undefined
      // button: 0 0 0
      // button: 1 4 2 (onmouseup)
      return button === 2 ? 2 : button === 4 ? 1 : 0;
    },
    buttons: null,
    relatedTarget: function (event) {
      return event.relatedTarget || (event.fromElement === event.srcElement ? event.toElement : event.fromElement);
    },
    // "Proprietary" Interface.
    pageX: function (event) {
      return 'pageX' in event ? event.pageX : event.clientX + ViewportMetrics.currentScrollLeft;
    },
    pageY: function (event) {
      return 'pageY' in event ? event.pageY : event.clientY + ViewportMetrics.currentScrollTop;
    }
  };

  /**
   * @param {object} dispatchConfig Configuration used to dispatch this event.
   * @param {string} dispatchMarker Marker identifying the event target.
   * @param {object} nativeEvent Native browser event.
   * @extends {SyntheticUIEvent}
   */
  function SyntheticMouseEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
    return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
  }

  SyntheticUIEvent.augmentClass(SyntheticMouseEvent, MouseEventInterface);

  module.exports = SyntheticMouseEvent;

/***/ },
/* 458 */
/***/ function(module, exports, __webpack_require__) {

  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  var SyntheticEvent = __webpack_require__(436);

  var getEventTarget = __webpack_require__(452);

  /**
   * @interface UIEvent
   * @see http://www.w3.org/TR/DOM-Level-3-Events/
   */
  var UIEventInterface = {
    view: function (event) {
      if (event.view) {
        return event.view;
      }

      var target = getEventTarget(event);
      if (target.window === target) {
        // target is a window object
        return target;
      }

      var doc = target.ownerDocument;
      // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
      if (doc) {
        return doc.defaultView || doc.parentWindow;
      } else {
        return window;
      }
    },
    detail: function (event) {
      return event.detail || 0;
    }
  };

  /**
   * @param {object} dispatchConfig Configuration used to dispatch this event.
   * @param {string} dispatchMarker Marker identifying the event target.
   * @param {object} nativeEvent Native browser event.
   * @extends {SyntheticEvent}
   */
  function SyntheticUIEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
    return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
  }

  SyntheticEvent.augmentClass(SyntheticUIEvent, UIEventInterface);

  module.exports = SyntheticUIEvent;

/***/ },
/* 459 */
/***/ function(module, exports) {

  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  var ViewportMetrics = {

    currentScrollLeft: 0,

    currentScrollTop: 0,

    refreshScrollValues: function (scrollPosition) {
      ViewportMetrics.currentScrollLeft = scrollPosition.x;
      ViewportMetrics.currentScrollTop = scrollPosition.y;
    }

  };

  module.exports = ViewportMetrics;

/***/ },
/* 460 */
/***/ function(module, exports) {

  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  /**
   * Translation from modifier key to the associated property in the event.
   * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers
   */

  var modifierKeyToProp = {
    'Alt': 'altKey',
    'Control': 'ctrlKey',
    'Meta': 'metaKey',
    'Shift': 'shiftKey'
  };

  // IE8 does not implement getModifierState so we simply map it to the only
  // modifier keys exposed by the event itself, does not support Lock-keys.
  // Currently, all major browsers except Chrome seems to support Lock-keys.
  function modifierStateGetter(keyArg) {
    var syntheticEvent = this;
    var nativeEvent = syntheticEvent.nativeEvent;
    if (nativeEvent.getModifierState) {
      return nativeEvent.getModifierState(keyArg);
    }
    var keyProp = modifierKeyToProp[keyArg];
    return keyProp ? !!nativeEvent[keyProp] : false;
  }

  function getEventModifierState(nativeEvent) {
    return modifierStateGetter;
  }

  module.exports = getEventModifierState;

/***/ },
/* 461 */
/***/ function(module, exports, __webpack_require__) {

  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  var DOMProperty = __webpack_require__(419);

  var MUST_USE_PROPERTY = DOMProperty.injection.MUST_USE_PROPERTY;
  var HAS_BOOLEAN_VALUE = DOMProperty.injection.HAS_BOOLEAN_VALUE;
  var HAS_NUMERIC_VALUE = DOMProperty.injection.HAS_NUMERIC_VALUE;
  var HAS_POSITIVE_NUMERIC_VALUE = DOMProperty.injection.HAS_POSITIVE_NUMERIC_VALUE;
  var HAS_OVERLOADED_BOOLEAN_VALUE = DOMProperty.injection.HAS_OVERLOADED_BOOLEAN_VALUE;

  var HTMLDOMPropertyConfig = {
    isCustomAttribute: RegExp.prototype.test.bind(new RegExp('^(data|aria)-[' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$')),
    Properties: {
      /**
       * Standard Properties
       */
      accept: 0,
      acceptCharset: 0,
      accessKey: 0,
      action: 0,
      allowFullScreen: HAS_BOOLEAN_VALUE,
      allowTransparency: 0,
      alt: 0,
      // specifies target context for links with `preload` type
      as: 0,
      async: HAS_BOOLEAN_VALUE,
      autoComplete: 0,
      // autoFocus is polyfilled/normalized by AutoFocusUtils
      // autoFocus: HAS_BOOLEAN_VALUE,
      autoPlay: HAS_BOOLEAN_VALUE,
      capture: HAS_BOOLEAN_VALUE,
      cellPadding: 0,
      cellSpacing: 0,
      charSet: 0,
      challenge: 0,
      checked: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
      cite: 0,
      classID: 0,
      className: 0,
      cols: HAS_POSITIVE_NUMERIC_VALUE,
      colSpan: 0,
      content: 0,
      contentEditable: 0,
      contextMenu: 0,
      controls: HAS_BOOLEAN_VALUE,
      coords: 0,
      crossOrigin: 0,
      data: 0, // For `<object />` acts as `src`.
      dateTime: 0,
      'default': HAS_BOOLEAN_VALUE,
      defer: HAS_BOOLEAN_VALUE,
      dir: 0,
      disabled: HAS_BOOLEAN_VALUE,
      download: HAS_OVERLOADED_BOOLEAN_VALUE,
      draggable: 0,
      encType: 0,
      form: 0,
      formAction: 0,
      formEncType: 0,
      formMethod: 0,
      formNoValidate: HAS_BOOLEAN_VALUE,
      formTarget: 0,
      frameBorder: 0,
      headers: 0,
      height: 0,
      hidden: HAS_BOOLEAN_VALUE,
      high: 0,
      href: 0,
      hrefLang: 0,
      htmlFor: 0,
      httpEquiv: 0,
      icon: 0,
      id: 0,
      inputMode: 0,
      integrity: 0,
      is: 0,
      keyParams: 0,
      keyType: 0,
      kind: 0,
      label: 0,
      lang: 0,
      list: 0,
      loop: HAS_BOOLEAN_VALUE,
      low: 0,
      manifest: 0,
      marginHeight: 0,
      marginWidth: 0,
      max: 0,
      maxLength: 0,
      media: 0,
      mediaGroup: 0,
      method: 0,
      min: 0,
      minLength: 0,
      // Caution; `option.selected` is not updated if `select.multiple` is
      // disabled with `removeAttribute`.
      multiple: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
      muted: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
      name: 0,
      nonce: 0,
      noValidate: HAS_BOOLEAN_VALUE,
      open: HAS_BOOLEAN_VALUE,
      optimum: 0,
      pattern: 0,
      placeholder: 0,
      playsInline: HAS_BOOLEAN_VALUE,
      poster: 0,
      preload: 0,
      profile: 0,
      radioGroup: 0,
      readOnly: HAS_BOOLEAN_VALUE,
      referrerPolicy: 0,
      rel: 0,
      required: HAS_BOOLEAN_VALUE,
      reversed: HAS_BOOLEAN_VALUE,
      role: 0,
      rows: HAS_POSITIVE_NUMERIC_VALUE,
      rowSpan: HAS_NUMERIC_VALUE,
      sandbox: 0,
      scope: 0,
      scoped: HAS_BOOLEAN_VALUE,
      scrolling: 0,
      seamless: HAS_BOOLEAN_VALUE,
      selected: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
      shape: 0,
      size: HAS_POSITIVE_NUMERIC_VALUE,
      sizes: 0,
      span: HAS_POSITIVE_NUMERIC_VALUE,
      spellCheck: 0,
      src: 0,
      srcDoc: 0,
      srcLang: 0,
      srcSet: 0,
      start: HAS_NUMERIC_VALUE,
      step: 0,
      style: 0,
      summary: 0,
      tabIndex: 0,
      target: 0,
      title: 0,
      // Setting .type throws on non-<input> tags
      type: 0,
      useMap: 0,
      value: 0,
      width: 0,
      wmode: 0,
      wrap: 0,

      /**
       * RDFa Properties
       */
      about: 0,
      datatype: 0,
      inlist: 0,
      prefix: 0,
      // property is also supported for OpenGraph in meta tags.
      property: 0,
      resource: 0,
      'typeof': 0,
      vocab: 0,

      /**
       * Non-standard Properties
       */
      // autoCapitalize and autoCorrect are supported in Mobile Safari for
      // keyboard hints.
      autoCapitalize: 0,
      autoCorrect: 0,
      // autoSave allows WebKit/Blink to persist values of input fields on page reloads
      autoSave: 0,
      // color is for Safari mask-icon link
      color: 0,
      // itemProp, itemScope, itemType are for
      // Microdata support. See http://schema.org/docs/gs.html
      itemProp: 0,
      itemScope: HAS_BOOLEAN_VALUE,
      itemType: 0,
      // itemID and itemRef are for Microdata support as well but
      // only specified in the WHATWG spec document. See
      // https://html.spec.whatwg.org/multipage/microdata.html#microdata-dom-api
      itemID: 0,
      itemRef: 0,
      // results show looking glass icon and recent searches on input
      // search fields in WebKit/Blink
      results: 0,
      // IE-only attribute that specifies security restrictions on an iframe
      // as an alternative to the sandbox attribute on IE<10
      security: 0,
      // IE-only attribute that controls focus behavior
      unselectable: 0
    },
    DOMAttributeNames: {
      acceptCharset: 'accept-charset',
      className: 'class',
      htmlFor: 'for',
      httpEquiv: 'http-equiv'
    },
    DOMPropertyNames: {}
  };

  module.exports = HTMLDOMPropertyConfig;

/***/ },
/* 462 */
/***/ function(module, exports, __webpack_require__) {

  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  var DOMChildrenOperations = __webpack_require__(463);
  var ReactDOMIDOperations = __webpack_require__(474);

  /**
   * Abstracts away all functionality of the reconciler that requires knowledge of
   * the browser context. TODO: These callers should be refactored to avoid the
   * need for this injection.
   */
  var ReactComponentBrowserEnvironment = {

    processChildrenUpdates: ReactDOMIDOperations.dangerouslyProcessChildrenUpdates,

    replaceNodeWithMarkup: DOMChildrenOperations.dangerouslyReplaceNodeWithMarkup

  };

  module.exports = ReactComponentBrowserEnvironment;

/***/ },
/* 463 */
/***/ function(module, exports, __webpack_require__) {

  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  var DOMLazyTree = __webpack_require__(464);
  var Danger = __webpack_require__(470);
  var ReactDOMComponentTree = __webpack_require__(417);
  var ReactInstrumentation = __webpack_require__(445);

  var createMicrosoftUnsafeLocalFunction = __webpack_require__(467);
  var setInnerHTML = __webpack_require__(466);
  var setTextContent = __webpack_require__(468);

  function getNodeAfter(parentNode, node) {
    // Special case for text components, which return [open, close] comments
    // from getHostNode.
    if (Array.isArray(node)) {
      node = node[1];
    }
    return node ? node.nextSibling : parentNode.firstChild;
  }

  /**
   * Inserts `childNode` as a child of `parentNode` at the `index`.
   *
   * @param {DOMElement} parentNode Parent node in which to insert.
   * @param {DOMElement} childNode Child node to insert.
   * @param {number} index Index at which to insert the child.
   * @internal
   */
  var insertChildAt = createMicrosoftUnsafeLocalFunction(function (parentNode, childNode, referenceNode) {
    // We rely exclusively on `insertBefore(node, null)` instead of also using
    // `appendChild(node)`. (Using `undefined` is not allowed by all browsers so
    // we are careful to use `null`.)
    parentNode.insertBefore(childNode, referenceNode);
  });

  function insertLazyTreeChildAt(parentNode, childTree, referenceNode) {
    DOMLazyTree.insertTreeBefore(parentNode, childTree, referenceNode);
  }

  function moveChild(parentNode, childNode, referenceNode) {
    if (Array.isArray(childNode)) {
      moveDelimitedText(parentNode, childNode[0], childNode[1], referenceNode);
    } else {
      insertChildAt(parentNode, childNode, referenceNode);
    }
  }

  function removeChild(parentNode, childNode) {
    if (Array.isArray(childNode)) {
      var closingComment = childNode[1];
      childNode = childNode[0];
      removeDelimitedText(parentNode, childNode, closingComment);
      parentNode.removeChild(closingComment);
    }
    parentNode.removeChild(childNode);
  }

  function moveDelimitedText(parentNode, openingComment, closingComment, referenceNode) {
    var node = openingComment;
    while (true) {
      var nextNode = node.nextSibling;
      insertChildAt(parentNode, node, referenceNode);
      if (node === closingComment) {
        break;
      }
      node = nextNode;
    }
  }

  function removeDelimitedText(parentNode, startNode, closingComment) {
    while (true) {
      var node = startNode.nextSibling;
      if (node === closingComment) {
        // The closing comment is removed by ReactMultiChild.
        break;
      } else {
        parentNode.removeChild(node);
      }
    }
  }

  function replaceDelimitedText(openingComment, closingComment, stringText) {
    var parentNode = openingComment.parentNode;
    var nodeAfterComment = openingComment.nextSibling;
    if (nodeAfterComment === closingComment) {
      // There are no text nodes between the opening and closing comments; insert
      // a new one if stringText isn't empty.
      if (stringText) {
        insertChildAt(parentNode, document.createTextNode(stringText), nodeAfterComment);
      }
    } else {
      if (stringText) {
        // Set the text content of the first node after the opening comment, and
        // remove all following nodes up until the closing comment.
        setTextContent(nodeAfterComment, stringText);
        removeDelimitedText(parentNode, nodeAfterComment, closingComment);
      } else {
        removeDelimitedText(parentNode, openingComment, closingComment);
      }
    }

    if (true) {
      ReactInstrumentation.debugTool.onHostOperation({
        instanceID: ReactDOMComponentTree.getInstanceFromNode(openingComment)._debugID,
        type: 'replace text',
        payload: stringText
      });
    }
  }

  var dangerouslyReplaceNodeWithMarkup = Danger.dangerouslyReplaceNodeWithMarkup;
  if (true) {
    dangerouslyReplaceNodeWithMarkup = function (oldChild, markup, prevInstance) {
      Danger.dangerouslyReplaceNodeWithMarkup(oldChild, markup);
      if (prevInstance._debugID !== 0) {
        ReactInstrumentation.debugTool.onHostOperation({
          instanceID: prevInstance._debugID,
          type: 'replace with',
          payload: markup.toString()
        });
      } else {
        var nextInstance = ReactDOMComponentTree.getInstanceFromNode(markup.node);
        if (nextInstance._debugID !== 0) {
          ReactInstrumentation.debugTool.onHostOperation({
            instanceID: nextInstance._debugID,
            type: 'mount',
            payload: markup.toString()
          });
        }
      }
    };
  }

  /**
   * Operations for updating with DOM children.
   */
  var DOMChildrenOperations = {

    dangerouslyReplaceNodeWithMarkup: dangerouslyReplaceNodeWithMarkup,

    replaceDelimitedText: replaceDelimitedText,

    /**
     * Updates a component's children by processing a series of updates. The
     * update configurations are each expected to have a `parentNode` property.
     *
     * @param {array<object>} updates List of update configurations.
     * @internal
     */
    processUpdates: function (parentNode, updates) {
      if (true) {
        var parentNodeDebugID = ReactDOMComponentTree.getInstanceFromNode(parentNode)._debugID;
      }

      for (var k = 0; k < updates.length; k++) {
        var update = updates[k];
        switch (update.type) {
          case 'INSERT_MARKUP':
            insertLazyTreeChildAt(parentNode, update.content, getNodeAfter(parentNode, update.afterNode));
            if (true) {
              ReactInstrumentation.debugTool.onHostOperation({
                instanceID: parentNodeDebugID,
                type: 'insert child',
                payload: { toIndex: update.toIndex, content: update.content.toString() }
              });
            }
            break;
          case 'MOVE_EXISTING':
            moveChild(parentNode, update.fromNode, getNodeAfter(parentNode, update.afterNode));
            if (true) {
              ReactInstrumentation.debugTool.onHostOperation({
                instanceID: parentNodeDebugID,
                type: 'move child',
                payload: { fromIndex: update.fromIndex, toIndex: update.toIndex }
              });
            }
            break;
          case 'SET_MARKUP':
            setInnerHTML(parentNode, update.content);
            if (true) {
              ReactInstrumentation.debugTool.onHostOperation({
                instanceID: parentNodeDebugID,
                type: 'replace children',
                payload: update.content.toString()
              });
            }
            break;
          case 'TEXT_CONTENT':
            setTextContent(parentNode, update.content);
            if (true) {
              ReactInstrumentation.debugTool.onHostOperation({
                instanceID: parentNodeDebugID,
                type: 'replace text',
                payload: update.content.toString()
              });
            }
            break;
          case 'REMOVE_NODE':
            removeChild(parentNode, update.fromNode);
            if (true) {
              ReactInstrumentation.debugTool.onHostOperation({
                instanceID: parentNodeDebugID,
                type: 'remove child',
                payload: { fromIndex: update.fromIndex }
              });
            }
            break;
        }
      }
    }

  };

  module.exports = DOMChildrenOperations;

/***/ },
/* 464 */
/***/ function(module, exports, __webpack_require__) {

  /**
   * Copyright 2015-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  var DOMNamespaces = __webpack_require__(465);
  var setInnerHTML = __webpack_require__(466);

  var createMicrosoftUnsafeLocalFunction = __webpack_require__(467);
  var setTextContent = __webpack_require__(468);

  var ELEMENT_NODE_TYPE = 1;
  var DOCUMENT_FRAGMENT_NODE_TYPE = 11;

  /**
   * In IE (8-11) and Edge, appending nodes with no children is dramatically
   * faster than appending a full subtree, so we essentially queue up the
   * .appendChild calls here and apply them so each node is added to its parent
   * before any children are added.
   *
   * In other browsers, doing so is slower or neutral compared to the other order
   * (in Firefox, twice as slow) so we only do this inversion in IE.
   *
   * See https://github.com/spicyj/innerhtml-vs-createelement-vs-clonenode.
   */
  var enableLazy = typeof document !== 'undefined' && typeof document.documentMode === 'number' || typeof navigator !== 'undefined' && typeof navigator.userAgent === 'string' && /\bEdge\/\d/.test(navigator.userAgent);

  function insertTreeChildren(tree) {
    if (!enableLazy) {
      return;
    }
    var node = tree.node;
    var children = tree.children;
    if (children.length) {
      for (var i = 0; i < children.length; i++) {
        insertTreeBefore(node, children[i], null);
      }
    } else if (tree.html != null) {
      setInnerHTML(node, tree.html);
    } else if (tree.text != null) {
      setTextContent(node, tree.text);
    }
  }

  var insertTreeBefore = createMicrosoftUnsafeLocalFunction(function (parentNode, tree, referenceNode) {
    // DocumentFragments aren't actually part of the DOM after insertion so
    // appending children won't update the DOM. We need to ensure the fragment
    // is properly populated first, breaking out of our lazy approach for just
    // this level. Also, some <object> plugins (like Flash Player) will read
    // <param> nodes immediately upon insertion into the DOM, so <object>
    // must also be populated prior to insertion into the DOM.
    if (tree.node.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE || tree.node.nodeType === ELEMENT_NODE_TYPE && tree.node.nodeName.toLowerCase() === 'object' && (tree.node.namespaceURI == null || tree.node.namespaceURI === DOMNamespaces.html)) {
      insertTreeChildren(tree);
      parentNode.insertBefore(tree.node, referenceNode);
    } else {
      parentNode.insertBefore(tree.node, referenceNode);
      insertTreeChildren(tree);
    }
  });

  function replaceChildWithTree(oldNode, newTree) {
    oldNode.parentNode.replaceChild(newTree.node, oldNode);
    insertTreeChildren(newTree);
  }

  function queueChild(parentTree, childTree) {
    if (enableLazy) {
      parentTree.children.push(childTree);
    } else {
      parentTree.node.appendChild(childTree.node);
    }
  }

  function queueHTML(tree, html) {
    if (enableLazy) {
      tree.html = html;
    } else {
      setInnerHTML(tree.node, html);
    }
  }

  function queueText(tree, text) {
    if (enableLazy) {
      tree.text = text;
    } else {
      setTextContent(tree.node, text);
    }
  }

  function toString() {
    return this.node.nodeName;
  }

  function DOMLazyTree(node) {
    return {
      node: node,
      children: [],
      html: null,
      text: null,
      toString: toString
    };
  }

  DOMLazyTree.insertTreeBefore = insertTreeBefore;
  DOMLazyTree.replaceChildWithTree = replaceChildWithTree;
  DOMLazyTree.queueChild = queueChild;
  DOMLazyTree.queueHTML = queueHTML;
  DOMLazyTree.queueText = queueText;

  module.exports = DOMLazyTree;

/***/ },
/* 465 */
/***/ function(module, exports) {

  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  var DOMNamespaces = {
    html: 'http://www.w3.org/1999/xhtml',
    mathml: 'http://www.w3.org/1998/Math/MathML',
    svg: 'http://www.w3.org/2000/svg'
  };

  module.exports = DOMNamespaces;

/***/ },
/* 466 */
/***/ function(module, exports, __webpack_require__) {

  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  var ExecutionEnvironment = __webpack_require__(431);
  var DOMNamespaces = __webpack_require__(465);

  var WHITESPACE_TEST = /^[ \r\n\t\f]/;
  var NONVISIBLE_TEST = /<(!--|link|noscript|meta|script|style)[ \r\n\t\f\/>]/;

  var createMicrosoftUnsafeLocalFunction = __webpack_require__(467);

  // SVG temp container for IE lacking innerHTML
  var reusableSVGContainer;

  /**
   * Set the innerHTML property of a node, ensuring that whitespace is preserved
   * even in IE8.
   *
   * @param {DOMElement} node
   * @param {string} html
   * @internal
   */
  var setInnerHTML = createMicrosoftUnsafeLocalFunction(function (node, html) {
    // IE does not have innerHTML for SVG nodes, so instead we inject the
    // new markup in a temp node and then move the child nodes across into
    // the target node
    if (node.namespaceURI === DOMNamespaces.svg && !('innerHTML' in node)) {
      reusableSVGContainer = reusableSVGContainer || document.createElement('div');
      reusableSVGContainer.innerHTML = '<svg>' + html + '</svg>';
      var svgNode = reusableSVGContainer.firstChild;
      while (svgNode.firstChild) {
        node.appendChild(svgNode.firstChild);
      }
    } else {
      node.innerHTML = html;
    }
  });

  if (ExecutionEnvironment.canUseDOM) {
    // IE8: When updating a just created node with innerHTML only leading
    // whitespace is removed. When updating an existing node with innerHTML
    // whitespace in root TextNodes is also collapsed.
    // @see quirksmode.org/bugreports/archives/2004/11/innerhtml_and_t.html

    // Feature detection; only IE8 is known to behave improperly like this.
    var testElement = document.createElement('div');
    testElement.innerHTML = ' ';
    if (testElement.innerHTML === '') {
      setInnerHTML = function (node, html) {
        // Magic theory: IE8 supposedly differentiates between added and updated
        // nodes when processing innerHTML, innerHTML on updated nodes suffers
        // from worse whitespace behavior. Re-adding a node like this triggers
        // the initial and more favorable whitespace behavior.
        // TODO: What to do on a detached node?
        if (node.parentNode) {
          node.parentNode.replaceChild(node, node);
        }

        // We also implement a workaround for non-visible tags disappearing into
        // thin air on IE8, this only happens if there is no visible text
        // in-front of the non-visible tags. Piggyback on the whitespace fix
        // and simply check if any non-visible tags appear in the source.
        if (WHITESPACE_TEST.test(html) || html[0] === '<' && NONVISIBLE_TEST.test(html)) {
          // Recover leading whitespace by temporarily prepending any character.
          // \uFEFF has the potential advantage of being zero-width/invisible.
          // UglifyJS drops U+FEFF chars when parsing, so use String.fromCharCode
          // in hopes that this is preserved even if "\uFEFF" is transformed to
          // the actual Unicode character (by Babel, for example).
          // https://github.com/mishoo/UglifyJS2/blob/v2.4.20/lib/parse.js#L216
          node.innerHTML = String.fromCharCode(0xFEFF) + html;

          // deleteData leaves an empty `TextNode` which offsets the index of all
          // children. Definitely want to avoid this.
          var textNode = node.firstChild;
          if (textNode.data.length === 1) {
            node.removeChild(textNode);
          } else {
            textNode.deleteData(0, 1);
          }
        } else {
          node.innerHTML = html;
        }
      };
    }
    testElement = null;
  }

  module.exports = setInnerHTML;

/***/ },
/* 467 */
/***/ function(module, exports) {

  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  /* globals MSApp */

  'use strict';

  /**
   * Create a function which has 'unsafe' privileges (required by windows8 apps)
   */

  var createMicrosoftUnsafeLocalFunction = function (func) {
    if (typeof MSApp !== 'undefined' && MSApp.execUnsafeLocalFunction) {
      return function (arg0, arg1, arg2, arg3) {
        MSApp.execUnsafeLocalFunction(function () {
          return func(arg0, arg1, arg2, arg3);
        });
      };
    } else {
      return func;
    }
  };

  module.exports = createMicrosoftUnsafeLocalFunction;

/***/ },
/* 468 */
/***/ function(module, exports, __webpack_require__) {

  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  var ExecutionEnvironment = __webpack_require__(431);
  var escapeTextContentForBrowser = __webpack_require__(469);
  var setInnerHTML = __webpack_require__(466);

  /**
   * Set the textContent property of a node, ensuring that whitespace is preserved
   * even in IE8. innerText is a poor substitute for textContent and, among many
   * issues, inserts <br> instead of the literal newline chars. innerHTML behaves
   * as it should.
   *
   * @param {DOMElement} node
   * @param {string} text
   * @internal
   */
  var setTextContent = function (node, text) {
    if (text) {
      var firstChild = node.firstChild;

      if (firstChild && firstChild === node.lastChild && firstChild.nodeType === 3) {
        firstChild.nodeValue = text;
        return;
      }
    }
    node.textContent = text;
  };

  if (ExecutionEnvironment.canUseDOM) {
    if (!('textContent' in document.documentElement)) {
      setTextContent = function (node, text) {
        if (node.nodeType === 3) {
          node.nodeValue = text;
          return;
        }
        setInnerHTML(node, escapeTextContentForBrowser(text));
      };
    }
  }

  module.exports = setTextContent;

/***/ },
/* 469 */
/***/ function(module, exports) {

  /**
   * Copyright 2016-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   * Based on the escape-html library, which is used under the MIT License below:
   *
   * Copyright (c) 2012-2013 TJ Holowaychuk
   * Copyright (c) 2015 Andreas Lubbe
   * Copyright (c) 2015 Tiancheng "Timothy" Gu
   *
   * Permission is hereby granted, free of charge, to any person obtaining
   * a copy of this software and associated documentation files (the
   * 'Software'), to deal in the Software without restriction, including
   * without limitation the rights to use, copy, modify, merge, publish,
   * distribute, sublicense, and/or sell copies of the Software, and to
   * permit persons to whom the Software is furnished to do so, subject to
   * the following conditions:
   *
   * The above copyright notice and this permission notice shall be
   * included in all copies or substantial portions of the Software.
   *
   * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,
   * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
   * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
   * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
   * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
   * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
   * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
   *
   */

  'use strict';

  // code copied and modified from escape-html
  /**
   * Module variables.
   * @private
   */

  var matchHtmlRegExp = /["'&<>]/;

  /**
   * Escape special characters in the given string of html.
   *
   * @param  {string} string The string to escape for inserting into HTML
   * @return {string}
   * @public
   */

  function escapeHtml(string) {
    var str = '' + string;
    var match = matchHtmlRegExp.exec(str);

    if (!match) {
      return str;
    }

    var escape;
    var html = '';
    var index = 0;
    var lastIndex = 0;

    for (index = match.index; index < str.length; index++) {
      switch (str.charCodeAt(index)) {
        case 34:
          // "
          escape = '&quot;';
          break;
        case 38:
          // &
          escape = '&amp;';
          break;
        case 39:
          // '
          escape = '&#x27;'; // modified from escape-html; used to be '&#39'
          break;
        case 60:
          // <
          escape = '&lt;';
          break;
        case 62:
          // >
          escape = '&gt;';
          break;
        default:
          continue;
      }

      if (lastIndex !== index) {
        html += str.substring(lastIndex, index);
      }

      lastIndex = index + 1;
      html += escape;
    }

    return lastIndex !== index ? html + str.substring(lastIndex, index) : html;
  }
  // end code copied and modified from escape-html


  /**
   * Escapes text to prevent scripting attacks.
   *
   * @param {*} text Text value to escape.
   * @return {string} An escaped string.
   */
  function escapeTextContentForBrowser(text) {
    if (typeof text === 'boolean' || typeof text === 'number') {
      // this shortcircuit helps perf for types that we know will never have
      // special characters, especially given that this function is used often
      // for numeric dom ids.
      return '' + text;
    }
    return escapeHtml(text);
  }

  module.exports = escapeTextContentForBrowser;

/***/ },
/* 470 */
/***/ function(module, exports, __webpack_require__) {

  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  var _prodInvariant = __webpack_require__(418);

  var DOMLazyTree = __webpack_require__(464);
  var ExecutionEnvironment = __webpack_require__(431);

  var createNodesFromMarkup = __webpack_require__(471);
  var emptyFunction = __webpack_require__(395);
  var invariant = __webpack_require__(391);

  var Danger = {

    /**
     * Replaces a node with a string of markup at its current position within its
     * parent. The markup must render into a single root node.
     *
     * @param {DOMElement} oldChild Child node to replace.
     * @param {string} markup Markup to render in place of the child node.
     * @internal
     */
    dangerouslyReplaceNodeWithMarkup: function (oldChild, markup) {
      !ExecutionEnvironment.canUseDOM ?  true ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot render markup in a worker thread. Make sure `window` and `document` are available globally before requiring React when unit testing or use ReactDOMServer.renderToString() for server rendering.') : _prodInvariant('56') : void 0;
      !markup ?  true ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Missing markup.') : _prodInvariant('57') : void 0;
      !(oldChild.nodeName !== 'HTML') ?  true ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot replace markup of the <html> node. This is because browser quirks make this unreliable and/or slow. If you want to render to the root you must use server rendering. See ReactDOMServer.renderToString().') : _prodInvariant('58') : void 0;

      if (typeof markup === 'string') {
        var newChild = createNodesFromMarkup(markup, emptyFunction)[0];
        oldChild.parentNode.replaceChild(newChild, oldChild);
      } else {
        DOMLazyTree.replaceChildWithTree(oldChild, markup);
      }
    }

  };

  module.exports = Danger;

/***/ },
/* 471 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  /**
   * Copyright (c) 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   * @typechecks
   */

  /*eslint-disable fb-www/unsafe-html*/

  var ExecutionEnvironment = __webpack_require__(431);

  var createArrayFromMixed = __webpack_require__(472);
  var getMarkupWrap = __webpack_require__(473);
  var invariant = __webpack_require__(391);

  /**
   * Dummy container used to render all markup.
   */
  var dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;

  /**
   * Pattern used by `getNodeName`.
   */
  var nodeNamePattern = /^\s*<(\w+)/;

  /**
   * Extracts the `nodeName` of the first element in a string of markup.
   *
   * @param {string} markup String of markup.
   * @return {?string} Node name of the supplied markup.
   */
  function getNodeName(markup) {
    var nodeNameMatch = markup.match(nodeNamePattern);
    return nodeNameMatch && nodeNameMatch[1].toLowerCase();
  }

  /**
   * Creates an array containing the nodes rendered from the supplied markup. The
   * optionally supplied `handleScript` function will be invoked once for each
   * <script> element that is rendered. If no `handleScript` function is supplied,
   * an exception is thrown if any <script> elements are rendered.
   *
   * @param {string} markup A string of valid HTML markup.
   * @param {?function} handleScript Invoked once for each rendered <script>.
   * @return {array<DOMElement|DOMTextNode>} An array of rendered nodes.
   */
  function createNodesFromMarkup(markup, handleScript) {
    var node = dummyNode;
    !!!dummyNode ?  true ? invariant(false, 'createNodesFromMarkup dummy not initialized') : invariant(false) : void 0;
    var nodeName = getNodeName(markup);

    var wrap = nodeName && getMarkupWrap(nodeName);
    if (wrap) {
      node.innerHTML = wrap[1] + markup + wrap[2];

      var wrapDepth = wrap[0];
      while (wrapDepth--) {
        node = node.lastChild;
      }
    } else {
      node.innerHTML = markup;
    }

    var scripts = node.getElementsByTagName('script');
    if (scripts.length) {
      !handleScript ?  true ? invariant(false, 'createNodesFromMarkup(...): Unexpected <script> element rendered.') : invariant(false) : void 0;
      createArrayFromMixed(scripts).forEach(handleScript);
    }

    var nodes = Array.from(node.childNodes);
    while (node.lastChild) {
      node.removeChild(node.lastChild);
    }
    return nodes;
  }

  module.exports = createNodesFromMarkup;

/***/ },
/* 472 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  /**
   * Copyright (c) 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   * @typechecks
   */

  var invariant = __webpack_require__(391);

  /**
   * Convert array-like objects to arrays.
   *
   * This API assumes the caller knows the contents of the data type. For less
   * well defined inputs use createArrayFromMixed.
   *
   * @param {object|function|filelist} obj
   * @return {array}
   */
  function toArray(obj) {
    var length = obj.length;

    // Some browsers builtin objects can report typeof 'function' (e.g. NodeList
    // in old versions of Safari).
    !(!Array.isArray(obj) && (typeof obj === 'object' || typeof obj === 'function')) ?  true ? invariant(false, 'toArray: Array-like object expected') : invariant(false) : void 0;

    !(typeof length === 'number') ?  true ? invariant(false, 'toArray: Object needs a length property') : invariant(false) : void 0;

    !(length === 0 || length - 1 in obj) ?  true ? invariant(false, 'toArray: Object should have keys for indices') : invariant(false) : void 0;

    !(typeof obj.callee !== 'function') ?  true ? invariant(false, 'toArray: Object can\'t be `arguments`. Use rest params ' + '(function(...args) {}) or Array.from() instead.') : invariant(false) : void 0;

    // Old IE doesn't give collections access to hasOwnProperty. Assume inputs
    // without method will throw during the slice call and skip straight to the
    // fallback.
    if (obj.hasOwnProperty) {
      try {
        return Array.prototype.slice.call(obj);
      } catch (e) {
        // IE < 9 does not support Array#slice on collections objects
      }
    }

    // Fall back to copying key by key. This assumes all keys have a value,
    // so will not preserve sparsely populated inputs.
    var ret = Array(length);
    for (var ii = 0; ii < length; ii++) {
      ret[ii] = obj[ii];
    }
    return ret;
  }

  /**
   * Perform a heuristic test to determine if an object is "array-like".
   *
   *   A monk asked Joshu, a Zen master, "Has a dog Buddha nature?"
   *   Joshu replied: "Mu."
   *
   * This function determines if its argument has "array nature": it returns
   * true if the argument is an actual array, an `arguments' object, or an
   * HTMLCollection (e.g. node.childNodes or node.getElementsByTagName()).
   *
   * It will return false for other array-like objects like Filelist.
   *
   * @param {*} obj
   * @return {boolean}
   */
  function hasArrayNature(obj) {
    return (
      // not null/false
      !!obj && (
      // arrays are objects, NodeLists are functions in Safari
      typeof obj == 'object' || typeof obj == 'function') &&
      // quacks like an array
      'length' in obj &&
      // not window
      !('setInterval' in obj) &&
      // no DOM node should be considered an array-like
      // a 'select' element has 'length' and 'item' properties on IE8
      typeof obj.nodeType != 'number' && (
      // a real array
      Array.isArray(obj) ||
      // arguments
      'callee' in obj ||
      // HTMLCollection/NodeList
      'item' in obj)
    );
  }

  /**
   * Ensure that the argument is an array by wrapping it in an array if it is not.
   * Creates a copy of the argument if it is already an array.
   *
   * This is mostly useful idiomatically:
   *
   *   var createArrayFromMixed = require('createArrayFromMixed');
   *
   *   function takesOneOrMoreThings(things) {
   *     things = createArrayFromMixed(things);
   *     ...
   *   }
   *
   * This allows you to treat `things' as an array, but accept scalars in the API.
   *
   * If you need to convert an array-like object, like `arguments`, into an array
   * use toArray instead.
   *
   * @param {*} obj
   * @return {array}
   */
  function createArrayFromMixed(obj) {
    if (!hasArrayNature(obj)) {
      return [obj];
    } else if (Array.isArray(obj)) {
      return obj.slice();
    } else {
      return toArray(obj);
    }
  }

  module.exports = createArrayFromMixed;

/***/ },
/* 473 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  /**
   * Copyright (c) 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  /*eslint-disable fb-www/unsafe-html */

  var ExecutionEnvironment = __webpack_require__(431);

  var invariant = __webpack_require__(391);

  /**
   * Dummy container used to detect which wraps are necessary.
   */
  var dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;

  /**
   * Some browsers cannot use `innerHTML` to render certain elements standalone,
   * so we wrap them, render the wrapped nodes, then extract the desired node.
   *
   * In IE8, certain elements cannot render alone, so wrap all elements ('*').
   */

  var shouldWrap = {};

  var selectWrap = [1, '<select multiple="true">', '</select>'];
  var tableWrap = [1, '<table>', '</table>'];
  var trWrap = [3, '<table><tbody><tr>', '</tr></tbody></table>'];

  var svgWrap = [1, '<svg xmlns="http://www.w3.org/2000/svg">', '</svg>'];

  var markupWrap = {
    '*': [1, '?<div>', '</div>'],

    'area': [1, '<map>', '</map>'],
    'col': [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>'],
    'legend': [1, '<fieldset>', '</fieldset>'],
    'param': [1, '<object>', '</object>'],
    'tr': [2, '<table><tbody>', '</tbody></table>'],

    'optgroup': selectWrap,
    'option': selectWrap,

    'caption': tableWrap,
    'colgroup': tableWrap,
    'tbody': tableWrap,
    'tfoot': tableWrap,
    'thead': tableWrap,

    'td': trWrap,
    'th': trWrap
  };

  // Initialize the SVG elements since we know they'll always need to be wrapped
  // consistently. If they are created inside a <div> they will be initialized in
  // the wrong namespace (and will not display).
  var svgElements = ['circle', 'clipPath', 'defs', 'ellipse', 'g', 'image', 'line', 'linearGradient', 'mask', 'path', 'pattern', 'polygon', 'polyline', 'radialGradient', 'rect', 'stop', 'text', 'tspan'];
  svgElements.forEach(function (nodeName) {
    markupWrap[nodeName] = svgWrap;
    shouldWrap[nodeName] = true;
  });

  /**
   * Gets the markup wrap configuration for the supplied `nodeName`.
   *
   * NOTE: This lazily detects which wraps are necessary for the current browser.
   *
   * @param {string} nodeName Lowercase `nodeName`.
   * @return {?array} Markup wrap configuration, if applicable.
   */
  function getMarkupWrap(nodeName) {
    !!!dummyNode ?  true ? invariant(false, 'Markup wrapping node not initialized') : invariant(false) : void 0;
    if (!markupWrap.hasOwnProperty(nodeName)) {
      nodeName = '*';
    }
    if (!shouldWrap.hasOwnProperty(nodeName)) {
      if (nodeName === '*') {
        dummyNode.innerHTML = '<link />';
      } else {
        dummyNode.innerHTML = '<' + nodeName + '></' + nodeName + '>';
      }
      shouldWrap[nodeName] = !dummyNode.firstChild;
    }
    return shouldWrap[nodeName] ? markupWrap[nodeName] : null;
  }

  module.exports = getMarkupWrap;

/***/ },
/* 474 */
/***/ function(module, exports, __webpack_require__) {

  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  var DOMChildrenOperations = __webpack_require__(463);
  var ReactDOMComponentTree = __webpack_require__(417);

  /**
   * Operations used to process updates to DOM nodes.
   */
  var ReactDOMIDOperations = {

    /**
     * Updates a component's children by processing a series of updates.
     *
     * @param {array<object>} updates List of update configurations.
     * @internal
     */
    dangerouslyProcessChildrenUpdates: function (parentInst, updates) {
      var node = ReactDOMComponentTree.getNodeFromInstance(parentInst);
      DOMChildrenOperations.processUpdates(node, updates);
    }
  };

  module.exports = ReactDOMIDOperations;

/***/ },
/* 475 */
/***/ function(module, exports, __webpack_require__) {

  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  /* global hasOwnProperty:true */

  'use strict';

  var _prodInvariant = __webpack_require__(418),
      _assign = __webpack_require__(387);

  var AutoFocusUtils = __webpack_require__(476);
  var CSSPropertyOperations = __webpack_require__(478);
  var DOMLazyTree = __webpack_require__(464);
  var DOMNamespaces = __webpack_require__(465);
  var DOMProperty = __webpack_require__(419);
  var DOMPropertyOperations = __webpack_require__(486);
  var EventPluginHub = __webpack_require__(425);
  var EventPluginRegistry = __webpack_require__(426);
  var ReactBrowserEventEmitter = __webpack_require__(488);
  var ReactDOMComponentFlags = __webpack_require__(420);
  var ReactDOMComponentTree = __webpack_require__(417);
  var ReactDOMInput = __webpack_require__(491);
  var ReactDOMOption = __webpack_require__(494);
  var ReactDOMSelect = __webpack_require__(495);
  var ReactDOMTextarea = __webpack_require__(496);
  var ReactInstrumentation = __webpack_require__(445);
  var ReactMultiChild = __webpack_require__(497);
  var ReactServerRenderingTransaction = __webpack_require__(516);

  var emptyFunction = __webpack_require__(395);
  var escapeTextContentForBrowser = __webpack_require__(469);
  var invariant = __webpack_require__(391);
  var isEventSupported = __webpack_require__(453);
  var shallowEqual = __webpack_require__(506);
  var validateDOMNesting = __webpack_require__(519);
  var warning = __webpack_require__(394);

  var Flags = ReactDOMComponentFlags;
  var deleteListener = EventPluginHub.deleteListener;
  var getNode = ReactDOMComponentTree.getNodeFromInstance;
  var listenTo = ReactBrowserEventEmitter.listenTo;
  var registrationNameModules = EventPluginRegistry.registrationNameModules;

  // For quickly matching children type, to test if can be treated as content.
  var CONTENT_TYPES = { 'string': true, 'number': true };

  var STYLE = 'style';
  var HTML = '__html';
  var RESERVED_PROPS = {
    children: null,
    dangerouslySetInnerHTML: null,
    suppressContentEditableWarning: null
  };

  // Node type for document fragments (Node.DOCUMENT_FRAGMENT_NODE).
  var DOC_FRAGMENT_TYPE = 11;

  function getDeclarationErrorAddendum(internalInstance) {
    if (internalInstance) {
      var owner = internalInstance._currentElement._owner || null;
      if (owner) {
        var name = owner.getName();
        if (name) {
          return ' This DOM node was rendered by `' + name + '`.';
        }
      }
    }
    return '';
  }

  function friendlyStringify(obj) {
    if (typeof obj === 'object') {
      if (Array.isArray(obj)) {
        return '[' + obj.map(friendlyStringify).join(', ') + ']';
      } else {
        var pairs = [];
        for (var key in obj) {
          if (Object.prototype.hasOwnProperty.call(obj, key)) {
            var keyEscaped = /^[a-z$_][\w$_]*$/i.test(key) ? key : JSON.stringify(key);
            pairs.push(keyEscaped + ': ' + friendlyStringify(obj[key]));
          }
        }
        return '{' + pairs.join(', ') + '}';
      }
    } else if (typeof obj === 'string') {
      return JSON.stringify(obj);
    } else if (typeof obj === 'function') {
      return '[function object]';
    }
    // Differs from JSON.stringify in that undefined because undefined and that
    // inf and nan don't become null
    return String(obj);
  }

  var styleMutationWarning = {};

  function checkAndWarnForMutatedStyle(style1, style2, component) {
    if (style1 == null || style2 == null) {
      return;
    }
    if (shallowEqual(style1, style2)) {
      return;
    }

    var componentName = component._tag;
    var owner = component._currentElement._owner;
    var ownerName;
    if (owner) {
      ownerName = owner.getName();
    }

    var hash = ownerName + '|' + componentName;

    if (styleMutationWarning.hasOwnProperty(hash)) {
      return;
    }

    styleMutationWarning[hash] = true;

     true ? warning(false, '`%s` was passed a style object that has previously been mutated. ' + 'Mutating `style` is deprecated. Consider cloning it beforehand. Check ' + 'the `render` %s. Previous style: %s. Mutated style: %s.', componentName, owner ? 'of `' + ownerName + '`' : 'using <' + componentName + '>', friendlyStringify(style1), friendlyStringify(style2)) : void 0;
  }

  /**
   * @param {object} component
   * @param {?object} props
   */
  function assertValidProps(component, props) {
    if (!props) {
      return;
    }
    // Note the use of `==` which checks for null or undefined.
    if (voidElementTags[component._tag]) {
      !(props.children == null && props.dangerouslySetInnerHTML == null) ?  true ? invariant(false, '%s is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.%s', component._tag, component._currentElement._owner ? ' Check the render method of ' + component._currentElement._owner.getName() + '.' : '') : _prodInvariant('137', component._tag, component._currentElement._owner ? ' Check the render method of ' + component._currentElement._owner.getName() + '.' : '') : void 0;
    }
    if (props.dangerouslySetInnerHTML != null) {
      !(props.children == null) ?  true ? invariant(false, 'Can only set one of `children` or `props.dangerouslySetInnerHTML`.') : _prodInvariant('60') : void 0;
      !(typeof props.dangerouslySetInnerHTML === 'object' && HTML in props.dangerouslySetInnerHTML) ?  true ? invariant(false, '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://fb.me/react-invariant-dangerously-set-inner-html for more information.') : _prodInvariant('61') : void 0;
    }
    if (true) {
       true ? warning(props.innerHTML == null, 'Directly setting property `innerHTML` is not permitted. ' + 'For more information, lookup documentation on `dangerouslySetInnerHTML`.') : void 0;
       true ? warning(props.suppressContentEditableWarning || !props.contentEditable || props.children == null, 'A component is `contentEditable` and contains `children` managed by ' + 'React. It is now your responsibility to guarantee that none of ' + 'those nodes are unexpectedly modified or duplicated. This is ' + 'probably not intentional.') : void 0;
       true ? warning(props.onFocusIn == null && props.onFocusOut == null, 'React uses onFocus and onBlur instead of onFocusIn and onFocusOut. ' + 'All React events are normalized to bubble, so onFocusIn and onFocusOut ' + 'are not needed/supported by React.') : void 0;
    }
    !(props.style == null || typeof props.style === 'object') ?  true ? invariant(false, 'The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + \'em\'}} when using JSX.%s', getDeclarationErrorAddendum(component)) : _prodInvariant('62', getDeclarationErrorAddendum(component)) : void 0;
  }

  function enqueuePutListener(inst, registrationName, listener, transaction) {
    if (transaction instanceof ReactServerRenderingTransaction) {
      return;
    }
    if (true) {
      // IE8 has no API for event capturing and the `onScroll` event doesn't
      // bubble.
       true ? warning(registrationName !== 'onScroll' || isEventSupported('scroll', true), 'This browser doesn\'t support the `onScroll` event') : void 0;
    }
    var containerInfo = inst._hostContainerInfo;
    var isDocumentFragment = containerInfo._node && containerInfo._node.nodeType === DOC_FRAGMENT_TYPE;
    var doc = isDocumentFragment ? containerInfo._node : containerInfo._ownerDocument;
    listenTo(registrationName, doc);
    transaction.getReactMountReady().enqueue(putListener, {
      inst: inst,
      registrationName: registrationName,
      listener: listener
    });
  }

  function putListener() {
    var listenerToPut = this;
    EventPluginHub.putListener(listenerToPut.inst, listenerToPut.registrationName, listenerToPut.listener);
  }

  function inputPostMount() {
    var inst = this;
    ReactDOMInput.postMountWrapper(inst);
  }

  function textareaPostMount() {
    var inst = this;
    ReactDOMTextarea.postMountWrapper(inst);
  }

  function optionPostMount() {
    var inst = this;
    ReactDOMOption.postMountWrapper(inst);
  }

  var setAndValidateContentChildDev = emptyFunction;
  if (true) {
    setAndValidateContentChildDev = function (content) {
      var hasExistingContent = this._contentDebugID != null;
      var debugID = this._debugID;
      // This ID represents the inlined child that has no backing instance:
      var contentDebugID = -debugID;

      if (content == null) {
        if (hasExistingContent) {
          ReactInstrumentation.debugTool.onUnmountComponent(this._contentDebugID);
        }
        this._contentDebugID = null;
        return;
      }

      validateDOMNesting(null, String(content), this, this._ancestorInfo);
      this._contentDebugID = contentDebugID;
      if (hasExistingContent) {
        ReactInstrumentation.debugTool.onBeforeUpdateComponent(contentDebugID, content);
        ReactInstrumentation.debugTool.onUpdateComponent(contentDebugID);
      } else {
        ReactInstrumentation.debugTool.onBeforeMountComponent(contentDebugID, content, debugID);
        ReactInstrumentation.debugTool.onMountComponent(contentDebugID);
        ReactInstrumentation.debugTool.onSetChildren(debugID, [contentDebugID]);
      }
    };
  }

  // There are so many media events, it makes sense to just
  // maintain a list rather than create a `trapBubbledEvent` for each
  var mediaEvents = {
    topAbort: 'abort',
    topCanPlay: 'canplay',
    topCanPlayThrough: 'canplaythrough',
    topDurationChange: 'durationchange',
    topEmptied: 'emptied',
    topEncrypted: 'encrypted',
    topEnded: 'ended',
    topError: 'error',
    topLoadedData: 'loadeddata',
    topLoadedMetadata: 'loadedmetadata',
    topLoadStart: 'loadstart',
    topPause: 'pause',
    topPlay: 'play',
    topPlaying: 'playing',
    topProgress: 'progress',
    topRateChange: 'ratechange',
    topSeeked: 'seeked',
    topSeeking: 'seeking',
    topStalled: 'stalled',
    topSuspend: 'suspend',
    topTimeUpdate: 'timeupdate',
    topVolumeChange: 'volumechange',
    topWaiting: 'waiting'
  };

  function trapBubbledEventsLocal() {
    var inst = this;
    // If a component renders to null or if another component fatals and causes
    // the state of the tree to be corrupted, `node` here can be null.
    !inst._rootNodeID ?  true ? invariant(false, 'Must be mounted to trap events') : _prodInvariant('63') : void 0;
    var node = getNode(inst);
    !node ?  true ? invariant(false, 'trapBubbledEvent(...): Requires node to be rendered.') : _prodInvariant('64') : void 0;

    switch (inst._tag) {
      case 'iframe':
      case 'object':
        inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topLoad', 'load', node)];
        break;
      case 'video':
      case 'audio':

        inst._wrapperState.listeners = [];
        // Create listener for each media event
        for (var event in mediaEvents) {
          if (mediaEvents.hasOwnProperty(event)) {
            inst._wrapperState.listeners.push(ReactBrowserEventEmitter.trapBubbledEvent(event, mediaEvents[event], node));
          }
        }
        break;
      case 'source':
        inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topError', 'error', node)];
        break;
      case 'img':
        inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topError', 'error', node), ReactBrowserEventEmitter.trapBubbledEvent('topLoad', 'load', node)];
        break;
      case 'form':
        inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topReset', 'reset', node), ReactBrowserEventEmitter.trapBubbledEvent('topSubmit', 'submit', node)];
        break;
      case 'input':
      case 'select':
      case 'textarea':
        inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topInvalid', 'invalid', node)];
        break;
    }
  }

  function postUpdateSelectWrapper() {
    ReactDOMSelect.postUpdateWrapper(this);
  }

  // For HTML, certain tags should omit their close tag. We keep a whitelist for
  // those special-case tags.

  var omittedCloseTags = {
    'area': true,
    'base': true,
    'br': true,
    'col': true,
    'embed': true,
    'hr': true,
    'img': true,
    'input': true,
    'keygen': true,
    'link': true,
    'meta': true,
    'param': true,
    'source': true,
    'track': true,
    'wbr': true
  };

  var newlineEatingTags = {
    'listing': true,
    'pre': true,
    'textarea': true
  };

  // For HTML, certain tags cannot have children. This has the same purpose as
  // `omittedCloseTags` except that `menuitem` should still have its closing tag.

  var voidElementTags = _assign({
    'menuitem': true
  }, omittedCloseTags);

  // We accept any tag to be rendered but since this gets injected into arbitrary
  // HTML, we want to make sure that it's a safe tag.
  // http://www.w3.org/TR/REC-xml/#NT-Name

  var VALID_TAG_REGEX = /^[a-zA-Z][a-zA-Z:_\.\-\d]*$/; // Simplified subset
  var validatedTagCache = {};
  var hasOwnProperty = {}.hasOwnProperty;

  function validateDangerousTag(tag) {
    if (!hasOwnProperty.call(validatedTagCache, tag)) {
      !VALID_TAG_REGEX.test(tag) ?  true ? invariant(false, 'Invalid tag: %s', tag) : _prodInvariant('65', tag) : void 0;
      validatedTagCache[tag] = true;
    }
  }

  function isCustomComponent(tagName, props) {
    return tagName.indexOf('-') >= 0 || props.is != null;
  }

  var globalIdCounter = 1;

  /**
   * Creates a new React class that is idempotent and capable of containing other
   * React components. It accepts event listeners and DOM properties that are
   * valid according to `DOMProperty`.
   *
   *  - Event listeners: `onClick`, `onMouseDown`, etc.
   *  - DOM properties: `className`, `name`, `title`, etc.
   *
   * The `style` property functions differently from the DOM API. It accepts an
   * object mapping of style properties to values.
   *
   * @constructor ReactDOMComponent
   * @extends ReactMultiChild
   */
  function ReactDOMComponent(element) {
    var tag = element.type;
    validateDangerousTag(tag);
    this._currentElement = element;
    this._tag = tag.toLowerCase();
    this._namespaceURI = null;
    this._renderedChildren = null;
    this._previousStyle = null;
    this._previousStyleCopy = null;
    this._hostNode = null;
    this._hostParent = null;
    this._rootNodeID = 0;
    this._domID = 0;
    this._hostContainerInfo = null;
    this._wrapperState = null;
    this._topLevelWrapper = null;
    this._flags = 0;
    if (true) {
      this._ancestorInfo = null;
      setAndValidateContentChildDev.call(this, null);
    }
  }

  ReactDOMComponent.displayName = 'ReactDOMComponent';

  ReactDOMComponent.Mixin = {

    /**
     * Generates root tag markup then recurses. This method has side effects and
     * is not idempotent.
     *
     * @internal
     * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
     * @param {?ReactDOMComponent} the parent component instance
     * @param {?object} info about the host container
     * @param {object} context
     * @return {string} The computed markup.
     */
    mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
      this._rootNodeID = globalIdCounter++;
      this._domID = hostContainerInfo._idCounter++;
      this._hostParent = hostParent;
      this._hostContainerInfo = hostContainerInfo;

      var props = this._currentElement.props;

      switch (this._tag) {
        case 'audio':
        case 'form':
        case 'iframe':
        case 'img':
        case 'link':
        case 'object':
        case 'source':
        case 'video':
          this._wrapperState = {
            listeners: null
          };
          transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
          break;
        case 'input':
          ReactDOMInput.mountWrapper(this, props, hostParent);
          props = ReactDOMInput.getHostProps(this, props);
          transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
          break;
        case 'option':
          ReactDOMOption.mountWrapper(this, props, hostParent);
          props = ReactDOMOption.getHostProps(this, props);
          break;
        case 'select':
          ReactDOMSelect.mountWrapper(this, props, hostParent);
          props = ReactDOMSelect.getHostProps(this, props);
          transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
          break;
        case 'textarea':
          ReactDOMTextarea.mountWrapper(this, props, hostParent);
          props = ReactDOMTextarea.getHostProps(this, props);
          transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
          break;
      }

      assertValidProps(this, props);

      // We create tags in the namespace of their parent container, except HTML
      // tags get no namespace.
      var namespaceURI;
      var parentTag;
      if (hostParent != null) {
        namespaceURI = hostParent._namespaceURI;
        parentTag = hostParent._tag;
      } else if (hostContainerInfo._tag) {
        namespaceURI = hostContainerInfo._namespaceURI;
        parentTag = hostContainerInfo._tag;
      }
      if (namespaceURI == null || namespaceURI === DOMNamespaces.svg && parentTag === 'foreignobject') {
        namespaceURI = DOMNamespaces.html;
      }
      if (namespaceURI === DOMNamespaces.html) {
        if (this._tag === 'svg') {
          namespaceURI = DOMNamespaces.svg;
        } else if (this._tag === 'math') {
          namespaceURI = DOMNamespaces.mathml;
        }
      }
      this._namespaceURI = namespaceURI;

      if (true) {
        var parentInfo;
        if (hostParent != null) {
          parentInfo = hostParent._ancestorInfo;
        } else if (hostContainerInfo._tag) {
          parentInfo = hostContainerInfo._ancestorInfo;
        }
        if (parentInfo) {
          // parentInfo should always be present except for the top-level
          // component when server rendering
          validateDOMNesting(this._tag, null, this, parentInfo);
        }
        this._ancestorInfo = validateDOMNesting.updatedAncestorInfo(parentInfo, this._tag, this);
      }

      var mountImage;
      if (transaction.useCreateElement) {
        var ownerDocument = hostContainerInfo._ownerDocument;
        var el;
        if (namespaceURI === DOMNamespaces.html) {
          if (this._tag === 'script') {
            // Create the script via .innerHTML so its "parser-inserted" flag is
            // set to true and it does not execute
            var div = ownerDocument.createElement('div');
            var type = this._currentElement.type;
            div.innerHTML = '<' + type + '></' + type + '>';
            el = div.removeChild(div.firstChild);
          } else if (props.is) {
            el = ownerDocument.createElement(this._currentElement.type, props.is);
          } else {
            // Separate else branch instead of using `props.is || undefined` above becuase of a Firefox bug.
            // See discussion in https://github.com/facebook/react/pull/6896
            // and discussion in https://bugzilla.mozilla.org/show_bug.cgi?id=1276240
            el = ownerDocument.createElement(this._currentElement.type);
          }
        } else {
          el = ownerDocument.createElementNS(namespaceURI, this._currentElement.type);
        }
        ReactDOMComponentTree.precacheNode(this, el);
        this._flags |= Flags.hasCachedChildNodes;
        if (!this._hostParent) {
          DOMPropertyOperations.setAttributeForRoot(el);
        }
        this._updateDOMProperties(null, props, transaction);
        var lazyTree = DOMLazyTree(el);
        this._createInitialChildren(transaction, props, context, lazyTree);
        mountImage = lazyTree;
      } else {
        var tagOpen = this._createOpenTagMarkupAndPutListeners(transaction, props);
        var tagContent = this._createContentMarkup(transaction, props, context);
        if (!tagContent && omittedCloseTags[this._tag]) {
          mountImage = tagOpen + '/>';
        } else {
          mountImage = tagOpen + '>' + tagContent + '</' + this._currentElement.type + '>';
        }
      }

      switch (this._tag) {
        case 'input':
          transaction.getReactMountReady().enqueue(inputPostMount, this);
          if (props.autoFocus) {
            transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
          }
          break;
        case 'textarea':
          transaction.getReactMountReady().enqueue(textareaPostMount, this);
          if (props.autoFocus) {
            transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
          }
          break;
        case 'select':
          if (props.autoFocus) {
            transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
          }
          break;
        case 'button':
          if (props.autoFocus) {
            transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
          }
          break;
        case 'option':
          transaction.getReactMountReady().enqueue(optionPostMount, this);
          break;
      }

      return mountImage;
    },

    /**
     * Creates markup for the open tag and all attributes.
     *
     * This method has side effects because events get registered.
     *
     * Iterating over object properties is faster than iterating over arrays.
     * @see http://jsperf.com/obj-vs-arr-iteration
     *
     * @private
     * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
     * @param {object} props
     * @return {string} Markup of opening tag.
     */
    _createOpenTagMarkupAndPutListeners: function (transaction, props) {
      var ret = '<' + this._currentElement.type;

      for (var propKey in props) {
        if (!props.hasOwnProperty(propKey)) {
          continue;
        }
        var propValue = props[propKey];
        if (propValue == null) {
          continue;
        }
        if (registrationNameModules.hasOwnProperty(propKey)) {
          if (propValue) {
            enqueuePutListener(this, propKey, propValue, transaction);
          }
        } else {
          if (propKey === STYLE) {
            if (propValue) {
              if (true) {
                // See `_updateDOMProperties`. style block
                this._previousStyle = propValue;
              }
              propValue = this._previousStyleCopy = _assign({}, props.style);
            }
            propValue = CSSPropertyOperations.createMarkupForStyles(propValue, this);
          }
          var markup = null;
          if (this._tag != null && isCustomComponent(this._tag, props)) {
            if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
              markup = DOMPropertyOperations.createMarkupForCustomAttribute(propKey, propValue);
            }
          } else {
            markup = DOMPropertyOperations.createMarkupForProperty(propKey, propValue);
          }
          if (markup) {
            ret += ' ' + markup;
          }
        }
      }

      // For static pages, no need to put React ID and checksum. Saves lots of
      // bytes.
      if (transaction.renderToStaticMarkup) {
        return ret;
      }

      if (!this._hostParent) {
        ret += ' ' + DOMPropertyOperations.createMarkupForRoot();
      }
      ret += ' ' + DOMPropertyOperations.createMarkupForID(this._domID);
      return ret;
    },

    /**
     * Creates markup for the content between the tags.
     *
     * @private
     * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
     * @param {object} props
     * @param {object} context
     * @return {string} Content markup.
     */
    _createContentMarkup: function (transaction, props, context) {
      var ret = '';

      // Intentional use of != to avoid catching zero/false.
      var innerHTML = props.dangerouslySetInnerHTML;
      if (innerHTML != null) {
        if (innerHTML.__html != null) {
          ret = innerHTML.__html;
        }
      } else {
        var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null;
        var childrenToUse = contentToUse != null ? null : props.children;
        if (contentToUse != null) {
          // TODO: Validate that text is allowed as a child of this node
          ret = escapeTextContentForBrowser(contentToUse);
          if (true) {
            setAndValidateContentChildDev.call(this, contentToUse);
          }
        } else if (childrenToUse != null) {
          var mountImages = this.mountChildren(childrenToUse, transaction, context);
          ret = mountImages.join('');
        }
      }
      if (newlineEatingTags[this._tag] && ret.charAt(0) === '\n') {
        // text/html ignores the first character in these tags if it's a newline
        // Prefer to break application/xml over text/html (for now) by adding
        // a newline specifically to get eaten by the parser. (Alternately for
        // textareas, replacing "^\n" with "\r\n" doesn't get eaten, and the first
        // \r is normalized out by HTMLTextAreaElement#value.)
        // See: <http://www.w3.org/TR/html-polyglot/#newlines-in-textarea-and-pre>
        // See: <http://www.w3.org/TR/html5/syntax.html#element-restrictions>
        // See: <http://www.w3.org/TR/html5/syntax.html#newlines>
        // See: Parsing of "textarea" "listing" and "pre" elements
        //  from <http://www.w3.org/TR/html5/syntax.html#parsing-main-inbody>
        return '\n' + ret;
      } else {
        return ret;
      }
    },

    _createInitialChildren: function (transaction, props, context, lazyTree) {
      // Intentional use of != to avoid catching zero/false.
      var innerHTML = props.dangerouslySetInnerHTML;
      if (innerHTML != null) {
        if (innerHTML.__html != null) {
          DOMLazyTree.queueHTML(lazyTree, innerHTML.__html);
        }
      } else {
        var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null;
        var childrenToUse = contentToUse != null ? null : props.children;
        if (contentToUse != null) {
          // TODO: Validate that text is allowed as a child of this node
          if (true) {
            setAndValidateContentChildDev.call(this, contentToUse);
          }
          DOMLazyTree.queueText(lazyTree, contentToUse);
        } else if (childrenToUse != null) {
          var mountImages = this.mountChildren(childrenToUse, transaction, context);
          for (var i = 0; i < mountImages.length; i++) {
            DOMLazyTree.queueChild(lazyTree, mountImages[i]);
          }
        }
      }
    },

    /**
     * Receives a next element and updates the component.
     *
     * @internal
     * @param {ReactElement} nextElement
     * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
     * @param {object} context
     */
    receiveComponent: function (nextElement, transaction, context) {
      var prevElement = this._currentElement;
      this._currentElement = nextElement;
      this.updateComponent(transaction, prevElement, nextElement, context);
    },

    /**
     * Updates a DOM component after it has already been allocated and
     * attached to the DOM. Reconciles the root DOM node, then recurses.
     *
     * @param {ReactReconcileTransaction} transaction
     * @param {ReactElement} prevElement
     * @param {ReactElement} nextElement
     * @internal
     * @overridable
     */
    updateComponent: function (transaction, prevElement, nextElement, context) {
      var lastProps = prevElement.props;
      var nextProps = this._currentElement.props;

      switch (this._tag) {
        case 'input':
          lastProps = ReactDOMInput.getHostProps(this, lastProps);
          nextProps = ReactDOMInput.getHostProps(this, nextProps);
          break;
        case 'option':
          lastProps = ReactDOMOption.getHostProps(this, lastProps);
          nextProps = ReactDOMOption.getHostProps(this, nextProps);
          break;
        case 'select':
          lastProps = ReactDOMSelect.getHostProps(this, lastProps);
          nextProps = ReactDOMSelect.getHostProps(this, nextProps);
          break;
        case 'textarea':
          lastProps = ReactDOMTextarea.getHostProps(this, lastProps);
          nextProps = ReactDOMTextarea.getHostProps(this, nextProps);
          break;
      }

      assertValidProps(this, nextProps);
      this._updateDOMProperties(lastProps, nextProps, transaction);
      this._updateDOMChildren(lastProps, nextProps, transaction, context);

      switch (this._tag) {
        case 'input':
          // Update the wrapper around inputs *after* updating props. This has to
          // happen after `_updateDOMProperties`. Otherwise HTML5 input validations
          // raise warnings and prevent the new value from being assigned.
          ReactDOMInput.updateWrapper(this);
          break;
        case 'textarea':
          ReactDOMTextarea.updateWrapper(this);
          break;
        case 'select':
          // <select> value update needs to occur after <option> children
          // reconciliation
          transaction.getReactMountReady().enqueue(postUpdateSelectWrapper, this);
          break;
      }
    },

    /**
     * Reconciles the properties by detecting differences in property values and
     * updating the DOM as necessary. This function is probably the single most
     * critical path for performance optimization.
     *
     * TODO: Benchmark whether checking for changed values in memory actually
     *       improves performance (especially statically positioned elements).
     * TODO: Benchmark the effects of putting this at the top since 99% of props
     *       do not change for a given reconciliation.
     * TODO: Benchmark areas that can be improved with caching.
     *
     * @private
     * @param {object} lastProps
     * @param {object} nextProps
     * @param {?DOMElement} node
     */
    _updateDOMProperties: function (lastProps, nextProps, transaction) {
      var propKey;
      var styleName;
      var styleUpdates;
      for (propKey in lastProps) {
        if (nextProps.hasOwnProperty(propKey) || !lastProps.hasOwnProperty(propKey) || lastProps[propKey] == null) {
          continue;
        }
        if (propKey === STYLE) {
          var lastStyle = this._previousStyleCopy;
          for (styleName in lastStyle) {
            if (lastStyle.hasOwnProperty(styleName)) {
              styleUpdates = styleUpdates || {};
              styleUpdates[styleName] = '';
            }
          }
          this._previousStyleCopy = null;
        } else if (registrationNameModules.hasOwnProperty(propKey)) {
          if (lastProps[propKey]) {
            // Only call deleteListener if there was a listener previously or
            // else willDeleteListener gets called when there wasn't actually a
            // listener (e.g., onClick={null})
            deleteListener(this, propKey);
          }
        } else if (isCustomComponent(this._tag, lastProps)) {
          if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
            DOMPropertyOperations.deleteValueForAttribute(getNode(this), propKey);
          }
        } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {
          DOMPropertyOperations.deleteValueForProperty(getNode(this), propKey);
        }
      }
      for (propKey in nextProps) {
        var nextProp = nextProps[propKey];
        var lastProp = propKey === STYLE ? this._previousStyleCopy : lastProps != null ? lastProps[propKey] : undefined;
        if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp || nextProp == null && lastProp == null) {
          continue;
        }
        if (propKey === STYLE) {
          if (nextProp) {
            if (true) {
              checkAndWarnForMutatedStyle(this._previousStyleCopy, this._previousStyle, this);
              this._previousStyle = nextProp;
            }
            nextProp = this._previousStyleCopy = _assign({}, nextProp);
          } else {
            this._previousStyleCopy = null;
          }
          if (lastProp) {
            // Unset styles on `lastProp` but not on `nextProp`.
            for (styleName in lastProp) {
              if (lastProp.hasOwnProperty(styleName) && (!nextProp || !nextProp.hasOwnProperty(styleName))) {
                styleUpdates = styleUpdates || {};
                styleUpdates[styleName] = '';
              }
            }
            // Update styles that changed since `lastProp`.
            for (styleName in nextProp) {
              if (nextProp.hasOwnProperty(styleName) && lastProp[styleName] !== nextProp[styleName]) {
                styleUpdates = styleUpdates || {};
                styleUpdates[styleName] = nextProp[styleName];
              }
            }
          } else {
            // Relies on `updateStylesByID` not mutating `styleUpdates`.
            styleUpdates = nextProp;
          }
        } else if (registrationNameModules.hasOwnProperty(propKey)) {
          if (nextProp) {
            enqueuePutListener(this, propKey, nextProp, transaction);
          } else if (lastProp) {
            deleteListener(this, propKey);
          }
        } else if (isCustomComponent(this._tag, nextProps)) {
          if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
            DOMPropertyOperations.setValueForAttribute(getNode(this), propKey, nextProp);
          }
        } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {
          var node = getNode(this);
          // If we're updating to null or undefined, we should remove the property
          // from the DOM node instead of inadvertently setting to a string. This
          // brings us in line with the same behavior we have on initial render.
          if (nextProp != null) {
            DOMPropertyOperations.setValueForProperty(node, propKey, nextProp);
          } else {
            DOMPropertyOperations.deleteValueForProperty(node, propKey);
          }
        }
      }
      if (styleUpdates) {
        CSSPropertyOperations.setValueForStyles(getNode(this), styleUpdates, this);
      }
    },

    /**
     * Reconciles the children with the various properties that affect the
     * children content.
     *
     * @param {object} lastProps
     * @param {object} nextProps
     * @param {ReactReconcileTransaction} transaction
     * @param {object} context
     */
    _updateDOMChildren: function (lastProps, nextProps, transaction, context) {
      var lastContent = CONTENT_TYPES[typeof lastProps.children] ? lastProps.children : null;
      var nextContent = CONTENT_TYPES[typeof nextProps.children] ? nextProps.children : null;

      var lastHtml = lastProps.dangerouslySetInnerHTML && lastProps.dangerouslySetInnerHTML.__html;
      var nextHtml = nextProps.dangerouslySetInnerHTML && nextProps.dangerouslySetInnerHTML.__html;

      // Note the use of `!=` which checks for null or undefined.
      var lastChildren = lastContent != null ? null : lastProps.children;
      var nextChildren = nextContent != null ? null : nextProps.children;

      // If we're switching from children to content/html or vice versa, remove
      // the old content
      var lastHasContentOrHtml = lastContent != null || lastHtml != null;
      var nextHasContentOrHtml = nextContent != null || nextHtml != null;
      if (lastChildren != null && nextChildren == null) {
        this.updateChildren(null, transaction, context);
      } else if (lastHasContentOrHtml && !nextHasContentOrHtml) {
        this.updateTextContent('');
        if (true) {
          ReactInstrumentation.debugTool.onSetChildren(this._debugID, []);
        }
      }

      if (nextContent != null) {
        if (lastContent !== nextContent) {
          this.updateTextContent('' + nextContent);
          if (true) {
            setAndValidateContentChildDev.call(this, nextContent);
          }
        }
      } else if (nextHtml != null) {
        if (lastHtml !== nextHtml) {
          this.updateMarkup('' + nextHtml);
        }
        if (true) {
          ReactInstrumentation.debugTool.onSetChildren(this._debugID, []);
        }
      } else if (nextChildren != null) {
        if (true) {
          setAndValidateContentChildDev.call(this, null);
        }

        this.updateChildren(nextChildren, transaction, context);
      }
    },

    getHostNode: function () {
      return getNode(this);
    },

    /**
     * Destroys all event registrations for this instance. Does not remove from
     * the DOM. That must be done by the parent.
     *
     * @internal
     */
    unmountComponent: function (safely) {
      switch (this._tag) {
        case 'audio':
        case 'form':
        case 'iframe':
        case 'img':
        case 'link':
        case 'object':
        case 'source':
        case 'video':
          var listeners = this._wrapperState.listeners;
          if (listeners) {
            for (var i = 0; i < listeners.length; i++) {
              listeners[i].remove();
            }
          }
          break;
        case 'html':
        case 'head':
        case 'body':
          /**
           * Components like <html> <head> and <body> can't be removed or added
           * easily in a cross-browser way, however it's valuable to be able to
           * take advantage of React's reconciliation for styling and <title>
           * management. So we just document it and throw in dangerous cases.
           */
           true ?  true ? invariant(false, '<%s> tried to unmount. Because of cross-browser quirks it is impossible to unmount some top-level components (eg <html>, <head>, and <body>) reliably and efficiently. To fix this, have a single top-level component that never unmounts render these elements.', this._tag) : _prodInvariant('66', this._tag) : void 0;
          break;
      }

      this.unmountChildren(safely);
      ReactDOMComponentTree.uncacheNode(this);
      EventPluginHub.deleteAllListeners(this);
      this._rootNodeID = 0;
      this._domID = 0;
      this._wrapperState = null;

      if (true) {
        setAndValidateContentChildDev.call(this, null);
      }
    },

    getPublicInstance: function () {
      return getNode(this);
    }

  };

  _assign(ReactDOMComponent.prototype, ReactDOMComponent.Mixin, ReactMultiChild.Mixin);

  module.exports = ReactDOMComponent;

/***/ },
/* 476 */
/***/ function(module, exports, __webpack_require__) {

  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  var ReactDOMComponentTree = __webpack_require__(417);

  var focusNode = __webpack_require__(477);

  var AutoFocusUtils = {
    focusDOMComponent: function () {
      focusNode(ReactDOMComponentTree.getNodeFromInstance(this));
    }
  };

  module.exports = AutoFocusUtils;

/***/ },
/* 477 */
/***/ function(module, exports) {

  /**
   * Copyright (c) 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  /**
   * @param {DOMElement} node input/textarea to focus
   */

  function focusNode(node) {
    // IE8 can throw "Can't move focus to the control because it is invisible,
    // not enabled, or of a type that does not accept the focus." for all kinds of
    // reasons that are too expensive and fragile to test.
    try {
      node.focus();
    } catch (e) {}
  }

  module.exports = focusNode;

/***/ },
/* 478 */
/***/ function(module, exports, __webpack_require__) {

  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  var CSSProperty = __webpack_require__(479);
  var ExecutionEnvironment = __webpack_require__(431);
  var ReactInstrumentation = __webpack_require__(445);

  var camelizeStyleName = __webpack_require__(480);
  var dangerousStyleValue = __webpack_require__(482);
  var hyphenateStyleName = __webpack_require__(483);
  var memoizeStringOnly = __webpack_require__(485);
  var warning = __webpack_require__(394);

  var processStyleName = memoizeStringOnly(function (styleName) {
    return hyphenateStyleName(styleName);
  });

  var hasShorthandPropertyBug = false;
  var styleFloatAccessor = 'cssFloat';
  if (ExecutionEnvironment.canUseDOM) {
    var tempStyle = document.createElement('div').style;
    try {
      // IE8 throws "Invalid argument." if resetting shorthand style properties.
      tempStyle.font = '';
    } catch (e) {
      hasShorthandPropertyBug = true;
    }
    // IE8 only supports accessing cssFloat (standard) as styleFloat
    if (document.documentElement.style.cssFloat === undefined) {
      styleFloatAccessor = 'styleFloat';
    }
  }

  if (true) {
    // 'msTransform' is correct, but the other prefixes should be capitalized
    var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;

    // style values shouldn't contain a semicolon
    var badStyleValueWithSemicolonPattern = /;\s*$/;

    var warnedStyleNames = {};
    var warnedStyleValues = {};
    var warnedForNaNValue = false;

    var warnHyphenatedStyleName = function (name, owner) {
      if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
        return;
      }

      warnedStyleNames[name] = true;
       true ? warning(false, 'Unsupported style property %s. Did you mean %s?%s', name, camelizeStyleName(name), checkRenderMessage(owner)) : void 0;
    };

    var warnBadVendoredStyleName = function (name, owner) {
      if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
        return;
      }

      warnedStyleNames[name] = true;
       true ? warning(false, 'Unsupported vendor-prefixed style property %s. Did you mean %s?%s', name, name.charAt(0).toUpperCase() + name.slice(1), checkRenderMessage(owner)) : void 0;
    };

    var warnStyleValueWithSemicolon = function (name, value, owner) {
      if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {
        return;
      }

      warnedStyleValues[value] = true;
       true ? warning(false, 'Style property values shouldn\'t contain a semicolon.%s ' + 'Try "%s: %s" instead.', checkRenderMessage(owner), name, value.replace(badStyleValueWithSemicolonPattern, '')) : void 0;
    };

    var warnStyleValueIsNaN = function (name, value, owner) {
      if (warnedForNaNValue) {
        return;
      }

      warnedForNaNValue = true;
       true ? warning(false, '`NaN` is an invalid value for the `%s` css style property.%s', name, checkRenderMessage(owner)) : void 0;
    };

    var checkRenderMessage = function (owner) {
      if (owner) {
        var name = owner.getName();
        if (name) {
          return ' Check the render method of `' + name + '`.';
        }
      }
      return '';
    };

    /**
     * @param {string} name
     * @param {*} value
     * @param {ReactDOMComponent} component
     */
    var warnValidStyle = function (name, value, component) {
      var owner;
      if (component) {
        owner = component._currentElement._owner;
      }
      if (name.indexOf('-') > -1) {
        warnHyphenatedStyleName(name, owner);
      } else if (badVendoredStyleNamePattern.test(name)) {
        warnBadVendoredStyleName(name, owner);
      } else if (badStyleValueWithSemicolonPattern.test(value)) {
        warnStyleValueWithSemicolon(name, value, owner);
      }

      if (typeof value === 'number' && isNaN(value)) {
        warnStyleValueIsNaN(name, value, owner);
      }
    };
  }

  /**
   * Operations for dealing with CSS properties.
   */
  var CSSPropertyOperations = {

    /**
     * Serializes a mapping of style properties for use as inline styles:
     *
     *   > createMarkupForStyles({width: '200px', height: 0})
     *   "width:200px;height:0;"
     *
     * Undefined values are ignored so that declarative programming is easier.
     * The result should be HTML-escaped before insertion into the DOM.
     *
     * @param {object} styles
     * @param {ReactDOMComponent} component
     * @return {?string}
     */
    createMarkupForStyles: function (styles, component) {
      var serialized = '';
      for (var styleName in styles) {
        if (!styles.hasOwnProperty(styleName)) {
          continue;
        }
        var styleValue = styles[styleName];
        if (true) {
          warnValidStyle(styleName, styleValue, component);
        }
        if (styleValue != null) {
          serialized += processStyleName(styleName) + ':';
          serialized += dangerousStyleValue(styleName, styleValue, component) + ';';
        }
      }
      return serialized || null;
    },

    /**
     * Sets the value for multiple styles on a node.  If a value is specified as
     * '' (empty string), the corresponding style property will be unset.
     *
     * @param {DOMElement} node
     * @param {object} styles
     * @param {ReactDOMComponent} component
     */
    setValueForStyles: function (node, styles, component) {
      if (true) {
        ReactInstrumentation.debugTool.onHostOperation({
          instanceID: component._debugID,
          type: 'update styles',
          payload: styles
        });
      }

      var style = node.style;
      for (var styleName in styles) {
        if (!styles.hasOwnProperty(styleName)) {
          continue;
        }
        if (true) {
          warnValidStyle(styleName, styles[styleName], component);
        }
        var styleValue = dangerousStyleValue(styleName, styles[styleName], component);
        if (styleName === 'float' || styleName === 'cssFloat') {
          styleName = styleFloatAccessor;
        }
        if (styleValue) {
          style[styleName] = styleValue;
        } else {
          var expansion = hasShorthandPropertyBug && CSSProperty.shorthandPropertyExpansions[styleName];
          if (expansion) {
            // Shorthand property that IE8 won't like unsetting, so unset each
            // component to placate it
            for (var individualStyleName in expansion) {
              style[individualStyleName] = '';
            }
          } else {
            style[styleName] = '';
          }
        }
      }
    }

  };

  module.exports = CSSPropertyOperations;

/***/ },
/* 479 */
/***/ function(module, exports) {

  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  /**
   * CSS properties which accept numbers but are not in units of "px".
   */

  var isUnitlessNumber = {
    animationIterationCount: true,
    borderImageOutset: true,
    borderImageSlice: true,
    borderImageWidth: true,
    boxFlex: true,
    boxFlexGroup: true,
    boxOrdinalGroup: true,
    columnCount: true,
    flex: true,
    flexGrow: true,
    flexPositive: true,
    flexShrink: true,
    flexNegative: true,
    flexOrder: true,
    gridRow: true,
    gridColumn: true,
    fontWeight: true,
    lineClamp: true,
    lineHeight: true,
    opacity: true,
    order: true,
    orphans: true,
    tabSize: true,
    widows: true,
    zIndex: true,
    zoom: true,

    // SVG-related properties
    fillOpacity: true,
    floodOpacity: true,
    stopOpacity: true,
    strokeDasharray: true,
    strokeDashoffset: true,
    strokeMiterlimit: true,
    strokeOpacity: true,
    strokeWidth: true
  };

  /**
   * @param {string} prefix vendor-specific prefix, eg: Webkit
   * @param {string} key style name, eg: transitionDuration
   * @return {string} style name prefixed with `prefix`, properly camelCased, eg:
   * WebkitTransitionDuration
   */
  function prefixKey(prefix, key) {
    return prefix + key.charAt(0).toUpperCase() + key.substring(1);
  }

  /**
   * Support style names that may come passed in prefixed by adding permutations
   * of vendor prefixes.
   */
  var prefixes = ['Webkit', 'ms', 'Moz', 'O'];

  // Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an
  // infinite loop, because it iterates over the newly added props too.
  Object.keys(isUnitlessNumber).forEach(function (prop) {
    prefixes.forEach(function (prefix) {
      isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];
    });
  });

  /**
   * Most style properties can be unset by doing .style[prop] = '' but IE8
   * doesn't like doing that with shorthand properties so for the properties that
   * IE8 breaks on, which are listed here, we instead unset each of the
   * individual properties. See http://bugs.jquery.com/ticket/12385.
   * The 4-value 'clock' properties like margin, padding, border-width seem to
   * behave without any problems. Curiously, list-style works too without any
   * special prodding.
   */
  var shorthandPropertyExpansions = {
    background: {
      backgroundAttachment: true,
      backgroundColor: true,
      backgroundImage: true,
      backgroundPositionX: true,
      backgroundPositionY: true,
      backgroundRepeat: true
    },
    backgroundPosition: {
      backgroundPositionX: true,
      backgroundPositionY: true
    },
    border: {
      borderWidth: true,
      borderStyle: true,
      borderColor: true
    },
    borderBottom: {
      borderBottomWidth: true,
      borderBottomStyle: true,
      borderBottomColor: true
    },
    borderLeft: {
      borderLeftWidth: true,
      borderLeftStyle: true,
      borderLeftColor: true
    },
    borderRight: {
      borderRightWidth: true,
      borderRightStyle: true,
      borderRightColor: true
    },
    borderTop: {
      borderTopWidth: true,
      borderTopStyle: true,
      borderTopColor: true
    },
    font: {
      fontStyle: true,
      fontVariant: true,
      fontWeight: true,
      fontSize: true,
      lineHeight: true,
      fontFamily: true
    },
    outline: {
      outlineWidth: true,
      outlineStyle: true,
      outlineColor: true
    }
  };

  var CSSProperty = {
    isUnitlessNumber: isUnitlessNumber,
    shorthandPropertyExpansions: shorthandPropertyExpansions
  };

  module.exports = CSSProperty;

/***/ },
/* 480 */
/***/ function(module, exports, __webpack_require__) {

  /**
   * Copyright (c) 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   * @typechecks
   */

  'use strict';

  var camelize = __webpack_require__(481);

  var msPattern = /^-ms-/;

  /**
   * Camelcases a hyphenated CSS property name, for example:
   *
   *   > camelizeStyleName('background-color')
   *   < "backgroundColor"
   *   > camelizeStyleName('-moz-transition')
   *   < "MozTransition"
   *   > camelizeStyleName('-ms-transition')
   *   < "msTransition"
   *
   * As Andi Smith suggests
   * (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix
   * is converted to lowercase `ms`.
   *
   * @param {string} string
   * @return {string}
   */
  function camelizeStyleName(string) {
    return camelize(string.replace(msPattern, 'ms-'));
  }

  module.exports = camelizeStyleName;

/***/ },
/* 481 */
/***/ function(module, exports) {

  "use strict";

  /**
   * Copyright (c) 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   * @typechecks
   */

  var _hyphenPattern = /-(.)/g;

  /**
   * Camelcases a hyphenated string, for example:
   *
   *   > camelize('background-color')
   *   < "backgroundColor"
   *
   * @param {string} string
   * @return {string}
   */
  function camelize(string) {
    return string.replace(_hyphenPattern, function (_, character) {
      return character.toUpperCase();
    });
  }

  module.exports = camelize;

/***/ },
/* 482 */
/***/ function(module, exports, __webpack_require__) {

  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  var CSSProperty = __webpack_require__(479);
  var warning = __webpack_require__(394);

  var isUnitlessNumber = CSSProperty.isUnitlessNumber;
  var styleWarnings = {};

  /**
   * Convert a value into the proper css writable value. The style name `name`
   * should be logical (no hyphens), as specified
   * in `CSSProperty.isUnitlessNumber`.
   *
   * @param {string} name CSS property name such as `topMargin`.
   * @param {*} value CSS property value such as `10px`.
   * @param {ReactDOMComponent} component
   * @return {string} Normalized style value with dimensions applied.
   */
  function dangerousStyleValue(name, value, component) {
    // Note that we've removed escapeTextForBrowser() calls here since the
    // whole string will be escaped when the attribute is injected into
    // the markup. If you provide unsafe user data here they can inject
    // arbitrary CSS which may be problematic (I couldn't repro this):
    // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet
    // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/
    // This is not an XSS hole but instead a potential CSS injection issue
    // which has lead to a greater discussion about how we're going to
    // trust URLs moving forward. See #2115901

    var isEmpty = value == null || typeof value === 'boolean' || value === '';
    if (isEmpty) {
      return '';
    }

    var isNonNumeric = isNaN(value);
    if (isNonNumeric || value === 0 || isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name]) {
      return '' + value; // cast to string
    }

    if (typeof value === 'string') {
      if (true) {
        // Allow '0' to pass through without warning. 0 is already special and
        // doesn't require units, so we don't need to warn about it.
        if (component && value !== '0') {
          var owner = component._currentElement._owner;
          var ownerName = owner ? owner.getName() : null;
          if (ownerName && !styleWarnings[ownerName]) {
            styleWarnings[ownerName] = {};
          }
          var warned = false;
          if (ownerName) {
            var warnings = styleWarnings[ownerName];
            warned = warnings[name];
            if (!warned) {
              warnings[name] = true;
            }
          }
          if (!warned) {
             true ? warning(false, 'a `%s` tag (owner: `%s`) was passed a numeric string value ' + 'for CSS property `%s` (value: `%s`) which will be treated ' + 'as a unitless number in a future version of React.', component._currentElement.type, ownerName || 'unknown', name, value) : void 0;
          }
        }
      }
      value = value.trim();
    }
    return value + 'px';
  }

  module.exports = dangerousStyleValue;

/***/ },
/* 483 */
/***/ function(module, exports, __webpack_require__) {

  /**
   * Copyright (c) 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   * @typechecks
   */

  'use strict';

  var hyphenate = __webpack_require__(484);

  var msPattern = /^ms-/;

  /**
   * Hyphenates a camelcased CSS property name, for example:
   *
   *   > hyphenateStyleName('backgroundColor')
   *   < "background-color"
   *   > hyphenateStyleName('MozTransition')
   *   < "-moz-transition"
   *   > hyphenateStyleName('msTransition')
   *   < "-ms-transition"
   *
   * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix
   * is converted to `-ms-`.
   *
   * @param {string} string
   * @return {string}
   */
  function hyphenateStyleName(string) {
    return hyphenate(string).replace(msPattern, '-ms-');
  }

  module.exports = hyphenateStyleName;

/***/ },
/* 484 */
/***/ function(module, exports) {

  'use strict';

  /**
   * Copyright (c) 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   * @typechecks
   */

  var _uppercasePattern = /([A-Z])/g;

  /**
   * Hyphenates a camelcased string, for example:
   *
   *   > hyphenate('backgroundColor')
   *   < "background-color"
   *
   * For CSS style names, use `hyphenateStyleName` instead which works properly
   * with all vendor prefixes, including `ms`.
   *
   * @param {string} string
   * @return {string}
   */
  function hyphenate(string) {
    return string.replace(_uppercasePattern, '-$1').toLowerCase();
  }

  module.exports = hyphenate;

/***/ },
/* 485 */
/***/ function(module, exports) {

  /**
   * Copyright (c) 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   * 
   * @typechecks static-only
   */

  'use strict';

  /**
   * Memoizes the return value of a function that accepts one string argument.
   */

  function memoizeStringOnly(callback) {
    var cache = {};
    return function (string) {
      if (!cache.hasOwnProperty(string)) {
        cache[string] = callback.call(this, string);
      }
      return cache[string];
    };
  }

  module.exports = memoizeStringOnly;

/***/ },
/* 486 */
/***/ function(module, exports, __webpack_require__) {

  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  var DOMProperty = __webpack_require__(419);
  var ReactDOMComponentTree = __webpack_require__(417);
  var ReactInstrumentation = __webpack_require__(445);

  var quoteAttributeValueForBrowser = __webpack_require__(487);
  var warning = __webpack_require__(394);

  var VALID_ATTRIBUTE_NAME_REGEX = new RegExp('^[' + DOMProperty.ATTRIBUTE_NAME_START_CHAR + '][' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$');
  var illegalAttributeNameCache = {};
  var validatedAttributeNameCache = {};

  function isAttributeNameSafe(attributeName) {
    if (validatedAttributeNameCache.hasOwnProperty(attributeName)) {
      return true;
    }
    if (illegalAttributeNameCache.hasOwnProperty(attributeName)) {
      return false;
    }
    if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {
      validatedAttributeNameCache[attributeName] = true;
      return true;
    }
    illegalAttributeNameCache[attributeName] = true;
     true ? warning(false, 'Invalid attribute name: `%s`', attributeName) : void 0;
    return false;
  }

  function shouldIgnoreValue(propertyInfo, value) {
    return value == null || propertyInfo.hasBooleanValue && !value || propertyInfo.hasNumericValue && isNaN(value) || propertyInfo.hasPositiveNumericValue && value < 1 || propertyInfo.hasOverloadedBooleanValue && value === false;
  }

  /**
   * Operations for dealing with DOM properties.
   */
  var DOMPropertyOperations = {

    /**
     * Creates markup for the ID property.
     *
     * @param {string} id Unescaped ID.
     * @return {string} Markup string.
     */
    createMarkupForID: function (id) {
      return DOMProperty.ID_ATTRIBUTE_NAME + '=' + quoteAttributeValueForBrowser(id);
    },

    setAttributeForID: function (node, id) {
      node.setAttribute(DOMProperty.ID_ATTRIBUTE_NAME, id);
    },

    createMarkupForRoot: function () {
      return DOMProperty.ROOT_ATTRIBUTE_NAME + '=""';
    },

    setAttributeForRoot: function (node) {
      node.setAttribute(DOMProperty.ROOT_ATTRIBUTE_NAME, '');
    },

    /**
     * Creates markup for a property.
     *
     * @param {string} name
     * @param {*} value
     * @return {?string} Markup string, or null if the property was invalid.
     */
    createMarkupForProperty: function (name, value) {
      var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
      if (propertyInfo) {
        if (shouldIgnoreValue(propertyInfo, value)) {
          return '';
        }
        var attributeName = propertyInfo.attributeName;
        if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {
          return attributeName + '=""';
        }
        return attributeName + '=' + quoteAttributeValueForBrowser(value);
      } else if (DOMProperty.isCustomAttribute(name)) {
        if (value == null) {
          return '';
        }
        return name + '=' + quoteAttributeValueForBrowser(value);
      }
      return null;
    },

    /**
     * Creates markup for a custom property.
     *
     * @param {string} name
     * @param {*} value
     * @return {string} Markup string, or empty string if the property was invalid.
     */
    createMarkupForCustomAttribute: function (name, value) {
      if (!isAttributeNameSafe(name) || value == null) {
        return '';
      }
      return name + '=' + quoteAttributeValueForBrowser(value);
    },

    /**
     * Sets the value for a property on a node.
     *
     * @param {DOMElement} node
     * @param {string} name
     * @param {*} value
     */
    setValueForProperty: function (node, name, value) {
      var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
      if (propertyInfo) {
        var mutationMethod = propertyInfo.mutationMethod;
        if (mutationMethod) {
          mutationMethod(node, value);
        } else if (shouldIgnoreValue(propertyInfo, value)) {
          this.deleteValueForProperty(node, name);
          return;
        } else if (propertyInfo.mustUseProperty) {
          // Contrary to `setAttribute`, object properties are properly
          // `toString`ed by IE8/9.
          node[propertyInfo.propertyName] = value;
        } else {
          var attributeName = propertyInfo.attributeName;
          var namespace = propertyInfo.attributeNamespace;
          // `setAttribute` with objects becomes only `[object]` in IE8/9,
          // ('' + value) makes it output the correct toString()-value.
          if (namespace) {
            node.setAttributeNS(namespace, attributeName, '' + value);
          } else if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {
            node.setAttribute(attributeName, '');
          } else {
            node.setAttribute(attributeName, '' + value);
          }
        }
      } else if (DOMProperty.isCustomAttribute(name)) {
        DOMPropertyOperations.setValueForAttribute(node, name, value);
        return;
      }

      if (true) {
        var payload = {};
        payload[name] = value;
        ReactInstrumentation.debugTool.onHostOperation({
          instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,
          type: 'update attribute',
          payload: payload
        });
      }
    },

    setValueForAttribute: function (node, name, value) {
      if (!isAttributeNameSafe(name)) {
        return;
      }
      if (value == null) {
        node.removeAttribute(name);
      } else {
        node.setAttribute(name, '' + value);
      }

      if (true) {
        var payload = {};
        payload[name] = value;
        ReactInstrumentation.debugTool.onHostOperation({
          instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,
          type: 'update attribute',
          payload: payload
        });
      }
    },

    /**
     * Deletes an attributes from a node.
     *
     * @param {DOMElement} node
     * @param {string} name
     */
    deleteValueForAttribute: function (node, name) {
      node.removeAttribute(name);
      if (true) {
        ReactInstrumentation.debugTool.onHostOperation({
          instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,
          type: 'remove attribute',
          payload: name
        });
      }
    },

    /**
     * Deletes the value for a property on a node.
     *
     * @param {DOMElement} node
     * @param {string} name
     */
    deleteValueForProperty: function (node, name) {
      var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
      if (propertyInfo) {
        var mutationMethod = propertyInfo.mutationMethod;
        if (mutationMethod) {
          mutationMethod(node, undefined);
        } else if (propertyInfo.mustUseProperty) {
          var propName = propertyInfo.propertyName;
          if (propertyInfo.hasBooleanValue) {
            node[propName] = false;
          } else {
            node[propName] = '';
          }
        } else {
          node.removeAttribute(propertyInfo.attributeName);
        }
      } else if (DOMProperty.isCustomAttribute(name)) {
        node.removeAttribute(name);
      }

      if (true) {
        ReactInstrumentation.debugTool.onHostOperation({
          instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,
          type: 'remove attribute',
          payload: name
        });
      }
    }

  };

  module.exports = DOMPropertyOperations;

/***/ },
/* 487 */
/***/ function(module, exports, __webpack_require__) {

  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  var escapeTextContentForBrowser = __webpack_require__(469);

  /**
   * Escapes attribute value to prevent scripting attacks.
   *
   * @param {*} value Value to escape.
   * @return {string} An escaped string.
   */
  function quoteAttributeValueForBrowser(value) {
    return '"' + escapeTextContentForBrowser(value) + '"';
  }

  module.exports = quoteAttributeValueForBrowser;

/***/ },
/* 488 */
/***/ function(module, exports, __webpack_require__) {

  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  var _assign = __webpack_require__(387);

  var EventPluginRegistry = __webpack_require__(426);
  var ReactEventEmitterMixin = __webpack_require__(489);
  var ViewportMetrics = __webpack_require__(459);

  var getVendorPrefixedEventName = __webpack_require__(490);
  var isEventSupported = __webpack_require__(453);

  /**
   * Summary of `ReactBrowserEventEmitter` event handling:
   *
   *  - Top-level delegation is used to trap most native browser events. This
   *    may only occur in the main thread and is the responsibility of
   *    ReactEventListener, which is injected and can therefore support pluggable
   *    event sources. This is the only work that occurs in the main thread.
   *
   *  - We normalize and de-duplicate events to account for browser quirks. This
   *    may be done in the worker thread.
   *
   *  - Forward these native events (with the associated top-level type used to
   *    trap it) to `EventPluginHub`, which in turn will ask plugins if they want
   *    to extract any synthetic events.
   *
   *  - The `EventPluginHub` will then process each event by annotating them with
   *    "dispatches", a sequence of listeners and IDs that care about that event.
   *
   *  - The `EventPluginHub` then dispatches the events.
   *
   * Overview of React and the event system:
   *
   * +------------+    .
   * |    DOM     |    .
   * +------------+    .
   *       |           .
   *       v           .
   * +------------+    .
   * | ReactEvent |    .
   * |  Listener  |    .
   * +------------+    .                         +-----------+
   *       |           .               +--------+|SimpleEvent|
   *       |           .               |         |Plugin     |
   * +-----|------+    .               v         +-----------+
   * |     |      |    .    +--------------+                    +------------+
   * |     +-----------.--->|EventPluginHub|                    |    Event   |
   * |            |    .    |              |     +-----------+  | Propagators|
   * | ReactEvent |    .    |              |     |TapEvent   |  |------------|
   * |  Emitter   |    .    |              |<---+|Plugin     |  |other plugin|
   * |            |    .    |              |     +-----------+  |  utilities |
   * |     +-----------.--->|              |                    +------------+
   * |     |      |    .    +--------------+
   * +-----|------+    .                ^        +-----------+
   *       |           .                |        |Enter/Leave|
   *       +           .                +-------+|Plugin     |
   * +-------------+   .                         +-----------+
   * | application |   .
   * |-------------|   .
   * |             |   .
   * |             |   .
   * +-------------+   .
   *                   .
   *    React Core     .  General Purpose Event Plugin System
   */

  var hasEventPageXY;
  var alreadyListeningTo = {};
  var isMonitoringScrollValue = false;
  var reactTopListenersCounter = 0;

  // For events like 'submit' which don't consistently bubble (which we trap at a
  // lower node than `document`), binding at `document` would cause duplicate
  // events so we don't include them here
  var topEventMapping = {
    topAbort: 'abort',
    topAnimationEnd: getVendorPrefixedEventName('animationend') || 'animationend',
    topAnimationIteration: getVendorPrefixedEventName('animationiteration') || 'animationiteration',
    topAnimationStart: getVendorPrefixedEventName('animationstart') || 'animationstart',
    topBlur: 'blur',
    topCanPlay: 'canplay',
    topCanPlayThrough: 'canplaythrough',
    topChange: 'change',
    topClick: 'click',
    topCompositionEnd: 'compositionend',
    topCompositionStart: 'compositionstart',
    topCompositionUpdate: 'compositionupdate',
    topContextMenu: 'contextmenu',
    topCopy: 'copy',
    topCut: 'cut',
    topDoubleClick: 'dblclick',
    topDrag: 'drag',
    topDragEnd: 'dragend',
    topDragEnter: 'dragenter',
    topDragExit: 'dragexit',
    topDragLeave: 'dragleave',
    topDragOver: 'dragover',
    topDragStart: 'dragstart',
    topDrop: 'drop',
    topDurationChange: 'durationchange',
    topEmptied: 'emptied',
    topEncrypted: 'encrypted',
    topEnded: 'ended',
    topError: 'error',
    topFocus: 'focus',
    topInput: 'input',
    topKeyDown: 'keydown',
    topKeyPress: 'keypress',
    topKeyUp: 'keyup',
    topLoadedData: 'loadeddata',
    topLoadedMetadata: 'loadedmetadata',
    topLoadStart: 'loadstart',
    topMouseDown: 'mousedown',
    topMouseMove: 'mousemove',
    topMouseOut: 'mouseout',
    topMouseOver: 'mouseover',
    topMouseUp: 'mouseup',
    topPaste: 'paste',
    topPause: 'pause',
    topPlay: 'play',
    topPlaying: 'playing',
    topProgress: 'progress',
    topRateChange: 'ratechange',
    topScroll: 'scroll',
    topSeeked: 'seeked',
    topSeeking: 'seeking',
    topSelectionChange: 'selectionchange',
    topStalled: 'stalled',
    topSuspend: 'suspend',
    topTextInput: 'textInput',
    topTimeUpdate: 'timeupdate',
    topTouchCancel: 'touchcancel',
    topTouchEnd: 'touchend',
    topTouchMove: 'touchmove',
    topTouchStart: 'touchstart',
    topTransitionEnd: getVendorPrefixedEventName('transitionend') || 'transitionend',
    topVolumeChange: 'volumechange',
    topWaiting: 'waiting',
    topWheel: 'wheel'
  };

  /**
   * To ensure no conflicts with other potential React instances on the page
   */
  var topListenersIDKey = '_reactListenersID' + String(Math.random()).slice(2);

  function getListeningForDocument(mountAt) {
    // In IE8, `mountAt` is a host object and doesn't have `hasOwnProperty`
    // directly.
    if (!Object.prototype.hasOwnProperty.call(mountAt, topListenersIDKey)) {
      mountAt[topListenersIDKey] = reactTopListenersCounter++;
      alreadyListeningTo[mountAt[topListenersIDKey]] = {};
    }
    return alreadyListeningTo[mountAt[topListenersIDKey]];
  }

  /**
   * `ReactBrowserEventEmitter` is used to attach top-level event listeners. For
   * example:
   *
   *   EventPluginHub.putListener('myID', 'onClick', myFunction);
   *
   * This would allocate a "registration" of `('onClick', myFunction)` on 'myID'.
   *
   * @internal
   */
  var ReactBrowserEventEmitter = _assign({}, ReactEventEmitterMixin, {

    /**
     * Injectable event backend
     */
    ReactEventListener: null,

    injection: {
      /**
       * @param {object} ReactEventListener
       */
      injectReactEventListener: function (ReactEventListener) {
        ReactEventListener.setHandleTopLevel(ReactBrowserEventEmitter.handleTopLevel);
        ReactBrowserEventEmitter.ReactEventListener = ReactEventListener;
      }
    },

    /**
     * Sets whether or not any created callbacks should be enabled.
     *
     * @param {boolean} enabled True if callbacks should be enabled.
     */
    setEnabled: function (enabled) {
      if (ReactBrowserEventEmitter.ReactEventListener) {
        ReactBrowserEventEmitter.ReactEventListener.setEnabled(enabled);
      }
    },

    /**
     * @return {boolean} True if callbacks are enabled.
     */
    isEnabled: function () {
      return !!(ReactBrowserEventEmitter.ReactEventListener && ReactBrowserEventEmitter.ReactEventListener.isEnabled());
    },

    /**
     * We listen for bubbled touch events on the document object.
     *
     * Firefox v8.01 (and possibly others) exhibited strange behavior when
     * mounting `onmousemove` events at some node that was not the document
     * element. The symptoms were that if your mouse is not moving over something
     * contained within that mount point (for example on the background) the
     * top-level listeners for `onmousemove` won't be called. However, if you
     * register the `mousemove` on the document object, then it will of course
     * catch all `mousemove`s. This along with iOS quirks, justifies restricting
     * top-level listeners to the document object only, at least for these
     * movement types of events and possibly all events.
     *
     * @see http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
     *
     * Also, `keyup`/`keypress`/`keydown` do not bubble to the window on IE, but
     * they bubble to document.
     *
     * @param {string} registrationName Name of listener (e.g. `onClick`).
     * @param {object} contentDocumentHandle Document which owns the container
     */
    listenTo: function (registrationName, contentDocumentHandle) {
      var mountAt = contentDocumentHandle;
      var isListening = getListeningForDocument(mountAt);
      var dependencies = EventPluginRegistry.registrationNameDependencies[registrationName];

      for (var i = 0; i < dependencies.length; i++) {
        var dependency = dependencies[i];
        if (!(isListening.hasOwnProperty(dependency) && isListening[dependency])) {
          if (dependency === 'topWheel') {
            if (isEventSupported('wheel')) {
              ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topWheel', 'wheel', mountAt);
            } else if (isEventSupported('mousewheel')) {
              ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topWheel', 'mousewheel', mountAt);
            } else {
              // Firefox needs to capture a different mouse scroll event.
              // @see http://www.quirksmode.org/dom/events/tests/scroll.html
              ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topWheel', 'DOMMouseScroll', mountAt);
            }
          } else if (dependency === 'topScroll') {

            if (isEventSupported('scroll', true)) {
              ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent('topScroll', 'scroll', mountAt);
            } else {
              ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topScroll', 'scroll', ReactBrowserEventEmitter.ReactEventListener.WINDOW_HANDLE);
            }
          } else if (dependency === 'topFocus' || dependency === 'topBlur') {

            if (isEventSupported('focus', true)) {
              ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent('topFocus', 'focus', mountAt);
              ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent('topBlur', 'blur', mountAt);
            } else if (isEventSupported('focusin')) {
              // IE has `focusin` and `focusout` events which bubble.
              // @see http://www.quirksmode.org/blog/archives/2008/04/delegating_the.html
              ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topFocus', 'focusin', mountAt);
              ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topBlur', 'focusout', mountAt);
            }

            // to make sure blur and focus event listeners are only attached once
            isListening.topBlur = true;
            isListening.topFocus = true;
          } else if (topEventMapping.hasOwnProperty(dependency)) {
            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(dependency, topEventMapping[dependency], mountAt);
          }

          isListening[dependency] = true;
        }
      }
    },

    trapBubbledEvent: function (topLevelType, handlerBaseName, handle) {
      return ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelType, handlerBaseName, handle);
    },

    trapCapturedEvent: function (topLevelType, handlerBaseName, handle) {
      return ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelType, handlerBaseName, handle);
    },

    /**
     * Protect against document.createEvent() returning null
     * Some popup blocker extensions appear to do this:
     * https://github.com/facebook/react/issues/6887
     */
    supportsEventPageXY: function () {
      if (!document.createEvent) {
        return false;
      }
      var ev = document.createEvent('MouseEvent');
      return ev != null && 'pageX' in ev;
    },

    /**
     * Listens to window scroll and resize events. We cache scroll values so that
     * application code can access them without triggering reflows.
     *
     * ViewportMetrics is only used by SyntheticMouse/TouchEvent and only when
     * pageX/pageY isn't supported (legacy browsers).
     *
     * NOTE: Scroll events do not bubble.
     *
     * @see http://www.quirksmode.org/dom/events/scroll.html
     */
    ensureScrollValueMonitoring: function () {
      if (hasEventPageXY === undefined) {
        hasEventPageXY = ReactBrowserEventEmitter.supportsEventPageXY();
      }
      if (!hasEventPageXY && !isMonitoringScrollValue) {
        var refresh = ViewportMetrics.refreshScrollValues;
        ReactBrowserEventEmitter.ReactEventListener.monitorScrollValue(refresh);
        isMonitoringScrollValue = true;
      }
    }

  });

  module.exports = ReactBrowserEventEmitter;

/***/ },
/* 489 */
/***/ function(module, exports, __webpack_require__) {

  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  var EventPluginHub = __webpack_require__(425);

  function runEventQueueInBatch(events) {
    EventPluginHub.enqueueEvents(events);
    EventPluginHub.processEventQueue(false);
  }

  var ReactEventEmitterMixin = {

    /**
     * Streams a fired top-level event to `EventPluginHub` where plugins have the
     * opportunity to create `ReactEvent`s to be dispatched.
     */
    handleTopLevel: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
      var events = EventPluginHub.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);
      runEventQueueInBatch(events);
    }
  };

  module.exports = ReactEventEmitterMixin;

/***/ },
/* 490 */
/***/ function(module, exports, __webpack_require__) {

  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  var ExecutionEnvironment = __webpack_require__(431);

  /**
   * Generate a mapping of standard vendor prefixes using the defined style property and event name.
   *
   * @param {string} styleProp
   * @param {string} eventName
   * @returns {object}
   */
  function makePrefixMap(styleProp, eventName) {
    var prefixes = {};

    prefixes[styleProp.toLowerCase()] = eventName.toLowerCase();
    prefixes['Webkit' + styleProp] = 'webkit' + eventName;
    prefixes['Moz' + styleProp] = 'moz' + eventName;
    prefixes['ms' + styleProp] = 'MS' + eventName;
    prefixes['O' + styleProp] = 'o' + eventName.toLowerCase();

    return prefixes;
  }

  /**
   * A list of event names to a configurable list of vendor prefixes.
   */
  var vendorPrefixes = {
    animationend: makePrefixMap('Animation', 'AnimationEnd'),
    animationiteration: makePrefixMap('Animation', 'AnimationIteration'),
    animationstart: makePrefixMap('Animation', 'AnimationStart'),
    transitionend: makePrefixMap('Transition', 'TransitionEnd')
  };

  /**
   * Event names that have already been detected and prefixed (if applicable).
   */
  var prefixedEventNames = {};

  /**
   * Element to check for prefixes on.
   */
  var style = {};

  /**
   * Bootstrap if a DOM exists.
   */
  if (ExecutionEnvironment.canUseDOM) {
    style = document.createElement('div').style;

    // On some platforms, in particular some releases of Android 4.x,
    // the un-prefixed "animation" and "transition" properties are defined on the
    // style object but the events that fire will still be prefixed, so we need
    // to check if the un-prefixed events are usable, and if not remove them from the map.
    if (!('AnimationEvent' in window)) {
      delete vendorPrefixes.animationend.animation;
      delete vendorPrefixes.animationiteration.animation;
      delete vendorPrefixes.animationstart.animation;
    }

    // Same as above
    if (!('TransitionEvent' in window)) {
      delete vendorPrefixes.transitionend.transition;
    }
  }

  /**
   * Attempts to determine the correct vendor prefixed event name.
   *
   * @param {string} eventName
   * @returns {string}
   */
  function getVendorPrefixedEventName(eventName) {
    if (prefixedEventNames[eventName]) {
      return prefixedEventNames[eventName];
    } else if (!vendorPrefixes[eventName]) {
      return eventName;
    }

    var prefixMap = vendorPrefixes[eventName];

    for (var styleProp in prefixMap) {
      if (prefixMap.hasOwnProperty(styleProp) && styleProp in style) {
        return prefixedEventNames[eventName] = prefixMap[styleProp];
      }
    }

    return '';
  }

  module.exports = getVendorPrefixedEventName;

/***/ },
/* 491 */
/***/ function(module, exports, __webpack_require__) {

  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  var _prodInvariant = __webpack_require__(418),
      _assign = __webpack_require__(387);

  var DOMPropertyOperations = __webpack_require__(486);
  var LinkedValueUtils = __webpack_require__(492);
  var ReactDOMComponentTree = __webpack_require__(417);
  var ReactUpdates = __webpack_require__(439);

  var invariant = __webpack_require__(391);
  var warning = __webpack_require__(394);

  var didWarnValueLink = false;
  var didWarnCheckedLink = false;
  var didWarnValueDefaultValue = false;
  var didWarnCheckedDefaultChecked = false;
  var didWarnControlledToUncontrolled = false;
  var didWarnUncontrolledToControlled = false;

  function forceUpdateIfMounted() {
    if (this._rootNodeID) {
      // DOM component is still mounted; update
      ReactDOMInput.updateWrapper(this);
    }
  }

  function isControlled(props) {
    var usesChecked = props.type === 'checkbox' || props.type === 'radio';
    return usesChecked ? props.checked != null : props.value != null;
  }

  /**
   * Implements an <input> host component that allows setting these optional
   * props: `checked`, `value`, `defaultChecked`, and `defaultValue`.
   *
   * If `checked` or `value` are not supplied (or null/undefined), user actions
   * that affect the checked state or value will trigger updates to the element.
   *
   * If they are supplied (and not null/undefined), the rendered element will not
   * trigger updates to the element. Instead, the props must change in order for
   * the rendered element to be updated.
   *
   * The rendered element will be initialized as unchecked (or `defaultChecked`)
   * with an empty value (or `defaultValue`).
   *
   * @see http://www.w3.org/TR/2012/WD-html5-20121025/the-input-element.html
   */
  var ReactDOMInput = {
    getHostProps: function (inst, props) {
      var value = LinkedValueUtils.getValue(props);
      var checked = LinkedValueUtils.getChecked(props);

      var hostProps = _assign({
        // Make sure we set .type before any other properties (setting .value
        // before .type means .value is lost in IE11 and below)
        type: undefined,
        // Make sure we set .step before .value (setting .value before .step
        // means .value is rounded on mount, based upon step precision)
        step: undefined,
        // Make sure we set .min & .max before .value (to ensure proper order
        // in corner cases such as min or max deriving from value, e.g. Issue #7170)
        min: undefined,
        max: undefined
      }, props, {
        defaultChecked: undefined,
        defaultValue: undefined,
        value: value != null ? value : inst._wrapperState.initialValue,
        checked: checked != null ? checked : inst._wrapperState.initialChecked,
        onChange: inst._wrapperState.onChange
      });

      return hostProps;
    },

    mountWrapper: function (inst, props) {
      if (true) {
        LinkedValueUtils.checkPropTypes('input', props, inst._currentElement._owner);

        var owner = inst._currentElement._owner;

        if (props.valueLink !== undefined && !didWarnValueLink) {
           true ? warning(false, '`valueLink` prop on `input` is deprecated; set `value` and `onChange` instead.') : void 0;
          didWarnValueLink = true;
        }
        if (props.checkedLink !== undefined && !didWarnCheckedLink) {
           true ? warning(false, '`checkedLink` prop on `input` is deprecated; set `value` and `onChange` instead.') : void 0;
          didWarnCheckedLink = true;
        }
        if (props.checked !== undefined && props.defaultChecked !== undefined && !didWarnCheckedDefaultChecked) {
           true ? warning(false, '%s contains an input of type %s with both checked and defaultChecked props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the checked prop, or the defaultChecked prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
          didWarnCheckedDefaultChecked = true;
        }
        if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {
           true ? warning(false, '%s contains an input of type %s with both value and defaultValue props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
          didWarnValueDefaultValue = true;
        }
      }

      var defaultValue = props.defaultValue;
      inst._wrapperState = {
        initialChecked: props.checked != null ? props.checked : props.defaultChecked,
        initialValue: props.value != null ? props.value : defaultValue,
        listeners: null,
        onChange: _handleChange.bind(inst)
      };

      if (true) {
        inst._wrapperState.controlled = isControlled(props);
      }
    },

    updateWrapper: function (inst) {
      var props = inst._currentElement.props;

      if (true) {
        var controlled = isControlled(props);
        var owner = inst._currentElement._owner;

        if (!inst._wrapperState.controlled && controlled && !didWarnUncontrolledToControlled) {
           true ? warning(false, '%s is changing an uncontrolled input of type %s to be controlled. ' + 'Input elements should not switch from uncontrolled to controlled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
          didWarnUncontrolledToControlled = true;
        }
        if (inst._wrapperState.controlled && !controlled && !didWarnControlledToUncontrolled) {
           true ? warning(false, '%s is changing a controlled input of type %s to be uncontrolled. ' + 'Input elements should not switch from controlled to uncontrolled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
          didWarnControlledToUncontrolled = true;
        }
      }

      // TODO: Shouldn't this be getChecked(props)?
      var checked = props.checked;
      if (checked != null) {
        DOMPropertyOperations.setValueForProperty(ReactDOMComponentTree.getNodeFromInstance(inst), 'checked', checked || false);
      }

      var node = ReactDOMComponentTree.getNodeFromInstance(inst);
      var value = LinkedValueUtils.getValue(props);
      if (value != null) {

        // Cast `value` to a string to ensure the value is set correctly. While
        // browsers typically do this as necessary, jsdom doesn't.
        var newValue = '' + value;

        // To avoid side effects (such as losing text selection), only set value if changed
        if (newValue !== node.value) {
          node.value = newValue;
        }
      } else {
        if (props.value == null && props.defaultValue != null) {
          node.defaultValue = '' + props.defaultValue;
        }
        if (props.checked == null && props.defaultChecked != null) {
          node.defaultChecked = !!props.defaultChecked;
        }
      }
    },

    postMountWrapper: function (inst) {
      var props = inst._currentElement.props;

      // This is in postMount because we need access to the DOM node, which is not
      // available until after the component has mounted.
      var node = ReactDOMComponentTree.getNodeFromInstance(inst);

      // Detach value from defaultValue. We won't do anything if we're working on
      // submit or reset inputs as those values & defaultValues are linked. They
      // are not resetable nodes so this operation doesn't matter and actually
      // removes browser-default values (eg "Submit Query") when no value is
      // provided.

      switch (props.type) {
        case 'submit':
        case 'reset':
          break;
        case 'color':
        case 'date':
        case 'datetime':
        case 'datetime-local':
        case 'month':
        case 'time':
        case 'week':
          // This fixes the no-show issue on iOS Safari and Android Chrome:
          // https://github.com/facebook/react/issues/7233
          node.value = '';
          node.value = node.defaultValue;
          break;
        default:
          node.value = node.value;
          break;
      }

      // Normally, we'd just do `node.checked = node.checked` upon initial mount, less this bug
      // this is needed to work around a chrome bug where setting defaultChecked
      // will sometimes influence the value of checked (even after detachment).
      // Reference: https://bugs.chromium.org/p/chromium/issues/detail?id=608416
      // We need to temporarily unset name to avoid disrupting radio button groups.
      var name = node.name;
      if (name !== '') {
        node.name = '';
      }
      node.defaultChecked = !node.defaultChecked;
      node.defaultChecked = !node.defaultChecked;
      if (name !== '') {
        node.name = name;
      }
    }
  };

  function _handleChange(event) {
    var props = this._currentElement.props;

    var returnValue = LinkedValueUtils.executeOnChange(props, event);

    // Here we use asap to wait until all updates have propagated, which
    // is important when using controlled components within layers:
    // https://github.com/facebook/react/issues/1698
    ReactUpdates.asap(forceUpdateIfMounted, this);

    var name = props.name;
    if (props.type === 'radio' && name != null) {
      var rootNode = ReactDOMComponentTree.getNodeFromInstance(this);
      var queryRoot = rootNode;

      while (queryRoot.parentNode) {
        queryRoot = queryRoot.parentNode;
      }

      // If `rootNode.form` was non-null, then we could try `form.elements`,
      // but that sometimes behaves strangely in IE8. We could also try using
      // `form.getElementsByName`, but that will only return direct children
      // and won't include inputs that use the HTML5 `form=` attribute. Since
      // the input might not even be in a form, let's just use the global
      // `querySelectorAll` to ensure we don't miss anything.
      var group = queryRoot.querySelectorAll('input[name=' + JSON.stringify('' + name) + '][type="radio"]');

      for (var i = 0; i < group.length; i++) {
        var otherNode = group[i];
        if (otherNode === rootNode || otherNode.form !== rootNode.form) {
          continue;
        }
        // This will throw if radio buttons rendered by different copies of React
        // and the same name are rendered into the same form (same as #1939).
        // That's probably okay; we don't support it just as we don't support
        // mixing React radio buttons with non-React ones.
        var otherInstance = ReactDOMComponentTree.getInstanceFromNode(otherNode);
        !otherInstance ?  true ? invariant(false, 'ReactDOMInput: Mixing React and non-React radio inputs with the same `name` is not supported.') : _prodInvariant('90') : void 0;
        // If this is a controlled radio button group, forcing the input that
        // was previously checked to update will cause it to be come re-checked
        // as appropriate.
        ReactUpdates.asap(forceUpdateIfMounted, otherInstance);
      }
    }

    return returnValue;
  }

  module.exports = ReactDOMInput;

/***/ },
/* 492 */
/***/ function(module, exports, __webpack_require__) {

  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  var _prodInvariant = __webpack_require__(418);

  var React = __webpack_require__(386);
  var ReactPropTypesSecret = __webpack_require__(493);

  var invariant = __webpack_require__(391);
  var warning = __webpack_require__(394);

  var hasReadOnlyValue = {
    'button': true,
    'checkbox': true,
    'image': true,
    'hidden': true,
    'radio': true,
    'reset': true,
    'submit': true
  };

  function _assertSingleLink(inputProps) {
    !(inputProps.checkedLink == null || inputProps.valueLink == null) ?  true ? invariant(false, 'Cannot provide a checkedLink and a valueLink. If you want to use checkedLink, you probably don\'t want to use valueLink and vice versa.') : _prodInvariant('87') : void 0;
  }
  function _assertValueLink(inputProps) {
    _assertSingleLink(inputProps);
    !(inputProps.value == null && inputProps.onChange == null) ?  true ? invariant(false, 'Cannot provide a valueLink and a value or onChange event. If you want to use value or onChange, you probably don\'t want to use valueLink.') : _prodInvariant('88') : void 0;
  }

  function _assertCheckedLink(inputProps) {
    _assertSingleLink(inputProps);
    !(inputProps.checked == null && inputProps.onChange == null) ?  true ? invariant(false, 'Cannot provide a checkedLink and a checked property or onChange event. If you want to use checked or onChange, you probably don\'t want to use checkedLink') : _prodInvariant('89') : void 0;
  }

  var propTypes = {
    value: function (props, propName, componentName) {
      if (!props[propName] || hasReadOnlyValue[props.type] || props.onChange || props.readOnly || props.disabled) {
        return null;
      }
      return new Error('You provided a `value` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultValue`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
    },
    checked: function (props, propName, componentName) {
      if (!props[propName] || props.onChange || props.readOnly || props.disabled) {
        return null;
      }
      return new Error('You provided a `checked` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultChecked`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
    },
    onChange: React.PropTypes.func
  };

  var loggedTypeFailures = {};
  function getDeclarationErrorAddendum(owner) {
    if (owner) {
      var name = owner.getName();
      if (name) {
        return ' Check the render method of `' + name + '`.';
      }
    }
    return '';
  }

  /**
   * Provide a linked `value` attribute for controlled forms. You should not use
   * this outside of the ReactDOM controlled form components.
   */
  var LinkedValueUtils = {
    checkPropTypes: function (tagName, props, owner) {
      for (var propName in propTypes) {
        if (propTypes.hasOwnProperty(propName)) {
          var error = propTypes[propName](props, propName, tagName, 'prop', null, ReactPropTypesSecret);
        }
        if (error instanceof Error && !(error.message in loggedTypeFailures)) {
          // Only monitor this failure once because there tends to be a lot of the
          // same error.
          loggedTypeFailures[error.message] = true;

          var addendum = getDeclarationErrorAddendum(owner);
           true ? warning(false, 'Failed form propType: %s%s', error.message, addendum) : void 0;
        }
      }
    },

    /**
     * @param {object} inputProps Props for form component
     * @return {*} current value of the input either from value prop or link.
     */
    getValue: function (inputProps) {
      if (inputProps.valueLink) {
        _assertValueLink(inputProps);
        return inputProps.valueLink.value;
      }
      return inputProps.value;
    },

    /**
     * @param {object} inputProps Props for form component
     * @return {*} current checked status of the input either from checked prop
     *             or link.
     */
    getChecked: function (inputProps) {
      if (inputProps.checkedLink) {
        _assertCheckedLink(inputProps);
        return inputProps.checkedLink.value;
      }
      return inputProps.checked;
    },

    /**
     * @param {object} inputProps Props for form component
     * @param {SyntheticEvent} event change event to handle
     */
    executeOnChange: function (inputProps, event) {
      if (inputProps.valueLink) {
        _assertValueLink(inputProps);
        return inputProps.valueLink.requestChange(event.target.value);
      } else if (inputProps.checkedLink) {
        _assertCheckedLink(inputProps);
        return inputProps.checkedLink.requestChange(event.target.checked);
      } else if (inputProps.onChange) {
        return inputProps.onChange.call(undefined, event);
      }
    }
  };

  module.exports = LinkedValueUtils;

/***/ },
/* 493 */
/***/ function(module, exports) {

  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   * 
   */

  'use strict';

  var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

  module.exports = ReactPropTypesSecret;

/***/ },
/* 494 */
/***/ function(module, exports, __webpack_require__) {

  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  var _assign = __webpack_require__(387);

  var React = __webpack_require__(386);
  var ReactDOMComponentTree = __webpack_require__(417);
  var ReactDOMSelect = __webpack_require__(495);

  var warning = __webpack_require__(394);
  var didWarnInvalidOptionChildren = false;

  function flattenChildren(children) {
    var content = '';

    // Flatten children and warn if they aren't strings or numbers;
    // invalid types are ignored.
    React.Children.forEach(children, function (child) {
      if (child == null) {
        return;
      }
      if (typeof child === 'string' || typeof child === 'number') {
        content += child;
      } else if (!didWarnInvalidOptionChildren) {
        didWarnInvalidOptionChildren = true;
         true ? warning(false, 'Only strings and numbers are supported as <option> children.') : void 0;
      }
    });

    return content;
  }

  /**
   * Implements an <option> host component that warns when `selected` is set.
   */
  var ReactDOMOption = {
    mountWrapper: function (inst, props, hostParent) {
      // TODO (yungsters): Remove support for `selected` in <option>.
      if (true) {
         true ? warning(props.selected == null, 'Use the `defaultValue` or `value` props on <select> instead of ' + 'setting `selected` on <option>.') : void 0;
      }

      // Look up whether this option is 'selected'
      var selectValue = null;
      if (hostParent != null) {
        var selectParent = hostParent;

        if (selectParent._tag === 'optgroup') {
          selectParent = selectParent._hostParent;
        }

        if (selectParent != null && selectParent._tag === 'select') {
          selectValue = ReactDOMSelect.getSelectValueContext(selectParent);
        }
      }

      // If the value is null (e.g., no specified value or after initial mount)
      // or missing (e.g., for <datalist>), we don't change props.selected
      var selected = null;
      if (selectValue != null) {
        var value;
        if (props.value != null) {
          value = props.value + '';
        } else {
          value = flattenChildren(props.children);
        }
        selected = false;
        if (Array.isArray(selectValue)) {
          // multiple
          for (var i = 0; i < selectValue.length; i++) {
            if ('' + selectValue[i] === value) {
              selected = true;
              break;
            }
          }
        } else {
          selected = '' + selectValue === value;
        }
      }

      inst._wrapperState = { selected: selected };
    },

    postMountWrapper: function (inst) {
      // value="" should make a value attribute (#6219)
      var props = inst._currentElement.props;
      if (props.value != null) {
        var node = ReactDOMComponentTree.getNodeFromInstance(inst);
        node.setAttribute('value', props.value);
      }
    },

    getHostProps: function (inst, props) {
      var hostProps = _assign({ selected: undefined, children: undefined }, props);

      // Read state only from initial mount because <select> updates value
      // manually; we need the initial state only for server rendering
      if (inst._wrapperState.selected != null) {
        hostProps.selected = inst._wrapperState.selected;
      }

      var content = flattenChildren(props.children);

      if (content) {
        hostProps.children = content;
      }

      return hostProps;
    }

  };

  module.exports = ReactDOMOption;

/***/ },
/* 495 */
/***/ function(module, exports, __webpack_require__) {

  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  var _assign = __webpack_require__(387);

  var LinkedValueUtils = __webpack_require__(492);
  var ReactDOMComponentTree = __webpack_require__(417);
  var ReactUpdates = __webpack_require__(439);

  var warning = __webpack_require__(394);

  var didWarnValueLink = false;
  var didWarnValueDefaultValue = false;

  function updateOptionsIfPendingUpdateAndMounted() {
    if (this._rootNodeID && this._wrapperState.pendingUpdate) {
      this._wrapperState.pendingUpdate = false;

      var props = this._currentElement.props;
      var value = LinkedValueUtils.getValue(props);

      if (value != null) {
        updateOptions(this, Boolean(props.multiple), value);
      }
    }
  }

  function getDeclarationErrorAddendum(owner) {
    if (owner) {
      var name = owner.getName();
      if (name) {
        return ' Check the render method of `' + name + '`.';
      }
    }
    return '';
  }

  var valuePropNames = ['value', 'defaultValue'];

  /**
   * Validation function for `value` and `defaultValue`.
   * @private
   */
  function checkSelectPropTypes(inst, props) {
    var owner = inst._currentElement._owner;
    LinkedValueUtils.checkPropTypes('select', props, owner);

    if (props.valueLink !== undefined && !didWarnValueLink) {
       true ? warning(false, '`valueLink` prop on `select` is deprecated; set `value` and `onChange` instead.') : void 0;
      didWarnValueLink = true;
    }

    for (var i = 0; i < valuePropNames.length; i++) {
      var propName = valuePropNames[i];
      if (props[propName] == null) {
        continue;
      }
      var isArray = Array.isArray(props[propName]);
      if (props.multiple && !isArray) {
         true ? warning(false, 'The `%s` prop supplied to <select> must be an array if ' + '`multiple` is true.%s', propName, getDeclarationErrorAddendum(owner)) : void 0;
      } else if (!props.multiple && isArray) {
         true ? warning(false, 'The `%s` prop supplied to <select> must be a scalar ' + 'value if `multiple` is false.%s', propName, getDeclarationErrorAddendum(owner)) : void 0;
      }
    }
  }

  /**
   * @param {ReactDOMComponent} inst
   * @param {boolean} multiple
   * @param {*} propValue A stringable (with `multiple`, a list of stringables).
   * @private
   */
  function updateOptions(inst, multiple, propValue) {
    var selectedValue, i;
    var options = ReactDOMComponentTree.getNodeFromInstance(inst).options;

    if (multiple) {
      selectedValue = {};
      for (i = 0; i < propValue.length; i++) {
        selectedValue['' + propValue[i]] = true;
      }
      for (i = 0; i < options.length; i++) {
        var selected = selectedValue.hasOwnProperty(options[i].value);
        if (options[i].selected !== selected) {
          options[i].selected = selected;
        }
      }
    } else {
      // Do not set `select.value` as exact behavior isn't consistent across all
      // browsers for all cases.
      selectedValue = '' + propValue;
      for (i = 0; i < options.length; i++) {
        if (options[i].value === selectedValue) {
          options[i].selected = true;
          return;
        }
      }
      if (options.length) {
        options[0].selected = true;
      }
    }
  }

  /**
   * Implements a <select> host component that allows optionally setting the
   * props `value` and `defaultValue`. If `multiple` is false, the prop must be a
   * stringable. If `multiple` is true, the prop must be an array of stringables.
   *
   * If `value` is not supplied (or null/undefined), user actions that change the
   * selected option will trigger updates to the rendered options.
   *
   * If it is supplied (and not null/undefined), the rendered options will not
   * update in response to user actions. Instead, the `value` prop must change in
   * order for the rendered options to update.
   *
   * If `defaultValue` is provided, any options with the supplied values will be
   * selected.
   */
  var ReactDOMSelect = {
    getHostProps: function (inst, props) {
      return _assign({}, props, {
        onChange: inst._wrapperState.onChange,
        value: undefined
      });
    },

    mountWrapper: function (inst, props) {
      if (true) {
        checkSelectPropTypes(inst, props);
      }

      var value = LinkedValueUtils.getValue(props);
      inst._wrapperState = {
        pendingUpdate: false,
        initialValue: value != null ? value : props.defaultValue,
        listeners: null,
        onChange: _handleChange.bind(inst),
        wasMultiple: Boolean(props.multiple)
      };

      if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {
         true ? warning(false, 'Select elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled select ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components') : void 0;
        didWarnValueDefaultValue = true;
      }
    },

    getSelectValueContext: function (inst) {
      // ReactDOMOption looks at this initial value so the initial generated
      // markup has correct `selected` attributes
      return inst._wrapperState.initialValue;
    },

    postUpdateWrapper: function (inst) {
      var props = inst._currentElement.props;

      // After the initial mount, we control selected-ness manually so don't pass
      // this value down
      inst._wrapperState.initialValue = undefined;

      var wasMultiple = inst._wrapperState.wasMultiple;
      inst._wrapperState.wasMultiple = Boolean(props.multiple);

      var value = LinkedValueUtils.getValue(props);
      if (value != null) {
        inst._wrapperState.pendingUpdate = false;
        updateOptions(inst, Boolean(props.multiple), value);
      } else if (wasMultiple !== Boolean(props.multiple)) {
        // For simplicity, reapply `defaultValue` if `multiple` is toggled.
        if (props.defaultValue != null) {
          updateOptions(inst, Boolean(props.multiple), props.defaultValue);
        } else {
          // Revert the select back to its default unselected state.
          updateOptions(inst, Boolean(props.multiple), props.multiple ? [] : '');
        }
      }
    }
  };

  function _handleChange(event) {
    var props = this._currentElement.props;
    var returnValue = LinkedValueUtils.executeOnChange(props, event);

    if (this._rootNodeID) {
      this._wrapperState.pendingUpdate = true;
    }
    ReactUpdates.asap(updateOptionsIfPendingUpdateAndMounted, this);
    return returnValue;
  }

  module.exports = ReactDOMSelect;

/***/ },
/* 496 */
/***/ function(module, exports, __webpack_require__) {

  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  var _prodInvariant = __webpack_require__(418),
      _assign = __webpack_require__(387);

  var LinkedValueUtils = __webpack_require__(492);
  var ReactDOMComponentTree = __webpack_require__(417);
  var ReactUpdates = __webpack_require__(439);

  var invariant = __webpack_require__(391);
  var warning = __webpack_require__(394);

  var didWarnValueLink = false;
  var didWarnValDefaultVal = false;

  function forceUpdateIfMounted() {
    if (this._rootNodeID) {
      // DOM component is still mounted; update
      ReactDOMTextarea.updateWrapper(this);
    }
  }

  /**
   * Implements a <textarea> host component that allows setting `value`, and
   * `defaultValue`. This differs from the traditional DOM API because value is
   * usually set as PCDATA children.
   *
   * If `value` is not supplied (or null/undefined), user actions that affect the
   * value will trigger updates to the element.
   *
   * If `value` is supplied (and not null/undefined), the rendered element will
   * not trigger updates to the element. Instead, the `value` prop must change in
   * order for the rendered element to be updated.
   *
   * The rendered element will be initialized with an empty value, the prop
   * `defaultValue` if specified, or the children content (deprecated).
   */
  var ReactDOMTextarea = {
    getHostProps: function (inst, props) {
      !(props.dangerouslySetInnerHTML == null) ?  true ? invariant(false, '`dangerouslySetInnerHTML` does not make sense on <textarea>.') : _prodInvariant('91') : void 0;

      // Always set children to the same thing. In IE9, the selection range will
      // get reset if `textContent` is mutated.  We could add a check in setTextContent
      // to only set the value if/when the value differs from the node value (which would
      // completely solve this IE9 bug), but Sebastian+Ben seemed to like this solution.
      // The value can be a boolean or object so that's why it's forced to be a string.
      var hostProps = _assign({}, props, {
        value: undefined,
        defaultValue: undefined,
        children: '' + inst._wrapperState.initialValue,
        onChange: inst._wrapperState.onChange
      });

      return hostProps;
    },

    mountWrapper: function (inst, props) {
      if (true) {
        LinkedValueUtils.checkPropTypes('textarea', props, inst._currentElement._owner);
        if (props.valueLink !== undefined && !didWarnValueLink) {
           true ? warning(false, '`valueLink` prop on `textarea` is deprecated; set `value` and `onChange` instead.') : void 0;
          didWarnValueLink = true;
        }
        if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValDefaultVal) {
           true ? warning(false, 'Textarea elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled textarea ' + 'and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components') : void 0;
          didWarnValDefaultVal = true;
        }
      }

      var value = LinkedValueUtils.getValue(props);
      var initialValue = value;

      // Only bother fetching default value if we're going to use it
      if (value == null) {
        var defaultValue = props.defaultValue;
        // TODO (yungsters): Remove support for children content in <textarea>.
        var children = props.children;
        if (children != null) {
          if (true) {
             true ? warning(false, 'Use the `defaultValue` or `value` props instead of setting ' + 'children on <textarea>.') : void 0;
          }
          !(defaultValue == null) ?  true ? invariant(false, 'If you supply `defaultValue` on a <textarea>, do not pass children.') : _prodInvariant('92') : void 0;
          if (Array.isArray(children)) {
            !(children.length <= 1) ?  true ? invariant(false, '<textarea> can only have at most one child.') : _prodInvariant('93') : void 0;
            children = children[0];
          }

          defaultValue = '' + children;
        }
        if (defaultValue == null) {
          defaultValue = '';
        }
        initialValue = defaultValue;
      }

      inst._wrapperState = {
        initialValue: '' + initialValue,
        listeners: null,
        onChange: _handleChange.bind(inst)
      };
    },

    updateWrapper: function (inst) {
      var props = inst._currentElement.props;

      var node = ReactDOMComponentTree.getNodeFromInstance(inst);
      var value = LinkedValueUtils.getValue(props);
      if (value != null) {
        // Cast `value` to a string to ensure the value is set correctly. While
        // browsers typically do this as necessary, jsdom doesn't.
        var newValue = '' + value;

        // To avoid side effects (such as losing text selection), only set value if changed
        if (newValue !== node.value) {
          node.value = newValue;
        }
        if (props.defaultValue == null) {
          node.defaultValue = newValue;
        }
      }
      if (props.defaultValue != null) {
        node.defaultValue = props.defaultValue;
      }
    },

    postMountWrapper: function (inst) {
      // This is in postMount because we need access to the DOM node, which is not
      // available until after the component has mounted.
      var node = ReactDOMComponentTree.getNodeFromInstance(inst);

      // Warning: node.value may be the empty string at this point (IE11) if placeholder is set.
      node.value = node.textContent; // Detach value from defaultValue
    }
  };

  function _handleChange(event) {
    var props = this._currentElement.props;
    var returnValue = LinkedValueUtils.executeOnChange(props, event);
    ReactUpdates.asap(forceUpdateIfMounted, this);
    return returnValue;
  }

  module.exports = ReactDOMTextarea;

/***/ },
/* 497 */
/***/ function(module, exports, __webpack_require__) {

  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  var _prodInvariant = __webpack_require__(418);

  var ReactComponentEnvironment = __webpack_require__(498);
  var ReactInstanceMap = __webpack_require__(499);
  var ReactInstrumentation = __webpack_require__(445);

  var ReactCurrentOwner = __webpack_require__(393);
  var ReactReconciler = __webpack_require__(442);
  var ReactChildReconciler = __webpack_require__(500);

  var emptyFunction = __webpack_require__(395);
  var flattenChildren = __webpack_require__(515);
  var invariant = __webpack_require__(391);

  /**
   * Make an update for markup to be rendered and inserted at a supplied index.
   *
   * @param {string} markup Markup that renders into an element.
   * @param {number} toIndex Destination index.
   * @private
   */
  function makeInsertMarkup(markup, afterNode, toIndex) {
    // NOTE: Null values reduce hidden classes.
    return {
      type: 'INSERT_MARKUP',
      content: markup,
      fromIndex: null,
      fromNode: null,
      toIndex: toIndex,
      afterNode: afterNode
    };
  }

  /**
   * Make an update for moving an existing element to another index.
   *
   * @param {number} fromIndex Source index of the existing element.
   * @param {number} toIndex Destination index of the element.
   * @private
   */
  function makeMove(child, afterNode, toIndex) {
    // NOTE: Null values reduce hidden classes.
    return {
      type: 'MOVE_EXISTING',
      content: null,
      fromIndex: child._mountIndex,
      fromNode: ReactReconciler.getHostNode(child),
      toIndex: toIndex,
      afterNode: afterNode
    };
  }

  /**
   * Make an update for removing an element at an index.
   *
   * @param {number} fromIndex Index of the element to remove.
   * @private
   */
  function makeRemove(child, node) {
    // NOTE: Null values reduce hidden classes.
    return {
      type: 'REMOVE_NODE',
      content: null,
      fromIndex: child._mountIndex,
      fromNode: node,
      toIndex: null,
      afterNode: null
    };
  }

  /**
   * Make an update for setting the markup of a node.
   *
   * @param {string} markup Markup that renders into an element.
   * @private
   */
  function makeSetMarkup(markup) {
    // NOTE: Null values reduce hidden classes.
    return {
      type: 'SET_MARKUP',
      content: markup,
      fromIndex: null,
      fromNode: null,
      toIndex: null,
      afterNode: null
    };
  }

  /**
   * Make an update for setting the text content.
   *
   * @param {string} textContent Text content to set.
   * @private
   */
  function makeTextContent(textContent) {
    // NOTE: Null values reduce hidden classes.
    return {
      type: 'TEXT_CONTENT',
      content: textContent,
      fromIndex: null,
      fromNode: null,
      toIndex: null,
      afterNode: null
    };
  }

  /**
   * Push an update, if any, onto the queue. Creates a new queue if none is
   * passed and always returns the queue. Mutative.
   */
  function enqueue(queue, update) {
    if (update) {
      queue = queue || [];
      queue.push(update);
    }
    return queue;
  }

  /**
   * Processes any enqueued updates.
   *
   * @private
   */
  function processQueue(inst, updateQueue) {
    ReactComponentEnvironment.processChildrenUpdates(inst, updateQueue);
  }

  var setChildrenForInstrumentation = emptyFunction;
  if (true) {
    var getDebugID = function (inst) {
      if (!inst._debugID) {
        // Check for ART-like instances. TODO: This is silly/gross.
        var internal;
        if (internal = ReactInstanceMap.get(inst)) {
          inst = internal;
        }
      }
      return inst._debugID;
    };
    setChildrenForInstrumentation = function (children) {
      var debugID = getDebugID(this);
      // TODO: React Native empty components are also multichild.
      // This means they still get into this method but don't have _debugID.
      if (debugID !== 0) {
        ReactInstrumentation.debugTool.onSetChildren(debugID, children ? Object.keys(children).map(function (key) {
          return children[key]._debugID;
        }) : []);
      }
    };
  }

  /**
   * ReactMultiChild are capable of reconciling multiple children.
   *
   * @class ReactMultiChild
   * @internal
   */
  var ReactMultiChild = {

    /**
     * Provides common functionality for components that must reconcile multiple
     * children. This is used by `ReactDOMComponent` to mount, update, and
     * unmount child components.
     *
     * @lends {ReactMultiChild.prototype}
     */
    Mixin: {

      _reconcilerInstantiateChildren: function (nestedChildren, transaction, context) {
        if (true) {
          var selfDebugID = getDebugID(this);
          if (this._currentElement) {
            try {
              ReactCurrentOwner.current = this._currentElement._owner;
              return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context, selfDebugID);
            } finally {
              ReactCurrentOwner.current = null;
            }
          }
        }
        return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context);
      },

      _reconcilerUpdateChildren: function (prevChildren, nextNestedChildrenElements, mountImages, removedNodes, transaction, context) {
        var nextChildren;
        var selfDebugID = 0;
        if (true) {
          selfDebugID = getDebugID(this);
          if (this._currentElement) {
            try {
              ReactCurrentOwner.current = this._currentElement._owner;
              nextChildren = flattenChildren(nextNestedChildrenElements, selfDebugID);
            } finally {
              ReactCurrentOwner.current = null;
            }
            ReactChildReconciler.updateChildren(prevChildren, nextChildren, mountImages, removedNodes, transaction, this, this._hostContainerInfo, context, selfDebugID);
            return nextChildren;
          }
        }
        nextChildren = flattenChildren(nextNestedChildrenElements, selfDebugID);
        ReactChildReconciler.updateChildren(prevChildren, nextChildren, mountImages, removedNodes, transaction, this, this._hostContainerInfo, context, selfDebugID);
        return nextChildren;
      },

      /**
       * Generates a "mount image" for each of the supplied children. In the case
       * of `ReactDOMComponent`, a mount image is a string of markup.
       *
       * @param {?object} nestedChildren Nested child maps.
       * @return {array} An array of mounted representations.
       * @internal
       */
      mountChildren: function (nestedChildren, transaction, context) {
        var children = this._reconcilerInstantiateChildren(nestedChildren, transaction, context);
        this._renderedChildren = children;

        var mountImages = [];
        var index = 0;
        for (var name in children) {
          if (children.hasOwnProperty(name)) {
            var child = children[name];
            var selfDebugID = 0;
            if (true) {
              selfDebugID = getDebugID(this);
            }
            var mountImage = ReactReconciler.mountComponent(child, transaction, this, this._hostContainerInfo, context, selfDebugID);
            child._mountIndex = index++;
            mountImages.push(mountImage);
          }
        }

        if (true) {
          setChildrenForInstrumentation.call(this, children);
        }

        return mountImages;
      },

      /**
       * Replaces any rendered children with a text content string.
       *
       * @param {string} nextContent String of content.
       * @internal
       */
      updateTextContent: function (nextContent) {
        var prevChildren = this._renderedChildren;
        // Remove any rendered children.
        ReactChildReconciler.unmountChildren(prevChildren, false);
        for (var name in prevChildren) {
          if (prevChildren.hasOwnProperty(name)) {
             true ?  true ? invariant(false, 'updateTextContent called on non-empty component.') : _prodInvariant('118') : void 0;
          }
        }
        // Set new text content.
        var updates = [makeTextContent(nextContent)];
        processQueue(this, updates);
      },

      /**
       * Replaces any rendered children with a markup string.
       *
       * @param {string} nextMarkup String of markup.
       * @internal
       */
      updateMarkup: function (nextMarkup) {
        var prevChildren = this._renderedChildren;
        // Remove any rendered children.
        ReactChildReconciler.unmountChildren(prevChildren, false);
        for (var name in prevChildren) {
          if (prevChildren.hasOwnProperty(name)) {
             true ?  true ? invariant(false, 'updateTextContent called on non-empty component.') : _prodInvariant('118') : void 0;
          }
        }
        var updates = [makeSetMarkup(nextMarkup)];
        processQueue(this, updates);
      },

      /**
       * Updates the rendered children with new children.
       *
       * @param {?object} nextNestedChildrenElements Nested child element maps.
       * @param {ReactReconcileTransaction} transaction
       * @internal
       */
      updateChildren: function (nextNestedChildrenElements, transaction, context) {
        // Hook used by React ART
        this._updateChildren(nextNestedChildrenElements, transaction, context);
      },

      /**
       * @param {?object} nextNestedChildrenElements Nested child element maps.
       * @param {ReactReconcileTransaction} transaction
       * @final
       * @protected
       */
      _updateChildren: function (nextNestedChildrenElements, transaction, context) {
        var prevChildren = this._renderedChildren;
        var removedNodes = {};
        var mountImages = [];
        var nextChildren = this._reconcilerUpdateChildren(prevChildren, nextNestedChildrenElements, mountImages, removedNodes, transaction, context);
        if (!nextChildren && !prevChildren) {
          return;
        }
        var updates = null;
        var name;
        // `nextIndex` will increment for each child in `nextChildren`, but
        // `lastIndex` will be the last index visited in `prevChildren`.
        var nextIndex = 0;
        var lastIndex = 0;
        // `nextMountIndex` will increment for each newly mounted child.
        var nextMountIndex = 0;
        var lastPlacedNode = null;
        for (name in nextChildren) {
          if (!nextChildren.hasOwnProperty(name)) {
            continue;
          }
          var prevChild = prevChildren && prevChildren[name];
          var nextChild = nextChildren[name];
          if (prevChild === nextChild) {
            updates = enqueue(updates, this.moveChild(prevChild, lastPlacedNode, nextIndex, lastIndex));
            lastIndex = Math.max(prevChild._mountIndex, lastIndex);
            prevChild._mountIndex = nextIndex;
          } else {
            if (prevChild) {
              // Update `lastIndex` before `_mountIndex` gets unset by unmounting.
              lastIndex = Math.max(prevChild._mountIndex, lastIndex);
              // The `removedNodes` loop below will actually remove the child.
            }
            // The child must be instantiated before it's mounted.
            updates = enqueue(updates, this._mountChildAtIndex(nextChild, mountImages[nextMountIndex], lastPlacedNode, nextIndex, transaction, context));
            nextMountIndex++;
          }
          nextIndex++;
          lastPlacedNode = ReactReconciler.getHostNode(nextChild);
        }
        // Remove children that are no longer present.
        for (name in removedNodes) {
          if (removedNodes.hasOwnProperty(name)) {
            updates = enqueue(updates, this._unmountChild(prevChildren[name], removedNodes[name]));
          }
        }
        if (updates) {
          processQueue(this, updates);
        }
        this._renderedChildren = nextChildren;

        if (true) {
          setChildrenForInstrumentation.call(this, nextChildren);
        }
      },

      /**
       * Unmounts all rendered children. This should be used to clean up children
       * when this component is unmounted. It does not actually perform any
       * backend operations.
       *
       * @internal
       */
      unmountChildren: function (safely) {
        var renderedChildren = this._renderedChildren;
        ReactChildReconciler.unmountChildren(renderedChildren, safely);
        this._renderedChildren = null;
      },

      /**
       * Moves a child component to the supplied index.
       *
       * @param {ReactComponent} child Component to move.
       * @param {number} toIndex Destination index of the element.
       * @param {number} lastIndex Last index visited of the siblings of `child`.
       * @protected
       */
      moveChild: function (child, afterNode, toIndex, lastIndex) {
        // If the index of `child` is less than `lastIndex`, then it needs to
        // be moved. Otherwise, we do not need to move it because a child will be
        // inserted or moved before `child`.
        if (child._mountIndex < lastIndex) {
          return makeMove(child, afterNode, toIndex);
        }
      },

      /**
       * Creates a child component.
       *
       * @param {ReactComponent} child Component to create.
       * @param {string} mountImage Markup to insert.
       * @protected
       */
      createChild: function (child, afterNode, mountImage) {
        return makeInsertMarkup(mountImage, afterNode, child._mountIndex);
      },

      /**
       * Removes a child component.
       *
       * @param {ReactComponent} child Child to remove.
       * @protected
       */
      removeChild: function (child, node) {
        return makeRemove(child, node);
      },

      /**
       * Mounts a child with the supplied name.
       *
       * NOTE: This is part of `updateChildren` and is here for readability.
       *
       * @param {ReactComponent} child Component to mount.
       * @param {string} name Name of the child.
       * @param {number} index Index at which to insert the child.
       * @param {ReactReconcileTransaction} transaction
       * @private
       */
      _mountChildAtIndex: function (child, mountImage, afterNode, index, transaction, context) {
        child._mountIndex = index;
        return this.createChild(child, afterNode, mountImage);
      },

      /**
       * Unmounts a rendered child.
       *
       * NOTE: This is part of `updateChildren` and is here for readability.
       *
       * @param {ReactComponent} child Component to unmount.
       * @private
       */
      _unmountChild: function (child, node) {
        var update = this.removeChild(child, node);
        child._mountIndex = null;
        return update;
      }

    }

  };

  module.exports = ReactMultiChild;

/***/ },
/* 498 */
/***/ function(module, exports, __webpack_require__) {

  /**
   * Copyright 2014-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   * 
   */

  'use strict';

  var _prodInvariant = __webpack_require__(418);

  var invariant = __webpack_require__(391);

  var injected = false;

  var ReactComponentEnvironment = {

    /**
     * Optionally injectable hook for swapping out mount images in the middle of
     * the tree.
     */
    replaceNodeWithMarkup: null,

    /**
     * Optionally injectable hook for processing a queue of child updates. Will
     * later move into MultiChildComponents.
     */
    processChildrenUpdates: null,

    injection: {
      injectEnvironment: function (environment) {
        !!injected ?  true ? invariant(false, 'ReactCompositeComponent: injectEnvironment() can only be called once.') : _prodInvariant('104') : void 0;
        ReactComponentEnvironment.replaceNodeWithMarkup = environment.replaceNodeWithMarkup;
        ReactComponentEnvironment.processChildrenUpdates = environment.processChildrenUpdates;
        injected = true;
      }
    }

  };

  module.exports = ReactComponentEnvironment;

/***/ },
/* 499 */
/***/ function(module, exports) {

  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  /**
   * `ReactInstanceMap` maintains a mapping from a public facing stateful
   * instance (key) and the internal representation (value). This allows public
   * methods to accept the user facing instance as an argument and map them back
   * to internal methods.
   */

  // TODO: Replace this with ES6: var ReactInstanceMap = new Map();

  var ReactInstanceMap = {

    /**
     * This API should be called `delete` but we'd have to make sure to always
     * transform these to strings for IE support. When this transform is fully
     * supported we can rename it.
     */
    remove: function (key) {
      key._reactInternalInstance = undefined;
    },

    get: function (key) {
      return key._reactInternalInstance;
    },

    has: function (key) {
      return key._reactInternalInstance !== undefined;
    },

    set: function (key, value) {
      key._reactInternalInstance = value;
    }

  };

  module.exports = ReactInstanceMap;

/***/ },
/* 500 */
/***/ function(module, exports, __webpack_require__) {

  /* WEBPACK VAR INJECTION */(function(process) {/**
   * Copyright 2014-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  var ReactReconciler = __webpack_require__(442);

  var instantiateReactComponent = __webpack_require__(501);
  var KeyEscapeUtils = __webpack_require__(511);
  var shouldUpdateReactComponent = __webpack_require__(507);
  var traverseAllChildren = __webpack_require__(512);
  var warning = __webpack_require__(394);

  var ReactComponentTreeHook;

  if (typeof process !== 'undefined' && process.env && ("development") === 'test') {
    // Temporary hack.
    // Inline requires don't work well with Jest:
    // https://github.com/facebook/react/issues/7240
    // Remove the inline requires when we don't need them anymore:
    // https://github.com/facebook/react/pull/7178
    ReactComponentTreeHook = __webpack_require__(409);
  }

  function instantiateChild(childInstances, child, name, selfDebugID) {
    // We found a component instance.
    var keyUnique = childInstances[name] === undefined;
    if (true) {
      if (!ReactComponentTreeHook) {
        ReactComponentTreeHook = __webpack_require__(409);
      }
      if (!keyUnique) {
         true ? warning(false, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.%s', KeyEscapeUtils.unescape(name), ReactComponentTreeHook.getStackAddendumByID(selfDebugID)) : void 0;
      }
    }
    if (child != null && keyUnique) {
      childInstances[name] = instantiateReactComponent(child, true);
    }
  }

  /**
   * ReactChildReconciler provides helpers for initializing or updating a set of
   * children. Its output is suitable for passing it onto ReactMultiChild which
   * does diffed reordering and insertion.
   */
  var ReactChildReconciler = {
    /**
     * Generates a "mount image" for each of the supplied children. In the case
     * of `ReactDOMComponent`, a mount image is a string of markup.
     *
     * @param {?object} nestedChildNodes Nested child maps.
     * @return {?object} A set of child instances.
     * @internal
     */
    instantiateChildren: function (nestedChildNodes, transaction, context, selfDebugID // 0 in production and for roots
    ) {
      if (nestedChildNodes == null) {
        return null;
      }
      var childInstances = {};

      if (true) {
        traverseAllChildren(nestedChildNodes, function (childInsts, child, name) {
          return instantiateChild(childInsts, child, name, selfDebugID);
        }, childInstances);
      } else {
        traverseAllChildren(nestedChildNodes, instantiateChild, childInstances);
      }
      return childInstances;
    },

    /**
     * Updates the rendered children and returns a new set of children.
     *
     * @param {?object} prevChildren Previously initialized set of children.
     * @param {?object} nextChildren Flat child element maps.
     * @param {ReactReconcileTransaction} transaction
     * @param {object} context
     * @return {?object} A new set of child instances.
     * @internal
     */
    updateChildren: function (prevChildren, nextChildren, mountImages, removedNodes, transaction, hostParent, hostContainerInfo, context, selfDebugID // 0 in production and for roots
    ) {
      // We currently don't have a way to track moves here but if we use iterators
      // instead of for..in we can zip the iterators and check if an item has
      // moved.
      // TODO: If nothing has changed, return the prevChildren object so that we
      // can quickly bailout if nothing has changed.
      if (!nextChildren && !prevChildren) {
        return;
      }
      var name;
      var prevChild;
      for (name in nextChildren) {
        if (!nextChildren.hasOwnProperty(name)) {
          continue;
        }
        prevChild = prevChildren && prevChildren[name];
        var prevElement = prevChild && prevChild._currentElement;
        var nextElement = nextChildren[name];
        if (prevChild != null && shouldUpdateReactComponent(prevElement, nextElement)) {
          ReactReconciler.receiveComponent(prevChild, nextElement, transaction, context);
          nextChildren[name] = prevChild;
        } else {
          if (prevChild) {
            removedNodes[name] = ReactReconciler.getHostNode(prevChild);
            ReactReconciler.unmountComponent(prevChild, false);
          }
          // The child must be instantiated before it's mounted.
          var nextChildInstance = instantiateReactComponent(nextElement, true);
          nextChildren[name] = nextChildInstance;
          // Creating mount image now ensures refs are resolved in right order
          // (see https://github.com/facebook/react/pull/7101 for explanation).
          var nextChildMountImage = ReactReconciler.mountComponent(nextChildInstance, transaction, hostParent, hostContainerInfo, context, selfDebugID);
          mountImages.push(nextChildMountImage);
        }
      }
      // Unmount children that are no longer present.
      for (name in prevChildren) {
        if (prevChildren.hasOwnProperty(name) && !(nextChildren && nextChildren.hasOwnProperty(name))) {
          prevChild = prevChildren[name];
          removedNodes[name] = ReactReconciler.getHostNode(prevChild);
          ReactReconciler.unmountComponent(prevChild, false);
        }
      }
    },

    /**
     * Unmounts all rendered children. This should be used to clean up children
     * when this component is unmounted.
     *
     * @param {?object} renderedChildren Previously initialized set of children.
     * @internal
     */
    unmountChildren: function (renderedChildren, safely) {
      for (var name in renderedChildren) {
        if (renderedChildren.hasOwnProperty(name)) {
          var renderedChild = renderedChildren[name];
          ReactReconciler.unmountComponent(renderedChild, safely);
        }
      }
    }

  };

  module.exports = ReactChildReconciler;
  /* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(72)))

/***/ },
/* 501 */
/***/ function(module, exports, __webpack_require__) {

  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  var _prodInvariant = __webpack_require__(418),
      _assign = __webpack_require__(387);

  var ReactCompositeComponent = __webpack_require__(502);
  var ReactEmptyComponent = __webpack_require__(508);
  var ReactHostComponent = __webpack_require__(509);

  var getNextDebugID = __webpack_require__(510);
  var invariant = __webpack_require__(391);
  var warning = __webpack_require__(394);

  // To avoid a cyclic dependency, we create the final class in this module
  var ReactCompositeComponentWrapper = function (element) {
    this.construct(element);
  };
  _assign(ReactCompositeComponentWrapper.prototype, ReactCompositeComponent, {
    _instantiateReactComponent: instantiateReactComponent
  });

  function getDeclarationErrorAddendum(owner) {
    if (owner) {
      var name = owner.getName();
      if (name) {
        return ' Check the render method of `' + name + '`.';
      }
    }
    return '';
  }

  /**
   * Check if the type reference is a known internal type. I.e. not a user
   * provided composite type.
   *
   * @param {function} type
   * @return {boolean} Returns true if this is a valid internal type.
   */
  function isInternalComponentType(type) {
    return typeof type === 'function' && typeof type.prototype !== 'undefined' && typeof type.prototype.mountComponent === 'function' && typeof type.prototype.receiveComponent === 'function';
  }

  /**
   * Given a ReactNode, create an instance that will actually be mounted.
   *
   * @param {ReactNode} node
   * @param {boolean} shouldHaveDebugID
   * @return {object} A new instance of the element's constructor.
   * @protected
   */
  function instantiateReactComponent(node, shouldHaveDebugID) {
    var instance;

    if (node === null || node === false) {
      instance = ReactEmptyComponent.create(instantiateReactComponent);
    } else if (typeof node === 'object') {
      var element = node;
      !(element && (typeof element.type === 'function' || typeof element.type === 'string')) ?  true ? invariant(false, 'Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s', element.type == null ? element.type : typeof element.type, getDeclarationErrorAddendum(element._owner)) : _prodInvariant('130', element.type == null ? element.type : typeof element.type, getDeclarationErrorAddendum(element._owner)) : void 0;

      // Special case string values
      if (typeof element.type === 'string') {
        instance = ReactHostComponent.createInternalComponent(element);
      } else if (isInternalComponentType(element.type)) {
        // This is temporarily available for custom components that are not string
        // representations. I.e. ART. Once those are updated to use the string
        // representation, we can drop this code path.
        instance = new element.type(element);

        // We renamed this. Allow the old name for compat. :(
        if (!instance.getHostNode) {
          instance.getHostNode = instance.getNativeNode;
        }
      } else {
        instance = new ReactCompositeComponentWrapper(element);
      }
    } else if (typeof node === 'string' || typeof node === 'number') {
      instance = ReactHostComponent.createInstanceForText(node);
    } else {
       true ?  true ? invariant(false, 'Encountered invalid React node of type %s', typeof node) : _prodInvariant('131', typeof node) : void 0;
    }

    if (true) {
       true ? warning(typeof instance.mountComponent === 'function' && typeof instance.receiveComponent === 'function' && typeof instance.getHostNode === 'function' && typeof instance.unmountComponent === 'function', 'Only React Components can be mounted.') : void 0;
    }

    // These two fields are used by the DOM and ART diffing algorithms
    // respectively. Instead of using expandos on components, we should be
    // storing the state needed by the diffing algorithms elsewhere.
    instance._mountIndex = 0;
    instance._mountImage = null;

    if (true) {
      instance._debugID = shouldHaveDebugID ? getNextDebugID() : 0;
    }

    // Internal instances should fully constructed at this point, so they should
    // not get any new fields added to them at this point.
    if (true) {
      if (Object.preventExtensions) {
        Object.preventExtensions(instance);
      }
    }

    return instance;
  }

  module.exports = instantiateReactComponent;

/***/ },
/* 502 */
/***/ function(module, exports, __webpack_require__) {

  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  var _prodInvariant = __webpack_require__(418),
      _assign = __webpack_require__(387);

  var React = __webpack_require__(386);
  var ReactComponentEnvironment = __webpack_require__(498);
  var ReactCurrentOwner = __webpack_require__(393);
  var ReactErrorUtils = __webpack_require__(428);
  var ReactInstanceMap = __webpack_require__(499);
  var ReactInstrumentation = __webpack_require__(445);
  var ReactNodeTypes = __webpack_require__(503);
  var ReactReconciler = __webpack_require__(442);

  if (true) {
    var checkReactTypeSpec = __webpack_require__(504);
  }

  var emptyObject = __webpack_require__(403);
  var invariant = __webpack_require__(391);
  var shallowEqual = __webpack_require__(506);
  var shouldUpdateReactComponent = __webpack_require__(507);
  var warning = __webpack_require__(394);

  var CompositeTypes = {
    ImpureClass: 0,
    PureClass: 1,
    StatelessFunctional: 2
  };

  function StatelessComponent(Component) {}
  StatelessComponent.prototype.render = function () {
    var Component = ReactInstanceMap.get(this)._currentElement.type;
    var element = Component(this.props, this.context, this.updater);
    warnIfInvalidElement(Component, element);
    return element;
  };

  function warnIfInvalidElement(Component, element) {
    if (true) {
       true ? warning(element === null || element === false || React.isValidElement(element), '%s(...): A valid React element (or null) must be returned. You may have ' + 'returned undefined, an array or some other invalid object.', Component.displayName || Component.name || 'Component') : void 0;
       true ? warning(!Component.childContextTypes, '%s(...): childContextTypes cannot be defined on a functional component.', Component.displayName || Component.name || 'Component') : void 0;
    }
  }

  function shouldConstruct(Component) {
    return !!(Component.prototype && Component.prototype.isReactComponent);
  }

  function isPureComponent(Component) {
    return !!(Component.prototype && Component.prototype.isPureReactComponent);
  }

  // Separated into a function to contain deoptimizations caused by try/finally.
  function measureLifeCyclePerf(fn, debugID, timerType) {
    if (debugID === 0) {
      // Top-level wrappers (see ReactMount) and empty components (see
      // ReactDOMEmptyComponent) are invisible to hooks and devtools.
      // Both are implementation details that should go away in the future.
      return fn();
    }

    ReactInstrumentation.debugTool.onBeginLifeCycleTimer(debugID, timerType);
    try {
      return fn();
    } finally {
      ReactInstrumentation.debugTool.onEndLifeCycleTimer(debugID, timerType);
    }
  }

  /**
   * ------------------ The Life-Cycle of a Composite Component ------------------
   *
   * - constructor: Initialization of state. The instance is now retained.
   *   - componentWillMount
   *   - render
   *   - [children's constructors]
   *     - [children's componentWillMount and render]
   *     - [children's componentDidMount]
   *     - componentDidMount
   *
   *       Update Phases:
   *       - componentWillReceiveProps (only called if parent updated)
   *       - shouldComponentUpdate
   *         - componentWillUpdate
   *           - render
   *           - [children's constructors or receive props phases]
   *         - componentDidUpdate
   *
   *     - componentWillUnmount
   *     - [children's componentWillUnmount]
   *   - [children destroyed]
   * - (destroyed): The instance is now blank, released by React and ready for GC.
   *
   * -----------------------------------------------------------------------------
   */

  /**
   * An incrementing ID assigned to each component when it is mounted. This is
   * used to enforce the order in which `ReactUpdates` updates dirty components.
   *
   * @private
   */
  var nextMountID = 1;

  /**
   * @lends {ReactCompositeComponent.prototype}
   */
  var ReactCompositeComponent = {

    /**
     * Base constructor for all composite component.
     *
     * @param {ReactElement} element
     * @final
     * @internal
     */
    construct: function (element) {
      this._currentElement = element;
      this._rootNodeID = 0;
      this._compositeType = null;
      this._instance = null;
      this._hostParent = null;
      this._hostContainerInfo = null;

      // See ReactUpdateQueue
      this._updateBatchNumber = null;
      this._pendingElement = null;
      this._pendingStateQueue = null;
      this._pendingReplaceState = false;
      this._pendingForceUpdate = false;

      this._renderedNodeType = null;
      this._renderedComponent = null;
      this._context = null;
      this._mountOrder = 0;
      this._topLevelWrapper = null;

      // See ReactUpdates and ReactUpdateQueue.
      this._pendingCallbacks = null;

      // ComponentWillUnmount shall only be called once
      this._calledComponentWillUnmount = false;

      if (true) {
        this._warnedAboutRefsInRender = false;
      }
    },

    /**
     * Initializes the component, renders markup, and registers event listeners.
     *
     * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
     * @param {?object} hostParent
     * @param {?object} hostContainerInfo
     * @param {?object} context
     * @return {?string} Rendered markup to be inserted into the DOM.
     * @final
     * @internal
     */
    mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
      var _this = this;

      this._context = context;
      this._mountOrder = nextMountID++;
      this._hostParent = hostParent;
      this._hostContainerInfo = hostContainerInfo;

      var publicProps = this._currentElement.props;
      var publicContext = this._processContext(context);

      var Component = this._currentElement.type;

      var updateQueue = transaction.getUpdateQueue();

      // Initialize the public class
      var doConstruct = shouldConstruct(Component);
      var inst = this._constructComponent(doConstruct, publicProps, publicContext, updateQueue);
      var renderedElement;

      // Support functional components
      if (!doConstruct && (inst == null || inst.render == null)) {
        renderedElement = inst;
        warnIfInvalidElement(Component, renderedElement);
        !(inst === null || inst === false || React.isValidElement(inst)) ?  true ? invariant(false, '%s(...): A valid React element (or null) must be returned. You may have returned undefined, an array or some other invalid object.', Component.displayName || Component.name || 'Component') : _prodInvariant('105', Component.displayName || Component.name || 'Component') : void 0;
        inst = new StatelessComponent(Component);
        this._compositeType = CompositeTypes.StatelessFunctional;
      } else {
        if (isPureComponent(Component)) {
          this._compositeType = CompositeTypes.PureClass;
        } else {
          this._compositeType = CompositeTypes.ImpureClass;
        }
      }

      if (true) {
        // This will throw later in _renderValidatedComponent, but add an early
        // warning now to help debugging
        if (inst.render == null) {
           true ? warning(false, '%s(...): No `render` method found on the returned component ' + 'instance: you may have forgotten to define `render`.', Component.displayName || Component.name || 'Component') : void 0;
        }

        var propsMutated = inst.props !== publicProps;
        var componentName = Component.displayName || Component.name || 'Component';

         true ? warning(inst.props === undefined || !propsMutated, '%s(...): When calling super() in `%s`, make sure to pass ' + 'up the same props that your component\'s constructor was passed.', componentName, componentName) : void 0;
      }

      // These should be set up in the constructor, but as a convenience for
      // simpler class abstractions, we set them up after the fact.
      inst.props = publicProps;
      inst.context = publicContext;
      inst.refs = emptyObject;
      inst.updater = updateQueue;

      this._instance = inst;

      // Store a reference from the instance back to the internal representation
      ReactInstanceMap.set(inst, this);

      if (true) {
        // Since plain JS classes are defined without any special initialization
        // logic, we can not catch common errors early. Therefore, we have to
        // catch them here, at initialization time, instead.
         true ? warning(!inst.getInitialState || inst.getInitialState.isReactClassApproved, 'getInitialState was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Did you mean to define a state property instead?', this.getName() || 'a component') : void 0;
         true ? warning(!inst.getDefaultProps || inst.getDefaultProps.isReactClassApproved, 'getDefaultProps was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Use a static property to define defaultProps instead.', this.getName() || 'a component') : void 0;
         true ? warning(!inst.propTypes, 'propTypes was defined as an instance property on %s. Use a static ' + 'property to define propTypes instead.', this.getName() || 'a component') : void 0;
         true ? warning(!inst.contextTypes, 'contextTypes was defined as an instance property on %s. Use a ' + 'static property to define contextTypes instead.', this.getName() || 'a component') : void 0;
         true ? warning(typeof inst.componentShouldUpdate !== 'function', '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', this.getName() || 'A component') : void 0;
         true ? warning(typeof inst.componentDidUnmount !== 'function', '%s has a method called ' + 'componentDidUnmount(). But there is no such lifecycle method. ' + 'Did you mean componentWillUnmount()?', this.getName() || 'A component') : void 0;
         true ? warning(typeof inst.componentWillRecieveProps !== 'function', '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', this.getName() || 'A component') : void 0;
      }

      var initialState = inst.state;
      if (initialState === undefined) {
        inst.state = initialState = null;
      }
      !(typeof initialState === 'object' && !Array.isArray(initialState)) ?  true ? invariant(false, '%s.state: must be set to an object or null', this.getName() || 'ReactCompositeComponent') : _prodInvariant('106', this.getName() || 'ReactCompositeComponent') : void 0;

      this._pendingStateQueue = null;
      this._pendingReplaceState = false;
      this._pendingForceUpdate = false;

      var markup;
      if (inst.unstable_handleError) {
        markup = this.performInitialMountWithErrorHandling(renderedElement, hostParent, hostContainerInfo, transaction, context);
      } else {
        markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
      }

      if (inst.componentDidMount) {
        if (true) {
          transaction.getReactMountReady().enqueue(function () {
            measureLifeCyclePerf(function () {
              return inst.componentDidMount();
            }, _this._debugID, 'componentDidMount');
          });
        } else {
          transaction.getReactMountReady().enqueue(inst.componentDidMount, inst);
        }
      }

      return markup;
    },

    _constructComponent: function (doConstruct, publicProps, publicContext, updateQueue) {
      if (true) {
        ReactCurrentOwner.current = this;
        try {
          return this._constructComponentWithoutOwner(doConstruct, publicProps, publicContext, updateQueue);
        } finally {
          ReactCurrentOwner.current = null;
        }
      } else {
        return this._constructComponentWithoutOwner(doConstruct, publicProps, publicContext, updateQueue);
      }
    },

    _constructComponentWithoutOwner: function (doConstruct, publicProps, publicContext, updateQueue) {
      var Component = this._currentElement.type;

      if (doConstruct) {
        if (true) {
          return measureLifeCyclePerf(function () {
            return new Component(publicProps, publicContext, updateQueue);
          }, this._debugID, 'ctor');
        } else {
          return new Component(publicProps, publicContext, updateQueue);
        }
      }

      // This can still be an instance in case of factory components
      // but we'll count this as time spent rendering as the more common case.
      if (true) {
        return measureLifeCyclePerf(function () {
          return Component(publicProps, publicContext, updateQueue);
        }, this._debugID, 'render');
      } else {
        return Component(publicProps, publicContext, updateQueue);
      }
    },

    performInitialMountWithErrorHandling: function (renderedElement, hostParent, hostContainerInfo, transaction, context) {
      var markup;
      var checkpoint = transaction.checkpoint();
      try {
        markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
      } catch (e) {
        // Roll back to checkpoint, handle error (which may add items to the transaction), and take a new checkpoint
        transaction.rollback(checkpoint);
        this._instance.unstable_handleError(e);
        if (this._pendingStateQueue) {
          this._instance.state = this._processPendingState(this._instance.props, this._instance.context);
        }
        checkpoint = transaction.checkpoint();

        this._renderedComponent.unmountComponent(true);
        transaction.rollback(checkpoint);

        // Try again - we've informed the component about the error, so they can render an error message this time.
        // If this throws again, the error will bubble up (and can be caught by a higher error boundary).
        markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
      }
      return markup;
    },

    performInitialMount: function (renderedElement, hostParent, hostContainerInfo, transaction, context) {
      var inst = this._instance;

      var debugID = 0;
      if (true) {
        debugID = this._debugID;
      }

      if (inst.componentWillMount) {
        if (true) {
          measureLifeCyclePerf(function () {
            return inst.componentWillMount();
          }, debugID, 'componentWillMount');
        } else {
          inst.componentWillMount();
        }
        // When mounting, calls to `setState` by `componentWillMount` will set
        // `this._pendingStateQueue` without triggering a re-render.
        if (this._pendingStateQueue) {
          inst.state = this._processPendingState(inst.props, inst.context);
        }
      }

      // If not a stateless component, we now render
      if (renderedElement === undefined) {
        renderedElement = this._renderValidatedComponent();
      }

      var nodeType = ReactNodeTypes.getType(renderedElement);
      this._renderedNodeType = nodeType;
      var child = this._instantiateReactComponent(renderedElement, nodeType !== ReactNodeTypes.EMPTY /* shouldHaveDebugID */
      );
      this._renderedComponent = child;

      var markup = ReactReconciler.mountComponent(child, transaction, hostParent, hostContainerInfo, this._processChildContext(context), debugID);

      if (true) {
        if (debugID !== 0) {
          var childDebugIDs = child._debugID !== 0 ? [child._debugID] : [];
          ReactInstrumentation.debugTool.onSetChildren(debugID, childDebugIDs);
        }
      }

      return markup;
    },

    getHostNode: function () {
      return ReactReconciler.getHostNode(this._renderedComponent);
    },

    /**
     * Releases any resources allocated by `mountComponent`.
     *
     * @final
     * @internal
     */
    unmountComponent: function (safely) {
      if (!this._renderedComponent) {
        return;
      }

      var inst = this._instance;

      if (inst.componentWillUnmount && !inst._calledComponentWillUnmount) {
        inst._calledComponentWillUnmount = true;

        if (safely) {
          var name = this.getName() + '.componentWillUnmount()';
          ReactErrorUtils.invokeGuardedCallback(name, inst.componentWillUnmount.bind(inst));
        } else {
          if (true) {
            measureLifeCyclePerf(function () {
              return inst.componentWillUnmount();
            }, this._debugID, 'componentWillUnmount');
          } else {
            inst.componentWillUnmount();
          }
        }
      }

      if (this._renderedComponent) {
        ReactReconciler.unmountComponent(this._renderedComponent, safely);
        this._renderedNodeType = null;
        this._renderedComponent = null;
        this._instance = null;
      }

      // Reset pending fields
      // Even if this component is scheduled for another update in ReactUpdates,
      // it would still be ignored because these fields are reset.
      this._pendingStateQueue = null;
      this._pendingReplaceState = false;
      this._pendingForceUpdate = false;
      this._pendingCallbacks = null;
      this._pendingElement = null;

      // These fields do not really need to be reset since this object is no
      // longer accessible.
      this._context = null;
      this._rootNodeID = 0;
      this._topLevelWrapper = null;

      // Delete the reference from the instance to this internal representation
      // which allow the internals to be properly cleaned up even if the user
      // leaks a reference to the public instance.
      ReactInstanceMap.remove(inst);

      // Some existing components rely on inst.props even after they've been
      // destroyed (in event handlers).
      // TODO: inst.props = null;
      // TODO: inst.state = null;
      // TODO: inst.context = null;
    },

    /**
     * Filters the context object to only contain keys specified in
     * `contextTypes`
     *
     * @param {object} context
     * @return {?object}
     * @private
     */
    _maskContext: function (context) {
      var Component = this._currentElement.type;
      var contextTypes = Component.contextTypes;
      if (!contextTypes) {
        return emptyObject;
      }
      var maskedContext = {};
      for (var contextName in contextTypes) {
        maskedContext[contextName] = context[contextName];
      }
      return maskedContext;
    },

    /**
     * Filters the context object to only contain keys specified in
     * `contextTypes`, and asserts that they are valid.
     *
     * @param {object} context
     * @return {?object}
     * @private
     */
    _processContext: function (context) {
      var maskedContext = this._maskContext(context);
      if (true) {
        var Component = this._currentElement.type;
        if (Component.contextTypes) {
          this._checkContextTypes(Component.contextTypes, maskedContext, 'context');
        }
      }
      return maskedContext;
    },

    /**
     * @param {object} currentContext
     * @return {object}
     * @private
     */
    _processChildContext: function (currentContext) {
      var Component = this._currentElement.type;
      var inst = this._instance;
      var childContext;

      if (inst.getChildContext) {
        if (true) {
          ReactInstrumentation.debugTool.onBeginProcessingChildContext();
          try {
            childContext = inst.getChildContext();
          } finally {
            ReactInstrumentation.debugTool.onEndProcessingChildContext();
          }
        } else {
          childContext = inst.getChildContext();
        }
      }

      if (childContext) {
        !(typeof Component.childContextTypes === 'object') ?  true ? invariant(false, '%s.getChildContext(): childContextTypes must be defined in order to use getChildContext().', this.getName() || 'ReactCompositeComponent') : _prodInvariant('107', this.getName() || 'ReactCompositeComponent') : void 0;
        if (true) {
          this._checkContextTypes(Component.childContextTypes, childContext, 'childContext');
        }
        for (var name in childContext) {
          !(name in Component.childContextTypes) ?  true ? invariant(false, '%s.getChildContext(): key "%s" is not defined in childContextTypes.', this.getName() || 'ReactCompositeComponent', name) : _prodInvariant('108', this.getName() || 'ReactCompositeComponent', name) : void 0;
        }
        return _assign({}, currentContext, childContext);
      }
      return currentContext;
    },

    /**
     * Assert that the context types are valid
     *
     * @param {object} typeSpecs Map of context field to a ReactPropType
     * @param {object} values Runtime values that need to be type-checked
     * @param {string} location e.g. "prop", "context", "child context"
     * @private
     */
    _checkContextTypes: function (typeSpecs, values, location) {
      if (true) {
        checkReactTypeSpec(typeSpecs, values, location, this.getName(), null, this._debugID);
      }
    },

    receiveComponent: function (nextElement, transaction, nextContext) {
      var prevElement = this._currentElement;
      var prevContext = this._context;

      this._pendingElement = null;

      this.updateComponent(transaction, prevElement, nextElement, prevContext, nextContext);
    },

    /**
     * If any of `_pendingElement`, `_pendingStateQueue`, or `_pendingForceUpdate`
     * is set, update the component.
     *
     * @param {ReactReconcileTransaction} transaction
     * @internal
     */
    performUpdateIfNecessary: function (transaction) {
      if (this._pendingElement != null) {
        ReactReconciler.receiveComponent(this, this._pendingElement, transaction, this._context);
      } else if (this._pendingStateQueue !== null || this._pendingForceUpdate) {
        this.updateComponent(transaction, this._currentElement, this._currentElement, this._context, this._context);
      } else {
        this._updateBatchNumber = null;
      }
    },

    /**
     * Perform an update to a mounted component. The componentWillReceiveProps and
     * shouldComponentUpdate methods are called, then (assuming the update isn't
     * skipped) the remaining update lifecycle methods are called and the DOM
     * representation is updated.
     *
     * By default, this implements React's rendering and reconciliation algorithm.
     * Sophisticated clients may wish to override this.
     *
     * @param {ReactReconcileTransaction} transaction
     * @param {ReactElement} prevParentElement
     * @param {ReactElement} nextParentElement
     * @internal
     * @overridable
     */
    updateComponent: function (transaction, prevParentElement, nextParentElement, prevUnmaskedContext, nextUnmaskedContext) {
      var inst = this._instance;
      !(inst != null) ?  true ? invariant(false, 'Attempted to update component `%s` that has already been unmounted (or failed to mount).', this.getName() || 'ReactCompositeComponent') : _prodInvariant('136', this.getName() || 'ReactCompositeComponent') : void 0;

      var willReceive = false;
      var nextContext;

      // Determine if the context has changed or not
      if (this._context === nextUnmaskedContext) {
        nextContext = inst.context;
      } else {
        nextContext = this._processContext(nextUnmaskedContext);
        willReceive = true;
      }

      var prevProps = prevParentElement.props;
      var nextProps = nextParentElement.props;

      // Not a simple state update but a props update
      if (prevParentElement !== nextParentElement) {
        willReceive = true;
      }

      // An update here will schedule an update but immediately set
      // _pendingStateQueue which will ensure that any state updates gets
      // immediately reconciled instead of waiting for the next batch.
      if (willReceive && inst.componentWillReceiveProps) {
        if (true) {
          measureLifeCyclePerf(function () {
            return inst.componentWillReceiveProps(nextProps, nextContext);
          }, this._debugID, 'componentWillReceiveProps');
        } else {
          inst.componentWillReceiveProps(nextProps, nextContext);
        }
      }

      var nextState = this._processPendingState(nextProps, nextContext);
      var shouldUpdate = true;

      if (!this._pendingForceUpdate) {
        if (inst.shouldComponentUpdate) {
          if (true) {
            shouldUpdate = measureLifeCyclePerf(function () {
              return inst.shouldComponentUpdate(nextProps, nextState, nextContext);
            }, this._debugID, 'shouldComponentUpdate');
          } else {
            shouldUpdate = inst.shouldComponentUpdate(nextProps, nextState, nextContext);
          }
        } else {
          if (this._compositeType === CompositeTypes.PureClass) {
            shouldUpdate = !shallowEqual(prevProps, nextProps) || !shallowEqual(inst.state, nextState);
          }
        }
      }

      if (true) {
         true ? warning(shouldUpdate !== undefined, '%s.shouldComponentUpdate(): Returned undefined instead of a ' + 'boolean value. Make sure to return true or false.', this.getName() || 'ReactCompositeComponent') : void 0;
      }

      this._updateBatchNumber = null;
      if (shouldUpdate) {
        this._pendingForceUpdate = false;
        // Will set `this.props`, `this.state` and `this.context`.
        this._performComponentUpdate(nextParentElement, nextProps, nextState, nextContext, transaction, nextUnmaskedContext);
      } else {
        // If it's determined that a component should not update, we still want
        // to set props and state but we shortcut the rest of the update.
        this._currentElement = nextParentElement;
        this._context = nextUnmaskedContext;
        inst.props = nextProps;
        inst.state = nextState;
        inst.context = nextContext;
      }
    },

    _processPendingState: function (props, context) {
      var inst = this._instance;
      var queue = this._pendingStateQueue;
      var replace = this._pendingReplaceState;
      this._pendingReplaceState = false;
      this._pendingStateQueue = null;

      if (!queue) {
        return inst.state;
      }

      if (replace && queue.length === 1) {
        return queue[0];
      }

      var nextState = _assign({}, replace ? queue[0] : inst.state);
      for (var i = replace ? 1 : 0; i < queue.length; i++) {
        var partial = queue[i];
        _assign(nextState, typeof partial === 'function' ? partial.call(inst, nextState, props, context) : partial);
      }

      return nextState;
    },

    /**
     * Merges new props and state, notifies delegate methods of update and
     * performs update.
     *
     * @param {ReactElement} nextElement Next element
     * @param {object} nextProps Next public object to set as properties.
     * @param {?object} nextState Next object to set as state.
     * @param {?object} nextContext Next public object to set as context.
     * @param {ReactReconcileTransaction} transaction
     * @param {?object} unmaskedContext
     * @private
     */
    _performComponentUpdate: function (nextElement, nextProps, nextState, nextContext, transaction, unmaskedContext) {
      var _this2 = this;

      var inst = this._instance;

      var hasComponentDidUpdate = Boolean(inst.componentDidUpdate);
      var prevProps;
      var prevState;
      var prevContext;
      if (hasComponentDidUpdate) {
        prevProps = inst.props;
        prevState = inst.state;
        prevContext = inst.context;
      }

      if (inst.componentWillUpdate) {
        if (true) {
          measureLifeCyclePerf(function () {
            return inst.componentWillUpdate(nextProps, nextState, nextContext);
          }, this._debugID, 'componentWillUpdate');
        } else {
          inst.componentWillUpdate(nextProps, nextState, nextContext);
        }
      }

      this._currentElement = nextElement;
      this._context = unmaskedContext;
      inst.props = nextProps;
      inst.state = nextState;
      inst.context = nextContext;

      this._updateRenderedComponent(transaction, unmaskedContext);

      if (hasComponentDidUpdate) {
        if (true) {
          transaction.getReactMountReady().enqueue(function () {
            measureLifeCyclePerf(inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext), _this2._debugID, 'componentDidUpdate');
          });
        } else {
          transaction.getReactMountReady().enqueue(inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext), inst);
        }
      }
    },

    /**
     * Call the component's `render` method and update the DOM accordingly.
     *
     * @param {ReactReconcileTransaction} transaction
     * @internal
     */
    _updateRenderedComponent: function (transaction, context) {
      var prevComponentInstance = this._renderedComponent;
      var prevRenderedElement = prevComponentInstance._currentElement;
      var nextRenderedElement = this._renderValidatedComponent();

      var debugID = 0;
      if (true) {
        debugID = this._debugID;
      }

      if (shouldUpdateReactComponent(prevRenderedElement, nextRenderedElement)) {
        ReactReconciler.receiveComponent(prevComponentInstance, nextRenderedElement, transaction, this._processChildContext(context));
      } else {
        var oldHostNode = ReactReconciler.getHostNode(prevComponentInstance);
        ReactReconciler.unmountComponent(prevComponentInstance, false);

        var nodeType = ReactNodeTypes.getType(nextRenderedElement);
        this._renderedNodeType = nodeType;
        var child = this._instantiateReactComponent(nextRenderedElement, nodeType !== ReactNodeTypes.EMPTY /* shouldHaveDebugID */
        );
        this._renderedComponent = child;

        var nextMarkup = ReactReconciler.mountComponent(child, transaction, this._hostParent, this._hostContainerInfo, this._processChildContext(context), debugID);

        if (true) {
          if (debugID !== 0) {
            var childDebugIDs = child._debugID !== 0 ? [child._debugID] : [];
            ReactInstrumentation.debugTool.onSetChildren(debugID, childDebugIDs);
          }
        }

        this._replaceNodeWithMarkup(oldHostNode, nextMarkup, prevComponentInstance);
      }
    },

    /**
     * Overridden in shallow rendering.
     *
     * @protected
     */
    _replaceNodeWithMarkup: function (oldHostNode, nextMarkup, prevInstance) {
      ReactComponentEnvironment.replaceNodeWithMarkup(oldHostNode, nextMarkup, prevInstance);
    },

    /**
     * @protected
     */
    _renderValidatedComponentWithoutOwnerOrContext: function () {
      var inst = this._instance;
      var renderedElement;

      if (true) {
        renderedElement = measureLifeCyclePerf(function () {
          return inst.render();
        }, this._debugID, 'render');
      } else {
        renderedElement = inst.render();
      }

      if (true) {
        // We allow auto-mocks to proceed as if they're returning null.
        if (renderedElement === undefined && inst.render._isMockFunction) {
          // This is probably bad practice. Consider warning here and
          // deprecating this convenience.
          renderedElement = null;
        }
      }

      return renderedElement;
    },

    /**
     * @private
     */
    _renderValidatedComponent: function () {
      var renderedElement;
      if (true) {
        ReactCurrentOwner.current = this;
        try {
          renderedElement = this._renderValidatedComponentWithoutOwnerOrContext();
        } finally {
          ReactCurrentOwner.current = null;
        }
      } else {
        renderedElement = this._renderValidatedComponentWithoutOwnerOrContext();
      }
      !(
      // TODO: An `isValidNode` function would probably be more appropriate
      renderedElement === null || renderedElement === false || React.isValidElement(renderedElement)) ?  true ? invariant(false, '%s.render(): A valid React element (or null) must be returned. You may have returned undefined, an array or some other invalid object.', this.getName() || 'ReactCompositeComponent') : _prodInvariant('109', this.getName() || 'ReactCompositeComponent') : void 0;

      return renderedElement;
    },

    /**
     * Lazily allocates the refs object and stores `component` as `ref`.
     *
     * @param {string} ref Reference name.
     * @param {component} component Component to store as `ref`.
     * @final
     * @private
     */
    attachRef: function (ref, component) {
      var inst = this.getPublicInstance();
      !(inst != null) ?  true ? invariant(false, 'Stateless function components cannot have refs.') : _prodInvariant('110') : void 0;
      var publicComponentInstance = component.getPublicInstance();
      if (true) {
        var componentName = component && component.getName ? component.getName() : 'a component';
         true ? warning(publicComponentInstance != null || component._compositeType !== CompositeTypes.StatelessFunctional, 'Stateless function components cannot be given refs ' + '(See ref "%s" in %s created by %s). ' + 'Attempts to access this ref will fail.', ref, componentName, this.getName()) : void 0;
      }
      var refs = inst.refs === emptyObject ? inst.refs = {} : inst.refs;
      refs[ref] = publicComponentInstance;
    },

    /**
     * Detaches a reference name.
     *
     * @param {string} ref Name to dereference.
     * @final
     * @private
     */
    detachRef: function (ref) {
      var refs = this.getPublicInstance().refs;
      delete refs[ref];
    },

    /**
     * Get a text description of the component that can be used to identify it
     * in error messages.
     * @return {string} The name or null.
     * @internal
     */
    getName: function () {
      var type = this._currentElement.type;
      var constructor = this._instance && this._instance.constructor;
      return type.displayName || constructor && constructor.displayName || type.name || constructor && constructor.name || null;
    },

    /**
     * Get the publicly accessible representation of this component - i.e. what
     * is exposed by refs and returned by render. Can be null for stateless
     * components.
     *
     * @return {ReactComponent} the public component instance.
     * @internal
     */
    getPublicInstance: function () {
      var inst = this._instance;
      if (this._compositeType === CompositeTypes.StatelessFunctional) {
        return null;
      }
      return inst;
    },

    // Stub
    _instantiateReactComponent: null

  };

  module.exports = ReactCompositeComponent;

/***/ },
/* 503 */
/***/ function(module, exports, __webpack_require__) {

  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   * 
   */

  'use strict';

  var _prodInvariant = __webpack_require__(418);

  var React = __webpack_require__(386);

  var invariant = __webpack_require__(391);

  var ReactNodeTypes = {
    HOST: 0,
    COMPOSITE: 1,
    EMPTY: 2,

    getType: function (node) {
      if (node === null || node === false) {
        return ReactNodeTypes.EMPTY;
      } else if (React.isValidElement(node)) {
        if (typeof node.type === 'function') {
          return ReactNodeTypes.COMPOSITE;
        } else {
          return ReactNodeTypes.HOST;
        }
      }
       true ?  true ? invariant(false, 'Unexpected node: %s', node) : _prodInvariant('26', node) : void 0;
    }
  };

  module.exports = ReactNodeTypes;

/***/ },
/* 504 */
/***/ function(module, exports, __webpack_require__) {

  /* WEBPACK VAR INJECTION */(function(process) {/**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  var _prodInvariant = __webpack_require__(418);

  var ReactPropTypeLocationNames = __webpack_require__(505);
  var ReactPropTypesSecret = __webpack_require__(493);

  var invariant = __webpack_require__(391);
  var warning = __webpack_require__(394);

  var ReactComponentTreeHook;

  if (typeof process !== 'undefined' && process.env && ("development") === 'test') {
    // Temporary hack.
    // Inline requires don't work well with Jest:
    // https://github.com/facebook/react/issues/7240
    // Remove the inline requires when we don't need them anymore:
    // https://github.com/facebook/react/pull/7178
    ReactComponentTreeHook = __webpack_require__(409);
  }

  var loggedTypeFailures = {};

  /**
   * Assert that the values match with the type specs.
   * Error messages are memorized and will only be shown once.
   *
   * @param {object} typeSpecs Map of name to a ReactPropType
   * @param {object} values Runtime values that need to be type-checked
   * @param {string} location e.g. "prop", "context", "child context"
   * @param {string} componentName Name of the component for error messages.
   * @param {?object} element The React element that is being type-checked
   * @param {?number} debugID The React component instance that is being type-checked
   * @private
   */
  function checkReactTypeSpec(typeSpecs, values, location, componentName, element, debugID) {
    for (var typeSpecName in typeSpecs) {
      if (typeSpecs.hasOwnProperty(typeSpecName)) {
        var error;
        // Prop type validation may throw. In case they do, we don't want to
        // fail the render phase where it didn't fail before. So we log it.
        // After these have been cleaned up, we'll let them throw.
        try {
          // This is intentionally an invariant that gets caught. It's the same
          // behavior as without this statement except with a better message.
          !(typeof typeSpecs[typeSpecName] === 'function') ?  true ? invariant(false, '%s: %s type `%s` is invalid; it must be a function, usually from React.PropTypes.', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : _prodInvariant('84', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : void 0;
          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
        } catch (ex) {
          error = ex;
        }
         true ? warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName, typeof error) : void 0;
        if (error instanceof Error && !(error.message in loggedTypeFailures)) {
          // Only monitor this failure once because there tends to be a lot of the
          // same error.
          loggedTypeFailures[error.message] = true;

          var componentStackInfo = '';

          if (true) {
            if (!ReactComponentTreeHook) {
              ReactComponentTreeHook = __webpack_require__(409);
            }
            if (debugID !== null) {
              componentStackInfo = ReactComponentTreeHook.getStackAddendumByID(debugID);
            } else if (element !== null) {
              componentStackInfo = ReactComponentTreeHook.getCurrentStackAddendum(element);
            }
          }

           true ? warning(false, 'Failed %s type: %s%s', location, error.message, componentStackInfo) : void 0;
        }
      }
    }
  }

  module.exports = checkReactTypeSpec;
  /* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(72)))

/***/ },
/* 505 */
/***/ function(module, exports, __webpack_require__) {

  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   * 
   */

  'use strict';

  var ReactPropTypeLocationNames = {};

  if (true) {
    ReactPropTypeLocationNames = {
      prop: 'prop',
      context: 'context',
      childContext: 'child context'
    };
  }

  module.exports = ReactPropTypeLocationNames;

/***/ },
/* 506 */
/***/ function(module, exports) {

  /**
   * Copyright (c) 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   * @typechecks
   * 
   */

  /*eslint-disable no-self-compare */

  'use strict';

  var hasOwnProperty = Object.prototype.hasOwnProperty;

  /**
   * inlined Object.is polyfill to avoid requiring consumers ship their own
   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
   */
  function is(x, y) {
    // SameValue algorithm
    if (x === y) {
      // Steps 1-5, 7-10
      // Steps 6.b-6.e: +0 != -0
      // Added the nonzero y check to make Flow happy, but it is redundant
      return x !== 0 || y !== 0 || 1 / x === 1 / y;
    } else {
      // Step 6.a: NaN == NaN
      return x !== x && y !== y;
    }
  }

  /**
   * Performs equality by iterating through keys on an object and returning false
   * when any key has values which are not strictly equal between the arguments.
   * Returns true when the values of all keys are strictly equal.
   */
  function shallowEqual(objA, objB) {
    if (is(objA, objB)) {
      return true;
    }

    if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {
      return false;
    }

    var keysA = Object.keys(objA);
    var keysB = Object.keys(objB);

    if (keysA.length !== keysB.length) {
      return false;
    }

    // Test for A's keys different from B.
    for (var i = 0; i < keysA.length; i++) {
      if (!hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {
        return false;
      }
    }

    return true;
  }

  module.exports = shallowEqual;

/***/ },
/* 507 */
/***/ function(module, exports) {

  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  /**
   * Given a `prevElement` and `nextElement`, determines if the existing
   * instance should be updated as opposed to being destroyed or replaced by a new
   * instance. Both arguments are elements. This ensures that this logic can
   * operate on stateless trees without any backing instance.
   *
   * @param {?object} prevElement
   * @param {?object} nextElement
   * @return {boolean} True if the existing instance should be updated.
   * @protected
   */

  function shouldUpdateReactComponent(prevElement, nextElement) {
    var prevEmpty = prevElement === null || prevElement === false;
    var nextEmpty = nextElement === null || nextElement === false;
    if (prevEmpty || nextEmpty) {
      return prevEmpty === nextEmpty;
    }

    var prevType = typeof prevElement;
    var nextType = typeof nextElement;
    if (prevType === 'string' || prevType === 'number') {
      return nextType === 'string' || nextType === 'number';
    } else {
      return nextType === 'object' && prevElement.type === nextElement.type && prevElement.key === nextElement.key;
    }
  }

  module.exports = shouldUpdateReactComponent;

/***/ },
/* 508 */
/***/ function(module, exports) {

  /**
   * Copyright 2014-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  var emptyComponentFactory;

  var ReactEmptyComponentInjection = {
    injectEmptyComponentFactory: function (factory) {
      emptyComponentFactory = factory;
    }
  };

  var ReactEmptyComponent = {
    create: function (instantiate) {
      return emptyComponentFactory(instantiate);
    }
  };

  ReactEmptyComponent.injection = ReactEmptyComponentInjection;

  module.exports = ReactEmptyComponent;

/***/ },
/* 509 */
/***/ function(module, exports, __webpack_require__) {

  /**
   * Copyright 2014-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  var _prodInvariant = __webpack_require__(418),
      _assign = __webpack_require__(387);

  var invariant = __webpack_require__(391);

  var genericComponentClass = null;
  // This registry keeps track of wrapper classes around host tags.
  var tagToComponentClass = {};
  var textComponentClass = null;

  var ReactHostComponentInjection = {
    // This accepts a class that receives the tag string. This is a catch all
    // that can render any kind of tag.
    injectGenericComponentClass: function (componentClass) {
      genericComponentClass = componentClass;
    },
    // This accepts a text component class that takes the text string to be
    // rendered as props.
    injectTextComponentClass: function (componentClass) {
      textComponentClass = componentClass;
    },
    // This accepts a keyed object with classes as values. Each key represents a
    // tag. That particular tag will use this class instead of the generic one.
    injectComponentClasses: function (componentClasses) {
      _assign(tagToComponentClass, componentClasses);
    }
  };

  /**
   * Get a host internal component class for a specific tag.
   *
   * @param {ReactElement} element The element to create.
   * @return {function} The internal class constructor function.
   */
  function createInternalComponent(element) {
    !genericComponentClass ?  true ? invariant(false, 'There is no registered component for the tag %s', element.type) : _prodInvariant('111', element.type) : void 0;
    return new genericComponentClass(element);
  }

  /**
   * @param {ReactText} text
   * @return {ReactComponent}
   */
  function createInstanceForText(text) {
    return new textComponentClass(text);
  }

  /**
   * @param {ReactComponent} component
   * @return {boolean}
   */
  function isTextComponent(component) {
    return component instanceof textComponentClass;
  }

  var ReactHostComponent = {
    createInternalComponent: createInternalComponent,
    createInstanceForText: createInstanceForText,
    isTextComponent: isTextComponent,
    injection: ReactHostComponentInjection
  };

  module.exports = ReactHostComponent;

/***/ },
/* 510 */
/***/ function(module, exports) {

  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   * 
   */

  'use strict';

  var nextDebugID = 1;

  function getNextDebugID() {
    return nextDebugID++;
  }

  module.exports = getNextDebugID;

/***/ },
/* 511 */
/***/ function(module, exports) {

  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   * 
   */

  'use strict';

  /**
   * Escape and wrap key so it is safe to use as a reactid
   *
   * @param {string} key to be escaped.
   * @return {string} the escaped key.
   */

  function escape(key) {
    var escapeRegex = /[=:]/g;
    var escaperLookup = {
      '=': '=0',
      ':': '=2'
    };
    var escapedString = ('' + key).replace(escapeRegex, function (match) {
      return escaperLookup[match];
    });

    return '$' + escapedString;
  }

  /**
   * Unescape and unwrap key for human-readable display
   *
   * @param {string} key to unescape.
   * @return {string} the unescaped key.
   */
  function unescape(key) {
    var unescapeRegex = /(=0|=2)/g;
    var unescaperLookup = {
      '=0': '=',
      '=2': ':'
    };
    var keySubstring = key[0] === '.' && key[1] === '$' ? key.substring(2) : key.substring(1);

    return ('' + keySubstring).replace(unescapeRegex, function (match) {
      return unescaperLookup[match];
    });
  }

  var KeyEscapeUtils = {
    escape: escape,
    unescape: unescape
  };

  module.exports = KeyEscapeUtils;

/***/ },
/* 512 */
/***/ function(module, exports, __webpack_require__) {

  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  var _prodInvariant = __webpack_require__(418);

  var ReactCurrentOwner = __webpack_require__(393);
  var REACT_ELEMENT_TYPE = __webpack_require__(513);

  var getIteratorFn = __webpack_require__(514);
  var invariant = __webpack_require__(391);
  var KeyEscapeUtils = __webpack_require__(511);
  var warning = __webpack_require__(394);

  var SEPARATOR = '.';
  var SUBSEPARATOR = ':';

  /**
   * This is inlined from ReactElement since this file is shared between
   * isomorphic and renderers. We could extract this to a
   *
   */

  /**
   * TODO: Test that a single child and an array with one item have the same key
   * pattern.
   */

  var didWarnAboutMaps = false;

  /**
   * Generate a key string that identifies a component within a set.
   *
   * @param {*} component A component that could contain a manual key.
   * @param {number} index Index that is used if a manual key is not provided.
   * @return {string}
   */
  function getComponentKey(component, index) {
    // Do some typechecking here since we call this blindly. We want to ensure
    // that we don't block potential future ES APIs.
    if (component && typeof component === 'object' && component.key != null) {
      // Explicit key
      return KeyEscapeUtils.escape(component.key);
    }
    // Implicit key determined by the index in the set
    return index.toString(36);
  }

  /**
   * @param {?*} children Children tree container.
   * @param {!string} nameSoFar Name of the key path so far.
   * @param {!function} callback Callback to invoke with each child found.
   * @param {?*} traverseContext Used to pass information throughout the traversal
   * process.
   * @return {!number} The number of children in this subtree.
   */
  function traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {
    var type = typeof children;

    if (type === 'undefined' || type === 'boolean') {
      // All of the above are perceived as null.
      children = null;
    }

    if (children === null || type === 'string' || type === 'number' ||
    // The following is inlined from ReactElement. This means we can optimize
    // some checks. React Fiber also inlines this logic for similar purposes.
    type === 'object' && children.$$typeof === REACT_ELEMENT_TYPE) {
      callback(traverseContext, children,
      // If it's the only child, treat the name as if it was wrapped in an array
      // so that it's consistent if the number of children grows.
      nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);
      return 1;
    }

    var child;
    var nextName;
    var subtreeCount = 0; // Count of children found in the current subtree.
    var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;

    if (Array.isArray(children)) {
      for (var i = 0; i < children.length; i++) {
        child = children[i];
        nextName = nextNamePrefix + getComponentKey(child, i);
        subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
      }
    } else {
      var iteratorFn = getIteratorFn(children);
      if (iteratorFn) {
        var iterator = iteratorFn.call(children);
        var step;
        if (iteratorFn !== children.entries) {
          var ii = 0;
          while (!(step = iterator.next()).done) {
            child = step.value;
            nextName = nextNamePrefix + getComponentKey(child, ii++);
            subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
          }
        } else {
          if (true) {
            var mapsAsChildrenAddendum = '';
            if (ReactCurrentOwner.current) {
              var mapsAsChildrenOwnerName = ReactCurrentOwner.current.getName();
              if (mapsAsChildrenOwnerName) {
                mapsAsChildrenAddendum = ' Check the render method of `' + mapsAsChildrenOwnerName + '`.';
              }
            }
             true ? warning(didWarnAboutMaps, 'Using Maps as children is not yet fully supported. It is an ' + 'experimental feature that might be removed. Convert it to a ' + 'sequence / iterable of keyed ReactElements instead.%s', mapsAsChildrenAddendum) : void 0;
            didWarnAboutMaps = true;
          }
          // Iterator will provide entry [k,v] tuples rather than values.
          while (!(step = iterator.next()).done) {
            var entry = step.value;
            if (entry) {
              child = entry[1];
              nextName = nextNamePrefix + KeyEscapeUtils.escape(entry[0]) + SUBSEPARATOR + getComponentKey(child, 0);
              subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
            }
          }
        }
      } else if (type === 'object') {
        var addendum = '';
        if (true) {
          addendum = ' If you meant to render a collection of children, use an array ' + 'instead or wrap the object using createFragment(object) from the ' + 'React add-ons.';
          if (children._isReactElement) {
            addendum = ' It looks like you\'re using an element created by a different ' + 'version of React. Make sure to use only one copy of React.';
          }
          if (ReactCurrentOwner.current) {
            var name = ReactCurrentOwner.current.getName();
            if (name) {
              addendum += ' Check the render method of `' + name + '`.';
            }
          }
        }
        var childrenString = String(children);
         true ?  true ? invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : _prodInvariant('31', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : void 0;
      }
    }

    return subtreeCount;
  }

  /**
   * Traverses children that are typically specified as `props.children`, but
   * might also be specified through attributes:
   *
   * - `traverseAllChildren(this.props.children, ...)`
   * - `traverseAllChildren(this.props.leftPanelChildren, ...)`
   *
   * The `traverseContext` is an optional argument that is passed through the
   * entire traversal. It can be used to store accumulations or anything else that
   * the callback might find relevant.
   *
   * @param {?*} children Children tree object.
   * @param {!function} callback To invoke upon traversing each child.
   * @param {?*} traverseContext Context for traversal.
   * @return {!number} The number of children in this subtree.
   */
  function traverseAllChildren(children, callback, traverseContext) {
    if (children == null) {
      return 0;
    }

    return traverseAllChildrenImpl(children, '', callback, traverseContext);
  }

  module.exports = traverseAllChildren;

/***/ },
/* 513 */
/***/ function(module, exports) {

  /**
   * Copyright 2014-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   * 
   */

  'use strict';

  // The Symbol used to tag the ReactElement type. If there is no native Symbol
  // nor polyfill, then a plain number is used for performance.

  var REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol['for'] && Symbol['for']('react.element') || 0xeac7;

  module.exports = REACT_ELEMENT_TYPE;

/***/ },
/* 514 */
/***/ function(module, exports) {

  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   * 
   */

  'use strict';

  /* global Symbol */

  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.

  /**
   * Returns the iterator method function contained on the iterable object.
   *
   * Be sure to invoke the function with the iterable as context:
   *
   *     var iteratorFn = getIteratorFn(myIterable);
   *     if (iteratorFn) {
   *       var iterator = iteratorFn.call(myIterable);
   *       ...
   *     }
   *
   * @param {?object} maybeIterable
   * @return {?function}
   */
  function getIteratorFn(maybeIterable) {
    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
    if (typeof iteratorFn === 'function') {
      return iteratorFn;
    }
  }

  module.exports = getIteratorFn;

/***/ },
/* 515 */
/***/ function(module, exports, __webpack_require__) {

  /* WEBPACK VAR INJECTION */(function(process) {/**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   * 
   */

  'use strict';

  var KeyEscapeUtils = __webpack_require__(511);
  var traverseAllChildren = __webpack_require__(512);
  var warning = __webpack_require__(394);

  var ReactComponentTreeHook;

  if (typeof process !== 'undefined' && process.env && ("development") === 'test') {
    // Temporary hack.
    // Inline requires don't work well with Jest:
    // https://github.com/facebook/react/issues/7240
    // Remove the inline requires when we don't need them anymore:
    // https://github.com/facebook/react/pull/7178
    ReactComponentTreeHook = __webpack_require__(409);
  }

  /**
   * @param {function} traverseContext Context passed through traversal.
   * @param {?ReactComponent} child React child component.
   * @param {!string} name String name of key path to child.
   * @param {number=} selfDebugID Optional debugID of the current internal instance.
   */
  function flattenSingleChildIntoContext(traverseContext, child, name, selfDebugID) {
    // We found a component instance.
    if (traverseContext && typeof traverseContext === 'object') {
      var result = traverseContext;
      var keyUnique = result[name] === undefined;
      if (true) {
        if (!ReactComponentTreeHook) {
          ReactComponentTreeHook = __webpack_require__(409);
        }
        if (!keyUnique) {
           true ? warning(false, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.%s', KeyEscapeUtils.unescape(name), ReactComponentTreeHook.getStackAddendumByID(selfDebugID)) : void 0;
        }
      }
      if (keyUnique && child != null) {
        result[name] = child;
      }
    }
  }

  /**
   * Flattens children that are typically specified as `props.children`. Any null
   * children will not be included in the resulting object.
   * @return {!object} flattened children keyed by name.
   */
  function flattenChildren(children, selfDebugID) {
    if (children == null) {
      return children;
    }
    var result = {};

    if (true) {
      traverseAllChildren(children, function (traverseContext, child, name) {
        return flattenSingleChildIntoContext(traverseContext, child, name, selfDebugID);
      }, result);
    } else {
      traverseAllChildren(children, flattenSingleChildIntoContext, result);
    }
    return result;
  }

  module.exports = flattenChildren;
  /* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(72)))

/***/ },
/* 516 */
/***/ function(module, exports, __webpack_require__) {

  /**
   * Copyright 2014-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  var _assign = __webpack_require__(387);

  var PooledClass = __webpack_require__(433);
  var Transaction = __webpack_require__(451);
  var ReactInstrumentation = __webpack_require__(445);
  var ReactServerUpdateQueue = __webpack_require__(517);

  /**
   * Executed within the scope of the `Transaction` instance. Consider these as
   * being member methods, but with an implied ordering while being isolated from
   * each other.
   */
  var TRANSACTION_WRAPPERS = [];

  if (true) {
    TRANSACTION_WRAPPERS.push({
      initialize: ReactInstrumentation.debugTool.onBeginFlush,
      close: ReactInstrumentation.debugTool.onEndFlush
    });
  }

  var noopCallbackQueue = {
    enqueue: function () {}
  };

  /**
   * @class ReactServerRenderingTransaction
   * @param {boolean} renderToStaticMarkup
   */
  function ReactServerRenderingTransaction(renderToStaticMarkup) {
    this.reinitializeTransaction();
    this.renderToStaticMarkup = renderToStaticMarkup;
    this.useCreateElement = false;
    this.updateQueue = new ReactServerUpdateQueue(this);
  }

  var Mixin = {
    /**
     * @see Transaction
     * @abstract
     * @final
     * @return {array} Empty list of operation wrap procedures.
     */
    getTransactionWrappers: function () {
      return TRANSACTION_WRAPPERS;
    },

    /**
     * @return {object} The queue to collect `onDOMReady` callbacks with.
     */
    getReactMountReady: function () {
      return noopCallbackQueue;
    },

    /**
     * @return {object} The queue to collect React async events.
     */
    getUpdateQueue: function () {
      return this.updateQueue;
    },

    /**
     * `PooledClass` looks for this, and will invoke this before allowing this
     * instance to be reused.
     */
    destructor: function () {},

    checkpoint: function () {},

    rollback: function () {}
  };

  _assign(ReactServerRenderingTransaction.prototype, Transaction, Mixin);

  PooledClass.addPoolingTo(ReactServerRenderingTransaction);

  module.exports = ReactServerRenderingTransaction;

/***/ },
/* 517 */
/***/ function(module, exports, __webpack_require__) {

  /**
   * Copyright 2015-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   * 
   */

  'use strict';

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  var ReactUpdateQueue = __webpack_require__(518);

  var warning = __webpack_require__(394);

  function warnNoop(publicInstance, callerName) {
    if (true) {
      var constructor = publicInstance.constructor;
       true ? warning(false, '%s(...): Can only update a mounting component. ' + 'This usually means you called %s() outside componentWillMount() on the server. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, constructor && (constructor.displayName || constructor.name) || 'ReactClass') : void 0;
    }
  }

  /**
   * This is the update queue used for server rendering.
   * It delegates to ReactUpdateQueue while server rendering is in progress and
   * switches to ReactNoopUpdateQueue after the transaction has completed.
   * @class ReactServerUpdateQueue
   * @param {Transaction} transaction
   */

  var ReactServerUpdateQueue = function () {
    function ReactServerUpdateQueue(transaction) {
      _classCallCheck(this, ReactServerUpdateQueue);

      this.transaction = transaction;
    }

    /**
     * Checks whether or not this composite component is mounted.
     * @param {ReactClass} publicInstance The instance we want to test.
     * @return {boolean} True if mounted, false otherwise.
     * @protected
     * @final
     */


    ReactServerUpdateQueue.prototype.isMounted = function isMounted(publicInstance) {
      return false;
    };

    /**
     * Enqueue a callback that will be executed after all the pending updates
     * have processed.
     *
     * @param {ReactClass} publicInstance The instance to use as `this` context.
     * @param {?function} callback Called after state is updated.
     * @internal
     */


    ReactServerUpdateQueue.prototype.enqueueCallback = function enqueueCallback(publicInstance, callback, callerName) {
      if (this.transaction.isInTransaction()) {
        ReactUpdateQueue.enqueueCallback(publicInstance, callback, callerName);
      }
    };

    /**
     * Forces an update. This should only be invoked when it is known with
     * certainty that we are **not** in a DOM transaction.
     *
     * You may want to call this when you know that some deeper aspect of the
     * component's state has changed but `setState` was not called.
     *
     * This will not invoke `shouldComponentUpdate`, but it will invoke
     * `componentWillUpdate` and `componentDidUpdate`.
     *
     * @param {ReactClass} publicInstance The instance that should rerender.
     * @internal
     */


    ReactServerUpdateQueue.prototype.enqueueForceUpdate = function enqueueForceUpdate(publicInstance) {
      if (this.transaction.isInTransaction()) {
        ReactUpdateQueue.enqueueForceUpdate(publicInstance);
      } else {
        warnNoop(publicInstance, 'forceUpdate');
      }
    };

    /**
     * Replaces all of the state. Always use this or `setState` to mutate state.
     * You should treat `this.state` as immutable.
     *
     * There is no guarantee that `this.state` will be immediately updated, so
     * accessing `this.state` after calling this method may return the old value.
     *
     * @param {ReactClass} publicInstance The instance that should rerender.
     * @param {object|function} completeState Next state.
     * @internal
     */


    ReactServerUpdateQueue.prototype.enqueueReplaceState = function enqueueReplaceState(publicInstance, completeState) {
      if (this.transaction.isInTransaction()) {
        ReactUpdateQueue.enqueueReplaceState(publicInstance, completeState);
      } else {
        warnNoop(publicInstance, 'replaceState');
      }
    };

    /**
     * Sets a subset of the state. This only exists because _pendingState is
     * internal. This provides a merging strategy that is not available to deep
     * properties which is confusing. TODO: Expose pendingState or don't use it
     * during the merge.
     *
     * @param {ReactClass} publicInstance The instance that should rerender.
     * @param {object|function} partialState Next partial state to be merged with state.
     * @internal
     */


    ReactServerUpdateQueue.prototype.enqueueSetState = function enqueueSetState(publicInstance, partialState) {
      if (this.transaction.isInTransaction()) {
        ReactUpdateQueue.enqueueSetState(publicInstance, partialState);
      } else {
        warnNoop(publicInstance, 'setState');
      }
    };

    return ReactServerUpdateQueue;
  }();

  module.exports = ReactServerUpdateQueue;

/***/ },
/* 518 */
/***/ function(module, exports, __webpack_require__) {

  /**
   * Copyright 2015-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  var _prodInvariant = __webpack_require__(418);

  var ReactCurrentOwner = __webpack_require__(393);
  var ReactInstanceMap = __webpack_require__(499);
  var ReactInstrumentation = __webpack_require__(445);
  var ReactUpdates = __webpack_require__(439);

  var invariant = __webpack_require__(391);
  var warning = __webpack_require__(394);

  function enqueueUpdate(internalInstance) {
    ReactUpdates.enqueueUpdate(internalInstance);
  }

  function formatUnexpectedArgument(arg) {
    var type = typeof arg;
    if (type !== 'object') {
      return type;
    }
    var displayName = arg.constructor && arg.constructor.name || type;
    var keys = Object.keys(arg);
    if (keys.length > 0 && keys.length < 20) {
      return displayName + ' (keys: ' + keys.join(', ') + ')';
    }
    return displayName;
  }

  function getInternalInstanceReadyForUpdate(publicInstance, callerName) {
    var internalInstance = ReactInstanceMap.get(publicInstance);
    if (!internalInstance) {
      if (true) {
        var ctor = publicInstance.constructor;
        // Only warn when we have a callerName. Otherwise we should be silent.
        // We're probably calling from enqueueCallback. We don't want to warn
        // there because we already warned for the corresponding lifecycle method.
         true ? warning(!callerName, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, ctor && (ctor.displayName || ctor.name) || 'ReactClass') : void 0;
      }
      return null;
    }

    if (true) {
       true ? warning(ReactCurrentOwner.current == null, '%s(...): Cannot update during an existing state transition (such as ' + 'within `render` or another component\'s constructor). Render methods ' + 'should be a pure function of props and state; constructor ' + 'side-effects are an anti-pattern, but can be moved to ' + '`componentWillMount`.', callerName) : void 0;
    }

    return internalInstance;
  }

  /**
   * ReactUpdateQueue allows for state updates to be scheduled into a later
   * reconciliation step.
   */
  var ReactUpdateQueue = {

    /**
     * Checks whether or not this composite component is mounted.
     * @param {ReactClass} publicInstance The instance we want to test.
     * @return {boolean} True if mounted, false otherwise.
     * @protected
     * @final
     */
    isMounted: function (publicInstance) {
      if (true) {
        var owner = ReactCurrentOwner.current;
        if (owner !== null) {
           true ? warning(owner._warnedAboutRefsInRender, '%s is accessing isMounted inside its render() function. ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : void 0;
          owner._warnedAboutRefsInRender = true;
        }
      }
      var internalInstance = ReactInstanceMap.get(publicInstance);
      if (internalInstance) {
        // During componentWillMount and render this will still be null but after
        // that will always render to something. At least for now. So we can use
        // this hack.
        return !!internalInstance._renderedComponent;
      } else {
        return false;
      }
    },

    /**
     * Enqueue a callback that will be executed after all the pending updates
     * have processed.
     *
     * @param {ReactClass} publicInstance The instance to use as `this` context.
     * @param {?function} callback Called after state is updated.
     * @param {string} callerName Name of the calling function in the public API.
     * @internal
     */
    enqueueCallback: function (publicInstance, callback, callerName) {
      ReactUpdateQueue.validateCallback(callback, callerName);
      var internalInstance = getInternalInstanceReadyForUpdate(publicInstance);

      // Previously we would throw an error if we didn't have an internal
      // instance. Since we want to make it a no-op instead, we mirror the same
      // behavior we have in other enqueue* methods.
      // We also need to ignore callbacks in componentWillMount. See
      // enqueueUpdates.
      if (!internalInstance) {
        return null;
      }

      if (internalInstance._pendingCallbacks) {
        internalInstance._pendingCallbacks.push(callback);
      } else {
        internalInstance._pendingCallbacks = [callback];
      }
      // TODO: The callback here is ignored when setState is called from
      // componentWillMount. Either fix it or disallow doing so completely in
      // favor of getInitialState. Alternatively, we can disallow
      // componentWillMount during server-side rendering.
      enqueueUpdate(internalInstance);
    },

    enqueueCallbackInternal: function (internalInstance, callback) {
      if (internalInstance._pendingCallbacks) {
        internalInstance._pendingCallbacks.push(callback);
      } else {
        internalInstance._pendingCallbacks = [callback];
      }
      enqueueUpdate(internalInstance);
    },

    /**
     * Forces an update. This should only be invoked when it is known with
     * certainty that we are **not** in a DOM transaction.
     *
     * You may want to call this when you know that some deeper aspect of the
     * component's state has changed but `setState` was not called.
     *
     * This will not invoke `shouldComponentUpdate`, but it will invoke
     * `componentWillUpdate` and `componentDidUpdate`.
     *
     * @param {ReactClass} publicInstance The instance that should rerender.
     * @internal
     */
    enqueueForceUpdate: function (publicInstance) {
      var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'forceUpdate');

      if (!internalInstance) {
        return;
      }

      internalInstance._pendingForceUpdate = true;

      enqueueUpdate(internalInstance);
    },

    /**
     * Replaces all of the state. Always use this or `setState` to mutate state.
     * You should treat `this.state` as immutable.
     *
     * There is no guarantee that `this.state` will be immediately updated, so
     * accessing `this.state` after calling this method may return the old value.
     *
     * @param {ReactClass} publicInstance The instance that should rerender.
     * @param {object} completeState Next state.
     * @internal
     */
    enqueueReplaceState: function (publicInstance, completeState) {
      var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'replaceState');

      if (!internalInstance) {
        return;
      }

      internalInstance._pendingStateQueue = [completeState];
      internalInstance._pendingReplaceState = true;

      enqueueUpdate(internalInstance);
    },

    /**
     * Sets a subset of the state. This only exists because _pendingState is
     * internal. This provides a merging strategy that is not available to deep
     * properties which is confusing. TODO: Expose pendingState or don't use it
     * during the merge.
     *
     * @param {ReactClass} publicInstance The instance that should rerender.
     * @param {object} partialState Next partial state to be merged with state.
     * @internal
     */
    enqueueSetState: function (publicInstance, partialState) {
      if (true) {
        ReactInstrumentation.debugTool.onSetState();
         true ? warning(partialState != null, 'setState(...): You passed an undefined or null state object; ' + 'instead, use forceUpdate().') : void 0;
      }

      var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'setState');

      if (!internalInstance) {
        return;
      }

      var queue = internalInstance._pendingStateQueue || (internalInstance._pendingStateQueue = []);
      queue.push(partialState);

      enqueueUpdate(internalInstance);
    },

    enqueueElementInternal: function (internalInstance, nextElement, nextContext) {
      internalInstance._pendingElement = nextElement;
      // TODO: introduce _pendingContext instead of setting it directly.
      internalInstance._context = nextContext;
      enqueueUpdate(internalInstance);
    },

    validateCallback: function (callback, callerName) {
      !(!callback || typeof callback === 'function') ?  true ? invariant(false, '%s(...): Expected the last optional `callback` argument to be a function. Instead received: %s.', callerName, formatUnexpectedArgument(callback)) : _prodInvariant('122', callerName, formatUnexpectedArgument(callback)) : void 0;
    }

  };

  module.exports = ReactUpdateQueue;

/***/ },
/* 519 */
/***/ function(module, exports, __webpack_require__) {

  /**
   * Copyright 2015-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  var _assign = __webpack_require__(387);

  var emptyFunction = __webpack_require__(395);
  var warning = __webpack_require__(394);

  var validateDOMNesting = emptyFunction;

  if (true) {
    // This validation code was written based on the HTML5 parsing spec:
    // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
    //
    // Note: this does not catch all invalid nesting, nor does it try to (as it's
    // not clear what practical benefit doing so provides); instead, we warn only
    // for cases where the parser will give a parse tree differing from what React
    // intended. For example, <b><div></div></b> is invalid but we don't warn
    // because it still parses correctly; we do warn for other cases like nested
    // <p> tags where the beginning of the second element implicitly closes the
    // first, causing a confusing mess.

    // https://html.spec.whatwg.org/multipage/syntax.html#special
    var specialTags = ['address', 'applet', 'area', 'article', 'aside', 'base', 'basefont', 'bgsound', 'blockquote', 'body', 'br', 'button', 'caption', 'center', 'col', 'colgroup', 'dd', 'details', 'dir', 'div', 'dl', 'dt', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'frame', 'frameset', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'iframe', 'img', 'input', 'isindex', 'li', 'link', 'listing', 'main', 'marquee', 'menu', 'menuitem', 'meta', 'nav', 'noembed', 'noframes', 'noscript', 'object', 'ol', 'p', 'param', 'plaintext', 'pre', 'script', 'section', 'select', 'source', 'style', 'summary', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'title', 'tr', 'track', 'ul', 'wbr', 'xmp'];

    // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
    var inScopeTags = ['applet', 'caption', 'html', 'table', 'td', 'th', 'marquee', 'object', 'template',

    // https://html.spec.whatwg.org/multipage/syntax.html#html-integration-point
    // TODO: Distinguish by namespace here -- for <title>, including it here
    // errs on the side of fewer warnings
    'foreignObject', 'desc', 'title'];

    // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-button-scope
    var buttonScopeTags = inScopeTags.concat(['button']);

    // https://html.spec.whatwg.org/multipage/syntax.html#generate-implied-end-tags
    var impliedEndTags = ['dd', 'dt', 'li', 'option', 'optgroup', 'p', 'rp', 'rt'];

    var emptyAncestorInfo = {
      current: null,

      formTag: null,
      aTagInScope: null,
      buttonTagInScope: null,
      nobrTagInScope: null,
      pTagInButtonScope: null,

      listItemTagAutoclosing: null,
      dlItemTagAutoclosing: null
    };

    var updatedAncestorInfo = function (oldInfo, tag, instance) {
      var ancestorInfo = _assign({}, oldInfo || emptyAncestorInfo);
      var info = { tag: tag, instance: instance };

      if (inScopeTags.indexOf(tag) !== -1) {
        ancestorInfo.aTagInScope = null;
        ancestorInfo.buttonTagInScope = null;
        ancestorInfo.nobrTagInScope = null;
      }
      if (buttonScopeTags.indexOf(tag) !== -1) {
        ancestorInfo.pTagInButtonScope = null;
      }

      // See rules for 'li', 'dd', 'dt' start tags in
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
      if (specialTags.indexOf(tag) !== -1 && tag !== 'address' && tag !== 'div' && tag !== 'p') {
        ancestorInfo.listItemTagAutoclosing = null;
        ancestorInfo.dlItemTagAutoclosing = null;
      }

      ancestorInfo.current = info;

      if (tag === 'form') {
        ancestorInfo.formTag = info;
      }
      if (tag === 'a') {
        ancestorInfo.aTagInScope = info;
      }
      if (tag === 'button') {
        ancestorInfo.buttonTagInScope = info;
      }
      if (tag === 'nobr') {
        ancestorInfo.nobrTagInScope = info;
      }
      if (tag === 'p') {
        ancestorInfo.pTagInButtonScope = info;
      }
      if (tag === 'li') {
        ancestorInfo.listItemTagAutoclosing = info;
      }
      if (tag === 'dd' || tag === 'dt') {
        ancestorInfo.dlItemTagAutoclosing = info;
      }

      return ancestorInfo;
    };

    /**
     * Returns whether
     */
    var isTagValidWithParent = function (tag, parentTag) {
      // First, let's check if we're in an unusual parsing mode...
      switch (parentTag) {
        // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inselect
        case 'select':
          return tag === 'option' || tag === 'optgroup' || tag === '#text';
        case 'optgroup':
          return tag === 'option' || tag === '#text';
        // Strictly speaking, seeing an <option> doesn't mean we're in a <select>
        // but
        case 'option':
          return tag === '#text';

        // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intd
        // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incaption
        // No special behavior since these rules fall back to "in body" mode for
        // all except special table nodes which cause bad parsing behavior anyway.

        // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intr
        case 'tr':
          return tag === 'th' || tag === 'td' || tag === 'style' || tag === 'script' || tag === 'template';

        // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intbody
        case 'tbody':
        case 'thead':
        case 'tfoot':
          return tag === 'tr' || tag === 'style' || tag === 'script' || tag === 'template';

        // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incolgroup
        case 'colgroup':
          return tag === 'col' || tag === 'template';

        // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intable
        case 'table':
          return tag === 'caption' || tag === 'colgroup' || tag === 'tbody' || tag === 'tfoot' || tag === 'thead' || tag === 'style' || tag === 'script' || tag === 'template';

        // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inhead
        case 'head':
          return tag === 'base' || tag === 'basefont' || tag === 'bgsound' || tag === 'link' || tag === 'meta' || tag === 'title' || tag === 'noscript' || tag === 'noframes' || tag === 'style' || tag === 'script' || tag === 'template';

        // https://html.spec.whatwg.org/multipage/semantics.html#the-html-element
        case 'html':
          return tag === 'head' || tag === 'body';
        case '#document':
          return tag === 'html';
      }

      // Probably in the "in body" parsing mode, so we outlaw only tag combos
      // where the parsing rules cause implicit opens or closes to be added.
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
      switch (tag) {
        case 'h1':
        case 'h2':
        case 'h3':
        case 'h4':
        case 'h5':
        case 'h6':
          return parentTag !== 'h1' && parentTag !== 'h2' && parentTag !== 'h3' && parentTag !== 'h4' && parentTag !== 'h5' && parentTag !== 'h6';

        case 'rp':
        case 'rt':
          return impliedEndTags.indexOf(parentTag) === -1;

        case 'body':
        case 'caption':
        case 'col':
        case 'colgroup':
        case 'frame':
        case 'head':
        case 'html':
        case 'tbody':
        case 'td':
        case 'tfoot':
        case 'th':
        case 'thead':
        case 'tr':
          // These tags are only valid with a few parents that have special child
          // parsing rules -- if we're down here, then none of those matched and
          // so we allow it only if we don't know what the parent is, as all other
          // cases are invalid.
          return parentTag == null;
      }

      return true;
    };

    /**
     * Returns whether
     */
    var findInvalidAncestorForTag = function (tag, ancestorInfo) {
      switch (tag) {
        case 'address':
        case 'article':
        case 'aside':
        case 'blockquote':
        case 'center':
        case 'details':
        case 'dialog':
        case 'dir':
        case 'div':
        case 'dl':
        case 'fieldset':
        case 'figcaption':
        case 'figure':
        case 'footer':
        case 'header':
        case 'hgroup':
        case 'main':
        case 'menu':
        case 'nav':
        case 'ol':
        case 'p':
        case 'section':
        case 'summary':
        case 'ul':

        case 'pre':
        case 'listing':

        case 'table':

        case 'hr':

        case 'xmp':

        case 'h1':
        case 'h2':
        case 'h3':
        case 'h4':
        case 'h5':
        case 'h6':
          return ancestorInfo.pTagInButtonScope;

        case 'form':
          return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;

        case 'li':
          return ancestorInfo.listItemTagAutoclosing;

        case 'dd':
        case 'dt':
          return ancestorInfo.dlItemTagAutoclosing;

        case 'button':
          return ancestorInfo.buttonTagInScope;

        case 'a':
          // Spec says something about storing a list of markers, but it sounds
          // equivalent to this check.
          return ancestorInfo.aTagInScope;

        case 'nobr':
          return ancestorInfo.nobrTagInScope;
      }

      return null;
    };

    /**
     * Given a ReactCompositeComponent instance, return a list of its recursive
     * owners, starting at the root and ending with the instance itself.
     */
    var findOwnerStack = function (instance) {
      if (!instance) {
        return [];
      }

      var stack = [];
      do {
        stack.push(instance);
      } while (instance = instance._currentElement._owner);
      stack.reverse();
      return stack;
    };

    var didWarn = {};

    validateDOMNesting = function (childTag, childText, childInstance, ancestorInfo) {
      ancestorInfo = ancestorInfo || emptyAncestorInfo;
      var parentInfo = ancestorInfo.current;
      var parentTag = parentInfo && parentInfo.tag;

      if (childText != null) {
         true ? warning(childTag == null, 'validateDOMNesting: when childText is passed, childTag should be null') : void 0;
        childTag = '#text';
      }

      var invalidParent = isTagValidWithParent(childTag, parentTag) ? null : parentInfo;
      var invalidAncestor = invalidParent ? null : findInvalidAncestorForTag(childTag, ancestorInfo);
      var problematic = invalidParent || invalidAncestor;

      if (problematic) {
        var ancestorTag = problematic.tag;
        var ancestorInstance = problematic.instance;

        var childOwner = childInstance && childInstance._currentElement._owner;
        var ancestorOwner = ancestorInstance && ancestorInstance._currentElement._owner;

        var childOwners = findOwnerStack(childOwner);
        var ancestorOwners = findOwnerStack(ancestorOwner);

        var minStackLen = Math.min(childOwners.length, ancestorOwners.length);
        var i;

        var deepestCommon = -1;
        for (i = 0; i < minStackLen; i++) {
          if (childOwners[i] === ancestorOwners[i]) {
            deepestCommon = i;
          } else {
            break;
          }
        }

        var UNKNOWN = '(unknown)';
        var childOwnerNames = childOwners.slice(deepestCommon + 1).map(function (inst) {
          return inst.getName() || UNKNOWN;
        });
        var ancestorOwnerNames = ancestorOwners.slice(deepestCommon + 1).map(function (inst) {
          return inst.getName() || UNKNOWN;
        });
        var ownerInfo = [].concat(
        // If the parent and child instances have a common owner ancestor, start
        // with that -- otherwise we just start with the parent's owners.
        deepestCommon !== -1 ? childOwners[deepestCommon].getName() || UNKNOWN : [], ancestorOwnerNames, ancestorTag,
        // If we're warning about an invalid (non-parent) ancestry, add '...'
        invalidAncestor ? ['...'] : [], childOwnerNames, childTag).join(' > ');

        var warnKey = !!invalidParent + '|' + childTag + '|' + ancestorTag + '|' + ownerInfo;
        if (didWarn[warnKey]) {
          return;
        }
        didWarn[warnKey] = true;

        var tagDisplayName = childTag;
        var whitespaceInfo = '';
        if (childTag === '#text') {
          if (/\S/.test(childText)) {
            tagDisplayName = 'Text nodes';
          } else {
            tagDisplayName = 'Whitespace text nodes';
            whitespaceInfo = ' Make sure you don\'t have any extra whitespace between tags on ' + 'each line of your source code.';
          }
        } else {
          tagDisplayName = '<' + childTag + '>';
        }

        if (invalidParent) {
          var info = '';
          if (ancestorTag === 'table' && childTag === 'tr') {
            info += ' Add a <tbody> to your code to match the DOM tree generated by ' + 'the browser.';
          }
           true ? warning(false, 'validateDOMNesting(...): %s cannot appear as a child of <%s>.%s ' + 'See %s.%s', tagDisplayName, ancestorTag, whitespaceInfo, ownerInfo, info) : void 0;
        } else {
           true ? warning(false, 'validateDOMNesting(...): %s cannot appear as a descendant of ' + '<%s>. See %s.', tagDisplayName, ancestorTag, ownerInfo) : void 0;
        }
      }
    };

    validateDOMNesting.updatedAncestorInfo = updatedAncestorInfo;

    // For testing
    validateDOMNesting.isTagValidInContext = function (tag, ancestorInfo) {
      ancestorInfo = ancestorInfo || emptyAncestorInfo;
      var parentInfo = ancestorInfo.current;
      var parentTag = parentInfo && parentInfo.tag;
      return isTagValidWithParent(tag, parentTag) && !findInvalidAncestorForTag(tag, ancestorInfo);
    };
  }

  module.exports = validateDOMNesting;

/***/ },
/* 520 */
/***/ function(module, exports, __webpack_require__) {

  /**
   * Copyright 2014-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  var _assign = __webpack_require__(387);

  var DOMLazyTree = __webpack_require__(464);
  var ReactDOMComponentTree = __webpack_require__(417);

  var ReactDOMEmptyComponent = function (instantiate) {
    // ReactCompositeComponent uses this:
    this._currentElement = null;
    // ReactDOMComponentTree uses these:
    this._hostNode = null;
    this._hostParent = null;
    this._hostContainerInfo = null;
    this._domID = 0;
  };
  _assign(ReactDOMEmptyComponent.prototype, {
    mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
      var domID = hostContainerInfo._idCounter++;
      this._domID = domID;
      this._hostParent = hostParent;
      this._hostContainerInfo = hostContainerInfo;

      var nodeValue = ' react-empty: ' + this._domID + ' ';
      if (transaction.useCreateElement) {
        var ownerDocument = hostContainerInfo._ownerDocument;
        var node = ownerDocument.createComment(nodeValue);
        ReactDOMComponentTree.precacheNode(this, node);
        return DOMLazyTree(node);
      } else {
        if (transaction.renderToStaticMarkup) {
          // Normally we'd insert a comment node, but since this is a situation
          // where React won't take over (static pages), we can simply return
          // nothing.
          return '';
        }
        return '<!--' + nodeValue + '-->';
      }
    },
    receiveComponent: function () {},
    getHostNode: function () {
      return ReactDOMComponentTree.getNodeFromInstance(this);
    },
    unmountComponent: function () {
      ReactDOMComponentTree.uncacheNode(this);
    }
  });

  module.exports = ReactDOMEmptyComponent;

/***/ },
/* 521 */
/***/ function(module, exports, __webpack_require__) {

  /**
   * Copyright 2015-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  var _prodInvariant = __webpack_require__(418);

  var invariant = __webpack_require__(391);

  /**
   * Return the lowest common ancestor of A and B, or null if they are in
   * different trees.
   */
  function getLowestCommonAncestor(instA, instB) {
    !('_hostNode' in instA) ?  true ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;
    !('_hostNode' in instB) ?  true ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;

    var depthA = 0;
    for (var tempA = instA; tempA; tempA = tempA._hostParent) {
      depthA++;
    }
    var depthB = 0;
    for (var tempB = instB; tempB; tempB = tempB._hostParent) {
      depthB++;
    }

    // If A is deeper, crawl up.
    while (depthA - depthB > 0) {
      instA = instA._hostParent;
      depthA--;
    }

    // If B is deeper, crawl up.
    while (depthB - depthA > 0) {
      instB = instB._hostParent;
      depthB--;
    }

    // Walk in lockstep until we find a match.
    var depth = depthA;
    while (depth--) {
      if (instA === instB) {
        return instA;
      }
      instA = instA._hostParent;
      instB = instB._hostParent;
    }
    return null;
  }

  /**
   * Return if A is an ancestor of B.
   */
  function isAncestor(instA, instB) {
    !('_hostNode' in instA) ?  true ? invariant(false, 'isAncestor: Invalid argument.') : _prodInvariant('35') : void 0;
    !('_hostNode' in instB) ?  true ? invariant(false, 'isAncestor: Invalid argument.') : _prodInvariant('35') : void 0;

    while (instB) {
      if (instB === instA) {
        return true;
      }
      instB = instB._hostParent;
    }
    return false;
  }

  /**
   * Return the parent instance of the passed-in instance.
   */
  function getParentInstance(inst) {
    !('_hostNode' in inst) ?  true ? invariant(false, 'getParentInstance: Invalid argument.') : _prodInvariant('36') : void 0;

    return inst._hostParent;
  }

  /**
   * Simulates the traversal of a two-phase, capture/bubble event dispatch.
   */
  function traverseTwoPhase(inst, fn, arg) {
    var path = [];
    while (inst) {
      path.push(inst);
      inst = inst._hostParent;
    }
    var i;
    for (i = path.length; i-- > 0;) {
      fn(path[i], 'captured', arg);
    }
    for (i = 0; i < path.length; i++) {
      fn(path[i], 'bubbled', arg);
    }
  }

  /**
   * Traverses the ID hierarchy and invokes the supplied `cb` on any IDs that
   * should would receive a `mouseEnter` or `mouseLeave` event.
   *
   * Does not invoke the callback on the nearest common ancestor because nothing
   * "entered" or "left" that element.
   */
  function traverseEnterLeave(from, to, fn, argFrom, argTo) {
    var common = from && to ? getLowestCommonAncestor(from, to) : null;
    var pathFrom = [];
    while (from && from !== common) {
      pathFrom.push(from);
      from = from._hostParent;
    }
    var pathTo = [];
    while (to && to !== common) {
      pathTo.push(to);
      to = to._hostParent;
    }
    var i;
    for (i = 0; i < pathFrom.length; i++) {
      fn(pathFrom[i], 'bubbled', argFrom);
    }
    for (i = pathTo.length; i-- > 0;) {
      fn(pathTo[i], 'captured', argTo);
    }
  }

  module.exports = {
    isAncestor: isAncestor,
    getLowestCommonAncestor: getLowestCommonAncestor,
    getParentInstance: getParentInstance,
    traverseTwoPhase: traverseTwoPhase,
    traverseEnterLeave: traverseEnterLeave
  };

/***/ },
/* 522 */
/***/ function(module, exports, __webpack_require__) {

  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  var _prodInvariant = __webpack_require__(418),
      _assign = __webpack_require__(387);

  var DOMChildrenOperations = __webpack_require__(463);
  var DOMLazyTree = __webpack_require__(464);
  var ReactDOMComponentTree = __webpack_require__(417);

  var escapeTextContentForBrowser = __webpack_require__(469);
  var invariant = __webpack_require__(391);
  var validateDOMNesting = __webpack_require__(519);

  /**
   * Text nodes violate a couple assumptions that React makes about components:
   *
   *  - When mounting text into the DOM, adjacent text nodes are merged.
   *  - Text nodes cannot be assigned a React root ID.
   *
   * This component is used to wrap strings between comment nodes so that they
   * can undergo the same reconciliation that is applied to elements.
   *
   * TODO: Investigate representing React components in the DOM with text nodes.
   *
   * @class ReactDOMTextComponent
   * @extends ReactComponent
   * @internal
   */
  var ReactDOMTextComponent = function (text) {
    // TODO: This is really a ReactText (ReactNode), not a ReactElement
    this._currentElement = text;
    this._stringText = '' + text;
    // ReactDOMComponentTree uses these:
    this._hostNode = null;
    this._hostParent = null;

    // Properties
    this._domID = 0;
    this._mountIndex = 0;
    this._closingComment = null;
    this._commentNodes = null;
  };

  _assign(ReactDOMTextComponent.prototype, {

    /**
     * Creates the markup for this text node. This node is not intended to have
     * any features besides containing text content.
     *
     * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
     * @return {string} Markup for this text node.
     * @internal
     */
    mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
      if (true) {
        var parentInfo;
        if (hostParent != null) {
          parentInfo = hostParent._ancestorInfo;
        } else if (hostContainerInfo != null) {
          parentInfo = hostContainerInfo._ancestorInfo;
        }
        if (parentInfo) {
          // parentInfo should always be present except for the top-level
          // component when server rendering
          validateDOMNesting(null, this._stringText, this, parentInfo);
        }
      }

      var domID = hostContainerInfo._idCounter++;
      var openingValue = ' react-text: ' + domID + ' ';
      var closingValue = ' /react-text ';
      this._domID = domID;
      this._hostParent = hostParent;
      if (transaction.useCreateElement) {
        var ownerDocument = hostContainerInfo._ownerDocument;
        var openingComment = ownerDocument.createComment(openingValue);
        var closingComment = ownerDocument.createComment(closingValue);
        var lazyTree = DOMLazyTree(ownerDocument.createDocumentFragment());
        DOMLazyTree.queueChild(lazyTree, DOMLazyTree(openingComment));
        if (this._stringText) {
          DOMLazyTree.queueChild(lazyTree, DOMLazyTree(ownerDocument.createTextNode(this._stringText)));
        }
        DOMLazyTree.queueChild(lazyTree, DOMLazyTree(closingComment));
        ReactDOMComponentTree.precacheNode(this, openingComment);
        this._closingComment = closingComment;
        return lazyTree;
      } else {
        var escapedText = escapeTextContentForBrowser(this._stringText);

        if (transaction.renderToStaticMarkup) {
          // Normally we'd wrap this between comment nodes for the reasons stated
          // above, but since this is a situation where React won't take over
          // (static pages), we can simply return the text as it is.
          return escapedText;
        }

        return '<!--' + openingValue + '-->' + escapedText + '<!--' + closingValue + '-->';
      }
    },

    /**
     * Updates this component by updating the text content.
     *
     * @param {ReactText} nextText The next text content
     * @param {ReactReconcileTransaction} transaction
     * @internal
     */
    receiveComponent: function (nextText, transaction) {
      if (nextText !== this._currentElement) {
        this._currentElement = nextText;
        var nextStringText = '' + nextText;
        if (nextStringText !== this._stringText) {
          // TODO: Save this as pending props and use performUpdateIfNecessary
          // and/or updateComponent to do the actual update for consistency with
          // other component types?
          this._stringText = nextStringText;
          var commentNodes = this.getHostNode();
          DOMChildrenOperations.replaceDelimitedText(commentNodes[0], commentNodes[1], nextStringText);
        }
      }
    },

    getHostNode: function () {
      var hostNode = this._commentNodes;
      if (hostNode) {
        return hostNode;
      }
      if (!this._closingComment) {
        var openingComment = ReactDOMComponentTree.getNodeFromInstance(this);
        var node = openingComment.nextSibling;
        while (true) {
          !(node != null) ?  true ? invariant(false, 'Missing closing comment for text component %s', this._domID) : _prodInvariant('67', this._domID) : void 0;
          if (node.nodeType === 8 && node.nodeValue === ' /react-text ') {
            this._closingComment = node;
            break;
          }
          node = node.nextSibling;
        }
      }
      hostNode = [this._hostNode, this._closingComment];
      this._commentNodes = hostNode;
      return hostNode;
    },

    unmountComponent: function () {
      this._closingComment = null;
      this._commentNodes = null;
      ReactDOMComponentTree.uncacheNode(this);
    }

  });

  module.exports = ReactDOMTextComponent;

/***/ },
/* 523 */
/***/ function(module, exports, __webpack_require__) {

  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  var _assign = __webpack_require__(387);

  var ReactUpdates = __webpack_require__(439);
  var Transaction = __webpack_require__(451);

  var emptyFunction = __webpack_require__(395);

  var RESET_BATCHED_UPDATES = {
    initialize: emptyFunction,
    close: function () {
      ReactDefaultBatchingStrategy.isBatchingUpdates = false;
    }
  };

  var FLUSH_BATCHED_UPDATES = {
    initialize: emptyFunction,
    close: ReactUpdates.flushBatchedUpdates.bind(ReactUpdates)
  };

  var TRANSACTION_WRAPPERS = [FLUSH_BATCHED_UPDATES, RESET_BATCHED_UPDATES];

  function ReactDefaultBatchingStrategyTransaction() {
    this.reinitializeTransaction();
  }

  _assign(ReactDefaultBatchingStrategyTransaction.prototype, Transaction, {
    getTransactionWrappers: function () {
      return TRANSACTION_WRAPPERS;
    }
  });

  var transaction = new ReactDefaultBatchingStrategyTransaction();

  var ReactDefaultBatchingStrategy = {
    isBatchingUpdates: false,

    /**
     * Call the provided function in a context within which calls to `setState`
     * and friends are batched such that components aren't updated unnecessarily.
     */
    batchedUpdates: function (callback, a, b, c, d, e) {
      var alreadyBatchingUpdates = ReactDefaultBatchingStrategy.isBatchingUpdates;

      ReactDefaultBatchingStrategy.isBatchingUpdates = true;

      // The code is written this way to avoid extra allocations
      if (alreadyBatchingUpdates) {
        return callback(a, b, c, d, e);
      } else {
        return transaction.perform(callback, null, a, b, c, d, e);
      }
    }
  };

  module.exports = ReactDefaultBatchingStrategy;

/***/ },
/* 524 */
/***/ function(module, exports, __webpack_require__) {

  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  var _assign = __webpack_require__(387);

  var EventListener = __webpack_require__(525);
  var ExecutionEnvironment = __webpack_require__(431);
  var PooledClass = __webpack_require__(433);
  var ReactDOMComponentTree = __webpack_require__(417);
  var ReactUpdates = __webpack_require__(439);

  var getEventTarget = __webpack_require__(452);
  var getUnboundedScrollPosition = __webpack_require__(526);

  /**
   * Find the deepest React component completely containing the root of the
   * passed-in instance (for use when entire React trees are nested within each
   * other). If React trees are not nested, returns null.
   */
  function findParent(inst) {
    // TODO: It may be a good idea to cache this to prevent unnecessary DOM
    // traversal, but caching is difficult to do correctly without using a
    // mutation observer to listen for all DOM changes.
    while (inst._hostParent) {
      inst = inst._hostParent;
    }
    var rootNode = ReactDOMComponentTree.getNodeFromInstance(inst);
    var container = rootNode.parentNode;
    return ReactDOMComponentTree.getClosestInstanceFromNode(container);
  }

  // Used to store ancestor hierarchy in top level callback
  function TopLevelCallbackBookKeeping(topLevelType, nativeEvent) {
    this.topLevelType = topLevelType;
    this.nativeEvent = nativeEvent;
    this.ancestors = [];
  }
  _assign(TopLevelCallbackBookKeeping.prototype, {
    destructor: function () {
      this.topLevelType = null;
      this.nativeEvent = null;
      this.ancestors.length = 0;
    }
  });
  PooledClass.addPoolingTo(TopLevelCallbackBookKeeping, PooledClass.twoArgumentPooler);

  function handleTopLevelImpl(bookKeeping) {
    var nativeEventTarget = getEventTarget(bookKeeping.nativeEvent);
    var targetInst = ReactDOMComponentTree.getClosestInstanceFromNode(nativeEventTarget);

    // Loop through the hierarchy, in case there's any nested components.
    // It's important that we build the array of ancestors before calling any
    // event handlers, because event handlers can modify the DOM, leading to
    // inconsistencies with ReactMount's node cache. See #1105.
    var ancestor = targetInst;
    do {
      bookKeeping.ancestors.push(ancestor);
      ancestor = ancestor && findParent(ancestor);
    } while (ancestor);

    for (var i = 0; i < bookKeeping.ancestors.length; i++) {
      targetInst = bookKeeping.ancestors[i];
      ReactEventListener._handleTopLevel(bookKeeping.topLevelType, targetInst, bookKeeping.nativeEvent, getEventTarget(bookKeeping.nativeEvent));
    }
  }

  function scrollValueMonitor(cb) {
    var scrollPosition = getUnboundedScrollPosition(window);
    cb(scrollPosition);
  }

  var ReactEventListener = {
    _enabled: true,
    _handleTopLevel: null,

    WINDOW_HANDLE: ExecutionEnvironment.canUseDOM ? window : null,

    setHandleTopLevel: function (handleTopLevel) {
      ReactEventListener._handleTopLevel = handleTopLevel;
    },

    setEnabled: function (enabled) {
      ReactEventListener._enabled = !!enabled;
    },

    isEnabled: function () {
      return ReactEventListener._enabled;
    },

    /**
     * Traps top-level events by using event bubbling.
     *
     * @param {string} topLevelType Record from `EventConstants`.
     * @param {string} handlerBaseName Event name (e.g. "click").
     * @param {object} element Element on which to attach listener.
     * @return {?object} An object with a remove function which will forcefully
     *                  remove the listener.
     * @internal
     */
    trapBubbledEvent: function (topLevelType, handlerBaseName, element) {
      if (!element) {
        return null;
      }
      return EventListener.listen(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));
    },

    /**
     * Traps a top-level event by using event capturing.
     *
     * @param {string} topLevelType Record from `EventConstants`.
     * @param {string} handlerBaseName Event name (e.g. "click").
     * @param {object} element Element on which to attach listener.
     * @return {?object} An object with a remove function which will forcefully
     *                  remove the listener.
     * @internal
     */
    trapCapturedEvent: function (topLevelType, handlerBaseName, element) {
      if (!element) {
        return null;
      }
      return EventListener.capture(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));
    },

    monitorScrollValue: function (refresh) {
      var callback = scrollValueMonitor.bind(null, refresh);
      EventListener.listen(window, 'scroll', callback);
    },

    dispatchEvent: function (topLevelType, nativeEvent) {
      if (!ReactEventListener._enabled) {
        return;
      }

      var bookKeeping = TopLevelCallbackBookKeeping.getPooled(topLevelType, nativeEvent);
      try {
        // Event queue being processed in the same cycle allows
        // `preventDefault`.
        ReactUpdates.batchedUpdates(handleTopLevelImpl, bookKeeping);
      } finally {
        TopLevelCallbackBookKeeping.release(bookKeeping);
      }
    }
  };

  module.exports = ReactEventListener;

/***/ },
/* 525 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  /**
   * Copyright (c) 2013-present, Facebook, Inc.
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   * http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *
   * @typechecks
   */

  var emptyFunction = __webpack_require__(395);

  /**
   * Upstream version of event listener. Does not take into account specific
   * nature of platform.
   */
  var EventListener = {
    /**
     * Listen to DOM events during the bubble phase.
     *
     * @param {DOMEventTarget} target DOM element to register listener on.
     * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
     * @param {function} callback Callback function.
     * @return {object} Object with a `remove` method.
     */
    listen: function listen(target, eventType, callback) {
      if (target.addEventListener) {
        target.addEventListener(eventType, callback, false);
        return {
          remove: function remove() {
            target.removeEventListener(eventType, callback, false);
          }
        };
      } else if (target.attachEvent) {
        target.attachEvent('on' + eventType, callback);
        return {
          remove: function remove() {
            target.detachEvent('on' + eventType, callback);
          }
        };
      }
    },

    /**
     * Listen to DOM events during the capture phase.
     *
     * @param {DOMEventTarget} target DOM element to register listener on.
     * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
     * @param {function} callback Callback function.
     * @return {object} Object with a `remove` method.
     */
    capture: function capture(target, eventType, callback) {
      if (target.addEventListener) {
        target.addEventListener(eventType, callback, true);
        return {
          remove: function remove() {
            target.removeEventListener(eventType, callback, true);
          }
        };
      } else {
        if (true) {
          console.error('Attempted to listen to events during the capture phase on a ' + 'browser that does not support the capture phase. Your application ' + 'will not receive some events.');
        }
        return {
          remove: emptyFunction
        };
      }
    },

    registerDefault: function registerDefault() {}
  };

  module.exports = EventListener;

/***/ },
/* 526 */
/***/ function(module, exports) {

  /**
   * Copyright (c) 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   * @typechecks
   */

  'use strict';

  /**
   * Gets the scroll position of the supplied element or window.
   *
   * The return values are unbounded, unlike `getScrollPosition`. This means they
   * may be negative or exceed the element boundaries (which is possible using
   * inertial scrolling).
   *
   * @param {DOMWindow|DOMElement} scrollable
   * @return {object} Map with `x` and `y` keys.
   */

  function getUnboundedScrollPosition(scrollable) {
    if (scrollable === window) {
      return {
        x: window.pageXOffset || document.documentElement.scrollLeft,
        y: window.pageYOffset || document.documentElement.scrollTop
      };
    }
    return {
      x: scrollable.scrollLeft,
      y: scrollable.scrollTop
    };
  }

  module.exports = getUnboundedScrollPosition;

/***/ },
/* 527 */
/***/ function(module, exports, __webpack_require__) {

  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  var DOMProperty = __webpack_require__(419);
  var EventPluginHub = __webpack_require__(425);
  var EventPluginUtils = __webpack_require__(427);
  var ReactComponentEnvironment = __webpack_require__(498);
  var ReactEmptyComponent = __webpack_require__(508);
  var ReactBrowserEventEmitter = __webpack_require__(488);
  var ReactHostComponent = __webpack_require__(509);
  var ReactUpdates = __webpack_require__(439);

  var ReactInjection = {
    Component: ReactComponentEnvironment.injection,
    DOMProperty: DOMProperty.injection,
    EmptyComponent: ReactEmptyComponent.injection,
    EventPluginHub: EventPluginHub.injection,
    EventPluginUtils: EventPluginUtils.injection,
    EventEmitter: ReactBrowserEventEmitter.injection,
    HostComponent: ReactHostComponent.injection,
    Updates: ReactUpdates.injection
  };

  module.exports = ReactInjection;

/***/ },
/* 528 */
/***/ function(module, exports, __webpack_require__) {

  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  var _assign = __webpack_require__(387);

  var CallbackQueue = __webpack_require__(440);
  var PooledClass = __webpack_require__(433);
  var ReactBrowserEventEmitter = __webpack_require__(488);
  var ReactInputSelection = __webpack_require__(529);
  var ReactInstrumentation = __webpack_require__(445);
  var Transaction = __webpack_require__(451);
  var ReactUpdateQueue = __webpack_require__(518);

  /**
   * Ensures that, when possible, the selection range (currently selected text
   * input) is not disturbed by performing the transaction.
   */
  var SELECTION_RESTORATION = {
    /**
     * @return {Selection} Selection information.
     */
    initialize: ReactInputSelection.getSelectionInformation,
    /**
     * @param {Selection} sel Selection information returned from `initialize`.
     */
    close: ReactInputSelection.restoreSelection
  };

  /**
   * Suppresses events (blur/focus) that could be inadvertently dispatched due to
   * high level DOM manipulations (like temporarily removing a text input from the
   * DOM).
   */
  var EVENT_SUPPRESSION = {
    /**
     * @return {boolean} The enabled status of `ReactBrowserEventEmitter` before
     * the reconciliation.
     */
    initialize: function () {
      var currentlyEnabled = ReactBrowserEventEmitter.isEnabled();
      ReactBrowserEventEmitter.setEnabled(false);
      return currentlyEnabled;
    },

    /**
     * @param {boolean} previouslyEnabled Enabled status of
     *   `ReactBrowserEventEmitter` before the reconciliation occurred. `close`
     *   restores the previous value.
     */
    close: function (previouslyEnabled) {
      ReactBrowserEventEmitter.setEnabled(previouslyEnabled);
    }
  };

  /**
   * Provides a queue for collecting `componentDidMount` and
   * `componentDidUpdate` callbacks during the transaction.
   */
  var ON_DOM_READY_QUEUEING = {
    /**
     * Initializes the internal `onDOMReady` queue.
     */
    initialize: function () {
      this.reactMountReady.reset();
    },

    /**
     * After DOM is flushed, invoke all registered `onDOMReady` callbacks.
     */
    close: function () {
      this.reactMountReady.notifyAll();
    }
  };

  /**
   * Executed within the scope of the `Transaction` instance. Consider these as
   * being member methods, but with an implied ordering while being isolated from
   * each other.
   */
  var TRANSACTION_WRAPPERS = [SELECTION_RESTORATION, EVENT_SUPPRESSION, ON_DOM_READY_QUEUEING];

  if (true) {
    TRANSACTION_WRAPPERS.push({
      initialize: ReactInstrumentation.debugTool.onBeginFlush,
      close: ReactInstrumentation.debugTool.onEndFlush
    });
  }

  /**
   * Currently:
   * - The order that these are listed in the transaction is critical:
   * - Suppresses events.
   * - Restores selection range.
   *
   * Future:
   * - Restore document/overflow scroll positions that were unintentionally
   *   modified via DOM insertions above the top viewport boundary.
   * - Implement/integrate with customized constraint based layout system and keep
   *   track of which dimensions must be remeasured.
   *
   * @class ReactReconcileTransaction
   */
  function ReactReconcileTransaction(useCreateElement) {
    this.reinitializeTransaction();
    // Only server-side rendering really needs this option (see
    // `ReactServerRendering`), but server-side uses
    // `ReactServerRenderingTransaction` instead. This option is here so that it's
    // accessible and defaults to false when `ReactDOMComponent` and
    // `ReactDOMTextComponent` checks it in `mountComponent`.`
    this.renderToStaticMarkup = false;
    this.reactMountReady = CallbackQueue.getPooled(null);
    this.useCreateElement = useCreateElement;
  }

  var Mixin = {
    /**
     * @see Transaction
     * @abstract
     * @final
     * @return {array<object>} List of operation wrap procedures.
     *   TODO: convert to array<TransactionWrapper>
     */
    getTransactionWrappers: function () {
      return TRANSACTION_WRAPPERS;
    },

    /**
     * @return {object} The queue to collect `onDOMReady` callbacks with.
     */
    getReactMountReady: function () {
      return this.reactMountReady;
    },

    /**
     * @return {object} The queue to collect React async events.
     */
    getUpdateQueue: function () {
      return ReactUpdateQueue;
    },

    /**
     * Save current transaction state -- if the return value from this method is
     * passed to `rollback`, the transaction will be reset to that state.
     */
    checkpoint: function () {
      // reactMountReady is the our only stateful wrapper
      return this.reactMountReady.checkpoint();
    },

    rollback: function (checkpoint) {
      this.reactMountReady.rollback(checkpoint);
    },

    /**
     * `PooledClass` looks for this, and will invoke this before allowing this
     * instance to be reused.
     */
    destructor: function () {
      CallbackQueue.release(this.reactMountReady);
      this.reactMountReady = null;
    }
  };

  _assign(ReactReconcileTransaction.prototype, Transaction, Mixin);

  PooledClass.addPoolingTo(ReactReconcileTransaction);

  module.exports = ReactReconcileTransaction;

/***/ },
/* 529 */
/***/ function(module, exports, __webpack_require__) {

  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  var ReactDOMSelection = __webpack_require__(530);

  var containsNode = __webpack_require__(532);
  var focusNode = __webpack_require__(477);
  var getActiveElement = __webpack_require__(535);

  function isInDocument(node) {
    return containsNode(document.documentElement, node);
  }

  /**
   * @ReactInputSelection: React input selection module. Based on Selection.js,
   * but modified to be suitable for react and has a couple of bug fixes (doesn't
   * assume buttons have range selections allowed).
   * Input selection module for React.
   */
  var ReactInputSelection = {

    hasSelectionCapabilities: function (elem) {
      var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
      return nodeName && (nodeName === 'input' && elem.type === 'text' || nodeName === 'textarea' || elem.contentEditable === 'true');
    },

    getSelectionInformation: function () {
      var focusedElem = getActiveElement();
      return {
        focusedElem: focusedElem,
        selectionRange: ReactInputSelection.hasSelectionCapabilities(focusedElem) ? ReactInputSelection.getSelection(focusedElem) : null
      };
    },

    /**
     * @restoreSelection: If any selection information was potentially lost,
     * restore it. This is useful when performing operations that could remove dom
     * nodes and place them back in, resulting in focus being lost.
     */
    restoreSelection: function (priorSelectionInformation) {
      var curFocusedElem = getActiveElement();
      var priorFocusedElem = priorSelectionInformation.focusedElem;
      var priorSelectionRange = priorSelectionInformation.selectionRange;
      if (curFocusedElem !== priorFocusedElem && isInDocument(priorFocusedElem)) {
        if (ReactInputSelection.hasSelectionCapabilities(priorFocusedElem)) {
          ReactInputSelection.setSelection(priorFocusedElem, priorSelectionRange);
        }
        focusNode(priorFocusedElem);
      }
    },

    /**
     * @getSelection: Gets the selection bounds of a focused textarea, input or
     * contentEditable node.
     * -@input: Look up selection bounds of this input
     * -@return {start: selectionStart, end: selectionEnd}
     */
    getSelection: function (input) {
      var selection;

      if ('selectionStart' in input) {
        // Modern browser with input or textarea.
        selection = {
          start: input.selectionStart,
          end: input.selectionEnd
        };
      } else if (document.selection && input.nodeName && input.nodeName.toLowerCase() === 'input') {
        // IE8 input.
        var range = document.selection.createRange();
        // There can only be one selection per document in IE, so it must
        // be in our element.
        if (range.parentElement() === input) {
          selection = {
            start: -range.moveStart('character', -input.value.length),
            end: -range.moveEnd('character', -input.value.length)
          };
        }
      } else {
        // Content editable or old IE textarea.
        selection = ReactDOMSelection.getOffsets(input);
      }

      return selection || { start: 0, end: 0 };
    },

    /**
     * @setSelection: Sets the selection bounds of a textarea or input and focuses
     * the input.
     * -@input     Set selection bounds of this input or textarea
     * -@offsets   Object of same form that is returned from get*
     */
    setSelection: function (input, offsets) {
      var start = offsets.start;
      var end = offsets.end;
      if (end === undefined) {
        end = start;
      }

      if ('selectionStart' in input) {
        input.selectionStart = start;
        input.selectionEnd = Math.min(end, input.value.length);
      } else if (document.selection && input.nodeName && input.nodeName.toLowerCase() === 'input') {
        var range = input.createTextRange();
        range.collapse(true);
        range.moveStart('character', start);
        range.moveEnd('character', end - start);
        range.select();
      } else {
        ReactDOMSelection.setOffsets(input, offsets);
      }
    }
  };

  module.exports = ReactInputSelection;

/***/ },
/* 530 */
/***/ function(module, exports, __webpack_require__) {

  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  var ExecutionEnvironment = __webpack_require__(431);

  var getNodeForCharacterOffset = __webpack_require__(531);
  var getTextContentAccessor = __webpack_require__(434);

  /**
   * While `isCollapsed` is available on the Selection object and `collapsed`
   * is available on the Range object, IE11 sometimes gets them wrong.
   * If the anchor/focus nodes and offsets are the same, the range is collapsed.
   */
  function isCollapsed(anchorNode, anchorOffset, focusNode, focusOffset) {
    return anchorNode === focusNode && anchorOffset === focusOffset;
  }

  /**
   * Get the appropriate anchor and focus node/offset pairs for IE.
   *
   * The catch here is that IE's selection API doesn't provide information
   * about whether the selection is forward or backward, so we have to
   * behave as though it's always forward.
   *
   * IE text differs from modern selection in that it behaves as though
   * block elements end with a new line. This means character offsets will
   * differ between the two APIs.
   *
   * @param {DOMElement} node
   * @return {object}
   */
  function getIEOffsets(node) {
    var selection = document.selection;
    var selectedRange = selection.createRange();
    var selectedLength = selectedRange.text.length;

    // Duplicate selection so we can move range without breaking user selection.
    var fromStart = selectedRange.duplicate();
    fromStart.moveToElementText(node);
    fromStart.setEndPoint('EndToStart', selectedRange);

    var startOffset = fromStart.text.length;
    var endOffset = startOffset + selectedLength;

    return {
      start: startOffset,
      end: endOffset
    };
  }

  /**
   * @param {DOMElement} node
   * @return {?object}
   */
  function getModernOffsets(node) {
    var selection = window.getSelection && window.getSelection();

    if (!selection || selection.rangeCount === 0) {
      return null;
    }

    var anchorNode = selection.anchorNode;
    var anchorOffset = selection.anchorOffset;
    var focusNode = selection.focusNode;
    var focusOffset = selection.focusOffset;

    var currentRange = selection.getRangeAt(0);

    // In Firefox, range.startContainer and range.endContainer can be "anonymous
    // divs", e.g. the up/down buttons on an <input type="number">. Anonymous
    // divs do not seem to expose properties, triggering a "Permission denied
    // error" if any of its properties are accessed. The only seemingly possible
    // way to avoid erroring is to access a property that typically works for
    // non-anonymous divs and catch any error that may otherwise arise. See
    // https://bugzilla.mozilla.org/show_bug.cgi?id=208427
    try {
      /* eslint-disable no-unused-expressions */
      currentRange.startContainer.nodeType;
      currentRange.endContainer.nodeType;
      /* eslint-enable no-unused-expressions */
    } catch (e) {
      return null;
    }

    // If the node and offset values are the same, the selection is collapsed.
    // `Selection.isCollapsed` is available natively, but IE sometimes gets
    // this value wrong.
    var isSelectionCollapsed = isCollapsed(selection.anchorNode, selection.anchorOffset, selection.focusNode, selection.focusOffset);

    var rangeLength = isSelectionCollapsed ? 0 : currentRange.toString().length;

    var tempRange = currentRange.cloneRange();
    tempRange.selectNodeContents(node);
    tempRange.setEnd(currentRange.startContainer, currentRange.startOffset);

    var isTempRangeCollapsed = isCollapsed(tempRange.startContainer, tempRange.startOffset, tempRange.endContainer, tempRange.endOffset);

    var start = isTempRangeCollapsed ? 0 : tempRange.toString().length;
    var end = start + rangeLength;

    // Detect whether the selection is backward.
    var detectionRange = document.createRange();
    detectionRange.setStart(anchorNode, anchorOffset);
    detectionRange.setEnd(focusNode, focusOffset);
    var isBackward = detectionRange.collapsed;

    return {
      start: isBackward ? end : start,
      end: isBackward ? start : end
    };
  }

  /**
   * @param {DOMElement|DOMTextNode} node
   * @param {object} offsets
   */
  function setIEOffsets(node, offsets) {
    var range = document.selection.createRange().duplicate();
    var start, end;

    if (offsets.end === undefined) {
      start = offsets.start;
      end = start;
    } else if (offsets.start > offsets.end) {
      start = offsets.end;
      end = offsets.start;
    } else {
      start = offsets.start;
      end = offsets.end;
    }

    range.moveToElementText(node);
    range.moveStart('character', start);
    range.setEndPoint('EndToStart', range);
    range.moveEnd('character', end - start);
    range.select();
  }

  /**
   * In modern non-IE browsers, we can support both forward and backward
   * selections.
   *
   * Note: IE10+ supports the Selection object, but it does not support
   * the `extend` method, which means that even in modern IE, it's not possible
   * to programmatically create a backward selection. Thus, for all IE
   * versions, we use the old IE API to create our selections.
   *
   * @param {DOMElement|DOMTextNode} node
   * @param {object} offsets
   */
  function setModernOffsets(node, offsets) {
    if (!window.getSelection) {
      return;
    }

    var selection = window.getSelection();
    var length = node[getTextContentAccessor()].length;
    var start = Math.min(offsets.start, length);
    var end = offsets.end === undefined ? start : Math.min(offsets.end, length);

    // IE 11 uses modern selection, but doesn't support the extend method.
    // Flip backward selections, so we can set with a single range.
    if (!selection.extend && start > end) {
      var temp = end;
      end = start;
      start = temp;
    }

    var startMarker = getNodeForCharacterOffset(node, start);
    var endMarker = getNodeForCharacterOffset(node, end);

    if (startMarker && endMarker) {
      var range = document.createRange();
      range.setStart(startMarker.node, startMarker.offset);
      selection.removeAllRanges();

      if (start > end) {
        selection.addRange(range);
        selection.extend(endMarker.node, endMarker.offset);
      } else {
        range.setEnd(endMarker.node, endMarker.offset);
        selection.addRange(range);
      }
    }
  }

  var useIEOffsets = ExecutionEnvironment.canUseDOM && 'selection' in document && !('getSelection' in window);

  var ReactDOMSelection = {
    /**
     * @param {DOMElement} node
     */
    getOffsets: useIEOffsets ? getIEOffsets : getModernOffsets,

    /**
     * @param {DOMElement|DOMTextNode} node
     * @param {object} offsets
     */
    setOffsets: useIEOffsets ? setIEOffsets : setModernOffsets
  };

  module.exports = ReactDOMSelection;

/***/ },
/* 531 */
/***/ function(module, exports) {

  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  /**
   * Given any node return the first leaf node without children.
   *
   * @param {DOMElement|DOMTextNode} node
   * @return {DOMElement|DOMTextNode}
   */

  function getLeafNode(node) {
    while (node && node.firstChild) {
      node = node.firstChild;
    }
    return node;
  }

  /**
   * Get the next sibling within a container. This will walk up the
   * DOM if a node's siblings have been exhausted.
   *
   * @param {DOMElement|DOMTextNode} node
   * @return {?DOMElement|DOMTextNode}
   */
  function getSiblingNode(node) {
    while (node) {
      if (node.nextSibling) {
        return node.nextSibling;
      }
      node = node.parentNode;
    }
  }

  /**
   * Get object describing the nodes which contain characters at offset.
   *
   * @param {DOMElement|DOMTextNode} root
   * @param {number} offset
   * @return {?object}
   */
  function getNodeForCharacterOffset(root, offset) {
    var node = getLeafNode(root);
    var nodeStart = 0;
    var nodeEnd = 0;

    while (node) {
      if (node.nodeType === 3) {
        nodeEnd = nodeStart + node.textContent.length;

        if (nodeStart <= offset && nodeEnd >= offset) {
          return {
            node: node,
            offset: offset - nodeStart
          };
        }

        nodeStart = nodeEnd;
      }

      node = getLeafNode(getSiblingNode(node));
    }
  }

  module.exports = getNodeForCharacterOffset;

/***/ },
/* 532 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  /**
   * Copyright (c) 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   * 
   */

  var isTextNode = __webpack_require__(533);

  /*eslint-disable no-bitwise */

  /**
   * Checks if a given DOM node contains or is another DOM node.
   */
  function containsNode(outerNode, innerNode) {
    if (!outerNode || !innerNode) {
      return false;
    } else if (outerNode === innerNode) {
      return true;
    } else if (isTextNode(outerNode)) {
      return false;
    } else if (isTextNode(innerNode)) {
      return containsNode(outerNode, innerNode.parentNode);
    } else if ('contains' in outerNode) {
      return outerNode.contains(innerNode);
    } else if (outerNode.compareDocumentPosition) {
      return !!(outerNode.compareDocumentPosition(innerNode) & 16);
    } else {
      return false;
    }
  }

  module.exports = containsNode;

/***/ },
/* 533 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  /**
   * Copyright (c) 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   * @typechecks
   */

  var isNode = __webpack_require__(534);

  /**
   * @param {*} object The object to check.
   * @return {boolean} Whether or not the object is a DOM text node.
   */
  function isTextNode(object) {
    return isNode(object) && object.nodeType == 3;
  }

  module.exports = isTextNode;

/***/ },
/* 534 */
/***/ function(module, exports) {

  'use strict';

  /**
   * Copyright (c) 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   * @typechecks
   */

  /**
   * @param {*} object The object to check.
   * @return {boolean} Whether or not the object is a DOM node.
   */
  function isNode(object) {
    return !!(object && (typeof Node === 'function' ? object instanceof Node : typeof object === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string'));
  }

  module.exports = isNode;

/***/ },
/* 535 */
/***/ function(module, exports) {

  'use strict';

  /**
   * Copyright (c) 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   * @typechecks
   */

  /* eslint-disable fb-www/typeof-undefined */

  /**
   * Same as document.activeElement but wraps in a try-catch block. In IE it is
   * not safe to call document.activeElement if there is nothing focused.
   *
   * The activeElement will be null only if the document or document body is not
   * yet defined.
   */
  function getActiveElement() /*?DOMElement*/{
    if (typeof document === 'undefined') {
      return null;
    }
    try {
      return document.activeElement || document.body;
    } catch (e) {
      return document.body;
    }
  }

  module.exports = getActiveElement;

/***/ },
/* 536 */
/***/ function(module, exports) {

  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  var NS = {
    xlink: 'http://www.w3.org/1999/xlink',
    xml: 'http://www.w3.org/XML/1998/namespace'
  };

  // We use attributes for everything SVG so let's avoid some duplication and run
  // code instead.
  // The following are all specified in the HTML config already so we exclude here.
  // - class (as className)
  // - color
  // - height
  // - id
  // - lang
  // - max
  // - media
  // - method
  // - min
  // - name
  // - style
  // - target
  // - type
  // - width
  var ATTRS = {
    accentHeight: 'accent-height',
    accumulate: 0,
    additive: 0,
    alignmentBaseline: 'alignment-baseline',
    allowReorder: 'allowReorder',
    alphabetic: 0,
    amplitude: 0,
    arabicForm: 'arabic-form',
    ascent: 0,
    attributeName: 'attributeName',
    attributeType: 'attributeType',
    autoReverse: 'autoReverse',
    azimuth: 0,
    baseFrequency: 'baseFrequency',
    baseProfile: 'baseProfile',
    baselineShift: 'baseline-shift',
    bbox: 0,
    begin: 0,
    bias: 0,
    by: 0,
    calcMode: 'calcMode',
    capHeight: 'cap-height',
    clip: 0,
    clipPath: 'clip-path',
    clipRule: 'clip-rule',
    clipPathUnits: 'clipPathUnits',
    colorInterpolation: 'color-interpolation',
    colorInterpolationFilters: 'color-interpolation-filters',
    colorProfile: 'color-profile',
    colorRendering: 'color-rendering',
    contentScriptType: 'contentScriptType',
    contentStyleType: 'contentStyleType',
    cursor: 0,
    cx: 0,
    cy: 0,
    d: 0,
    decelerate: 0,
    descent: 0,
    diffuseConstant: 'diffuseConstant',
    direction: 0,
    display: 0,
    divisor: 0,
    dominantBaseline: 'dominant-baseline',
    dur: 0,
    dx: 0,
    dy: 0,
    edgeMode: 'edgeMode',
    elevation: 0,
    enableBackground: 'enable-background',
    end: 0,
    exponent: 0,
    externalResourcesRequired: 'externalResourcesRequired',
    fill: 0,
    fillOpacity: 'fill-opacity',
    fillRule: 'fill-rule',
    filter: 0,
    filterRes: 'filterRes',
    filterUnits: 'filterUnits',
    floodColor: 'flood-color',
    floodOpacity: 'flood-opacity',
    focusable: 0,
    fontFamily: 'font-family',
    fontSize: 'font-size',
    fontSizeAdjust: 'font-size-adjust',
    fontStretch: 'font-stretch',
    fontStyle: 'font-style',
    fontVariant: 'font-variant',
    fontWeight: 'font-weight',
    format: 0,
    from: 0,
    fx: 0,
    fy: 0,
    g1: 0,
    g2: 0,
    glyphName: 'glyph-name',
    glyphOrientationHorizontal: 'glyph-orientation-horizontal',
    glyphOrientationVertical: 'glyph-orientation-vertical',
    glyphRef: 'glyphRef',
    gradientTransform: 'gradientTransform',
    gradientUnits: 'gradientUnits',
    hanging: 0,
    horizAdvX: 'horiz-adv-x',
    horizOriginX: 'horiz-origin-x',
    ideographic: 0,
    imageRendering: 'image-rendering',
    'in': 0,
    in2: 0,
    intercept: 0,
    k: 0,
    k1: 0,
    k2: 0,
    k3: 0,
    k4: 0,
    kernelMatrix: 'kernelMatrix',
    kernelUnitLength: 'kernelUnitLength',
    kerning: 0,
    keyPoints: 'keyPoints',
    keySplines: 'keySplines',
    keyTimes: 'keyTimes',
    lengthAdjust: 'lengthAdjust',
    letterSpacing: 'letter-spacing',
    lightingColor: 'lighting-color',
    limitingConeAngle: 'limitingConeAngle',
    local: 0,
    markerEnd: 'marker-end',
    markerMid: 'marker-mid',
    markerStart: 'marker-start',
    markerHeight: 'markerHeight',
    markerUnits: 'markerUnits',
    markerWidth: 'markerWidth',
    mask: 0,
    maskContentUnits: 'maskContentUnits',
    maskUnits: 'maskUnits',
    mathematical: 0,
    mode: 0,
    numOctaves: 'numOctaves',
    offset: 0,
    opacity: 0,
    operator: 0,
    order: 0,
    orient: 0,
    orientation: 0,
    origin: 0,
    overflow: 0,
    overlinePosition: 'overline-position',
    overlineThickness: 'overline-thickness',
    paintOrder: 'paint-order',
    panose1: 'panose-1',
    pathLength: 'pathLength',
    patternContentUnits: 'patternContentUnits',
    patternTransform: 'patternTransform',
    patternUnits: 'patternUnits',
    pointerEvents: 'pointer-events',
    points: 0,
    pointsAtX: 'pointsAtX',
    pointsAtY: 'pointsAtY',
    pointsAtZ: 'pointsAtZ',
    preserveAlpha: 'preserveAlpha',
    preserveAspectRatio: 'preserveAspectRatio',
    primitiveUnits: 'primitiveUnits',
    r: 0,
    radius: 0,
    refX: 'refX',
    refY: 'refY',
    renderingIntent: 'rendering-intent',
    repeatCount: 'repeatCount',
    repeatDur: 'repeatDur',
    requiredExtensions: 'requiredExtensions',
    requiredFeatures: 'requiredFeatures',
    restart: 0,
    result: 0,
    rotate: 0,
    rx: 0,
    ry: 0,
    scale: 0,
    seed: 0,
    shapeRendering: 'shape-rendering',
    slope: 0,
    spacing: 0,
    specularConstant: 'specularConstant',
    specularExponent: 'specularExponent',
    speed: 0,
    spreadMethod: 'spreadMethod',
    startOffset: 'startOffset',
    stdDeviation: 'stdDeviation',
    stemh: 0,
    stemv: 0,
    stitchTiles: 'stitchTiles',
    stopColor: 'stop-color',
    stopOpacity: 'stop-opacity',
    strikethroughPosition: 'strikethrough-position',
    strikethroughThickness: 'strikethrough-thickness',
    string: 0,
    stroke: 0,
    strokeDasharray: 'stroke-dasharray',
    strokeDashoffset: 'stroke-dashoffset',
    strokeLinecap: 'stroke-linecap',
    strokeLinejoin: 'stroke-linejoin',
    strokeMiterlimit: 'stroke-miterlimit',
    strokeOpacity: 'stroke-opacity',
    strokeWidth: 'stroke-width',
    surfaceScale: 'surfaceScale',
    systemLanguage: 'systemLanguage',
    tableValues: 'tableValues',
    targetX: 'targetX',
    targetY: 'targetY',
    textAnchor: 'text-anchor',
    textDecoration: 'text-decoration',
    textRendering: 'text-rendering',
    textLength: 'textLength',
    to: 0,
    transform: 0,
    u1: 0,
    u2: 0,
    underlinePosition: 'underline-position',
    underlineThickness: 'underline-thickness',
    unicode: 0,
    unicodeBidi: 'unicode-bidi',
    unicodeRange: 'unicode-range',
    unitsPerEm: 'units-per-em',
    vAlphabetic: 'v-alphabetic',
    vHanging: 'v-hanging',
    vIdeographic: 'v-ideographic',
    vMathematical: 'v-mathematical',
    values: 0,
    vectorEffect: 'vector-effect',
    version: 0,
    vertAdvY: 'vert-adv-y',
    vertOriginX: 'vert-origin-x',
    vertOriginY: 'vert-origin-y',
    viewBox: 'viewBox',
    viewTarget: 'viewTarget',
    visibility: 0,
    widths: 0,
    wordSpacing: 'word-spacing',
    writingMode: 'writing-mode',
    x: 0,
    xHeight: 'x-height',
    x1: 0,
    x2: 0,
    xChannelSelector: 'xChannelSelector',
    xlinkActuate: 'xlink:actuate',
    xlinkArcrole: 'xlink:arcrole',
    xlinkHref: 'xlink:href',
    xlinkRole: 'xlink:role',
    xlinkShow: 'xlink:show',
    xlinkTitle: 'xlink:title',
    xlinkType: 'xlink:type',
    xmlBase: 'xml:base',
    xmlns: 0,
    xmlnsXlink: 'xmlns:xlink',
    xmlLang: 'xml:lang',
    xmlSpace: 'xml:space',
    y: 0,
    y1: 0,
    y2: 0,
    yChannelSelector: 'yChannelSelector',
    z: 0,
    zoomAndPan: 'zoomAndPan'
  };

  var SVGDOMPropertyConfig = {
    Properties: {},
    DOMAttributeNamespaces: {
      xlinkActuate: NS.xlink,
      xlinkArcrole: NS.xlink,
      xlinkHref: NS.xlink,
      xlinkRole: NS.xlink,
      xlinkShow: NS.xlink,
      xlinkTitle: NS.xlink,
      xlinkType: NS.xlink,
      xmlBase: NS.xml,
      xmlLang: NS.xml,
      xmlSpace: NS.xml
    },
    DOMAttributeNames: {}
  };

  Object.keys(ATTRS).forEach(function (key) {
    SVGDOMPropertyConfig.Properties[key] = 0;
    if (ATTRS[key]) {
      SVGDOMPropertyConfig.DOMAttributeNames[key] = ATTRS[key];
    }
  });

  module.exports = SVGDOMPropertyConfig;

/***/ },
/* 537 */
/***/ function(module, exports, __webpack_require__) {

  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  var EventPropagators = __webpack_require__(424);
  var ExecutionEnvironment = __webpack_require__(431);
  var ReactDOMComponentTree = __webpack_require__(417);
  var ReactInputSelection = __webpack_require__(529);
  var SyntheticEvent = __webpack_require__(436);

  var getActiveElement = __webpack_require__(535);
  var isTextInputElement = __webpack_require__(454);
  var shallowEqual = __webpack_require__(506);

  var skipSelectionChangeEvent = ExecutionEnvironment.canUseDOM && 'documentMode' in document && document.documentMode <= 11;

  var eventTypes = {
    select: {
      phasedRegistrationNames: {
        bubbled: 'onSelect',
        captured: 'onSelectCapture'
      },
      dependencies: ['topBlur', 'topContextMenu', 'topFocus', 'topKeyDown', 'topKeyUp', 'topMouseDown', 'topMouseUp', 'topSelectionChange']
    }
  };

  var activeElement = null;
  var activeElementInst = null;
  var lastSelection = null;
  var mouseDown = false;

  // Track whether a listener exists for this plugin. If none exist, we do
  // not extract events. See #3639.
  var hasListener = false;

  /**
   * Get an object which is a unique representation of the current selection.
   *
   * The return value will not be consistent across nodes or browsers, but
   * two identical selections on the same node will return identical objects.
   *
   * @param {DOMElement} node
   * @return {object}
   */
  function getSelection(node) {
    if ('selectionStart' in node && ReactInputSelection.hasSelectionCapabilities(node)) {
      return {
        start: node.selectionStart,
        end: node.selectionEnd
      };
    } else if (window.getSelection) {
      var selection = window.getSelection();
      return {
        anchorNode: selection.anchorNode,
        anchorOffset: selection.anchorOffset,
        focusNode: selection.focusNode,
        focusOffset: selection.focusOffset
      };
    } else if (document.selection) {
      var range = document.selection.createRange();
      return {
        parentElement: range.parentElement(),
        text: range.text,
        top: range.boundingTop,
        left: range.boundingLeft
      };
    }
  }

  /**
   * Poll selection to see whether it's changed.
   *
   * @param {object} nativeEvent
   * @return {?SyntheticEvent}
   */
  function constructSelectEvent(nativeEvent, nativeEventTarget) {
    // Ensure we have the right element, and that the user is not dragging a
    // selection (this matches native `select` event behavior). In HTML5, select
    // fires only on input and textarea thus if there's no focused element we
    // won't dispatch.
    if (mouseDown || activeElement == null || activeElement !== getActiveElement()) {
      return null;
    }

    // Only fire when selection has actually changed.
    var currentSelection = getSelection(activeElement);
    if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {
      lastSelection = currentSelection;

      var syntheticEvent = SyntheticEvent.getPooled(eventTypes.select, activeElementInst, nativeEvent, nativeEventTarget);

      syntheticEvent.type = 'select';
      syntheticEvent.target = activeElement;

      EventPropagators.accumulateTwoPhaseDispatches(syntheticEvent);

      return syntheticEvent;
    }

    return null;
  }

  /**
   * This plugin creates an `onSelect` event that normalizes select events
   * across form elements.
   *
   * Supported elements are:
   * - input (see `isTextInputElement`)
   * - textarea
   * - contentEditable
   *
   * This differs from native browser implementations in the following ways:
   * - Fires on contentEditable fields as well as inputs.
   * - Fires for collapsed selection.
   * - Fires after user input.
   */
  var SelectEventPlugin = {

    eventTypes: eventTypes,

    extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
      if (!hasListener) {
        return null;
      }

      var targetNode = targetInst ? ReactDOMComponentTree.getNodeFromInstance(targetInst) : window;

      switch (topLevelType) {
        // Track the input node that has focus.
        case 'topFocus':
          if (isTextInputElement(targetNode) || targetNode.contentEditable === 'true') {
            activeElement = targetNode;
            activeElementInst = targetInst;
            lastSelection = null;
          }
          break;
        case 'topBlur':
          activeElement = null;
          activeElementInst = null;
          lastSelection = null;
          break;

        // Don't fire the event while the user is dragging. This matches the
        // semantics of the native select event.
        case 'topMouseDown':
          mouseDown = true;
          break;
        case 'topContextMenu':
        case 'topMouseUp':
          mouseDown = false;
          return constructSelectEvent(nativeEvent, nativeEventTarget);

        // Chrome and IE fire non-standard event when selection is changed (and
        // sometimes when it hasn't). IE's event fires out of order with respect
        // to key and input events on deletion, so we discard it.
        //
        // Firefox doesn't support selectionchange, so check selection status
        // after each key entry. The selection changes after keydown and before
        // keyup, but we check on keydown as well in the case of holding down a
        // key, when multiple keydown events are fired but only one keyup is.
        // This is also our approach for IE handling, for the reason above.
        case 'topSelectionChange':
          if (skipSelectionChangeEvent) {
            break;
          }
        // falls through
        case 'topKeyDown':
        case 'topKeyUp':
          return constructSelectEvent(nativeEvent, nativeEventTarget);
      }

      return null;
    },

    didPutListener: function (inst, registrationName, listener) {
      if (registrationName === 'onSelect') {
        hasListener = true;
      }
    }
  };

  module.exports = SelectEventPlugin;

/***/ },
/* 538 */
/***/ function(module, exports, __webpack_require__) {

  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   * 
   */

  'use strict';

  var _prodInvariant = __webpack_require__(418);

  var EventListener = __webpack_require__(525);
  var EventPropagators = __webpack_require__(424);
  var ReactDOMComponentTree = __webpack_require__(417);
  var SyntheticAnimationEvent = __webpack_require__(539);
  var SyntheticClipboardEvent = __webpack_require__(540);
  var SyntheticEvent = __webpack_require__(436);
  var SyntheticFocusEvent = __webpack_require__(541);
  var SyntheticKeyboardEvent = __webpack_require__(542);
  var SyntheticMouseEvent = __webpack_require__(457);
  var SyntheticDragEvent = __webpack_require__(545);
  var SyntheticTouchEvent = __webpack_require__(546);
  var SyntheticTransitionEvent = __webpack_require__(547);
  var SyntheticUIEvent = __webpack_require__(458);
  var SyntheticWheelEvent = __webpack_require__(548);

  var emptyFunction = __webpack_require__(395);
  var getEventCharCode = __webpack_require__(543);
  var invariant = __webpack_require__(391);

  /**
   * Turns
   * ['abort', ...]
   * into
   * eventTypes = {
   *   'abort': {
   *     phasedRegistrationNames: {
   *       bubbled: 'onAbort',
   *       captured: 'onAbortCapture',
   *     },
   *     dependencies: ['topAbort'],
   *   },
   *   ...
   * };
   * topLevelEventsToDispatchConfig = {
   *   'topAbort': { sameConfig }
   * };
   */
  var eventTypes = {};
  var topLevelEventsToDispatchConfig = {};
  ['abort', 'animationEnd', 'animationIteration', 'animationStart', 'blur', 'canPlay', 'canPlayThrough', 'click', 'contextMenu', 'copy', 'cut', 'doubleClick', 'drag', 'dragEnd', 'dragEnter', 'dragExit', 'dragLeave', 'dragOver', 'dragStart', 'drop', 'durationChange', 'emptied', 'encrypted', 'ended', 'error', 'focus', 'input', 'invalid', 'keyDown', 'keyPress', 'keyUp', 'load', 'loadedData', 'loadedMetadata', 'loadStart', 'mouseDown', 'mouseMove', 'mouseOut', 'mouseOver', 'mouseUp', 'paste', 'pause', 'play', 'playing', 'progress', 'rateChange', 'reset', 'scroll', 'seeked', 'seeking', 'stalled', 'submit', 'suspend', 'timeUpdate', 'touchCancel', 'touchEnd', 'touchMove', 'touchStart', 'transitionEnd', 'volumeChange', 'waiting', 'wheel'].forEach(function (event) {
    var capitalizedEvent = event[0].toUpperCase() + event.slice(1);
    var onEvent = 'on' + capitalizedEvent;
    var topEvent = 'top' + capitalizedEvent;

    var type = {
      phasedRegistrationNames: {
        bubbled: onEvent,
        captured: onEvent + 'Capture'
      },
      dependencies: [topEvent]
    };
    eventTypes[event] = type;
    topLevelEventsToDispatchConfig[topEvent] = type;
  });

  var onClickListeners = {};

  function getDictionaryKey(inst) {
    // Prevents V8 performance issue:
    // https://github.com/facebook/react/pull/7232
    return '.' + inst._rootNodeID;
  }

  function isInteractive(tag) {
    return tag === 'button' || tag === 'input' || tag === 'select' || tag === 'textarea';
  }

  var SimpleEventPlugin = {

    eventTypes: eventTypes,

    extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
      var dispatchConfig = topLevelEventsToDispatchConfig[topLevelType];
      if (!dispatchConfig) {
        return null;
      }
      var EventConstructor;
      switch (topLevelType) {
        case 'topAbort':
        case 'topCanPlay':
        case 'topCanPlayThrough':
        case 'topDurationChange':
        case 'topEmptied':
        case 'topEncrypted':
        case 'topEnded':
        case 'topError':
        case 'topInput':
        case 'topInvalid':
        case 'topLoad':
        case 'topLoadedData':
        case 'topLoadedMetadata':
        case 'topLoadStart':
        case 'topPause':
        case 'topPlay':
        case 'topPlaying':
        case 'topProgress':
        case 'topRateChange':
        case 'topReset':
        case 'topSeeked':
        case 'topSeeking':
        case 'topStalled':
        case 'topSubmit':
        case 'topSuspend':
        case 'topTimeUpdate':
        case 'topVolumeChange':
        case 'topWaiting':
          // HTML Events
          // @see http://www.w3.org/TR/html5/index.html#events-0
          EventConstructor = SyntheticEvent;
          break;
        case 'topKeyPress':
          // Firefox creates a keypress event for function keys too. This removes
          // the unwanted keypress events. Enter is however both printable and
          // non-printable. One would expect Tab to be as well (but it isn't).
          if (getEventCharCode(nativeEvent) === 0) {
            return null;
          }
        /* falls through */
        case 'topKeyDown':
        case 'topKeyUp':
          EventConstructor = SyntheticKeyboardEvent;
          break;
        case 'topBlur':
        case 'topFocus':
          EventConstructor = SyntheticFocusEvent;
          break;
        case 'topClick':
          // Firefox creates a click event on right mouse clicks. This removes the
          // unwanted click events.
          if (nativeEvent.button === 2) {
            return null;
          }
        /* falls through */
        case 'topDoubleClick':
        case 'topMouseDown':
        case 'topMouseMove':
        case 'topMouseUp':
        // TODO: Disabled elements should not respond to mouse events
        /* falls through */
        case 'topMouseOut':
        case 'topMouseOver':
        case 'topContextMenu':
          EventConstructor = SyntheticMouseEvent;
          break;
        case 'topDrag':
        case 'topDragEnd':
        case 'topDragEnter':
        case 'topDragExit':
        case 'topDragLeave':
        case 'topDragOver':
        case 'topDragStart':
        case 'topDrop':
          EventConstructor = SyntheticDragEvent;
          break;
        case 'topTouchCancel':
        case 'topTouchEnd':
        case 'topTouchMove':
        case 'topTouchStart':
          EventConstructor = SyntheticTouchEvent;
          break;
        case 'topAnimationEnd':
        case 'topAnimationIteration':
        case 'topAnimationStart':
          EventConstructor = SyntheticAnimationEvent;
          break;
        case 'topTransitionEnd':
          EventConstructor = SyntheticTransitionEvent;
          break;
        case 'topScroll':
          EventConstructor = SyntheticUIEvent;
          break;
        case 'topWheel':
          EventConstructor = SyntheticWheelEvent;
          break;
        case 'topCopy':
        case 'topCut':
        case 'topPaste':
          EventConstructor = SyntheticClipboardEvent;
          break;
      }
      !EventConstructor ?  true ? invariant(false, 'SimpleEventPlugin: Unhandled event type, `%s`.', topLevelType) : _prodInvariant('86', topLevelType) : void 0;
      var event = EventConstructor.getPooled(dispatchConfig, targetInst, nativeEvent, nativeEventTarget);
      EventPropagators.accumulateTwoPhaseDispatches(event);
      return event;
    },

    didPutListener: function (inst, registrationName, listener) {
      // Mobile Safari does not fire properly bubble click events on
      // non-interactive elements, which means delegated click listeners do not
      // fire. The workaround for this bug involves attaching an empty click
      // listener on the target node.
      // http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
      if (registrationName === 'onClick' && !isInteractive(inst._tag)) {
        var key = getDictionaryKey(inst);
        var node = ReactDOMComponentTree.getNodeFromInstance(inst);
        if (!onClickListeners[key]) {
          onClickListeners[key] = EventListener.listen(node, 'click', emptyFunction);
        }
      }
    },

    willDeleteListener: function (inst, registrationName) {
      if (registrationName === 'onClick' && !isInteractive(inst._tag)) {
        var key = getDictionaryKey(inst);
        onClickListeners[key].remove();
        delete onClickListeners[key];
      }
    }

  };

  module.exports = SimpleEventPlugin;

/***/ },
/* 539 */
/***/ function(module, exports, __webpack_require__) {

  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  var SyntheticEvent = __webpack_require__(436);

  /**
   * @interface Event
   * @see http://www.w3.org/TR/css3-animations/#AnimationEvent-interface
   * @see https://developer.mozilla.org/en-US/docs/Web/API/AnimationEvent
   */
  var AnimationEventInterface = {
    animationName: null,
    elapsedTime: null,
    pseudoElement: null
  };

  /**
   * @param {object} dispatchConfig Configuration used to dispatch this event.
   * @param {string} dispatchMarker Marker identifying the event target.
   * @param {object} nativeEvent Native browser event.
   * @extends {SyntheticEvent}
   */
  function SyntheticAnimationEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
    return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
  }

  SyntheticEvent.augmentClass(SyntheticAnimationEvent, AnimationEventInterface);

  module.exports = SyntheticAnimationEvent;

/***/ },
/* 540 */
/***/ function(module, exports, __webpack_require__) {

  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  var SyntheticEvent = __webpack_require__(436);

  /**
   * @interface Event
   * @see http://www.w3.org/TR/clipboard-apis/
   */
  var ClipboardEventInterface = {
    clipboardData: function (event) {
      return 'clipboardData' in event ? event.clipboardData : window.clipboardData;
    }
  };

  /**
   * @param {object} dispatchConfig Configuration used to dispatch this event.
   * @param {string} dispatchMarker Marker identifying the event target.
   * @param {object} nativeEvent Native browser event.
   * @extends {SyntheticUIEvent}
   */
  function SyntheticClipboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
    return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
  }

  SyntheticEvent.augmentClass(SyntheticClipboardEvent, ClipboardEventInterface);

  module.exports = SyntheticClipboardEvent;

/***/ },
/* 541 */
/***/ function(module, exports, __webpack_require__) {

  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  var SyntheticUIEvent = __webpack_require__(458);

  /**
   * @interface FocusEvent
   * @see http://www.w3.org/TR/DOM-Level-3-Events/
   */
  var FocusEventInterface = {
    relatedTarget: null
  };

  /**
   * @param {object} dispatchConfig Configuration used to dispatch this event.
   * @param {string} dispatchMarker Marker identifying the event target.
   * @param {object} nativeEvent Native browser event.
   * @extends {SyntheticUIEvent}
   */
  function SyntheticFocusEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
    return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
  }

  SyntheticUIEvent.augmentClass(SyntheticFocusEvent, FocusEventInterface);

  module.exports = SyntheticFocusEvent;

/***/ },
/* 542 */
/***/ function(module, exports, __webpack_require__) {

  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  var SyntheticUIEvent = __webpack_require__(458);

  var getEventCharCode = __webpack_require__(543);
  var getEventKey = __webpack_require__(544);
  var getEventModifierState = __webpack_require__(460);

  /**
   * @interface KeyboardEvent
   * @see http://www.w3.org/TR/DOM-Level-3-Events/
   */
  var KeyboardEventInterface = {
    key: getEventKey,
    location: null,
    ctrlKey: null,
    shiftKey: null,
    altKey: null,
    metaKey: null,
    repeat: null,
    locale: null,
    getModifierState: getEventModifierState,
    // Legacy Interface
    charCode: function (event) {
      // `charCode` is the result of a KeyPress event and represents the value of
      // the actual printable character.

      // KeyPress is deprecated, but its replacement is not yet final and not
      // implemented in any major browser. Only KeyPress has charCode.
      if (event.type === 'keypress') {
        return getEventCharCode(event);
      }
      return 0;
    },
    keyCode: function (event) {
      // `keyCode` is the result of a KeyDown/Up event and represents the value of
      // physical keyboard key.

      // The actual meaning of the value depends on the users' keyboard layout
      // which cannot be detected. Assuming that it is a US keyboard layout
      // provides a surprisingly accurate mapping for US and European users.
      // Due to this, it is left to the user to implement at this time.
      if (event.type === 'keydown' || event.type === 'keyup') {
        return event.keyCode;
      }
      return 0;
    },
    which: function (event) {
      // `which` is an alias for either `keyCode` or `charCode` depending on the
      // type of the event.
      if (event.type === 'keypress') {
        return getEventCharCode(event);
      }
      if (event.type === 'keydown' || event.type === 'keyup') {
        return event.keyCode;
      }
      return 0;
    }
  };

  /**
   * @param {object} dispatchConfig Configuration used to dispatch this event.
   * @param {string} dispatchMarker Marker identifying the event target.
   * @param {object} nativeEvent Native browser event.
   * @extends {SyntheticUIEvent}
   */
  function SyntheticKeyboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
    return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
  }

  SyntheticUIEvent.augmentClass(SyntheticKeyboardEvent, KeyboardEventInterface);

  module.exports = SyntheticKeyboardEvent;

/***/ },
/* 543 */
/***/ function(module, exports) {

  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  /**
   * `charCode` represents the actual "character code" and is safe to use with
   * `String.fromCharCode`. As such, only keys that correspond to printable
   * characters produce a valid `charCode`, the only exception to this is Enter.
   * The Tab-key is considered non-printable and does not have a `charCode`,
   * presumably because it does not produce a tab-character in browsers.
   *
   * @param {object} nativeEvent Native browser event.
   * @return {number} Normalized `charCode` property.
   */

  function getEventCharCode(nativeEvent) {
    var charCode;
    var keyCode = nativeEvent.keyCode;

    if ('charCode' in nativeEvent) {
      charCode = nativeEvent.charCode;

      // FF does not set `charCode` for the Enter-key, check against `keyCode`.
      if (charCode === 0 && keyCode === 13) {
        charCode = 13;
      }
    } else {
      // IE8 does not implement `charCode`, but `keyCode` has the correct value.
      charCode = keyCode;
    }

    // Some non-printable keys are reported in `charCode`/`keyCode`, discard them.
    // Must not discard the (non-)printable Enter-key.
    if (charCode >= 32 || charCode === 13) {
      return charCode;
    }

    return 0;
  }

  module.exports = getEventCharCode;

/***/ },
/* 544 */
/***/ function(module, exports, __webpack_require__) {

  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  var getEventCharCode = __webpack_require__(543);

  /**
   * Normalization of deprecated HTML5 `key` values
   * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
   */
  var normalizeKey = {
    'Esc': 'Escape',
    'Spacebar': ' ',
    'Left': 'ArrowLeft',
    'Up': 'ArrowUp',
    'Right': 'ArrowRight',
    'Down': 'ArrowDown',
    'Del': 'Delete',
    'Win': 'OS',
    'Menu': 'ContextMenu',
    'Apps': 'ContextMenu',
    'Scroll': 'ScrollLock',
    'MozPrintableKey': 'Unidentified'
  };

  /**
   * Translation from legacy `keyCode` to HTML5 `key`
   * Only special keys supported, all others depend on keyboard layout or browser
   * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
   */
  var translateToKey = {
    8: 'Backspace',
    9: 'Tab',
    12: 'Clear',
    13: 'Enter',
    16: 'Shift',
    17: 'Control',
    18: 'Alt',
    19: 'Pause',
    20: 'CapsLock',
    27: 'Escape',
    32: ' ',
    33: 'PageUp',
    34: 'PageDown',
    35: 'End',
    36: 'Home',
    37: 'ArrowLeft',
    38: 'ArrowUp',
    39: 'ArrowRight',
    40: 'ArrowDown',
    45: 'Insert',
    46: 'Delete',
    112: 'F1', 113: 'F2', 114: 'F3', 115: 'F4', 116: 'F5', 117: 'F6',
    118: 'F7', 119: 'F8', 120: 'F9', 121: 'F10', 122: 'F11', 123: 'F12',
    144: 'NumLock',
    145: 'ScrollLock',
    224: 'Meta'
  };

  /**
   * @param {object} nativeEvent Native browser event.
   * @return {string} Normalized `key` property.
   */
  function getEventKey(nativeEvent) {
    if (nativeEvent.key) {
      // Normalize inconsistent values reported by browsers due to
      // implementations of a working draft specification.

      // FireFox implements `key` but returns `MozPrintableKey` for all
      // printable characters (normalized to `Unidentified`), ignore it.
      var key = normalizeKey[nativeEvent.key] || nativeEvent.key;
      if (key !== 'Unidentified') {
        return key;
      }
    }

    // Browser does not implement `key`, polyfill as much of it as we can.
    if (nativeEvent.type === 'keypress') {
      var charCode = getEventCharCode(nativeEvent);

      // The enter-key is technically both printable and non-printable and can
      // thus be captured by `keypress`, no other non-printable key should.
      return charCode === 13 ? 'Enter' : String.fromCharCode(charCode);
    }
    if (nativeEvent.type === 'keydown' || nativeEvent.type === 'keyup') {
      // While user keyboard layout determines the actual meaning of each
      // `keyCode` value, almost all function keys have a universal value.
      return translateToKey[nativeEvent.keyCode] || 'Unidentified';
    }
    return '';
  }

  module.exports = getEventKey;

/***/ },
/* 545 */
/***/ function(module, exports, __webpack_require__) {

  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  var SyntheticMouseEvent = __webpack_require__(457);

  /**
   * @interface DragEvent
   * @see http://www.w3.org/TR/DOM-Level-3-Events/
   */
  var DragEventInterface = {
    dataTransfer: null
  };

  /**
   * @param {object} dispatchConfig Configuration used to dispatch this event.
   * @param {string} dispatchMarker Marker identifying the event target.
   * @param {object} nativeEvent Native browser event.
   * @extends {SyntheticUIEvent}
   */
  function SyntheticDragEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
    return SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
  }

  SyntheticMouseEvent.augmentClass(SyntheticDragEvent, DragEventInterface);

  module.exports = SyntheticDragEvent;

/***/ },
/* 546 */
/***/ function(module, exports, __webpack_require__) {

  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  var SyntheticUIEvent = __webpack_require__(458);

  var getEventModifierState = __webpack_require__(460);

  /**
   * @interface TouchEvent
   * @see http://www.w3.org/TR/touch-events/
   */
  var TouchEventInterface = {
    touches: null,
    targetTouches: null,
    changedTouches: null,
    altKey: null,
    metaKey: null,
    ctrlKey: null,
    shiftKey: null,
    getModifierState: getEventModifierState
  };

  /**
   * @param {object} dispatchConfig Configuration used to dispatch this event.
   * @param {string} dispatchMarker Marker identifying the event target.
   * @param {object} nativeEvent Native browser event.
   * @extends {SyntheticUIEvent}
   */
  function SyntheticTouchEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
    return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
  }

  SyntheticUIEvent.augmentClass(SyntheticTouchEvent, TouchEventInterface);

  module.exports = SyntheticTouchEvent;

/***/ },
/* 547 */
/***/ function(module, exports, __webpack_require__) {

  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  var SyntheticEvent = __webpack_require__(436);

  /**
   * @interface Event
   * @see http://www.w3.org/TR/2009/WD-css3-transitions-20090320/#transition-events-
   * @see https://developer.mozilla.org/en-US/docs/Web/API/TransitionEvent
   */
  var TransitionEventInterface = {
    propertyName: null,
    elapsedTime: null,
    pseudoElement: null
  };

  /**
   * @param {object} dispatchConfig Configuration used to dispatch this event.
   * @param {string} dispatchMarker Marker identifying the event target.
   * @param {object} nativeEvent Native browser event.
   * @extends {SyntheticEvent}
   */
  function SyntheticTransitionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
    return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
  }

  SyntheticEvent.augmentClass(SyntheticTransitionEvent, TransitionEventInterface);

  module.exports = SyntheticTransitionEvent;

/***/ },
/* 548 */
/***/ function(module, exports, __webpack_require__) {

  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  var SyntheticMouseEvent = __webpack_require__(457);

  /**
   * @interface WheelEvent
   * @see http://www.w3.org/TR/DOM-Level-3-Events/
   */
  var WheelEventInterface = {
    deltaX: function (event) {
      return 'deltaX' in event ? event.deltaX :
      // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).
      'wheelDeltaX' in event ? -event.wheelDeltaX : 0;
    },
    deltaY: function (event) {
      return 'deltaY' in event ? event.deltaY :
      // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).
      'wheelDeltaY' in event ? -event.wheelDeltaY :
      // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).
      'wheelDelta' in event ? -event.wheelDelta : 0;
    },
    deltaZ: null,

    // Browsers without "deltaMode" is reporting in raw wheel delta where one
    // notch on the scroll is always +/- 120, roughly equivalent to pixels.
    // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or
    // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.
    deltaMode: null
  };

  /**
   * @param {object} dispatchConfig Configuration used to dispatch this event.
   * @param {string} dispatchMarker Marker identifying the event target.
   * @param {object} nativeEvent Native browser event.
   * @extends {SyntheticMouseEvent}
   */
  function SyntheticWheelEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
    return SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
  }

  SyntheticMouseEvent.augmentClass(SyntheticWheelEvent, WheelEventInterface);

  module.exports = SyntheticWheelEvent;

/***/ },
/* 549 */
/***/ function(module, exports, __webpack_require__) {

  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  var _prodInvariant = __webpack_require__(418);

  var DOMLazyTree = __webpack_require__(464);
  var DOMProperty = __webpack_require__(419);
  var React = __webpack_require__(386);
  var ReactBrowserEventEmitter = __webpack_require__(488);
  var ReactCurrentOwner = __webpack_require__(393);
  var ReactDOMComponentTree = __webpack_require__(417);
  var ReactDOMContainerInfo = __webpack_require__(550);
  var ReactDOMFeatureFlags = __webpack_require__(551);
  var ReactFeatureFlags = __webpack_require__(441);
  var ReactInstanceMap = __webpack_require__(499);
  var ReactInstrumentation = __webpack_require__(445);
  var ReactMarkupChecksum = __webpack_require__(552);
  var ReactReconciler = __webpack_require__(442);
  var ReactUpdateQueue = __webpack_require__(518);
  var ReactUpdates = __webpack_require__(439);

  var emptyObject = __webpack_require__(403);
  var instantiateReactComponent = __webpack_require__(501);
  var invariant = __webpack_require__(391);
  var setInnerHTML = __webpack_require__(466);
  var shouldUpdateReactComponent = __webpack_require__(507);
  var warning = __webpack_require__(394);

  var ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;
  var ROOT_ATTR_NAME = DOMProperty.ROOT_ATTRIBUTE_NAME;

  var ELEMENT_NODE_TYPE = 1;
  var DOC_NODE_TYPE = 9;
  var DOCUMENT_FRAGMENT_NODE_TYPE = 11;

  var instancesByReactRootID = {};

  /**
   * Finds the index of the first character
   * that's not common between the two given strings.
   *
   * @return {number} the index of the character where the strings diverge
   */
  function firstDifferenceIndex(string1, string2) {
    var minLen = Math.min(string1.length, string2.length);
    for (var i = 0; i < minLen; i++) {
      if (string1.charAt(i) !== string2.charAt(i)) {
        return i;
      }
    }
    return string1.length === string2.length ? -1 : minLen;
  }

  /**
   * @param {DOMElement|DOMDocument} container DOM element that may contain
   * a React component
   * @return {?*} DOM element that may have the reactRoot ID, or null.
   */
  function getReactRootElementInContainer(container) {
    if (!container) {
      return null;
    }

    if (container.nodeType === DOC_NODE_TYPE) {
      return container.documentElement;
    } else {
      return container.firstChild;
    }
  }

  function internalGetID(node) {
    // If node is something like a window, document, or text node, none of
    // which support attributes or a .getAttribute method, gracefully return
    // the empty string, as if the attribute were missing.
    return node.getAttribute && node.getAttribute(ATTR_NAME) || '';
  }

  /**
   * Mounts this component and inserts it into the DOM.
   *
   * @param {ReactComponent} componentInstance The instance to mount.
   * @param {DOMElement} container DOM element to mount into.
   * @param {ReactReconcileTransaction} transaction
   * @param {boolean} shouldReuseMarkup If true, do not insert markup
   */
  function mountComponentIntoNode(wrapperInstance, container, transaction, shouldReuseMarkup, context) {
    var markerName;
    if (ReactFeatureFlags.logTopLevelRenders) {
      var wrappedElement = wrapperInstance._currentElement.props.child;
      var type = wrappedElement.type;
      markerName = 'React mount: ' + (typeof type === 'string' ? type : type.displayName || type.name);
      console.time(markerName);
    }

    var markup = ReactReconciler.mountComponent(wrapperInstance, transaction, null, ReactDOMContainerInfo(wrapperInstance, container), context, 0 /* parentDebugID */
    );

    if (markerName) {
      console.timeEnd(markerName);
    }

    wrapperInstance._renderedComponent._topLevelWrapper = wrapperInstance;
    ReactMount._mountImageIntoNode(markup, container, wrapperInstance, shouldReuseMarkup, transaction);
  }

  /**
   * Batched mount.
   *
   * @param {ReactComponent} componentInstance The instance to mount.
   * @param {DOMElement} container DOM element to mount into.
   * @param {boolean} shouldReuseMarkup If true, do not insert markup
   */
  function batchedMountComponentIntoNode(componentInstance, container, shouldReuseMarkup, context) {
    var transaction = ReactUpdates.ReactReconcileTransaction.getPooled(
    /* useCreateElement */
    !shouldReuseMarkup && ReactDOMFeatureFlags.useCreateElement);
    transaction.perform(mountComponentIntoNode, null, componentInstance, container, transaction, shouldReuseMarkup, context);
    ReactUpdates.ReactReconcileTransaction.release(transaction);
  }

  /**
   * Unmounts a component and removes it from the DOM.
   *
   * @param {ReactComponent} instance React component instance.
   * @param {DOMElement} container DOM element to unmount from.
   * @final
   * @internal
   * @see {ReactMount.unmountComponentAtNode}
   */
  function unmountComponentFromNode(instance, container, safely) {
    if (true) {
      ReactInstrumentation.debugTool.onBeginFlush();
    }
    ReactReconciler.unmountComponent(instance, safely);
    if (true) {
      ReactInstrumentation.debugTool.onEndFlush();
    }

    if (container.nodeType === DOC_NODE_TYPE) {
      container = container.documentElement;
    }

    // http://jsperf.com/emptying-a-node
    while (container.lastChild) {
      container.removeChild(container.lastChild);
    }
  }

  /**
   * True if the supplied DOM node has a direct React-rendered child that is
   * not a React root element. Useful for warning in `render`,
   * `unmountComponentAtNode`, etc.
   *
   * @param {?DOMElement} node The candidate DOM node.
   * @return {boolean} True if the DOM element contains a direct child that was
   * rendered by React but is not a root element.
   * @internal
   */
  function hasNonRootReactChild(container) {
    var rootEl = getReactRootElementInContainer(container);
    if (rootEl) {
      var inst = ReactDOMComponentTree.getInstanceFromNode(rootEl);
      return !!(inst && inst._hostParent);
    }
  }

  /**
   * True if the supplied DOM node is a React DOM element and
   * it has been rendered by another copy of React.
   *
   * @param {?DOMElement} node The candidate DOM node.
   * @return {boolean} True if the DOM has been rendered by another copy of React
   * @internal
   */
  function nodeIsRenderedByOtherInstance(container) {
    var rootEl = getReactRootElementInContainer(container);
    return !!(rootEl && isReactNode(rootEl) && !ReactDOMComponentTree.getInstanceFromNode(rootEl));
  }

  /**
   * True if the supplied DOM node is a valid node element.
   *
   * @param {?DOMElement} node The candidate DOM node.
   * @return {boolean} True if the DOM is a valid DOM node.
   * @internal
   */
  function isValidContainer(node) {
    return !!(node && (node.nodeType === ELEMENT_NODE_TYPE || node.nodeType === DOC_NODE_TYPE || node.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE));
  }

  /**
   * True if the supplied DOM node is a valid React node element.
   *
   * @param {?DOMElement} node The candidate DOM node.
   * @return {boolean} True if the DOM is a valid React DOM node.
   * @internal
   */
  function isReactNode(node) {
    return isValidContainer(node) && (node.hasAttribute(ROOT_ATTR_NAME) || node.hasAttribute(ATTR_NAME));
  }

  function getHostRootInstanceInContainer(container) {
    var rootEl = getReactRootElementInContainer(container);
    var prevHostInstance = rootEl && ReactDOMComponentTree.getInstanceFromNode(rootEl);
    return prevHostInstance && !prevHostInstance._hostParent ? prevHostInstance : null;
  }

  function getTopLevelWrapperInContainer(container) {
    var root = getHostRootInstanceInContainer(container);
    return root ? root._hostContainerInfo._topLevelWrapper : null;
  }

  /**
   * Temporary (?) hack so that we can store all top-level pending updates on
   * composites instead of having to worry about different types of components
   * here.
   */
  var topLevelRootCounter = 1;
  var TopLevelWrapper = function () {
    this.rootID = topLevelRootCounter++;
  };
  TopLevelWrapper.prototype.isReactComponent = {};
  if (true) {
    TopLevelWrapper.displayName = 'TopLevelWrapper';
  }
  TopLevelWrapper.prototype.render = function () {
    return this.props.child;
  };
  TopLevelWrapper.isReactTopLevelWrapper = true;

  /**
   * Mounting is the process of initializing a React component by creating its
   * representative DOM elements and inserting them into a supplied `container`.
   * Any prior content inside `container` is destroyed in the process.
   *
   *   ReactMount.render(
   *     component,
   *     document.getElementById('container')
   *   );
   *
   *   <div id="container">                   <-- Supplied `container`.
   *     <div data-reactid=".3">              <-- Rendered reactRoot of React
   *       // ...                                 component.
   *     </div>
   *   </div>
   *
   * Inside of `container`, the first element rendered is the "reactRoot".
   */
  var ReactMount = {

    TopLevelWrapper: TopLevelWrapper,

    /**
     * Used by devtools. The keys are not important.
     */
    _instancesByReactRootID: instancesByReactRootID,

    /**
     * This is a hook provided to support rendering React components while
     * ensuring that the apparent scroll position of its `container` does not
     * change.
     *
     * @param {DOMElement} container The `container` being rendered into.
     * @param {function} renderCallback This must be called once to do the render.
     */
    scrollMonitor: function (container, renderCallback) {
      renderCallback();
    },

    /**
     * Take a component that's already mounted into the DOM and replace its props
     * @param {ReactComponent} prevComponent component instance already in the DOM
     * @param {ReactElement} nextElement component instance to render
     * @param {DOMElement} container container to render into
     * @param {?function} callback function triggered on completion
     */
    _updateRootComponent: function (prevComponent, nextElement, nextContext, container, callback) {
      ReactMount.scrollMonitor(container, function () {
        ReactUpdateQueue.enqueueElementInternal(prevComponent, nextElement, nextContext);
        if (callback) {
          ReactUpdateQueue.enqueueCallbackInternal(prevComponent, callback);
        }
      });

      return prevComponent;
    },

    /**
     * Render a new component into the DOM. Hooked by hooks!
     *
     * @param {ReactElement} nextElement element to render
     * @param {DOMElement} container container to render into
     * @param {boolean} shouldReuseMarkup if we should skip the markup insertion
     * @return {ReactComponent} nextComponent
     */
    _renderNewRootComponent: function (nextElement, container, shouldReuseMarkup, context) {
      // Various parts of our code (such as ReactCompositeComponent's
      // _renderValidatedComponent) assume that calls to render aren't nested;
      // verify that that's the case.
       true ? warning(ReactCurrentOwner.current == null, '_renderNewRootComponent(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from ' + 'render is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : void 0;

      !isValidContainer(container) ?  true ? invariant(false, '_registerComponent(...): Target container is not a DOM element.') : _prodInvariant('37') : void 0;

      ReactBrowserEventEmitter.ensureScrollValueMonitoring();
      var componentInstance = instantiateReactComponent(nextElement, false);

      // The initial render is synchronous but any updates that happen during
      // rendering, in componentWillMount or componentDidMount, will be batched
      // according to the current batching strategy.

      ReactUpdates.batchedUpdates(batchedMountComponentIntoNode, componentInstance, container, shouldReuseMarkup, context);

      var wrapperID = componentInstance._instance.rootID;
      instancesByReactRootID[wrapperID] = componentInstance;

      return componentInstance;
    },

    /**
     * Renders a React component into the DOM in the supplied `container`.
     *
     * If the React component was previously rendered into `container`, this will
     * perform an update on it and only mutate the DOM as necessary to reflect the
     * latest React component.
     *
     * @param {ReactComponent} parentComponent The conceptual parent of this render tree.
     * @param {ReactElement} nextElement Component element to render.
     * @param {DOMElement} container DOM element to render into.
     * @param {?function} callback function triggered on completion
     * @return {ReactComponent} Component instance rendered in `container`.
     */
    renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {
      !(parentComponent != null && ReactInstanceMap.has(parentComponent)) ?  true ? invariant(false, 'parentComponent must be a valid React Component') : _prodInvariant('38') : void 0;
      return ReactMount._renderSubtreeIntoContainer(parentComponent, nextElement, container, callback);
    },

    _renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {
      ReactUpdateQueue.validateCallback(callback, 'ReactDOM.render');
      !React.isValidElement(nextElement) ?  true ? invariant(false, 'ReactDOM.render(): Invalid component element.%s', typeof nextElement === 'string' ? ' Instead of passing a string like \'div\', pass ' + 'React.createElement(\'div\') or <div />.' : typeof nextElement === 'function' ? ' Instead of passing a class like Foo, pass ' + 'React.createElement(Foo) or <Foo />.' :
      // Check if it quacks like an element
      nextElement != null && nextElement.props !== undefined ? ' This may be caused by unintentionally loading two independent ' + 'copies of React.' : '') : _prodInvariant('39', typeof nextElement === 'string' ? ' Instead of passing a string like \'div\', pass ' + 'React.createElement(\'div\') or <div />.' : typeof nextElement === 'function' ? ' Instead of passing a class like Foo, pass ' + 'React.createElement(Foo) or <Foo />.' : nextElement != null && nextElement.props !== undefined ? ' This may be caused by unintentionally loading two independent ' + 'copies of React.' : '') : void 0;

       true ? warning(!container || !container.tagName || container.tagName.toUpperCase() !== 'BODY', 'render(): Rendering components directly into document.body is ' + 'discouraged, since its children are often manipulated by third-party ' + 'scripts and browser extensions. This may lead to subtle ' + 'reconciliation issues. Try rendering into a container element created ' + 'for your app.') : void 0;

      var nextWrappedElement = React.createElement(TopLevelWrapper, { child: nextElement });

      var nextContext;
      if (parentComponent) {
        var parentInst = ReactInstanceMap.get(parentComponent);
        nextContext = parentInst._processChildContext(parentInst._context);
      } else {
        nextContext = emptyObject;
      }

      var prevComponent = getTopLevelWrapperInContainer(container);

      if (prevComponent) {
        var prevWrappedElement = prevComponent._currentElement;
        var prevElement = prevWrappedElement.props.child;
        if (shouldUpdateReactComponent(prevElement, nextElement)) {
          var publicInst = prevComponent._renderedComponent.getPublicInstance();
          var updatedCallback = callback && function () {
            callback.call(publicInst);
          };
          ReactMount._updateRootComponent(prevComponent, nextWrappedElement, nextContext, container, updatedCallback);
          return publicInst;
        } else {
          ReactMount.unmountComponentAtNode(container);
        }
      }

      var reactRootElement = getReactRootElementInContainer(container);
      var containerHasReactMarkup = reactRootElement && !!internalGetID(reactRootElement);
      var containerHasNonRootReactChild = hasNonRootReactChild(container);

      if (true) {
         true ? warning(!containerHasNonRootReactChild, 'render(...): Replacing React-rendered children with a new root ' + 'component. If you intended to update the children of this node, ' + 'you should instead have the existing children update their state ' + 'and render the new components instead of calling ReactDOM.render.') : void 0;

        if (!containerHasReactMarkup || reactRootElement.nextSibling) {
          var rootElementSibling = reactRootElement;
          while (rootElementSibling) {
            if (internalGetID(rootElementSibling)) {
               true ? warning(false, 'render(): Target node has markup rendered by React, but there ' + 'are unrelated nodes as well. This is most commonly caused by ' + 'white-space inserted around server-rendered markup.') : void 0;
              break;
            }
            rootElementSibling = rootElementSibling.nextSibling;
          }
        }
      }

      var shouldReuseMarkup = containerHasReactMarkup && !prevComponent && !containerHasNonRootReactChild;
      var component = ReactMount._renderNewRootComponent(nextWrappedElement, container, shouldReuseMarkup, nextContext)._renderedComponent.getPublicInstance();
      if (callback) {
        callback.call(component);
      }
      return component;
    },

    /**
     * Renders a React component into the DOM in the supplied `container`.
     * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.render
     *
     * If the React component was previously rendered into `container`, this will
     * perform an update on it and only mutate the DOM as necessary to reflect the
     * latest React component.
     *
     * @param {ReactElement} nextElement Component element to render.
     * @param {DOMElement} container DOM element to render into.
     * @param {?function} callback function triggered on completion
     * @return {ReactComponent} Component instance rendered in `container`.
     */
    render: function (nextElement, container, callback) {
      return ReactMount._renderSubtreeIntoContainer(null, nextElement, container, callback);
    },

    /**
     * Unmounts and destroys the React component rendered in the `container`.
     * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.unmountcomponentatnode
     *
     * @param {DOMElement} container DOM element containing a React component.
     * @return {boolean} True if a component was found in and unmounted from
     *                   `container`
     */
    unmountComponentAtNode: function (container) {
      // Various parts of our code (such as ReactCompositeComponent's
      // _renderValidatedComponent) assume that calls to render aren't nested;
      // verify that that's the case. (Strictly speaking, unmounting won't cause a
      // render but we still don't expect to be in a render call here.)
       true ? warning(ReactCurrentOwner.current == null, 'unmountComponentAtNode(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from render ' + 'is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : void 0;

      !isValidContainer(container) ?  true ? invariant(false, 'unmountComponentAtNode(...): Target container is not a DOM element.') : _prodInvariant('40') : void 0;

      if (true) {
         true ? warning(!nodeIsRenderedByOtherInstance(container), 'unmountComponentAtNode(): The node you\'re attempting to unmount ' + 'was rendered by another copy of React.') : void 0;
      }

      var prevComponent = getTopLevelWrapperInContainer(container);
      if (!prevComponent) {
        // Check if the node being unmounted was rendered by React, but isn't a
        // root node.
        var containerHasNonRootReactChild = hasNonRootReactChild(container);

        // Check if the container itself is a React root node.
        var isContainerReactRoot = container.nodeType === 1 && container.hasAttribute(ROOT_ATTR_NAME);

        if (true) {
           true ? warning(!containerHasNonRootReactChild, 'unmountComponentAtNode(): The node you\'re attempting to unmount ' + 'was rendered by React and is not a top-level container. %s', isContainerReactRoot ? 'You may have accidentally passed in a React root node instead ' + 'of its container.' : 'Instead, have the parent component update its state and ' + 'rerender in order to remove this component.') : void 0;
        }

        return false;
      }
      delete instancesByReactRootID[prevComponent._instance.rootID];
      ReactUpdates.batchedUpdates(unmountComponentFromNode, prevComponent, container, false);
      return true;
    },

    _mountImageIntoNode: function (markup, container, instance, shouldReuseMarkup, transaction) {
      !isValidContainer(container) ?  true ? invariant(false, 'mountComponentIntoNode(...): Target container is not valid.') : _prodInvariant('41') : void 0;

      if (shouldReuseMarkup) {
        var rootElement = getReactRootElementInContainer(container);
        if (ReactMarkupChecksum.canReuseMarkup(markup, rootElement)) {
          ReactDOMComponentTree.precacheNode(instance, rootElement);
          return;
        } else {
          var checksum = rootElement.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
          rootElement.removeAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);

          var rootMarkup = rootElement.outerHTML;
          rootElement.setAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME, checksum);

          var normalizedMarkup = markup;
          if (true) {
            // because rootMarkup is retrieved from the DOM, various normalizations
            // will have occurred which will not be present in `markup`. Here,
            // insert markup into a <div> or <iframe> depending on the container
            // type to perform the same normalizations before comparing.
            var normalizer;
            if (container.nodeType === ELEMENT_NODE_TYPE) {
              normalizer = document.createElement('div');
              normalizer.innerHTML = markup;
              normalizedMarkup = normalizer.innerHTML;
            } else {
              normalizer = document.createElement('iframe');
              document.body.appendChild(normalizer);
              normalizer.contentDocument.write(markup);
              normalizedMarkup = normalizer.contentDocument.documentElement.outerHTML;
              document.body.removeChild(normalizer);
            }
          }

          var diffIndex = firstDifferenceIndex(normalizedMarkup, rootMarkup);
          var difference = ' (client) ' + normalizedMarkup.substring(diffIndex - 20, diffIndex + 20) + '\n (server) ' + rootMarkup.substring(diffIndex - 20, diffIndex + 20);

          !(container.nodeType !== DOC_NODE_TYPE) ?  true ? invariant(false, 'You\'re trying to render a component to the document using server rendering but the checksum was invalid. This usually means you rendered a different component type or props on the client from the one on the server, or your render() methods are impure. React cannot handle this case due to cross-browser quirks by rendering at the document root. You should look for environment dependent code in your components and ensure the props are the same client and server side:\n%s', difference) : _prodInvariant('42', difference) : void 0;

          if (true) {
             true ? warning(false, 'React attempted to reuse markup in a container but the ' + 'checksum was invalid. This generally means that you are ' + 'using server rendering and the markup generated on the ' + 'server was not what the client was expecting. React injected ' + 'new markup to compensate which works but you have lost many ' + 'of the benefits of server rendering. Instead, figure out ' + 'why the markup being generated is different on the client ' + 'or server:\n%s', difference) : void 0;
          }
        }
      }

      !(container.nodeType !== DOC_NODE_TYPE) ?  true ? invariant(false, 'You\'re trying to render a component to the document but you didn\'t use server rendering. We can\'t do this without using server rendering due to cross-browser quirks. See ReactDOMServer.renderToString() for server rendering.') : _prodInvariant('43') : void 0;

      if (transaction.useCreateElement) {
        while (container.lastChild) {
          container.removeChild(container.lastChild);
        }
        DOMLazyTree.insertTreeBefore(container, markup, null);
      } else {
        setInnerHTML(container, markup);
        ReactDOMComponentTree.precacheNode(instance, container.firstChild);
      }

      if (true) {
        var hostNode = ReactDOMComponentTree.getInstanceFromNode(container.firstChild);
        if (hostNode._debugID !== 0) {
          ReactInstrumentation.debugTool.onHostOperation({
            instanceID: hostNode._debugID,
            type: 'mount',
            payload: markup.toString()
          });
        }
      }
    }
  };

  module.exports = ReactMount;

/***/ },
/* 550 */
/***/ function(module, exports, __webpack_require__) {

  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  var validateDOMNesting = __webpack_require__(519);

  var DOC_NODE_TYPE = 9;

  function ReactDOMContainerInfo(topLevelWrapper, node) {
    var info = {
      _topLevelWrapper: topLevelWrapper,
      _idCounter: 1,
      _ownerDocument: node ? node.nodeType === DOC_NODE_TYPE ? node : node.ownerDocument : null,
      _node: node,
      _tag: node ? node.nodeName.toLowerCase() : null,
      _namespaceURI: node ? node.namespaceURI : null
    };
    if (true) {
      info._ancestorInfo = node ? validateDOMNesting.updatedAncestorInfo(null, info._tag, null) : null;
    }
    return info;
  }

  module.exports = ReactDOMContainerInfo;

/***/ },
/* 551 */
/***/ function(module, exports) {

  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  var ReactDOMFeatureFlags = {
    useCreateElement: true,
    useFiber: false
  };

  module.exports = ReactDOMFeatureFlags;

/***/ },
/* 552 */
/***/ function(module, exports, __webpack_require__) {

  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  var adler32 = __webpack_require__(553);

  var TAG_END = /\/?>/;
  var COMMENT_START = /^<\!\-\-/;

  var ReactMarkupChecksum = {
    CHECKSUM_ATTR_NAME: 'data-react-checksum',

    /**
     * @param {string} markup Markup string
     * @return {string} Markup string with checksum attribute attached
     */
    addChecksumToMarkup: function (markup) {
      var checksum = adler32(markup);

      // Add checksum (handle both parent tags, comments and self-closing tags)
      if (COMMENT_START.test(markup)) {
        return markup;
      } else {
        return markup.replace(TAG_END, ' ' + ReactMarkupChecksum.CHECKSUM_ATTR_NAME + '="' + checksum + '"$&');
      }
    },

    /**
     * @param {string} markup to use
     * @param {DOMElement} element root React element
     * @returns {boolean} whether or not the markup is the same
     */
    canReuseMarkup: function (markup, element) {
      var existingChecksum = element.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
      existingChecksum = existingChecksum && parseInt(existingChecksum, 10);
      var markupChecksum = adler32(markup);
      return markupChecksum === existingChecksum;
    }
  };

  module.exports = ReactMarkupChecksum;

/***/ },
/* 553 */
/***/ function(module, exports) {

  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   * 
   */

  'use strict';

  var MOD = 65521;

  // adler32 is not cryptographically strong, and is only used to sanity check that
  // markup generated on the server matches the markup generated on the client.
  // This implementation (a modified version of the SheetJS version) has been optimized
  // for our use case, at the expense of conforming to the adler32 specification
  // for non-ascii inputs.
  function adler32(data) {
    var a = 1;
    var b = 0;
    var i = 0;
    var l = data.length;
    var m = l & ~0x3;
    while (i < m) {
      var n = Math.min(i + 4096, m);
      for (; i < n; i += 4) {
        b += (a += data.charCodeAt(i)) + (a += data.charCodeAt(i + 1)) + (a += data.charCodeAt(i + 2)) + (a += data.charCodeAt(i + 3));
      }
      a %= MOD;
      b %= MOD;
    }
    for (; i < l; i++) {
      b += a += data.charCodeAt(i);
    }
    a %= MOD;
    b %= MOD;
    return a | b << 16;
  }

  module.exports = adler32;

/***/ },
/* 554 */
/***/ function(module, exports) {

  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  module.exports = '15.4.1';

/***/ },
/* 555 */
/***/ function(module, exports, __webpack_require__) {

  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  var _prodInvariant = __webpack_require__(418);

  var ReactCurrentOwner = __webpack_require__(393);
  var ReactDOMComponentTree = __webpack_require__(417);
  var ReactInstanceMap = __webpack_require__(499);

  var getHostComponentFromComposite = __webpack_require__(556);
  var invariant = __webpack_require__(391);
  var warning = __webpack_require__(394);

  /**
   * Returns the DOM node rendered by this element.
   *
   * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.finddomnode
   *
   * @param {ReactComponent|DOMElement} componentOrElement
   * @return {?DOMElement} The root node of this element.
   */
  function findDOMNode(componentOrElement) {
    if (true) {
      var owner = ReactCurrentOwner.current;
      if (owner !== null) {
         true ? warning(owner._warnedAboutRefsInRender, '%s is accessing findDOMNode inside its render(). ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : void 0;
        owner._warnedAboutRefsInRender = true;
      }
    }
    if (componentOrElement == null) {
      return null;
    }
    if (componentOrElement.nodeType === 1) {
      return componentOrElement;
    }

    var inst = ReactInstanceMap.get(componentOrElement);
    if (inst) {
      inst = getHostComponentFromComposite(inst);
      return inst ? ReactDOMComponentTree.getNodeFromInstance(inst) : null;
    }

    if (typeof componentOrElement.render === 'function') {
       true ?  true ? invariant(false, 'findDOMNode was called on an unmounted component.') : _prodInvariant('44') : void 0;
    } else {
       true ?  true ? invariant(false, 'Element appears to be neither ReactComponent nor DOMNode (keys: %s)', Object.keys(componentOrElement)) : _prodInvariant('45', Object.keys(componentOrElement)) : void 0;
    }
  }

  module.exports = findDOMNode;

/***/ },
/* 556 */
/***/ function(module, exports, __webpack_require__) {

  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  var ReactNodeTypes = __webpack_require__(503);

  function getHostComponentFromComposite(inst) {
    var type;

    while ((type = inst._renderedNodeType) === ReactNodeTypes.COMPOSITE) {
      inst = inst._renderedComponent;
    }

    if (type === ReactNodeTypes.HOST) {
      return inst._renderedComponent;
    } else if (type === ReactNodeTypes.EMPTY) {
      return null;
    }
  }

  module.exports = getHostComponentFromComposite;

/***/ },
/* 557 */
/***/ function(module, exports, __webpack_require__) {

  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  var ReactMount = __webpack_require__(549);

  module.exports = ReactMount.renderSubtreeIntoContainer;

/***/ },
/* 558 */
/***/ function(module, exports, __webpack_require__) {

  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  var DOMProperty = __webpack_require__(419);
  var EventPluginRegistry = __webpack_require__(426);
  var ReactComponentTreeHook = __webpack_require__(409);

  var warning = __webpack_require__(394);

  if (true) {
    var reactProps = {
      children: true,
      dangerouslySetInnerHTML: true,
      key: true,
      ref: true,

      autoFocus: true,
      defaultValue: true,
      valueLink: true,
      defaultChecked: true,
      checkedLink: true,
      innerHTML: true,
      suppressContentEditableWarning: true,
      onFocusIn: true,
      onFocusOut: true
    };
    var warnedProperties = {};

    var validateProperty = function (tagName, name, debugID) {
      if (DOMProperty.properties.hasOwnProperty(name) || DOMProperty.isCustomAttribute(name)) {
        return true;
      }
      if (reactProps.hasOwnProperty(name) && reactProps[name] || warnedProperties.hasOwnProperty(name) && warnedProperties[name]) {
        return true;
      }
      if (EventPluginRegistry.registrationNameModules.hasOwnProperty(name)) {
        return true;
      }
      warnedProperties[name] = true;
      var lowerCasedName = name.toLowerCase();

      // data-* attributes should be lowercase; suggest the lowercase version
      var standardName = DOMProperty.isCustomAttribute(lowerCasedName) ? lowerCasedName : DOMProperty.getPossibleStandardName.hasOwnProperty(lowerCasedName) ? DOMProperty.getPossibleStandardName[lowerCasedName] : null;

      var registrationName = EventPluginRegistry.possibleRegistrationNames.hasOwnProperty(lowerCasedName) ? EventPluginRegistry.possibleRegistrationNames[lowerCasedName] : null;

      if (standardName != null) {
         true ? warning(false, 'Unknown DOM property %s. Did you mean %s?%s', name, standardName, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
        return true;
      } else if (registrationName != null) {
         true ? warning(false, 'Unknown event handler property %s. Did you mean `%s`?%s', name, registrationName, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
        return true;
      } else {
        // We were unable to guess which prop the user intended.
        // It is likely that the user was just blindly spreading/forwarding props
        // Components should be careful to only render valid props/attributes.
        // Warning will be invoked in warnUnknownProperties to allow grouping.
        return false;
      }
    };
  }

  var warnUnknownProperties = function (debugID, element) {
    var unknownProps = [];
    for (var key in element.props) {
      var isValid = validateProperty(element.type, key, debugID);
      if (!isValid) {
        unknownProps.push(key);
      }
    }

    var unknownPropString = unknownProps.map(function (prop) {
      return '`' + prop + '`';
    }).join(', ');

    if (unknownProps.length === 1) {
       true ? warning(false, 'Unknown prop %s on <%s> tag. Remove this prop from the element. ' + 'For details, see https://fb.me/react-unknown-prop%s', unknownPropString, element.type, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
    } else if (unknownProps.length > 1) {
       true ? warning(false, 'Unknown props %s on <%s> tag. Remove these props from the element. ' + 'For details, see https://fb.me/react-unknown-prop%s', unknownPropString, element.type, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
    }
  };

  function handleElement(debugID, element) {
    if (element == null || typeof element.type !== 'string') {
      return;
    }
    if (element.type.indexOf('-') >= 0 || element.props.is) {
      return;
    }
    warnUnknownProperties(debugID, element);
  }

  var ReactDOMUnknownPropertyHook = {
    onBeforeMountComponent: function (debugID, element) {
      handleElement(debugID, element);
    },
    onBeforeUpdateComponent: function (debugID, element) {
      handleElement(debugID, element);
    }
  };

  module.exports = ReactDOMUnknownPropertyHook;

/***/ },
/* 559 */
/***/ function(module, exports, __webpack_require__) {

  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  var ReactComponentTreeHook = __webpack_require__(409);

  var warning = __webpack_require__(394);

  var didWarnValueNull = false;

  function handleElement(debugID, element) {
    if (element == null) {
      return;
    }
    if (element.type !== 'input' && element.type !== 'textarea' && element.type !== 'select') {
      return;
    }
    if (element.props != null && element.props.value === null && !didWarnValueNull) {
       true ? warning(false, '`value` prop on `%s` should not be null. ' + 'Consider using the empty string to clear the component or `undefined` ' + 'for uncontrolled components.%s', element.type, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;

      didWarnValueNull = true;
    }
  }

  var ReactDOMNullInputValuePropHook = {
    onBeforeMountComponent: function (debugID, element) {
      handleElement(debugID, element);
    },
    onBeforeUpdateComponent: function (debugID, element) {
      handleElement(debugID, element);
    }
  };

  module.exports = ReactDOMNullInputValuePropHook;

/***/ },
/* 560 */
/***/ function(module, exports, __webpack_require__) {

  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  var DOMProperty = __webpack_require__(419);
  var ReactComponentTreeHook = __webpack_require__(409);

  var warning = __webpack_require__(394);

  var warnedProperties = {};
  var rARIA = new RegExp('^(aria)-[' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$');

  function validateProperty(tagName, name, debugID) {
    if (warnedProperties.hasOwnProperty(name) && warnedProperties[name]) {
      return true;
    }

    if (rARIA.test(name)) {
      var lowerCasedName = name.toLowerCase();
      var standardName = DOMProperty.getPossibleStandardName.hasOwnProperty(lowerCasedName) ? DOMProperty.getPossibleStandardName[lowerCasedName] : null;

      // If this is an aria-* attribute, but is not listed in the known DOM
      // DOM properties, then it is an invalid aria-* attribute.
      if (standardName == null) {
        warnedProperties[name] = true;
        return false;
      }
      // aria-* attributes should be lowercase; suggest the lowercase version.
      if (name !== standardName) {
         true ? warning(false, 'Unknown ARIA attribute %s. Did you mean %s?%s', name, standardName, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
        warnedProperties[name] = true;
        return true;
      }
    }

    return true;
  }

  function warnInvalidARIAProps(debugID, element) {
    var invalidProps = [];

    for (var key in element.props) {
      var isValid = validateProperty(element.type, key, debugID);
      if (!isValid) {
        invalidProps.push(key);
      }
    }

    var unknownPropString = invalidProps.map(function (prop) {
      return '`' + prop + '`';
    }).join(', ');

    if (invalidProps.length === 1) {
       true ? warning(false, 'Invalid aria prop %s on <%s> tag. ' + 'For details, see https://fb.me/invalid-aria-prop%s', unknownPropString, element.type, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
    } else if (invalidProps.length > 1) {
       true ? warning(false, 'Invalid aria props %s on <%s> tag. ' + 'For details, see https://fb.me/invalid-aria-prop%s', unknownPropString, element.type, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
    }
  }

  function handleElement(debugID, element) {
    if (element == null || typeof element.type !== 'string') {
      return;
    }
    if (element.type.indexOf('-') >= 0 || element.props.is) {
      return;
    }

    warnInvalidARIAProps(debugID, element);
  }

  var ReactDOMInvalidARIAHook = {
    onBeforeMountComponent: function (debugID, element) {
      if (true) {
        handleElement(debugID, element);
      }
    },
    onBeforeUpdateComponent: function (debugID, element) {
      if (true) {
        handleElement(debugID, element);
      }
    }
  };

  module.exports = ReactDOMInvalidARIAHook;

/***/ },
/* 561 */
/***/ function(module, exports, __webpack_require__) {

  var __WEBPACK_AMD_DEFINE_RESULT__;;(function () {
  	'use strict';

  	/**
  	 * @preserve FastClick: polyfill to remove click delays on browsers with touch UIs.
  	 *
  	 * @codingstandard ftlabs-jsv2
  	 * @copyright The Financial Times Limited [All Rights Reserved]
  	 * @license MIT License (see LICENSE.txt)
  	 */

  	/*jslint browser:true, node:true*/
  	/*global define, Event, Node*/


  	/**
  	 * Instantiate fast-clicking listeners on the specified layer.
  	 *
  	 * @constructor
  	 * @param {Element} layer The layer to listen on
  	 * @param {Object} [options={}] The options to override the defaults
  	 */
  	function FastClick(layer, options) {
  		var oldOnClick;

  		options = options || {};

  		/**
  		 * Whether a click is currently being tracked.
  		 *
  		 * @type boolean
  		 */
  		this.trackingClick = false;


  		/**
  		 * Timestamp for when click tracking started.
  		 *
  		 * @type number
  		 */
  		this.trackingClickStart = 0;


  		/**
  		 * The element being tracked for a click.
  		 *
  		 * @type EventTarget
  		 */
  		this.targetElement = null;


  		/**
  		 * X-coordinate of touch start event.
  		 *
  		 * @type number
  		 */
  		this.touchStartX = 0;


  		/**
  		 * Y-coordinate of touch start event.
  		 *
  		 * @type number
  		 */
  		this.touchStartY = 0;


  		/**
  		 * ID of the last touch, retrieved from Touch.identifier.
  		 *
  		 * @type number
  		 */
  		this.lastTouchIdentifier = 0;


  		/**
  		 * Touchmove boundary, beyond which a click will be cancelled.
  		 *
  		 * @type number
  		 */
  		this.touchBoundary = options.touchBoundary || 10;


  		/**
  		 * The FastClick layer.
  		 *
  		 * @type Element
  		 */
  		this.layer = layer;

  		/**
  		 * The minimum time between tap(touchstart and touchend) events
  		 *
  		 * @type number
  		 */
  		this.tapDelay = options.tapDelay || 200;

  		/**
  		 * The maximum time for a tap
  		 *
  		 * @type number
  		 */
  		this.tapTimeout = options.tapTimeout || 700;

  		if (FastClick.notNeeded(layer)) {
  			return;
  		}

  		// Some old versions of Android don't have Function.prototype.bind
  		function bind(method, context) {
  			return function() { return method.apply(context, arguments); };
  		}


  		var methods = ['onMouse', 'onClick', 'onTouchStart', 'onTouchMove', 'onTouchEnd', 'onTouchCancel'];
  		var context = this;
  		for (var i = 0, l = methods.length; i < l; i++) {
  			context[methods[i]] = bind(context[methods[i]], context);
  		}

  		// Set up event handlers as required
  		if (deviceIsAndroid) {
  			layer.addEventListener('mouseover', this.onMouse, true);
  			layer.addEventListener('mousedown', this.onMouse, true);
  			layer.addEventListener('mouseup', this.onMouse, true);
  		}

  		layer.addEventListener('click', this.onClick, true);
  		layer.addEventListener('touchstart', this.onTouchStart, false);
  		layer.addEventListener('touchmove', this.onTouchMove, false);
  		layer.addEventListener('touchend', this.onTouchEnd, false);
  		layer.addEventListener('touchcancel', this.onTouchCancel, false);

  		// Hack is required for browsers that don't support Event#stopImmediatePropagation (e.g. Android 2)
  		// which is how FastClick normally stops click events bubbling to callbacks registered on the FastClick
  		// layer when they are cancelled.
  		if (!Event.prototype.stopImmediatePropagation) {
  			layer.removeEventListener = function(type, callback, capture) {
  				var rmv = Node.prototype.removeEventListener;
  				if (type === 'click') {
  					rmv.call(layer, type, callback.hijacked || callback, capture);
  				} else {
  					rmv.call(layer, type, callback, capture);
  				}
  			};

  			layer.addEventListener = function(type, callback, capture) {
  				var adv = Node.prototype.addEventListener;
  				if (type === 'click') {
  					adv.call(layer, type, callback.hijacked || (callback.hijacked = function(event) {
  						if (!event.propagationStopped) {
  							callback(event);
  						}
  					}), capture);
  				} else {
  					adv.call(layer, type, callback, capture);
  				}
  			};
  		}

  		// If a handler is already declared in the element's onclick attribute, it will be fired before
  		// FastClick's onClick handler. Fix this by pulling out the user-defined handler function and
  		// adding it as listener.
  		if (typeof layer.onclick === 'function') {

  			// Android browser on at least 3.2 requires a new reference to the function in layer.onclick
  			// - the old one won't work if passed to addEventListener directly.
  			oldOnClick = layer.onclick;
  			layer.addEventListener('click', function(event) {
  				oldOnClick(event);
  			}, false);
  			layer.onclick = null;
  		}
  	}

  	/**
  	* Windows Phone 8.1 fakes user agent string to look like Android and iPhone.
  	*
  	* @type boolean
  	*/
  	var deviceIsWindowsPhone = navigator.userAgent.indexOf("Windows Phone") >= 0;

  	/**
  	 * Android requires exceptions.
  	 *
  	 * @type boolean
  	 */
  	var deviceIsAndroid = navigator.userAgent.indexOf('Android') > 0 && !deviceIsWindowsPhone;


  	/**
  	 * iOS requires exceptions.
  	 *
  	 * @type boolean
  	 */
  	var deviceIsIOS = /iP(ad|hone|od)/.test(navigator.userAgent) && !deviceIsWindowsPhone;


  	/**
  	 * iOS 4 requires an exception for select elements.
  	 *
  	 * @type boolean
  	 */
  	var deviceIsIOS4 = deviceIsIOS && (/OS 4_\d(_\d)?/).test(navigator.userAgent);


  	/**
  	 * iOS 6.0-7.* requires the target element to be manually derived
  	 *
  	 * @type boolean
  	 */
  	var deviceIsIOSWithBadTarget = deviceIsIOS && (/OS [6-7]_\d/).test(navigator.userAgent);

  	/**
  	 * BlackBerry requires exceptions.
  	 *
  	 * @type boolean
  	 */
  	var deviceIsBlackBerry10 = navigator.userAgent.indexOf('BB10') > 0;

  	/**
  	 * Determine whether a given element requires a native click.
  	 *
  	 * @param {EventTarget|Element} target Target DOM element
  	 * @returns {boolean} Returns true if the element needs a native click
  	 */
  	FastClick.prototype.needsClick = function(target) {
  		switch (target.nodeName.toLowerCase()) {

  		// Don't send a synthetic click to disabled inputs (issue #62)
  		case 'button':
  		case 'select':
  		case 'textarea':
  			if (target.disabled) {
  				return true;
  			}

  			break;
  		case 'input':

  			// File inputs need real clicks on iOS 6 due to a browser bug (issue #68)
  			if ((deviceIsIOS && target.type === 'file') || target.disabled) {
  				return true;
  			}

  			break;
  		case 'label':
  		case 'iframe': // iOS8 homescreen apps can prevent events bubbling into frames
  		case 'video':
  			return true;
  		}

  		return (/\bneedsclick\b/).test(target.className);
  	};


  	/**
  	 * Determine whether a given element requires a call to focus to simulate click into element.
  	 *
  	 * @param {EventTarget|Element} target Target DOM element
  	 * @returns {boolean} Returns true if the element requires a call to focus to simulate native click.
  	 */
  	FastClick.prototype.needsFocus = function(target) {
  		switch (target.nodeName.toLowerCase()) {
  		case 'textarea':
  			return true;
  		case 'select':
  			return !deviceIsAndroid;
  		case 'input':
  			switch (target.type) {
  			case 'button':
  			case 'checkbox':
  			case 'file':
  			case 'image':
  			case 'radio':
  			case 'submit':
  				return false;
  			}

  			// No point in attempting to focus disabled inputs
  			return !target.disabled && !target.readOnly;
  		default:
  			return (/\bneedsfocus\b/).test(target.className);
  		}
  	};


  	/**
  	 * Send a click event to the specified element.
  	 *
  	 * @param {EventTarget|Element} targetElement
  	 * @param {Event} event
  	 */
  	FastClick.prototype.sendClick = function(targetElement, event) {
  		var clickEvent, touch;

  		// On some Android devices activeElement needs to be blurred otherwise the synthetic click will have no effect (#24)
  		if (document.activeElement && document.activeElement !== targetElement) {
  			document.activeElement.blur();
  		}

  		touch = event.changedTouches[0];

  		// Synthesise a click event, with an extra attribute so it can be tracked
  		clickEvent = document.createEvent('MouseEvents');
  		clickEvent.initMouseEvent(this.determineEventType(targetElement), true, true, window, 1, touch.screenX, touch.screenY, touch.clientX, touch.clientY, false, false, false, false, 0, null);
  		clickEvent.forwardedTouchEvent = true;
  		targetElement.dispatchEvent(clickEvent);
  	};

  	FastClick.prototype.determineEventType = function(targetElement) {

  		//Issue #159: Android Chrome Select Box does not open with a synthetic click event
  		if (deviceIsAndroid && targetElement.tagName.toLowerCase() === 'select') {
  			return 'mousedown';
  		}

  		return 'click';
  	};


  	/**
  	 * @param {EventTarget|Element} targetElement
  	 */
  	FastClick.prototype.focus = function(targetElement) {
  		var length;

  		// Issue #160: on iOS 7, some input elements (e.g. date datetime month) throw a vague TypeError on setSelectionRange. These elements don't have an integer value for the selectionStart and selectionEnd properties, but unfortunately that can't be used for detection because accessing the properties also throws a TypeError. Just check the type instead. Filed as Apple bug #15122724.
  		if (deviceIsIOS && targetElement.setSelectionRange && targetElement.type.indexOf('date') !== 0 && targetElement.type !== 'time' && targetElement.type !== 'month') {
  			length = targetElement.value.length;
  			targetElement.setSelectionRange(length, length);
  		} else {
  			targetElement.focus();
  		}
  	};


  	/**
  	 * Check whether the given target element is a child of a scrollable layer and if so, set a flag on it.
  	 *
  	 * @param {EventTarget|Element} targetElement
  	 */
  	FastClick.prototype.updateScrollParent = function(targetElement) {
  		var scrollParent, parentElement;

  		scrollParent = targetElement.fastClickScrollParent;

  		// Attempt to discover whether the target element is contained within a scrollable layer. Re-check if the
  		// target element was moved to another parent.
  		if (!scrollParent || !scrollParent.contains(targetElement)) {
  			parentElement = targetElement;
  			do {
  				if (parentElement.scrollHeight > parentElement.offsetHeight) {
  					scrollParent = parentElement;
  					targetElement.fastClickScrollParent = parentElement;
  					break;
  				}

  				parentElement = parentElement.parentElement;
  			} while (parentElement);
  		}

  		// Always update the scroll top tracker if possible.
  		if (scrollParent) {
  			scrollParent.fastClickLastScrollTop = scrollParent.scrollTop;
  		}
  	};


  	/**
  	 * @param {EventTarget} targetElement
  	 * @returns {Element|EventTarget}
  	 */
  	FastClick.prototype.getTargetElementFromEventTarget = function(eventTarget) {

  		// On some older browsers (notably Safari on iOS 4.1 - see issue #56) the event target may be a text node.
  		if (eventTarget.nodeType === Node.TEXT_NODE) {
  			return eventTarget.parentNode;
  		}

  		return eventTarget;
  	};


  	/**
  	 * On touch start, record the position and scroll offset.
  	 *
  	 * @param {Event} event
  	 * @returns {boolean}
  	 */
  	FastClick.prototype.onTouchStart = function(event) {
  		var targetElement, touch, selection;

  		// Ignore multiple touches, otherwise pinch-to-zoom is prevented if both fingers are on the FastClick element (issue #111).
  		if (event.targetTouches.length > 1) {
  			return true;
  		}

  		targetElement = this.getTargetElementFromEventTarget(event.target);
  		touch = event.targetTouches[0];

  		if (deviceIsIOS) {

  			// Only trusted events will deselect text on iOS (issue #49)
  			selection = window.getSelection();
  			if (selection.rangeCount && !selection.isCollapsed) {
  				return true;
  			}

  			if (!deviceIsIOS4) {

  				// Weird things happen on iOS when an alert or confirm dialog is opened from a click event callback (issue #23):
  				// when the user next taps anywhere else on the page, new touchstart and touchend events are dispatched
  				// with the same identifier as the touch event that previously triggered the click that triggered the alert.
  				// Sadly, there is an issue on iOS 4 that causes some normal touch events to have the same identifier as an
  				// immediately preceeding touch event (issue #52), so this fix is unavailable on that platform.
  				// Issue 120: touch.identifier is 0 when Chrome dev tools 'Emulate touch events' is set with an iOS device UA string,
  				// which causes all touch events to be ignored. As this block only applies to iOS, and iOS identifiers are always long,
  				// random integers, it's safe to to continue if the identifier is 0 here.
  				if (touch.identifier && touch.identifier === this.lastTouchIdentifier) {
  					event.preventDefault();
  					return false;
  				}

  				this.lastTouchIdentifier = touch.identifier;

  				// If the target element is a child of a scrollable layer (using -webkit-overflow-scrolling: touch) and:
  				// 1) the user does a fling scroll on the scrollable layer
  				// 2) the user stops the fling scroll with another tap
  				// then the event.target of the last 'touchend' event will be the element that was under the user's finger
  				// when the fling scroll was started, causing FastClick to send a click event to that layer - unless a check
  				// is made to ensure that a parent layer was not scrolled before sending a synthetic click (issue #42).
  				this.updateScrollParent(targetElement);
  			}
  		}

  		this.trackingClick = true;
  		this.trackingClickStart = event.timeStamp;
  		this.targetElement = targetElement;

  		this.touchStartX = touch.pageX;
  		this.touchStartY = touch.pageY;

  		// Prevent phantom clicks on fast double-tap (issue #36)
  		if ((event.timeStamp - this.lastClickTime) < this.tapDelay) {
  			event.preventDefault();
  		}

  		return true;
  	};


  	/**
  	 * Based on a touchmove event object, check whether the touch has moved past a boundary since it started.
  	 *
  	 * @param {Event} event
  	 * @returns {boolean}
  	 */
  	FastClick.prototype.touchHasMoved = function(event) {
  		var touch = event.changedTouches[0], boundary = this.touchBoundary;

  		if (Math.abs(touch.pageX - this.touchStartX) > boundary || Math.abs(touch.pageY - this.touchStartY) > boundary) {
  			return true;
  		}

  		return false;
  	};


  	/**
  	 * Update the last position.
  	 *
  	 * @param {Event} event
  	 * @returns {boolean}
  	 */
  	FastClick.prototype.onTouchMove = function(event) {
  		if (!this.trackingClick) {
  			return true;
  		}

  		// If the touch has moved, cancel the click tracking
  		if (this.targetElement !== this.getTargetElementFromEventTarget(event.target) || this.touchHasMoved(event)) {
  			this.trackingClick = false;
  			this.targetElement = null;
  		}

  		return true;
  	};


  	/**
  	 * Attempt to find the labelled control for the given label element.
  	 *
  	 * @param {EventTarget|HTMLLabelElement} labelElement
  	 * @returns {Element|null}
  	 */
  	FastClick.prototype.findControl = function(labelElement) {

  		// Fast path for newer browsers supporting the HTML5 control attribute
  		if (labelElement.control !== undefined) {
  			return labelElement.control;
  		}

  		// All browsers under test that support touch events also support the HTML5 htmlFor attribute
  		if (labelElement.htmlFor) {
  			return document.getElementById(labelElement.htmlFor);
  		}

  		// If no for attribute exists, attempt to retrieve the first labellable descendant element
  		// the list of which is defined here: http://www.w3.org/TR/html5/forms.html#category-label
  		return labelElement.querySelector('button, input:not([type=hidden]), keygen, meter, output, progress, select, textarea');
  	};


  	/**
  	 * On touch end, determine whether to send a click event at once.
  	 *
  	 * @param {Event} event
  	 * @returns {boolean}
  	 */
  	FastClick.prototype.onTouchEnd = function(event) {
  		var forElement, trackingClickStart, targetTagName, scrollParent, touch, targetElement = this.targetElement;

  		if (!this.trackingClick) {
  			return true;
  		}

  		// Prevent phantom clicks on fast double-tap (issue #36)
  		if ((event.timeStamp - this.lastClickTime) < this.tapDelay) {
  			this.cancelNextClick = true;
  			return true;
  		}

  		if ((event.timeStamp - this.trackingClickStart) > this.tapTimeout) {
  			return true;
  		}

  		// Reset to prevent wrong click cancel on input (issue #156).
  		this.cancelNextClick = false;

  		this.lastClickTime = event.timeStamp;

  		trackingClickStart = this.trackingClickStart;
  		this.trackingClick = false;
  		this.trackingClickStart = 0;

  		// On some iOS devices, the targetElement supplied with the event is invalid if the layer
  		// is performing a transition or scroll, and has to be re-detected manually. Note that
  		// for this to function correctly, it must be called *after* the event target is checked!
  		// See issue #57; also filed as rdar://13048589 .
  		if (deviceIsIOSWithBadTarget) {
  			touch = event.changedTouches[0];

  			// In certain cases arguments of elementFromPoint can be negative, so prevent setting targetElement to null
  			targetElement = document.elementFromPoint(touch.pageX - window.pageXOffset, touch.pageY - window.pageYOffset) || targetElement;
  			targetElement.fastClickScrollParent = this.targetElement.fastClickScrollParent;
  		}

  		targetTagName = targetElement.tagName.toLowerCase();
  		if (targetTagName === 'label') {
  			forElement = this.findControl(targetElement);
  			if (forElement) {
  				this.focus(targetElement);
  				if (deviceIsAndroid) {
  					return false;
  				}

  				targetElement = forElement;
  			}
  		} else if (this.needsFocus(targetElement)) {

  			// Case 1: If the touch started a while ago (best guess is 100ms based on tests for issue #36) then focus will be triggered anyway. Return early and unset the target element reference so that the subsequent click will be allowed through.
  			// Case 2: Without this exception for input elements tapped when the document is contained in an iframe, then any inputted text won't be visible even though the value attribute is updated as the user types (issue #37).
  			if ((event.timeStamp - trackingClickStart) > 100 || (deviceIsIOS && window.top !== window && targetTagName === 'input')) {
  				this.targetElement = null;
  				return false;
  			}

  			this.focus(targetElement);
  			this.sendClick(targetElement, event);

  			// Select elements need the event to go through on iOS 4, otherwise the selector menu won't open.
  			// Also this breaks opening selects when VoiceOver is active on iOS6, iOS7 (and possibly others)
  			if (!deviceIsIOS || targetTagName !== 'select') {
  				this.targetElement = null;
  				event.preventDefault();
  			}

  			return false;
  		}

  		if (deviceIsIOS && !deviceIsIOS4) {

  			// Don't send a synthetic click event if the target element is contained within a parent layer that was scrolled
  			// and this tap is being used to stop the scrolling (usually initiated by a fling - issue #42).
  			scrollParent = targetElement.fastClickScrollParent;
  			if (scrollParent && scrollParent.fastClickLastScrollTop !== scrollParent.scrollTop) {
  				return true;
  			}
  		}

  		// Prevent the actual click from going though - unless the target node is marked as requiring
  		// real clicks or if it is in the whitelist in which case only non-programmatic clicks are permitted.
  		if (!this.needsClick(targetElement)) {
  			event.preventDefault();
  			this.sendClick(targetElement, event);
  		}

  		return false;
  	};


  	/**
  	 * On touch cancel, stop tracking the click.
  	 *
  	 * @returns {void}
  	 */
  	FastClick.prototype.onTouchCancel = function() {
  		this.trackingClick = false;
  		this.targetElement = null;
  	};


  	/**
  	 * Determine mouse events which should be permitted.
  	 *
  	 * @param {Event} event
  	 * @returns {boolean}
  	 */
  	FastClick.prototype.onMouse = function(event) {

  		// If a target element was never set (because a touch event was never fired) allow the event
  		if (!this.targetElement) {
  			return true;
  		}

  		if (event.forwardedTouchEvent) {
  			return true;
  		}

  		// Programmatically generated events targeting a specific element should be permitted
  		if (!event.cancelable) {
  			return true;
  		}

  		// Derive and check the target element to see whether the mouse event needs to be permitted;
  		// unless explicitly enabled, prevent non-touch click events from triggering actions,
  		// to prevent ghost/doubleclicks.
  		if (!this.needsClick(this.targetElement) || this.cancelNextClick) {

  			// Prevent any user-added listeners declared on FastClick element from being fired.
  			if (event.stopImmediatePropagation) {
  				event.stopImmediatePropagation();
  			} else {

  				// Part of the hack for browsers that don't support Event#stopImmediatePropagation (e.g. Android 2)
  				event.propagationStopped = true;
  			}

  			// Cancel the event
  			event.stopPropagation();
  			event.preventDefault();

  			return false;
  		}

  		// If the mouse event is permitted, return true for the action to go through.
  		return true;
  	};


  	/**
  	 * On actual clicks, determine whether this is a touch-generated click, a click action occurring
  	 * naturally after a delay after a touch (which needs to be cancelled to avoid duplication), or
  	 * an actual click which should be permitted.
  	 *
  	 * @param {Event} event
  	 * @returns {boolean}
  	 */
  	FastClick.prototype.onClick = function(event) {
  		var permitted;

  		// It's possible for another FastClick-like library delivered with third-party code to fire a click event before FastClick does (issue #44). In that case, set the click-tracking flag back to false and return early. This will cause onTouchEnd to return early.
  		if (this.trackingClick) {
  			this.targetElement = null;
  			this.trackingClick = false;
  			return true;
  		}

  		// Very odd behaviour on iOS (issue #18): if a submit element is present inside a form and the user hits enter in the iOS simulator or clicks the Go button on the pop-up OS keyboard the a kind of 'fake' click event will be triggered with the submit-type input element as the target.
  		if (event.target.type === 'submit' && event.detail === 0) {
  			return true;
  		}

  		permitted = this.onMouse(event);

  		// Only unset targetElement if the click is not permitted. This will ensure that the check for !targetElement in onMouse fails and the browser's click doesn't go through.
  		if (!permitted) {
  			this.targetElement = null;
  		}

  		// If clicks are permitted, return true for the action to go through.
  		return permitted;
  	};


  	/**
  	 * Remove all FastClick's event listeners.
  	 *
  	 * @returns {void}
  	 */
  	FastClick.prototype.destroy = function() {
  		var layer = this.layer;

  		if (deviceIsAndroid) {
  			layer.removeEventListener('mouseover', this.onMouse, true);
  			layer.removeEventListener('mousedown', this.onMouse, true);
  			layer.removeEventListener('mouseup', this.onMouse, true);
  		}

  		layer.removeEventListener('click', this.onClick, true);
  		layer.removeEventListener('touchstart', this.onTouchStart, false);
  		layer.removeEventListener('touchmove', this.onTouchMove, false);
  		layer.removeEventListener('touchend', this.onTouchEnd, false);
  		layer.removeEventListener('touchcancel', this.onTouchCancel, false);
  	};


  	/**
  	 * Check whether FastClick is needed.
  	 *
  	 * @param {Element} layer The layer to listen on
  	 */
  	FastClick.notNeeded = function(layer) {
  		var metaViewport;
  		var chromeVersion;
  		var blackberryVersion;
  		var firefoxVersion;

  		// Devices that don't support touch don't need FastClick
  		if (typeof window.ontouchstart === 'undefined') {
  			return true;
  		}

  		// Chrome version - zero for other browsers
  		chromeVersion = +(/Chrome\/([0-9]+)/.exec(navigator.userAgent) || [,0])[1];

  		if (chromeVersion) {

  			if (deviceIsAndroid) {
  				metaViewport = document.querySelector('meta[name=viewport]');

  				if (metaViewport) {
  					// Chrome on Android with user-scalable="no" doesn't need FastClick (issue #89)
  					if (metaViewport.content.indexOf('user-scalable=no') !== -1) {
  						return true;
  					}
  					// Chrome 32 and above with width=device-width or less don't need FastClick
  					if (chromeVersion > 31 && document.documentElement.scrollWidth <= window.outerWidth) {
  						return true;
  					}
  				}

  			// Chrome desktop doesn't need FastClick (issue #15)
  			} else {
  				return true;
  			}
  		}

  		if (deviceIsBlackBerry10) {
  			blackberryVersion = navigator.userAgent.match(/Version\/([0-9]*)\.([0-9]*)/);

  			// BlackBerry 10.3+ does not require Fastclick library.
  			// https://github.com/ftlabs/fastclick/issues/251
  			if (blackberryVersion[1] >= 10 && blackberryVersion[2] >= 3) {
  				metaViewport = document.querySelector('meta[name=viewport]');

  				if (metaViewport) {
  					// user-scalable=no eliminates click delay.
  					if (metaViewport.content.indexOf('user-scalable=no') !== -1) {
  						return true;
  					}
  					// width=device-width (or less than device-width) eliminates click delay.
  					if (document.documentElement.scrollWidth <= window.outerWidth) {
  						return true;
  					}
  				}
  			}
  		}

  		// IE10 with -ms-touch-action: none or manipulation, which disables double-tap-to-zoom (issue #97)
  		if (layer.style.msTouchAction === 'none' || layer.style.touchAction === 'manipulation') {
  			return true;
  		}

  		// Firefox version - zero for other browsers
  		firefoxVersion = +(/Firefox\/([0-9]+)/.exec(navigator.userAgent) || [,0])[1];

  		if (firefoxVersion >= 27) {
  			// Firefox 27+ does not have tap delay if the content is not zoomable - https://bugzilla.mozilla.org/show_bug.cgi?id=922896

  			metaViewport = document.querySelector('meta[name=viewport]');
  			if (metaViewport && (metaViewport.content.indexOf('user-scalable=no') !== -1 || document.documentElement.scrollWidth <= window.outerWidth)) {
  				return true;
  			}
  		}

  		// IE11: prefixed -ms-touch-action is no longer supported and it's recomended to use non-prefixed version
  		// http://msdn.microsoft.com/en-us/library/windows/apps/Hh767313.aspx
  		if (layer.style.touchAction === 'none' || layer.style.touchAction === 'manipulation') {
  			return true;
  		}

  		return false;
  	};


  	/**
  	 * Factory method for creating a FastClick object
  	 *
  	 * @param {Element} layer The layer to listen on
  	 * @param {Object} [options={}] The options to override the defaults
  	 */
  	FastClick.attach = function(layer, options) {
  		return new FastClick(layer, options);
  	};


  	if (true) {

  		// AMD. Register as an anonymous module.
  		!(__WEBPACK_AMD_DEFINE_RESULT__ = function() {
  			return FastClick;
  		}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  	} else if (typeof module !== 'undefined' && module.exports) {
  		module.exports = FastClick.attach;
  		module.exports.FastClick = FastClick;
  	} else {
  		window.FastClick = FastClick;
  	}
  }());


/***/ },
/* 562 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, '__esModule', { value: true });

  function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

  var _regeneratorRuntime = _interopDefault(__webpack_require__(69));
  var _Object$assign = _interopDefault(__webpack_require__(563));
  var _asyncToGenerator = _interopDefault(__webpack_require__(73));
  var _Object$create = _interopDefault(__webpack_require__(567));
  var _Map = _interopDefault(__webpack_require__(570));
  var toRegExp = _interopDefault(__webpack_require__(581));

  /**
   * Universal Router (https://www.kriasoft.com/universal-router/)
   *
   * Copyright © 2015-2016 Konstantin Tarkus, Kriasoft LLC. All rights reserved.
   *
   * This source code is licensed under the Apache 2.0 license found in the
   * LICENSE.txt file in the root directory of this source tree.
   */

  var cache = new _Map();

  function decodeParam(val) {
    if (val === undefined || val === '') {
      return val;
    }

    try {
      return decodeURIComponent(val);
    } catch (err) {
      return val;
    }
  }

  function matchPathBase(end, routePath, urlPath, parentParams) {
    var key = routePath + '|' + end;
    var regexp = cache.get(key);

    if (!regexp) {
      var keys = [];
      regexp = { pattern: toRegExp(routePath, keys, { end: end }), keys: keys };
      cache.set(key, regexp);
    }

    var m = regexp.pattern.exec(urlPath);

    if (!m) {
      return null;
    }

    var path = m[0];
    var params = _Object$create(null);
    if (parentParams) {
      _Object$assign(params, parentParams);
    }

    for (var i = 1; i < m.length; i += 1) {
      params[regexp.keys[i - 1].name] = decodeParam(m[i]);
    }

    return { path: path === '' ? '/' : path, keys: regexp.keys.slice(), params: params };
  }

  var matchPath = matchPathBase.bind(undefined, true);
  var matchBasePath = matchPathBase.bind(undefined, false);

  var _marked = [matchRoute].map(_regeneratorRuntime.mark);

  /**
   * Universal Router (https://www.kriasoft.com/universal-router/)
   *
   * Copyright © 2015-2016 Konstantin Tarkus, Kriasoft LLC. All rights reserved.
   *
   * This source code is licensed under the Apache 2.0 license found in the
   * LICENSE.txt file in the root directory of this source tree.
   */

  function matchRoute(route, baseUrl, path, parentParams) {
    var match, i, newPath;
    return _regeneratorRuntime.wrap(function matchRoute$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            match = void 0;

            if (route.children) {
              _context.next = 6;
              break;
            }

            match = matchPath(route.path, path, parentParams);

            if (!match) {
              _context.next = 6;
              break;
            }

            _context.next = 6;
            return {
              route: route,
              baseUrl: baseUrl,
              path: match.path,
              keys: match.keys,
              params: match.params
            };

          case 6:
            if (!route.children) {
              _context.next = 18;
              break;
            }

            match = matchBasePath(route.path, path, parentParams);

            if (!match) {
              _context.next = 18;
              break;
            }

            _context.next = 11;
            return {
              route: route,
              baseUrl: baseUrl,
              path: match.path,
              keys: match.keys,
              params: match.params
            };

          case 11:
            i = 0;

          case 12:
            if (!(i < route.children.length)) {
              _context.next = 18;
              break;
            }

            newPath = path.substr(match.path.length);
            return _context.delegateYield(matchRoute(route.children[i], baseUrl + (match.path === '/' ? '' : match.path), newPath.startsWith('/') ? newPath : '/' + newPath, match.params), 't0', 15);

          case 15:
            i += 1;
            _context.next = 12;
            break;

          case 18:
          case 'end':
            return _context.stop();
        }
      }
    }, _marked[0], this);
  }

  var resolve = function () {
    var _ref = _asyncToGenerator(_regeneratorRuntime.mark(function _callee2(routes, pathOrContext) {
      var next = function () {
        var _ref2 = _asyncToGenerator(_regeneratorRuntime.mark(function _callee() {
          var _match$next, newContext;

          return _regeneratorRuntime.wrap(function _callee$(_context) {
            while (1) {
              switch (_context.prev = _context.next) {
                case 0:
                  _match$next = match.next();
                  value = _match$next.value;
                  done = _match$next.done;

                  if (!(!value || done || result !== null && result !== undefined)) {
                    _context.next = 5;
                    break;
                  }

                  return _context.abrupt('return', result);

                case 5:
                  if (!value.route.action) {
                    _context.next = 10;
                    break;
                  }

                  newContext = _Object$assign({}, context, value);
                  _context.next = 9;
                  return value.route.action(newContext, newContext.params);

                case 9:
                  result = _context.sent;

                case 10:
                  _context.next = 12;
                  return next();

                case 12:
                  return _context.abrupt('return', _context.sent);

                case 13:
                case 'end':
                  return _context.stop();
              }
            }
          }, _callee, this);
        }));

        return function next() {
          return _ref2.apply(this, arguments);
        };
      }();

      var context, root, result, value, done, match, error;
      return _regeneratorRuntime.wrap(function _callee2$(_context2) {
        while (1) {
          switch (_context2.prev = _context2.next) {
            case 0:
              context = typeof pathOrContext === 'string' || pathOrContext instanceof String ? { path: pathOrContext } : pathOrContext;
              root = Array.isArray(routes) ? { path: '/', children: routes } : routes;
              result = null;
              value = void 0;
              done = false;
              match = matchRoute(root, '', context.path);


              context.next = next;

              _context2.next = 9;
              return next();

            case 9:
              if (!(result === null || result === undefined)) {
                _context2.next = 13;
                break;
              }

              error = new Error('Page not found');

              error.status = error.statusCode = 404;
              throw error;

            case 13:
              return _context2.abrupt('return', result);

            case 14:
            case 'end':
              return _context2.stop();
          }
        }
      }, _callee2, this);
    }));

    return function resolve(_x, _x2) {
      return _ref.apply(this, arguments);
    };
  }();

  /**
   * Universal Router (https://www.kriasoft.com/universal-router/)
   *
   * Copyright © 2015-2016 Konstantin Tarkus, Kriasoft LLC. All rights reserved.
   *
   * This source code is licensed under the Apache 2.0 license found in the
   * LICENSE.txt file in the root directory of this source tree.
   */

  /**
   * Universal Router (https://www.kriasoft.com/universal-router/)
   *
   * Copyright © 2015-2016 Konstantin Tarkus, Kriasoft LLC. All rights reserved.
   *
   * This source code is licensed under the Apache 2.0 license found in the
   * LICENSE.txt file in the root directory of this source tree.
   */

  var main = { resolve: resolve };

  exports.resolve = resolve;
  exports['default'] = main;
  //# sourceMappingURL=browser.js.map


/***/ },
/* 563 */
/***/ function(module, exports, __webpack_require__) {

  module.exports = { "default": __webpack_require__(564), __esModule: true };

/***/ },
/* 564 */
/***/ function(module, exports, __webpack_require__) {

  __webpack_require__(565);
  module.exports = __webpack_require__(12).Object.assign;

/***/ },
/* 565 */
/***/ function(module, exports, __webpack_require__) {

  // 19.1.3.1 Object.assign(target, source)
  var $export = __webpack_require__(10);

  $export($export.S + $export.F, 'Object', {assign: __webpack_require__(566)});

/***/ },
/* 566 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';
  // 19.1.2.1 Object.assign(target, source, ...)
  var getKeys  = __webpack_require__(31)
    , gOPS     = __webpack_require__(60)
    , pIE      = __webpack_require__(61)
    , toObject = __webpack_require__(47)
    , IObject  = __webpack_require__(34)
    , $assign  = Object.assign;

  // should work with symbols and should have deterministic property order (V8 bug)
  module.exports = !$assign || __webpack_require__(21)(function(){
    var A = {}
      , B = {}
      , S = Symbol()
      , K = 'abcdefghijklmnopqrst';
    A[S] = 7;
    K.split('').forEach(function(k){ B[k] = k; });
    return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;
  }) ? function assign(target, source){ // eslint-disable-line no-unused-vars
    var T     = toObject(target)
      , aLen  = arguments.length
      , index = 1
      , getSymbols = gOPS.f
      , isEnum     = pIE.f;
    while(aLen > index){
      var S      = IObject(arguments[index++])
        , keys   = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S)
        , length = keys.length
        , j      = 0
        , key;
      while(length > j)if(isEnum.call(S, key = keys[j++]))T[key] = S[key];
    } return T;
  } : $assign;

/***/ },
/* 567 */
/***/ function(module, exports, __webpack_require__) {

  module.exports = { "default": __webpack_require__(568), __esModule: true };

/***/ },
/* 568 */
/***/ function(module, exports, __webpack_require__) {

  __webpack_require__(569);
  var $Object = __webpack_require__(12).Object;
  module.exports = function create(P, D){
    return $Object.create(P, D);
  };

/***/ },
/* 569 */
/***/ function(module, exports, __webpack_require__) {

  var $export = __webpack_require__(10)
  // 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
  $export($export.S, 'Object', {create: __webpack_require__(29)});

/***/ },
/* 570 */
/***/ function(module, exports, __webpack_require__) {

  module.exports = { "default": __webpack_require__(571), __esModule: true };

/***/ },
/* 571 */
/***/ function(module, exports, __webpack_require__) {

  __webpack_require__(66);
  __webpack_require__(4);
  __webpack_require__(48);
  __webpack_require__(572);
  __webpack_require__(578);
  module.exports = __webpack_require__(12).Map;

/***/ },
/* 572 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';
  var strong = __webpack_require__(573);

  // 23.1 Map Objects
  module.exports = __webpack_require__(574)('Map', function(get){
    return function Map(){ return get(this, arguments.length > 0 ? arguments[0] : undefined); };
  }, {
    // 23.1.3.6 Map.prototype.get(key)
    get: function get(key){
      var entry = strong.getEntry(this, key);
      return entry && entry.v;
    },
    // 23.1.3.9 Map.prototype.set(key, value)
    set: function set(key, value){
      return strong.def(this, key === 0 ? 0 : key, value);
    }
  }, strong, true);

/***/ },
/* 573 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';
  var dP          = __webpack_require__(16).f
    , create      = __webpack_require__(29)
    , redefineAll = __webpack_require__(87)
    , ctx         = __webpack_require__(13)
    , anInstance  = __webpack_require__(78)
    , defined     = __webpack_require__(7)
    , forOf       = __webpack_require__(79)
    , $iterDefine = __webpack_require__(8)
    , step        = __webpack_require__(51)
    , setSpecies  = __webpack_require__(88)
    , DESCRIPTORS = __webpack_require__(20)
    , fastKey     = __webpack_require__(56).fastKey
    , SIZE        = DESCRIPTORS ? '_s' : 'size';

  var getEntry = function(that, key){
    // fast case
    var index = fastKey(key), entry;
    if(index !== 'F')return that._i[index];
    // frozen object case
    for(entry = that._f; entry; entry = entry.n){
      if(entry.k == key)return entry;
    }
  };

  module.exports = {
    getConstructor: function(wrapper, NAME, IS_MAP, ADDER){
      var C = wrapper(function(that, iterable){
        anInstance(that, C, NAME, '_i');
        that._i = create(null); // index
        that._f = undefined;    // first entry
        that._l = undefined;    // last entry
        that[SIZE] = 0;         // size
        if(iterable != undefined)forOf(iterable, IS_MAP, that[ADDER], that);
      });
      redefineAll(C.prototype, {
        // 23.1.3.1 Map.prototype.clear()
        // 23.2.3.2 Set.prototype.clear()
        clear: function clear(){
          for(var that = this, data = that._i, entry = that._f; entry; entry = entry.n){
            entry.r = true;
            if(entry.p)entry.p = entry.p.n = undefined;
            delete data[entry.i];
          }
          that._f = that._l = undefined;
          that[SIZE] = 0;
        },
        // 23.1.3.3 Map.prototype.delete(key)
        // 23.2.3.4 Set.prototype.delete(value)
        'delete': function(key){
          var that  = this
            , entry = getEntry(that, key);
          if(entry){
            var next = entry.n
              , prev = entry.p;
            delete that._i[entry.i];
            entry.r = true;
            if(prev)prev.n = next;
            if(next)next.p = prev;
            if(that._f == entry)that._f = next;
            if(that._l == entry)that._l = prev;
            that[SIZE]--;
          } return !!entry;
        },
        // 23.2.3.6 Set.prototype.forEach(callbackfn, thisArg = undefined)
        // 23.1.3.5 Map.prototype.forEach(callbackfn, thisArg = undefined)
        forEach: function forEach(callbackfn /*, that = undefined */){
          anInstance(this, C, 'forEach');
          var f = ctx(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3)
            , entry;
          while(entry = entry ? entry.n : this._f){
            f(entry.v, entry.k, this);
            // revert to the last existing entry
            while(entry && entry.r)entry = entry.p;
          }
        },
        // 23.1.3.7 Map.prototype.has(key)
        // 23.2.3.7 Set.prototype.has(value)
        has: function has(key){
          return !!getEntry(this, key);
        }
      });
      if(DESCRIPTORS)dP(C.prototype, 'size', {
        get: function(){
          return defined(this[SIZE]);
        }
      });
      return C;
    },
    def: function(that, key, value){
      var entry = getEntry(that, key)
        , prev, index;
      // change existing entry
      if(entry){
        entry.v = value;
      // create new entry
      } else {
        that._l = entry = {
          i: index = fastKey(key, true), // <- index
          k: key,                        // <- key
          v: value,                      // <- value
          p: prev = that._l,             // <- previous entry
          n: undefined,                  // <- next entry
          r: false                       // <- removed
        };
        if(!that._f)that._f = entry;
        if(prev)prev.n = entry;
        that[SIZE]++;
        // add to index
        if(index !== 'F')that._i[index] = entry;
      } return that;
    },
    getEntry: getEntry,
    setStrong: function(C, NAME, IS_MAP){
      // add .keys, .values, .entries, [@@iterator]
      // 23.1.3.4, 23.1.3.8, 23.1.3.11, 23.1.3.12, 23.2.3.5, 23.2.3.8, 23.2.3.10, 23.2.3.11
      $iterDefine(C, NAME, function(iterated, kind){
        this._t = iterated;  // target
        this._k = kind;      // kind
        this._l = undefined; // previous
      }, function(){
        var that  = this
          , kind  = that._k
          , entry = that._l;
        // revert to the last existing entry
        while(entry && entry.r)entry = entry.p;
        // get next entry
        if(!that._t || !(that._l = entry = entry ? entry.n : that._t._f)){
          // or finish the iteration
          that._t = undefined;
          return step(1);
        }
        // return step by kind
        if(kind == 'keys'  )return step(0, entry.k);
        if(kind == 'values')return step(0, entry.v);
        return step(0, [entry.k, entry.v]);
      }, IS_MAP ? 'entries' : 'values' , !IS_MAP, true);

      // add [@@species], 23.1.2.2, 23.2.2.2
      setSpecies(NAME);
    }
  };

/***/ },
/* 574 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';
  var global         = __webpack_require__(11)
    , $export        = __webpack_require__(10)
    , meta           = __webpack_require__(56)
    , fails          = __webpack_require__(21)
    , hide           = __webpack_require__(15)
    , redefineAll    = __webpack_require__(87)
    , forOf          = __webpack_require__(79)
    , anInstance     = __webpack_require__(78)
    , isObject       = __webpack_require__(18)
    , setToStringTag = __webpack_require__(44)
    , dP             = __webpack_require__(16).f
    , each           = __webpack_require__(575)(0)
    , DESCRIPTORS    = __webpack_require__(20);

  module.exports = function(NAME, wrapper, methods, common, IS_MAP, IS_WEAK){
    var Base  = global[NAME]
      , C     = Base
      , ADDER = IS_MAP ? 'set' : 'add'
      , proto = C && C.prototype
      , O     = {};
    if(!DESCRIPTORS || typeof C != 'function' || !(IS_WEAK || proto.forEach && !fails(function(){
      new C().entries().next();
    }))){
      // create collection constructor
      C = common.getConstructor(wrapper, NAME, IS_MAP, ADDER);
      redefineAll(C.prototype, methods);
      meta.NEED = true;
    } else {
      C = wrapper(function(target, iterable){
        anInstance(target, C, NAME, '_c');
        target._c = new Base;
        if(iterable != undefined)forOf(iterable, IS_MAP, target[ADDER], target);
      });
      each('add,clear,delete,forEach,get,has,set,keys,values,entries,toJSON'.split(','),function(KEY){
        var IS_ADDER = KEY == 'add' || KEY == 'set';
        if(KEY in proto && !(IS_WEAK && KEY == 'clear'))hide(C.prototype, KEY, function(a, b){
          anInstance(this, C, KEY);
          if(!IS_ADDER && IS_WEAK && !isObject(a))return KEY == 'get' ? undefined : false;
          var result = this._c[KEY](a === 0 ? 0 : a, b);
          return IS_ADDER ? this : result;
        });
      });
      if('size' in proto)dP(C.prototype, 'size', {
        get: function(){
          return this._c.size;
        }
      });
    }

    setToStringTag(C, NAME);

    O[NAME] = C;
    $export($export.G + $export.W + $export.F, O);

    if(!IS_WEAK)common.setStrong(C, NAME, IS_MAP);

    return C;
  };

/***/ },
/* 575 */
/***/ function(module, exports, __webpack_require__) {

  // 0 -> Array#forEach
  // 1 -> Array#map
  // 2 -> Array#filter
  // 3 -> Array#some
  // 4 -> Array#every
  // 5 -> Array#find
  // 6 -> Array#findIndex
  var ctx      = __webpack_require__(13)
    , IObject  = __webpack_require__(34)
    , toObject = __webpack_require__(47)
    , toLength = __webpack_require__(37)
    , asc      = __webpack_require__(576);
  module.exports = function(TYPE, $create){
    var IS_MAP        = TYPE == 1
      , IS_FILTER     = TYPE == 2
      , IS_SOME       = TYPE == 3
      , IS_EVERY      = TYPE == 4
      , IS_FIND_INDEX = TYPE == 6
      , NO_HOLES      = TYPE == 5 || IS_FIND_INDEX
      , create        = $create || asc;
    return function($this, callbackfn, that){
      var O      = toObject($this)
        , self   = IObject(O)
        , f      = ctx(callbackfn, that, 3)
        , length = toLength(self.length)
        , index  = 0
        , result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined
        , val, res;
      for(;length > index; index++)if(NO_HOLES || index in self){
        val = self[index];
        res = f(val, index, O);
        if(TYPE){
          if(IS_MAP)result[index] = res;            // map
          else if(res)switch(TYPE){
            case 3: return true;                    // some
            case 5: return val;                     // find
            case 6: return index;                   // findIndex
            case 2: result.push(val);               // filter
          } else if(IS_EVERY)return false;          // every
        }
      }
      return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;
    };
  };

/***/ },
/* 576 */
/***/ function(module, exports, __webpack_require__) {

  // 9.4.2.3 ArraySpeciesCreate(originalArray, length)
  var speciesConstructor = __webpack_require__(577);

  module.exports = function(original, length){
    return new (speciesConstructor(original))(length);
  };

/***/ },
/* 577 */
/***/ function(module, exports, __webpack_require__) {

  var isObject = __webpack_require__(18)
    , isArray  = __webpack_require__(62)
    , SPECIES  = __webpack_require__(45)('species');

  module.exports = function(original){
    var C;
    if(isArray(original)){
      C = original.constructor;
      // cross-realm fallback
      if(typeof C == 'function' && (C === Array || isArray(C.prototype)))C = undefined;
      if(isObject(C)){
        C = C[SPECIES];
        if(C === null)C = undefined;
      }
    } return C === undefined ? Array : C;
  };

/***/ },
/* 578 */
/***/ function(module, exports, __webpack_require__) {

  // https://github.com/DavidBruant/Map-Set.prototype.toJSON
  var $export  = __webpack_require__(10);

  $export($export.P + $export.R, 'Map', {toJSON: __webpack_require__(579)('Map')});

/***/ },
/* 579 */
/***/ function(module, exports, __webpack_require__) {

  // https://github.com/DavidBruant/Map-Set.prototype.toJSON
  var classof = __webpack_require__(77)
    , from    = __webpack_require__(580);
  module.exports = function(NAME){
    return function toJSON(){
      if(classof(this) != NAME)throw TypeError(NAME + "#toJSON isn't generic");
      return from(this);
    };
  };

/***/ },
/* 580 */
/***/ function(module, exports, __webpack_require__) {

  var forOf = __webpack_require__(79);

  module.exports = function(iter, ITERATOR){
    var result = [];
    forOf(iter, false, result.push, result, ITERATOR);
    return result;
  };


/***/ },
/* 581 */
/***/ function(module, exports, __webpack_require__) {

  var isarray = __webpack_require__(582)

  /**
   * Expose `pathToRegexp`.
   */
  module.exports = pathToRegexp
  module.exports.parse = parse
  module.exports.compile = compile
  module.exports.tokensToFunction = tokensToFunction
  module.exports.tokensToRegExp = tokensToRegExp

  /**
   * The main path matching regexp utility.
   *
   * @type {RegExp}
   */
  var PATH_REGEXP = new RegExp([
    // Match escaped characters that would otherwise appear in future matches.
    // This allows the user to escape special characters that won't transform.
    '(\\\\.)',
    // Match Express-style parameters and un-named parameters with a prefix
    // and optional suffixes. Matches appear as:
    //
    // "/:test(\\d+)?" => ["/", "test", "\d+", undefined, "?", undefined]
    // "/route(\\d+)"  => [undefined, undefined, undefined, "\d+", undefined, undefined]
    // "/*"            => ["/", undefined, undefined, undefined, undefined, "*"]
    '([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))'
  ].join('|'), 'g')

  /**
   * Parse a string for the raw tokens.
   *
   * @param  {string}  str
   * @param  {Object=} options
   * @return {!Array}
   */
  function parse (str, options) {
    var tokens = []
    var key = 0
    var index = 0
    var path = ''
    var defaultDelimiter = options && options.delimiter || '/'
    var res

    while ((res = PATH_REGEXP.exec(str)) != null) {
      var m = res[0]
      var escaped = res[1]
      var offset = res.index
      path += str.slice(index, offset)
      index = offset + m.length

      // Ignore already escaped sequences.
      if (escaped) {
        path += escaped[1]
        continue
      }

      var next = str[index]
      var prefix = res[2]
      var name = res[3]
      var capture = res[4]
      var group = res[5]
      var modifier = res[6]
      var asterisk = res[7]

      // Push the current path onto the tokens.
      if (path) {
        tokens.push(path)
        path = ''
      }

      var partial = prefix != null && next != null && next !== prefix
      var repeat = modifier === '+' || modifier === '*'
      var optional = modifier === '?' || modifier === '*'
      var delimiter = res[2] || defaultDelimiter
      var pattern = capture || group

      tokens.push({
        name: name || key++,
        prefix: prefix || '',
        delimiter: delimiter,
        optional: optional,
        repeat: repeat,
        partial: partial,
        asterisk: !!asterisk,
        pattern: pattern ? escapeGroup(pattern) : (asterisk ? '.*' : '[^' + escapeString(delimiter) + ']+?')
      })
    }

    // Match any characters still remaining.
    if (index < str.length) {
      path += str.substr(index)
    }

    // If the path exists, push it onto the end.
    if (path) {
      tokens.push(path)
    }

    return tokens
  }

  /**
   * Compile a string to a template function for the path.
   *
   * @param  {string}             str
   * @param  {Object=}            options
   * @return {!function(Object=, Object=)}
   */
  function compile (str, options) {
    return tokensToFunction(parse(str, options))
  }

  /**
   * Prettier encoding of URI path segments.
   *
   * @param  {string}
   * @return {string}
   */
  function encodeURIComponentPretty (str) {
    return encodeURI(str).replace(/[\/?#]/g, function (c) {
      return '%' + c.charCodeAt(0).toString(16).toUpperCase()
    })
  }

  /**
   * Encode the asterisk parameter. Similar to `pretty`, but allows slashes.
   *
   * @param  {string}
   * @return {string}
   */
  function encodeAsterisk (str) {
    return encodeURI(str).replace(/[?#]/g, function (c) {
      return '%' + c.charCodeAt(0).toString(16).toUpperCase()
    })
  }

  /**
   * Expose a method for transforming tokens into the path function.
   */
  function tokensToFunction (tokens) {
    // Compile all the tokens into regexps.
    var matches = new Array(tokens.length)

    // Compile all the patterns before compilation.
    for (var i = 0; i < tokens.length; i++) {
      if (typeof tokens[i] === 'object') {
        matches[i] = new RegExp('^(?:' + tokens[i].pattern + ')$')
      }
    }

    return function (obj, opts) {
      var path = ''
      var data = obj || {}
      var options = opts || {}
      var encode = options.pretty ? encodeURIComponentPretty : encodeURIComponent

      for (var i = 0; i < tokens.length; i++) {
        var token = tokens[i]

        if (typeof token === 'string') {
          path += token

          continue
        }

        var value = data[token.name]
        var segment

        if (value == null) {
          if (token.optional) {
            // Prepend partial segment prefixes.
            if (token.partial) {
              path += token.prefix
            }

            continue
          } else {
            throw new TypeError('Expected "' + token.name + '" to be defined')
          }
        }

        if (isarray(value)) {
          if (!token.repeat) {
            throw new TypeError('Expected "' + token.name + '" to not repeat, but received `' + JSON.stringify(value) + '`')
          }

          if (value.length === 0) {
            if (token.optional) {
              continue
            } else {
              throw new TypeError('Expected "' + token.name + '" to not be empty')
            }
          }

          for (var j = 0; j < value.length; j++) {
            segment = encode(value[j])

            if (!matches[i].test(segment)) {
              throw new TypeError('Expected all "' + token.name + '" to match "' + token.pattern + '", but received `' + JSON.stringify(segment) + '`')
            }

            path += (j === 0 ? token.prefix : token.delimiter) + segment
          }

          continue
        }

        segment = token.asterisk ? encodeAsterisk(value) : encode(value)

        if (!matches[i].test(segment)) {
          throw new TypeError('Expected "' + token.name + '" to match "' + token.pattern + '", but received "' + segment + '"')
        }

        path += token.prefix + segment
      }

      return path
    }
  }

  /**
   * Escape a regular expression string.
   *
   * @param  {string} str
   * @return {string}
   */
  function escapeString (str) {
    return str.replace(/([.+*?=^!:${}()[\]|\/\\])/g, '\\$1')
  }

  /**
   * Escape the capturing group by escaping special characters and meaning.
   *
   * @param  {string} group
   * @return {string}
   */
  function escapeGroup (group) {
    return group.replace(/([=!:$\/()])/g, '\\$1')
  }

  /**
   * Attach the keys as a property of the regexp.
   *
   * @param  {!RegExp} re
   * @param  {Array}   keys
   * @return {!RegExp}
   */
  function attachKeys (re, keys) {
    re.keys = keys
    return re
  }

  /**
   * Get the flags for a regexp from the options.
   *
   * @param  {Object} options
   * @return {string}
   */
  function flags (options) {
    return options.sensitive ? '' : 'i'
  }

  /**
   * Pull out keys from a regexp.
   *
   * @param  {!RegExp} path
   * @param  {!Array}  keys
   * @return {!RegExp}
   */
  function regexpToRegexp (path, keys) {
    // Use a negative lookahead to match only capturing groups.
    var groups = path.source.match(/\((?!\?)/g)

    if (groups) {
      for (var i = 0; i < groups.length; i++) {
        keys.push({
          name: i,
          prefix: null,
          delimiter: null,
          optional: false,
          repeat: false,
          partial: false,
          asterisk: false,
          pattern: null
        })
      }
    }

    return attachKeys(path, keys)
  }

  /**
   * Transform an array into a regexp.
   *
   * @param  {!Array}  path
   * @param  {Array}   keys
   * @param  {!Object} options
   * @return {!RegExp}
   */
  function arrayToRegexp (path, keys, options) {
    var parts = []

    for (var i = 0; i < path.length; i++) {
      parts.push(pathToRegexp(path[i], keys, options).source)
    }

    var regexp = new RegExp('(?:' + parts.join('|') + ')', flags(options))

    return attachKeys(regexp, keys)
  }

  /**
   * Create a path regexp from string input.
   *
   * @param  {string}  path
   * @param  {!Array}  keys
   * @param  {!Object} options
   * @return {!RegExp}
   */
  function stringToRegexp (path, keys, options) {
    return tokensToRegExp(parse(path, options), keys, options)
  }

  /**
   * Expose a function for taking tokens and returning a RegExp.
   *
   * @param  {!Array}          tokens
   * @param  {(Array|Object)=} keys
   * @param  {Object=}         options
   * @return {!RegExp}
   */
  function tokensToRegExp (tokens, keys, options) {
    if (!isarray(keys)) {
      options = /** @type {!Object} */ (keys || options)
      keys = []
    }

    options = options || {}

    var strict = options.strict
    var end = options.end !== false
    var route = ''

    // Iterate over the tokens and create our regexp string.
    for (var i = 0; i < tokens.length; i++) {
      var token = tokens[i]

      if (typeof token === 'string') {
        route += escapeString(token)
      } else {
        var prefix = escapeString(token.prefix)
        var capture = '(?:' + token.pattern + ')'

        keys.push(token)

        if (token.repeat) {
          capture += '(?:' + prefix + capture + ')*'
        }

        if (token.optional) {
          if (!token.partial) {
            capture = '(?:' + prefix + '(' + capture + '))?'
          } else {
            capture = prefix + '(' + capture + ')?'
          }
        } else {
          capture = prefix + '(' + capture + ')'
        }

        route += capture
      }
    }

    var delimiter = escapeString(options.delimiter || '/')
    var endsWithDelimiter = route.slice(-delimiter.length) === delimiter

    // In non-strict mode we allow a slash at the end of match. If the path to
    // match already ends with a slash, we remove it for consistency. The slash
    // is valid at the end of a path match, not in the middle. This is important
    // in non-ending mode, where "/test/" shouldn't match "/test//route".
    if (!strict) {
      route = (endsWithDelimiter ? route.slice(0, -delimiter.length) : route) + '(?:' + delimiter + '(?=$))?'
    }

    if (end) {
      route += '$'
    } else {
      // In non-ending mode, we need the capturing groups to match as much as
      // possible by using a positive lookahead to the end or next path segment.
      route += strict && endsWithDelimiter ? '' : '(?=' + delimiter + '|$)'
    }

    return attachKeys(new RegExp('^' + route, flags(options)), keys)
  }

  /**
   * Normalize the given path string, returning a regular expression.
   *
   * An empty array can be passed in for the keys, which will hold the
   * placeholder key descriptions. For example, using `/user/:id`, `keys` will
   * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.
   *
   * @param  {(string|RegExp|Array)} path
   * @param  {(Array|Object)=}       keys
   * @param  {Object=}               options
   * @return {!RegExp}
   */
  function pathToRegexp (path, keys, options) {
    if (!isarray(keys)) {
      options = /** @type {!Object} */ (keys || options)
      keys = []
    }

    options = options || {}

    if (path instanceof RegExp) {
      return regexpToRegexp(path, /** @type {!Array} */ (keys))
    }

    if (isarray(path)) {
      return arrayToRegexp(/** @type {!Array} */ (path), /** @type {!Array} */ (keys), options)
    }

    return stringToRegexp(/** @type {string} */ (path), /** @type {!Array} */ (keys), options)
  }


/***/ },
/* 582 */
/***/ function(module, exports) {

  module.exports = Array.isArray || function (arr) {
    return Object.prototype.toString.call(arr) == '[object Array]';
  };


/***/ },
/* 583 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';
  var strictUriEncode = __webpack_require__(584);
  var objectAssign = __webpack_require__(387);

  function encode(value, opts) {
  	if (opts.encode) {
  		return opts.strict ? strictUriEncode(value) : encodeURIComponent(value);
  	}

  	return value;
  }

  exports.extract = function (str) {
  	return str.split('?')[1] || '';
  };

  exports.parse = function (str) {
  	// Create an object with no prototype
  	// https://github.com/sindresorhus/query-string/issues/47
  	var ret = Object.create(null);

  	if (typeof str !== 'string') {
  		return ret;
  	}

  	str = str.trim().replace(/^(\?|#|&)/, '');

  	if (!str) {
  		return ret;
  	}

  	str.split('&').forEach(function (param) {
  		var parts = param.replace(/\+/g, ' ').split('=');
  		// Firefox (pre 40) decodes `%3D` to `=`
  		// https://github.com/sindresorhus/query-string/pull/37
  		var key = parts.shift();
  		var val = parts.length > 0 ? parts.join('=') : undefined;

  		key = decodeURIComponent(key);

  		// missing `=` should be `null`:
  		// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters
  		val = val === undefined ? null : decodeURIComponent(val);

  		if (ret[key] === undefined) {
  			ret[key] = val;
  		} else if (Array.isArray(ret[key])) {
  			ret[key].push(val);
  		} else {
  			ret[key] = [ret[key], val];
  		}
  	});

  	return ret;
  };

  exports.stringify = function (obj, opts) {
  	var defaults = {
  		encode: true,
  		strict: true
  	};

  	opts = objectAssign(defaults, opts);

  	return obj ? Object.keys(obj).sort().map(function (key) {
  		var val = obj[key];

  		if (val === undefined) {
  			return '';
  		}

  		if (val === null) {
  			return encode(key, opts);
  		}

  		if (Array.isArray(val)) {
  			var result = [];

  			val.slice().forEach(function (val2) {
  				if (val2 === undefined) {
  					return;
  				}

  				if (val2 === null) {
  					result.push(encode(key, opts));
  				} else {
  					result.push(encode(key, opts) + '=' + encode(val2, opts));
  				}
  			});

  			return result.join('&');
  		}

  		return encode(key, opts) + '=' + encode(val, opts);
  	}).filter(function (x) {
  		return x.length > 0;
  	}).join('&') : '';
  };


/***/ },
/* 584 */
/***/ function(module, exports) {

  'use strict';
  module.exports = function (str) {
  	return encodeURIComponent(str).replace(/[!'()*]/g, function (c) {
  		return '%' + c.charCodeAt(0).toString(16).toUpperCase();
  	});
  };


/***/ },
/* 585 */
/***/ function(module, exports) {

  'use strict';

  exports.__esModule = true;
  var addLeadingSlash = exports.addLeadingSlash = function addLeadingSlash(path) {
    return path.charAt(0) === '/' ? path : '/' + path;
  };

  var stripLeadingSlash = exports.stripLeadingSlash = function stripLeadingSlash(path) {
    return path.charAt(0) === '/' ? path.substr(1) : path;
  };

  var stripPrefix = exports.stripPrefix = function stripPrefix(path, prefix) {
    return path.indexOf(prefix) === 0 ? path.substr(prefix.length) : path;
  };

  var parsePath = exports.parsePath = function parsePath(path) {
    var pathname = path || '/';
    var search = '';
    var hash = '';

    var hashIndex = pathname.indexOf('#');
    if (hashIndex !== -1) {
      hash = pathname.substr(hashIndex);
      pathname = pathname.substr(0, hashIndex);
    }

    var searchIndex = pathname.indexOf('?');
    if (searchIndex !== -1) {
      search = pathname.substr(searchIndex);
      pathname = pathname.substr(0, searchIndex);
    }

    return {
      pathname: pathname,
      search: search === '?' ? '' : search,
      hash: hash === '#' ? '' : hash
    };
  };

  var createPath = exports.createPath = function createPath(location) {
    var pathname = location.pathname;
    var search = location.search;
    var hash = location.hash;


    var path = pathname || '/';

    if (search && search !== '?') path += search.charAt(0) === '?' ? search : '?' + search;

    if (hash && hash !== '#') path += hash.charAt(0) === '#' ? hash : '#' + hash;

    return path;
  };

/***/ },
/* 586 */,
/* 587 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  exports.__esModule = true;

  var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _warning = __webpack_require__(588);

  var _warning2 = _interopRequireDefault(_warning);

  var _invariant = __webpack_require__(589);

  var _invariant2 = _interopRequireDefault(_invariant);

  var _LocationUtils = __webpack_require__(590);

  var _PathUtils = __webpack_require__(585);

  var _createTransitionManager = __webpack_require__(593);

  var _createTransitionManager2 = _interopRequireDefault(_createTransitionManager);

  var _ExecutionEnvironment = __webpack_require__(594);

  var _DOMUtils = __webpack_require__(595);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  var PopStateEvent = 'popstate';
  var HashChangeEvent = 'hashchange';

  var getHistoryState = function getHistoryState() {
    try {
      return window.history.state || {};
    } catch (e) {
      // IE 11 sometimes throws when accessing window.history.state
      // See https://github.com/mjackson/history/pull/289
      return {};
    }
  };

  /**
   * Creates a history object that uses the HTML5 history API including
   * pushState, replaceState, and the popstate event.
   */
  var createBrowserHistory = function createBrowserHistory() {
    var props = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

    !_ExecutionEnvironment.canUseDOM ?  true ? (0, _invariant2.default)(false, 'Browser history needs a DOM') : (0, _invariant2.default)(false) : void 0;

    var globalHistory = window.history;
    var canUseHistory = (0, _DOMUtils.supportsHistory)();
    var needsHashChangeListener = !(0, _DOMUtils.supportsPopStateOnHashChange)();

    var _props$basename = props.basename;
    var basename = _props$basename === undefined ? '' : _props$basename;
    var _props$forceRefresh = props.forceRefresh;
    var forceRefresh = _props$forceRefresh === undefined ? false : _props$forceRefresh;
    var _props$getUserConfirm = props.getUserConfirmation;
    var getUserConfirmation = _props$getUserConfirm === undefined ? _DOMUtils.getConfirmation : _props$getUserConfirm;
    var _props$keyLength = props.keyLength;
    var keyLength = _props$keyLength === undefined ? 6 : _props$keyLength;


    var getDOMLocation = function getDOMLocation(historyState) {
      var _ref = historyState || {};

      var key = _ref.key;
      var state = _ref.state;
      var _window$location = window.location;
      var pathname = _window$location.pathname;
      var search = _window$location.search;
      var hash = _window$location.hash;


      var path = pathname + search + hash;

      if (basename) path = (0, _PathUtils.stripPrefix)(path, basename);

      return _extends({}, (0, _PathUtils.parsePath)(path), {
        state: state,
        key: key
      });
    };

    var createKey = function createKey() {
      return Math.random().toString(36).substr(2, keyLength);
    };

    var transitionManager = (0, _createTransitionManager2.default)();

    var setState = function setState(nextState) {
      _extends(history, nextState);

      history.length = globalHistory.length;

      transitionManager.notifyListeners(history.location, history.action);
    };

    var handlePopState = function handlePopState(event) {
      // Ignore extraneous popstate events in WebKit.
      if ((0, _DOMUtils.isExtraneousPopstateEvent)(event)) return;

      handlePop(getDOMLocation(event.state));
    };

    var handleHashChange = function handleHashChange() {
      handlePop(getDOMLocation(getHistoryState()));
    };

    var forceNextPop = false;

    var handlePop = function handlePop(location) {
      if (forceNextPop) {
        forceNextPop = false;
        setState();
      } else {
        (function () {
          var action = 'POP';

          transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
            if (ok) {
              setState({ action: action, location: location });
            } else {
              revertPop(location);
            }
          });
        })();
      }
    };

    var revertPop = function revertPop(fromLocation) {
      var toLocation = history.location;

      // TODO: We could probably make this more reliable by
      // keeping a list of keys we've seen in sessionStorage.
      // Instead, we just default to 0 for keys we don't know.

      var toIndex = allKeys.indexOf(toLocation.key);

      if (toIndex === -1) toIndex = 0;

      var fromIndex = allKeys.indexOf(fromLocation.key);

      if (fromIndex === -1) fromIndex = 0;

      var delta = toIndex - fromIndex;

      if (delta) {
        forceNextPop = true;
        go(delta);
      }
    };

    var initialLocation = getDOMLocation(getHistoryState());
    var allKeys = [initialLocation.key];

    // Public interface

    var createHref = function createHref(location) {
      return basename + (0, _PathUtils.createPath)(location);
    };

    var push = function push(path, state) {
       true ? (0, _warning2.default)(!((typeof path === 'undefined' ? 'undefined' : _typeof(path)) === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to push when the 1st ' + 'argument is a location-like object that already has state; it is ignored') : void 0;

      var action = 'PUSH';
      var location = (0, _LocationUtils.createLocation)(path, state, createKey(), history.location);

      transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
        if (!ok) return;

        var href = createHref(location);
        var key = location.key;
        var state = location.state;


        if (canUseHistory) {
          globalHistory.pushState({ key: key, state: state }, null, href);

          if (forceRefresh) {
            window.location.href = href;
          } else {
            var prevIndex = allKeys.indexOf(history.location.key);
            var nextKeys = allKeys.slice(0, prevIndex === -1 ? 0 : prevIndex + 1);

            nextKeys.push(location.key);
            allKeys = nextKeys;

            setState({ action: action, location: location });
          }
        } else {
           true ? (0, _warning2.default)(state === undefined, 'Browser history cannot push state in browsers that do not support HTML5 history') : void 0;

          window.location.href = href;
        }
      });
    };

    var replace = function replace(path, state) {
       true ? (0, _warning2.default)(!((typeof path === 'undefined' ? 'undefined' : _typeof(path)) === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to replace when the 1st ' + 'argument is a location-like object that already has state; it is ignored') : void 0;

      var action = 'REPLACE';
      var location = (0, _LocationUtils.createLocation)(path, state, createKey(), history.location);

      transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {
        if (!ok) return;

        var href = createHref(location);
        var key = location.key;
        var state = location.state;


        if (canUseHistory) {
          globalHistory.replaceState({ key: key, state: state }, null, href);

          if (forceRefresh) {
            window.location.replace(href);
          } else {
            var prevIndex = allKeys.indexOf(history.location.key);

            if (prevIndex !== -1) allKeys[prevIndex] = location.key;

            setState({ action: action, location: location });
          }
        } else {
           true ? (0, _warning2.default)(state === undefined, 'Browser history cannot replace state in browsers that do not support HTML5 history') : void 0;

          window.location.replace(href);
        }
      });
    };

    var go = function go(n) {
      globalHistory.go(n);
    };

    var goBack = function goBack() {
      return go(-1);
    };

    var goForward = function goForward() {
      return go(1);
    };

    var listenerCount = 0;

    var checkDOMListeners = function checkDOMListeners(delta) {
      listenerCount += delta;

      if (listenerCount === 1) {
        (0, _DOMUtils.addEventListener)(window, PopStateEvent, handlePopState);

        if (needsHashChangeListener) (0, _DOMUtils.addEventListener)(window, HashChangeEvent, handleHashChange);
      } else if (listenerCount === 0) {
        (0, _DOMUtils.removeEventListener)(window, PopStateEvent, handlePopState);

        if (needsHashChangeListener) (0, _DOMUtils.removeEventListener)(window, HashChangeEvent, handleHashChange);
      }
    };

    var isBlocked = false;

    var block = function block() {
      var prompt = arguments.length <= 0 || arguments[0] === undefined ? false : arguments[0];

      var unblock = transitionManager.setPrompt(prompt);

      if (!isBlocked) {
        checkDOMListeners(1);
        isBlocked = true;
      }

      return function () {
        if (isBlocked) {
          isBlocked = false;
          checkDOMListeners(-1);
        }

        return unblock();
      };
    };

    var listen = function listen(listener) {
      var unlisten = transitionManager.appendListener(listener);
      checkDOMListeners(1);

      return function () {
        checkDOMListeners(-1);
        return unlisten();
      };
    };

    var history = {
      length: globalHistory.length,
      action: 'POP',
      location: initialLocation,
      createHref: createHref,
      push: push,
      replace: replace,
      go: go,
      goBack: goBack,
      goForward: goForward,
      block: block,
      listen: listen
    };

    return history;
  };

  exports.default = createBrowserHistory;

/***/ },
/* 588 */
/***/ function(module, exports, __webpack_require__) {

  /**
   * Copyright 2014-2015, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   */

  'use strict';

  /**
   * Similar to invariant but only logs a warning if the condition is not met.
   * This can be used to log issues in development environments in critical
   * paths. Removing the logging code for production environments will keep the
   * same logic and follow the same code paths.
   */

  var warning = function() {};

  if (true) {
    warning = function(condition, format, args) {
      var len = arguments.length;
      args = new Array(len > 2 ? len - 2 : 0);
      for (var key = 2; key < len; key++) {
        args[key - 2] = arguments[key];
      }
      if (format === undefined) {
        throw new Error(
          '`warning(condition, format, ...args)` requires a warning ' +
          'message argument'
        );
      }

      if (format.length < 10 || (/^[s\W]*$/).test(format)) {
        throw new Error(
          'The warning format should be able to uniquely identify this ' +
          'warning. Please, use a more descriptive format than: ' + format
        );
      }

      if (!condition) {
        var argIndex = 0;
        var message = 'Warning: ' +
          format.replace(/%s/g, function() {
            return args[argIndex++];
          });
        if (typeof console !== 'undefined') {
          console.error(message);
        }
        try {
          // This error was thrown as a convenience so that you can use this stack
          // to find the callsite that caused this warning to fire.
          throw new Error(message);
        } catch(x) {}
      }
    };
  }

  module.exports = warning;


/***/ },
/* 589 */
/***/ function(module, exports, __webpack_require__) {

  /**
   * Copyright 2013-2015, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   */

  'use strict';

  /**
   * Use invariant() to assert state which your program assumes to be true.
   *
   * Provide sprintf-style format (only %s is supported) and arguments
   * to provide information about what broke and what you were
   * expecting.
   *
   * The invariant message will be stripped in production, but the invariant
   * will remain to ensure logic does not differ in production.
   */

  var invariant = function(condition, format, a, b, c, d, e, f) {
    if (true) {
      if (format === undefined) {
        throw new Error('invariant requires an error message argument');
      }
    }

    if (!condition) {
      var error;
      if (format === undefined) {
        error = new Error(
          'Minified exception occurred; use the non-minified dev environment ' +
          'for the full error message and additional helpful warnings.'
        );
      } else {
        var args = [a, b, c, d, e, f];
        var argIndex = 0;
        error = new Error(
          format.replace(/%s/g, function() { return args[argIndex++]; })
        );
        error.name = 'Invariant Violation';
      }

      error.framesToPop = 1; // we don't care about invariant's own frame
      throw error;
    }
  };

  module.exports = invariant;


/***/ },
/* 590 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  exports.__esModule = true;
  exports.locationsAreEqual = exports.createLocation = undefined;

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _resolvePathname = __webpack_require__(591);

  var _resolvePathname2 = _interopRequireDefault(_resolvePathname);

  var _valueEqual = __webpack_require__(592);

  var _valueEqual2 = _interopRequireDefault(_valueEqual);

  var _PathUtils = __webpack_require__(585);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  var createLocation = exports.createLocation = function createLocation(path, state, key, currentLocation) {
    var location = void 0;
    if (typeof path === 'string') {
      // Two-arg form: push(path, state)
      location = (0, _PathUtils.parsePath)(path);
      location.state = state;
    } else {
      // One-arg form: push(location)
      location = _extends({}, path);

      if (location.pathname === undefined) location.pathname = '';

      if (location.search) {
        if (location.search.charAt(0) !== '?') location.search = '?' + location.search;
      } else {
        location.search = '';
      }

      if (location.hash) {
        if (location.hash.charAt(0) !== '#') location.hash = '#' + location.hash;
      } else {
        location.hash = '';
      }

      if (state !== undefined && location.state === undefined) location.state = state;
    }

    location.key = key;

    if (currentLocation) {
      // Resolve incomplete/relative pathname relative to current location.
      if (!location.pathname) {
        location.pathname = currentLocation.pathname;
      } else if (location.pathname.charAt(0) !== '/') {
        location.pathname = (0, _resolvePathname2.default)(location.pathname, currentLocation.pathname);
      }
    }

    return location;
  };

  var locationsAreEqual = exports.locationsAreEqual = function locationsAreEqual(a, b) {
    return a.pathname === b.pathname && a.search === b.search && a.hash === b.hash && a.key === b.key && (0, _valueEqual2.default)(a.state, b.state);
  };

/***/ },
/* 591 */
/***/ function(module, exports) {

  'use strict';

  var isAbsolute = function isAbsolute(pathname) {
    return pathname.charAt(0) === '/';
  };

  // About 1.5x faster than the two-arg version of Array#splice()
  var spliceOne = function spliceOne(list, index) {
    for (var i = index, k = i + 1, n = list.length; k < n; i += 1, k += 1) {
      list[i] = list[k];
    }list.pop();
  };

  // This implementation is based heavily on node's url.parse
  var resolvePathname = function resolvePathname(to) {
    var from = arguments.length <= 1 || arguments[1] === undefined ? '' : arguments[1];

    var toParts = to && to.split('/') || [];
    var fromParts = from && from.split('/') || [];

    var isToAbs = to && isAbsolute(to);
    var isFromAbs = from && isAbsolute(from);
    var mustEndAbs = isToAbs || isFromAbs;

    if (to && isAbsolute(to)) {
      // to is absolute
      fromParts = toParts;
    } else if (toParts.length) {
      // to is relative, drop the filename
      fromParts.pop();
      fromParts = fromParts.concat(toParts);
    }

    if (!fromParts.length) return '/';

    var hasTrailingSlash = void 0;
    if (fromParts.length) {
      var last = fromParts[fromParts.length - 1];
      hasTrailingSlash = last === '.' || last === '..' || last === '';
    } else {
      hasTrailingSlash = false;
    }

    var up = 0;
    for (var i = fromParts.length; i >= 0; i--) {
      var part = fromParts[i];

      if (part === '.') {
        spliceOne(fromParts, i);
      } else if (part === '..') {
        spliceOne(fromParts, i);
        up++;
      } else if (up) {
        spliceOne(fromParts, i);
        up--;
      }
    }

    if (!mustEndAbs) for (; up--; up) {
      fromParts.unshift('..');
    }if (mustEndAbs && fromParts[0] !== '' && (!fromParts[0] || !isAbsolute(fromParts[0]))) fromParts.unshift('');

    var result = fromParts.join('/');

    if (hasTrailingSlash && result.substr(-1) !== '/') result += '/';

    return result;
  };

  module.exports = resolvePathname;

/***/ },
/* 592 */
/***/ function(module, exports) {

  'use strict';

  exports.__esModule = true;

  var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

  var valueEqual = function valueEqual(a, b) {
    if (a === b) return true;

    if (a == null || b == null) return false;

    if (Array.isArray(a)) {
      if (!Array.isArray(b) || a.length !== b.length) return false;

      return a.every(function (item, index) {
        return valueEqual(item, b[index]);
      });
    }

    var aType = typeof a === 'undefined' ? 'undefined' : _typeof(a);
    var bType = typeof b === 'undefined' ? 'undefined' : _typeof(b);

    if (aType !== bType) return false;

    if (aType === 'object') {
      var aValue = a.valueOf();
      var bValue = b.valueOf();

      if (aValue !== a || bValue !== b) return valueEqual(aValue, bValue);

      var aKeys = Object.keys(a);
      var bKeys = Object.keys(b);

      if (aKeys.length !== bKeys.length) return false;

      return aKeys.every(function (key) {
        return valueEqual(a[key], b[key]);
      });
    }

    return false;
  };

  exports.default = valueEqual;

/***/ },
/* 593 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  exports.__esModule = true;

  var _warning = __webpack_require__(588);

  var _warning2 = _interopRequireDefault(_warning);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  var createTransitionManager = function createTransitionManager() {
    var prompt = null;

    var setPrompt = function setPrompt(nextPrompt) {
       true ? (0, _warning2.default)(prompt == null, 'A history supports only one prompt at a time') : void 0;

      prompt = nextPrompt;

      return function () {
        if (prompt === nextPrompt) prompt = null;
      };
    };

    var confirmTransitionTo = function confirmTransitionTo(location, action, getUserConfirmation, callback) {
      // TODO: If another transition starts while we're still confirming
      // the previous one, we may end up in a weird state. Figure out the
      // best way to handle this.
      if (prompt != null) {
        var result = typeof prompt === 'function' ? prompt(location, action) : prompt;

        if (typeof result === 'string') {
          if (typeof getUserConfirmation === 'function') {
            getUserConfirmation(result, callback);
          } else {
             true ? (0, _warning2.default)(false, 'A history needs a getUserConfirmation function in order to use a prompt message') : void 0;

            callback(true);
          }
        } else {
          // Return false from a transition hook to cancel the transition.
          callback(result !== false);
        }
      } else {
        callback(true);
      }
    };

    var listeners = [];

    var appendListener = function appendListener(listener) {
      listeners.push(listener);

      return function () {
        listeners = listeners.filter(function (item) {
          return item !== listener;
        });
      };
    };

    var notifyListeners = function notifyListeners() {
      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      return listeners.forEach(function (listener) {
        return listener.apply(undefined, args);
      });
    };

    return {
      setPrompt: setPrompt,
      confirmTransitionTo: confirmTransitionTo,
      appendListener: appendListener,
      notifyListeners: notifyListeners
    };
  };

  exports.default = createTransitionManager;

/***/ },
/* 594 */
/***/ function(module, exports) {

  'use strict';

  exports.__esModule = true;
  var canUseDOM = exports.canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);

/***/ },
/* 595 */
/***/ function(module, exports) {

  'use strict';

  exports.__esModule = true;
  var addEventListener = exports.addEventListener = function addEventListener(node, event, listener) {
    return node.addEventListener ? node.addEventListener(event, listener, false) : node.attachEvent('on' + event, listener);
  };

  var removeEventListener = exports.removeEventListener = function removeEventListener(node, event, listener) {
    return node.removeEventListener ? node.removeEventListener(event, listener, false) : node.detachEvent('on' + event, listener);
  };

  var getConfirmation = exports.getConfirmation = function getConfirmation(message, callback) {
    return callback(window.confirm(message));
  }; // eslint-disable-line no-alert

  /**
   * Returns true if the HTML5 history API is supported. Taken from Modernizr.
   *
   * https://github.com/Modernizr/Modernizr/blob/master/LICENSE
   * https://github.com/Modernizr/Modernizr/blob/master/feature-detects/history.js
   * changed to avoid false negatives for Windows Phones: https://github.com/reactjs/react-router/issues/586
   */
  var supportsHistory = exports.supportsHistory = function supportsHistory() {
    var ua = window.navigator.userAgent;

    if ((ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) && ua.indexOf('Mobile Safari') !== -1 && ua.indexOf('Chrome') === -1 && ua.indexOf('Windows Phone') === -1) return false;

    return window.history && 'pushState' in window.history;
  };

  /**
   * Returns true if browser fires popstate on hash change.
   * IE10 and IE11 do not.
   */
  var supportsPopStateOnHashChange = exports.supportsPopStateOnHashChange = function supportsPopStateOnHashChange() {
    return window.navigator.userAgent.indexOf('Trident') === -1;
  };

  /**
   * Returns false if using go(n) with hash history causes a full page reload.
   */
  var supportsGoWithoutReloadUsingHash = exports.supportsGoWithoutReloadUsingHash = function supportsGoWithoutReloadUsingHash() {
    return window.navigator.userAgent.indexOf('Firefox') === -1;
  };

  /**
   * Returns true if a given popstate event is an extraneous WebKit event.
   * Accounts for the fact that Chrome on iOS fires real popstate events
   * containing undefined state when pressing the back button.
   */
  var isExtraneousPopstateEvent = exports.isExtraneousPopstateEvent = function isExtraneousPopstateEvent(event) {
    return event.state === undefined && navigator.userAgent.indexOf('CriOS') === -1;
  };

/***/ },
/* 596 */,
/* 597 */
/***/ function(module, exports, __webpack_require__) {

  module.exports = { "default": __webpack_require__(598), __esModule: true };

/***/ },
/* 598 */
/***/ function(module, exports, __webpack_require__) {

  __webpack_require__(599);
  module.exports = __webpack_require__(12).Object.getPrototypeOf;

/***/ },
/* 599 */
/***/ function(module, exports, __webpack_require__) {

  // 19.1.2.9 Object.getPrototypeOf(O)
  var toObject        = __webpack_require__(47)
    , $getPrototypeOf = __webpack_require__(46);

  __webpack_require__(600)('getPrototypeOf', function(){
    return function getPrototypeOf(it){
      return $getPrototypeOf(toObject(it));
    };
  });

/***/ },
/* 600 */
/***/ function(module, exports, __webpack_require__) {

  // most Object methods by ES6 should accept primitives
  var $export = __webpack_require__(10)
    , core    = __webpack_require__(12)
    , fails   = __webpack_require__(21);
  module.exports = function(KEY, exec){
    var fn  = (core.Object || {})[KEY] || Object[KEY]
      , exp = {};
    exp[KEY] = exec(fn);
    $export($export.S + $export.F * fails(function(){ fn(1); }), 'Object', exp);
  };

/***/ },
/* 601 */
/***/ function(module, exports) {

  "use strict";

  exports.__esModule = true;

  exports.default = function (instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };

/***/ },
/* 602 */
/***/ function(module, exports, __webpack_require__) {

  "use strict";

  exports.__esModule = true;

  var _defineProperty = __webpack_require__(603);

  var _defineProperty2 = _interopRequireDefault(_defineProperty);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  exports.default = function () {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        (0, _defineProperty2.default)(target, descriptor.key, descriptor);
      }
    }

    return function (Constructor, protoProps, staticProps) {
      if (protoProps) defineProperties(Constructor.prototype, protoProps);
      if (staticProps) defineProperties(Constructor, staticProps);
      return Constructor;
    };
  }();

/***/ },
/* 603 */
/***/ function(module, exports, __webpack_require__) {

  module.exports = { "default": __webpack_require__(604), __esModule: true };

/***/ },
/* 604 */
/***/ function(module, exports, __webpack_require__) {

  __webpack_require__(605);
  var $Object = __webpack_require__(12).Object;
  module.exports = function defineProperty(it, key, desc){
    return $Object.defineProperty(it, key, desc);
  };

/***/ },
/* 605 */
/***/ function(module, exports, __webpack_require__) {

  var $export = __webpack_require__(10);
  // 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)
  $export($export.S + $export.F * !__webpack_require__(20), 'Object', {defineProperty: __webpack_require__(16).f});

/***/ },
/* 606 */
/***/ function(module, exports, __webpack_require__) {

  "use strict";

  exports.__esModule = true;

  var _typeof2 = __webpack_require__(1);

  var _typeof3 = _interopRequireDefault(_typeof2);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  exports.default = function (self, call) {
    if (!self) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }

    return call && ((typeof call === "undefined" ? "undefined" : (0, _typeof3.default)(call)) === "object" || typeof call === "function") ? call : self;
  };

/***/ },
/* 607 */
/***/ function(module, exports, __webpack_require__) {

  "use strict";

  exports.__esModule = true;

  var _setPrototypeOf = __webpack_require__(608);

  var _setPrototypeOf2 = _interopRequireDefault(_setPrototypeOf);

  var _create = __webpack_require__(567);

  var _create2 = _interopRequireDefault(_create);

  var _typeof2 = __webpack_require__(1);

  var _typeof3 = _interopRequireDefault(_typeof2);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  exports.default = function (subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : (0, _typeof3.default)(superClass)));
    }

    subClass.prototype = (0, _create2.default)(superClass && superClass.prototype, {
      constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
    if (superClass) _setPrototypeOf2.default ? (0, _setPrototypeOf2.default)(subClass, superClass) : subClass.__proto__ = superClass;
  };

/***/ },
/* 608 */
/***/ function(module, exports, __webpack_require__) {

  module.exports = { "default": __webpack_require__(609), __esModule: true };

/***/ },
/* 609 */
/***/ function(module, exports, __webpack_require__) {

  __webpack_require__(610);
  module.exports = __webpack_require__(12).Object.setPrototypeOf;

/***/ },
/* 610 */
/***/ function(module, exports, __webpack_require__) {

  // 19.1.3.19 Object.setPrototypeOf(O, proto)
  var $export = __webpack_require__(10);
  $export($export.S, 'Object', {setPrototypeOf: __webpack_require__(611).set});

/***/ },
/* 611 */
/***/ function(module, exports, __webpack_require__) {

  // Works with __proto__ only. Old v8 can't work with null proto objects.
  /* eslint-disable no-proto */
  var isObject = __webpack_require__(18)
    , anObject = __webpack_require__(17);
  var check = function(O, proto){
    anObject(O);
    if(!isObject(proto) && proto !== null)throw TypeError(proto + ": can't set as prototype!");
  };
  module.exports = {
    set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line
      function(test, buggy, set){
        try {
          set = __webpack_require__(13)(Function.call, __webpack_require__(65).f(Object.prototype, '__proto__').set, 2);
          set(test, []);
          buggy = !(test instanceof Array);
        } catch(e){ buggy = true; }
        return function setPrototypeOf(O, proto){
          check(O, proto);
          if(buggy)O.__proto__ = proto;
          else set(O, proto);
          return O;
        };
      }({}, false) : undefined),
    check: check
  };

/***/ },
/* 612 */,
/* 613 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.__RewireAPI__ = exports.__ResetDependency__ = exports.__set__ = exports.__Rewire__ = exports.__GetDependency__ = exports.__get__ = exports.RedBoxError = undefined;

  var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _reactDom = __webpack_require__(415);

  var _reactDom2 = _interopRequireDefault(_reactDom);

  var _style = __webpack_require__(614);

  var _style2 = _interopRequireDefault(_style);

  var _errorStackParser = __webpack_require__(615);

  var _errorStackParser2 = _interopRequireDefault(_errorStackParser);

  var _objectAssign = __webpack_require__(387);

  var _objectAssign2 = _interopRequireDefault(_objectAssign);

  var _lib = __webpack_require__(617);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

  function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

  var RedBoxError = exports.RedBoxError = function (_get__2) {
    _inherits(RedBoxError, _get__2);

    function RedBoxError() {
      _classCallCheck(this, RedBoxError);

      return _possibleConstructorReturn(this, (RedBoxError.__proto__ || Object.getPrototypeOf(RedBoxError)).apply(this, arguments));
    }

    _createClass(RedBoxError, [{
      key: 'renderFrames',
      value: function renderFrames(frames) {
        var _props = this.props,
            filename = _props.filename,
            editorScheme = _props.editorScheme,
            useLines = _props.useLines,
            useColumns = _props.useColumns;

        var _get__3 = _get__('assign')({}, _get__('style'), this.props.style),
            frame = _get__3.frame,
            file = _get__3.file,
            linkToFile = _get__3.linkToFile;

        return frames.map(function (f, index) {
          var text = void 0;
          var url = void 0;

          if (index === 0 && filename && !_get__('isFilenameAbsolute')(f.fileName)) {
            url = _get__('makeUrl')(filename, editorScheme);
            text = _get__('makeLinkText')(filename);
          } else {
            var lines = useLines ? f.lineNumber : null;
            var columns = useColumns ? f.columnNumber : null;
            url = _get__('makeUrl')(f.fileName, editorScheme, lines, columns);
            text = _get__('makeLinkText')(f.fileName, lines, columns);
          }

          return _get__('React').createElement(
            'div',
            { style: frame, key: index },
            _get__('React').createElement(
              'div',
              null,
              f.functionName
            ),
            _get__('React').createElement(
              'div',
              { style: file },
              _get__('React').createElement(
                'a',
                { href: url, style: linkToFile },
                text
              )
            )
          );
        });
      }
    }, {
      key: 'render',
      value: function render() {
        var _props2 = this.props,
            error = _props2.error,
            className = _props2.className;

        var _get__4 = _get__('assign')({}, _get__('style'), this.props.style),
            redbox = _get__4.redbox,
            message = _get__4.message,
            stack = _get__4.stack,
            frame = _get__4.frame;

        var frames = void 0;
        var parseError = void 0;
        try {
          frames = _get__('ErrorStackParser').parse(error);
        } catch (e) {
          parseError = new Error('Failed to parse stack trace. Stack trace information unavailable.');
        }

        if (parseError) {
          frames = _get__('React').createElement(
            'div',
            { style: frame, key: 0 },
            _get__('React').createElement(
              'div',
              null,
              parseError.message
            )
          );
        } else {
          frames = this.renderFrames(frames);
        }

        return _get__('React').createElement(
          'div',
          { style: redbox, className: className },
          _get__('React').createElement(
            'div',
            { style: message },
            error.name,
            ': ',
            error.message
          ),
          _get__('React').createElement(
            'div',
            { style: stack },
            frames
          )
        );
      }
    }]);

    return RedBoxError;
  }(_get__('Component'));

  // "Portal" component for actual RedBoxError component to
  // render to (directly under body). Prevents bugs as in #27.


  RedBoxError.propTypes = {
    error: _get__('PropTypes').instanceOf(Error).isRequired,
    filename: _get__('PropTypes').string,
    editorScheme: _get__('PropTypes').string,
    useLines: _get__('PropTypes').bool,
    useColumns: _get__('PropTypes').bool,
    style: _get__('PropTypes').object,
    className: _get__('PropTypes').string
  };
  RedBoxError.displayName = 'RedBoxError';
  RedBoxError.defaultProps = {
    useLines: true,
    useColumns: true
  };

  var RedBox = function (_get__5) {
    _inherits(RedBox, _get__5);

    function RedBox() {
      _classCallCheck(this, RedBox);

      return _possibleConstructorReturn(this, (RedBox.__proto__ || Object.getPrototypeOf(RedBox)).apply(this, arguments));
    }

    _createClass(RedBox, [{
      key: 'componentDidMount',
      value: function componentDidMount() {
        this.el = document.createElement('div');
        document.body.appendChild(this.el);
        this.renderRedBoxError();
      }
    }, {
      key: 'componentDidUpdate',
      value: function componentDidUpdate() {
        this.renderRedBoxError();
      }
    }, {
      key: 'componentWillUnmount',
      value: function componentWillUnmount() {
        _get__('ReactDOM').unmountComponentAtNode(this.el);
        document.body.removeChild(this.el);
        this.el = null;
      }
    }, {
      key: 'renderRedBoxError',
      value: function renderRedBoxError() {
        _get__('ReactDOM').render(_get__('React').createElement(_get__('RedBoxError'), this.props), this.el);
      }
    }, {
      key: 'render',
      value: function render() {
        return null;
      }
    }]);

    return RedBox;
  }(_get__('Component'));

  RedBox.propTypes = {
    error: _get__('PropTypes').instanceOf(Error).isRequired
  };
  RedBox.displayName = 'RedBox';
  exports.default = RedBox;

  var _RewiredData__ = Object.create(null);

  var INTENTIONAL_UNDEFINED = '__INTENTIONAL_UNDEFINED__';
  var _RewireAPI__ = {};

  (function () {
    function addPropertyToAPIObject(name, value) {
      Object.defineProperty(_RewireAPI__, name, {
        value: value,
        enumerable: false,
        configurable: true
      });
    }

    addPropertyToAPIObject('__get__', _get__);
    addPropertyToAPIObject('__GetDependency__', _get__);
    addPropertyToAPIObject('__Rewire__', _set__);
    addPropertyToAPIObject('__set__', _set__);
    addPropertyToAPIObject('__reset__', _reset__);
    addPropertyToAPIObject('__ResetDependency__', _reset__);
    addPropertyToAPIObject('__with__', _with__);
  })();

  function _get__(variableName) {
    if (_RewiredData__ === undefined || _RewiredData__[variableName] === undefined) {
      return _get_original__(variableName);
    } else {
      var value = _RewiredData__[variableName];

      if (value === INTENTIONAL_UNDEFINED) {
        return undefined;
      } else {
        return value;
      }
    }
  }

  function _get_original__(variableName) {
    switch (variableName) {
      case 'PropTypes':
        return _react.PropTypes;

      case 'assign':
        return _objectAssign2.default;

      case 'style':
        return _style2.default;

      case 'isFilenameAbsolute':
        return _lib.isFilenameAbsolute;

      case 'makeUrl':
        return _lib.makeUrl;

      case 'makeLinkText':
        return _lib.makeLinkText;

      case 'ErrorStackParser':
        return _errorStackParser2.default;

      case 'Component':
        return _react.Component;

      case 'ReactDOM':
        return _reactDom2.default;

      case 'React':
        return _react2.default;

      case 'RedBoxError':
        return RedBoxError;
    }

    return undefined;
  }

  function _assign__(variableName, value) {
    if (_RewiredData__ === undefined || _RewiredData__[variableName] === undefined) {
      return _set_original__(variableName, value);
    } else {
      return _RewiredData__[variableName] = value;
    }
  }

  function _set_original__(variableName, _value) {
    switch (variableName) {}

    return undefined;
  }

  function _update_operation__(operation, variableName, prefix) {
    var oldValue = _get__(variableName);

    var newValue = operation === '++' ? oldValue + 1 : oldValue - 1;

    _assign__(variableName, newValue);

    return prefix ? newValue : oldValue;
  }

  function _set__(variableName, value) {
    if ((typeof variableName === 'undefined' ? 'undefined' : _typeof(variableName)) === 'object') {
      Object.keys(variableName).forEach(function (name) {
        _RewiredData__[name] = variableName[name];
      });
    } else {
      if (value === undefined) {
        _RewiredData__[variableName] = INTENTIONAL_UNDEFINED;
      } else {
        _RewiredData__[variableName] = value;
      }

      return function () {
        _reset__(variableName);
      };
    }
  }

  function _reset__(variableName) {
    delete _RewiredData__[variableName];
  }

  function _with__(object) {
    var rewiredVariableNames = Object.keys(object);
    var previousValues = {};

    function reset() {
      rewiredVariableNames.forEach(function (variableName) {
        _RewiredData__[variableName] = previousValues[variableName];
      });
    }

    return function (callback) {
      rewiredVariableNames.forEach(function (variableName) {
        previousValues[variableName] = _RewiredData__[variableName];
        _RewiredData__[variableName] = object[variableName];
      });
      var result = callback();

      if (!!result && typeof result.then == 'function') {
        result.then(reset).catch(reset);
      } else {
        reset();
      }

      return result;
    };
  }

  var _typeOfOriginalExport = typeof RedBox === 'undefined' ? 'undefined' : _typeof(RedBox);

  function addNonEnumerableProperty(name, value) {
    Object.defineProperty(RedBox, name, {
      value: value,
      enumerable: false,
      configurable: true
    });
  }

  if ((_typeOfOriginalExport === 'object' || _typeOfOriginalExport === 'function') && Object.isExtensible(RedBox)) {
    addNonEnumerableProperty('__get__', _get__);
    addNonEnumerableProperty('__GetDependency__', _get__);
    addNonEnumerableProperty('__Rewire__', _set__);
    addNonEnumerableProperty('__set__', _set__);
    addNonEnumerableProperty('__reset__', _reset__);
    addNonEnumerableProperty('__ResetDependency__', _reset__);
    addNonEnumerableProperty('__with__', _with__);
    addNonEnumerableProperty('__RewireAPI__', _RewireAPI__);
  }

  exports.__get__ = _get__;
  exports.__GetDependency__ = _get__;
  exports.__Rewire__ = _set__;
  exports.__set__ = _set__;
  exports.__ResetDependency__ = _reset__;
  exports.__RewireAPI__ = _RewireAPI__;

/***/ },
/* 614 */
/***/ function(module, exports) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  var _DefaultExportValue = {
    redbox: {
      boxSizing: 'border-box',
      fontFamily: 'sans-serif',
      position: 'fixed',
      padding: 10,
      top: '0px',
      left: '0px',
      bottom: '0px',
      right: '0px',
      width: '100%',
      background: 'rgb(204, 0, 0)',
      color: 'white',
      zIndex: 2147483647,
      textAlign: 'left',
      fontSize: '16px',
      lineHeight: 1.2,
      overflow: 'scroll'
    },
    message: {
      fontWeight: 'bold'
    },
    stack: {
      fontFamily: 'monospace',
      marginTop: '2em'
    },
    frame: {
      marginTop: '1em'
    },
    file: {
      fontSize: '0.8em',
      color: 'rgba(255, 255, 255, 0.7)'
    },
    linkToFile: {
      textDecoration: 'none',
      color: 'rgba(255, 255, 255, 0.7)'
    }
  };
  exports.default = _DefaultExportValue;

/***/ },
/* 615 */
/***/ function(module, exports, __webpack_require__) {

  var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function(root, factory) {
      'use strict';
      // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.

      /* istanbul ignore next */
      if (true) {
          !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(616)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
      } else if (typeof exports === 'object') {
          module.exports = factory(require('stackframe'));
      } else {
          root.ErrorStackParser = factory(root.StackFrame);
      }
  }(this, function ErrorStackParser(StackFrame) {
      'use strict';

      var FIREFOX_SAFARI_STACK_REGEXP = /(^|@)\S+\:\d+/;
      var CHROME_IE_STACK_REGEXP = /^\s*at .*(\S+\:\d+|\(native\))/m;
      var SAFARI_NATIVE_CODE_REGEXP = /^(eval@)?(\[native code\])?$/;

      function _map(array, fn, thisArg) {
          if (typeof Array.prototype.map === 'function') {
              return array.map(fn, thisArg);
          } else {
              var output = new Array(array.length);
              for (var i = 0; i < array.length; i++) {
                  output[i] = fn.call(thisArg, array[i]);
              }
              return output;
          }
      }

      function _filter(array, fn, thisArg) {
          if (typeof Array.prototype.filter === 'function') {
              return array.filter(fn, thisArg);
          } else {
              var output = [];
              for (var i = 0; i < array.length; i++) {
                  if (fn.call(thisArg, array[i])) {
                      output.push(array[i]);
                  }
              }
              return output;
          }
      }

      function _indexOf(array, target) {
          if (typeof Array.prototype.indexOf === 'function') {
              return array.indexOf(target);
          } else {
              for (var i = 0; i < array.length; i++) {
                  if (array[i] === target) {
                      return i;
                  }
              }
              return -1;
          }
      }

      return {
          /**
           * Given an Error object, extract the most information from it.
           *
           * @param {Error} error object
           * @return {Array} of StackFrames
           */
          parse: function ErrorStackParser$$parse(error) {
              if (typeof error.stacktrace !== 'undefined' || typeof error['opera#sourceloc'] !== 'undefined') {
                  return this.parseOpera(error);
              } else if (error.stack && error.stack.match(CHROME_IE_STACK_REGEXP)) {
                  return this.parseV8OrIE(error);
              } else if (error.stack) {
                  return this.parseFFOrSafari(error);
              } else {
                  throw new Error('Cannot parse given Error object');
              }
          },

          // Separate line and column numbers from a string of the form: (URI:Line:Column)
          extractLocation: function ErrorStackParser$$extractLocation(urlLike) {
              // Fail-fast but return locations like "(native)"
              if (urlLike.indexOf(':') === -1) {
                  return [urlLike];
              }

              var regExp = /(.+?)(?:\:(\d+))?(?:\:(\d+))?$/;
              var parts = regExp.exec(urlLike.replace(/[\(\)]/g, ''));
              return [parts[1], parts[2] || undefined, parts[3] || undefined];
          },

          parseV8OrIE: function ErrorStackParser$$parseV8OrIE(error) {
              var filtered = _filter(error.stack.split('\n'), function(line) {
                  return !!line.match(CHROME_IE_STACK_REGEXP);
              }, this);

              return _map(filtered, function(line) {
                  if (line.indexOf('(eval ') > -1) {
                      // Throw away eval information until we implement stacktrace.js/stackframe#8
                      line = line.replace(/eval code/g, 'eval').replace(/(\(eval at [^\()]*)|(\)\,.*$)/g, '');
                  }
                  var tokens = line.replace(/^\s+/, '').replace(/\(eval code/g, '(').split(/\s+/).slice(1);
                  var locationParts = this.extractLocation(tokens.pop());
                  var functionName = tokens.join(' ') || undefined;
                  var fileName = _indexOf(['eval', '<anonymous>'], locationParts[0]) > -1 ? undefined : locationParts[0];

                  return new StackFrame(functionName, undefined, fileName, locationParts[1], locationParts[2], line);
              }, this);
          },

          parseFFOrSafari: function ErrorStackParser$$parseFFOrSafari(error) {
              var filtered = _filter(error.stack.split('\n'), function(line) {
                  return !line.match(SAFARI_NATIVE_CODE_REGEXP);
              }, this);

              return _map(filtered, function(line) {
                  // Throw away eval information until we implement stacktrace.js/stackframe#8
                  if (line.indexOf(' > eval') > -1) {
                      line = line.replace(/ line (\d+)(?: > eval line \d+)* > eval\:\d+\:\d+/g, ':$1');
                  }

                  if (line.indexOf('@') === -1 && line.indexOf(':') === -1) {
                      // Safari eval frames only have function names and nothing else
                      return new StackFrame(line);
                  } else {
                      var tokens = line.split('@');
                      var locationParts = this.extractLocation(tokens.pop());
                      var functionName = tokens.join('@') || undefined;
                      return new StackFrame(functionName,
                          undefined,
                          locationParts[0],
                          locationParts[1],
                          locationParts[2],
                          line);
                  }
              }, this);
          },

          parseOpera: function ErrorStackParser$$parseOpera(e) {
              if (!e.stacktrace || (e.message.indexOf('\n') > -1 &&
                  e.message.split('\n').length > e.stacktrace.split('\n').length)) {
                  return this.parseOpera9(e);
              } else if (!e.stack) {
                  return this.parseOpera10(e);
              } else {
                  return this.parseOpera11(e);
              }
          },

          parseOpera9: function ErrorStackParser$$parseOpera9(e) {
              var lineRE = /Line (\d+).*script (?:in )?(\S+)/i;
              var lines = e.message.split('\n');
              var result = [];

              for (var i = 2, len = lines.length; i < len; i += 2) {
                  var match = lineRE.exec(lines[i]);
                  if (match) {
                      result.push(new StackFrame(undefined, undefined, match[2], match[1], undefined, lines[i]));
                  }
              }

              return result;
          },

          parseOpera10: function ErrorStackParser$$parseOpera10(e) {
              var lineRE = /Line (\d+).*script (?:in )?(\S+)(?:: In function (\S+))?$/i;
              var lines = e.stacktrace.split('\n');
              var result = [];

              for (var i = 0, len = lines.length; i < len; i += 2) {
                  var match = lineRE.exec(lines[i]);
                  if (match) {
                      result.push(
                          new StackFrame(
                              match[3] || undefined,
                              undefined,
                              match[2],
                              match[1],
                              undefined,
                              lines[i]
                          )
                      );
                  }
              }

              return result;
          },

          // Opera 10.65+ Error.stack very similar to FF/Safari
          parseOpera11: function ErrorStackParser$$parseOpera11(error) {
              var filtered = _filter(error.stack.split('\n'), function(line) {
                  return !!line.match(FIREFOX_SAFARI_STACK_REGEXP) && !line.match(/^Error created at/);
              }, this);

              return _map(filtered, function(line) {
                  var tokens = line.split('@');
                  var locationParts = this.extractLocation(tokens.pop());
                  var functionCall = (tokens.shift() || '');
                  var functionName = functionCall
                          .replace(/<anonymous function(: (\w+))?>/, '$2')
                          .replace(/\([^\)]*\)/g, '') || undefined;
                  var argsRaw;
                  if (functionCall.match(/\(([^\)]*)\)/)) {
                      argsRaw = functionCall.replace(/^[^\(]+\(([^\)]*)\)$/, '$1');
                  }
                  var args = (argsRaw === undefined || argsRaw === '[arguments not available]') ?
                      undefined : argsRaw.split(',');
                  return new StackFrame(
                      functionName,
                      args,
                      locationParts[0],
                      locationParts[1],
                      locationParts[2],
                      line);
              }, this);
          }
      };
  }));



/***/ },
/* 616 */
/***/ function(module, exports, __webpack_require__) {

  var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (root, factory) {
      'use strict';
      // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.

      /* istanbul ignore next */
      if (true) {
          !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
      } else if (typeof exports === 'object') {
          module.exports = factory();
      } else {
          root.StackFrame = factory();
      }
  }(this, function () {
      'use strict';
      function _isNumber(n) {
          return !isNaN(parseFloat(n)) && isFinite(n);
      }

      function StackFrame(functionName, args, fileName, lineNumber, columnNumber, source) {
          if (functionName !== undefined) {
              this.setFunctionName(functionName);
          }
          if (args !== undefined) {
              this.setArgs(args);
          }
          if (fileName !== undefined) {
              this.setFileName(fileName);
          }
          if (lineNumber !== undefined) {
              this.setLineNumber(lineNumber);
          }
          if (columnNumber !== undefined) {
              this.setColumnNumber(columnNumber);
          }
          if (source !== undefined) {
              this.setSource(source);
          }
      }

      StackFrame.prototype = {
          getFunctionName: function () {
              return this.functionName;
          },
          setFunctionName: function (v) {
              this.functionName = String(v);
          },

          getArgs: function () {
              return this.args;
          },
          setArgs: function (v) {
              if (Object.prototype.toString.call(v) !== '[object Array]') {
                  throw new TypeError('Args must be an Array');
              }
              this.args = v;
          },

          // NOTE: Property name may be misleading as it includes the path,
          // but it somewhat mirrors V8's JavaScriptStackTraceApi
          // https://code.google.com/p/v8/wiki/JavaScriptStackTraceApi and Gecko's
          // http://mxr.mozilla.org/mozilla-central/source/xpcom/base/nsIException.idl#14
          getFileName: function () {
              return this.fileName;
          },
          setFileName: function (v) {
              this.fileName = String(v);
          },

          getLineNumber: function () {
              return this.lineNumber;
          },
          setLineNumber: function (v) {
              if (!_isNumber(v)) {
                  throw new TypeError('Line Number must be a Number');
              }
              this.lineNumber = Number(v);
          },

          getColumnNumber: function () {
              return this.columnNumber;
          },
          setColumnNumber: function (v) {
              if (!_isNumber(v)) {
                  throw new TypeError('Column Number must be a Number');
              }
              this.columnNumber = Number(v);
          },

          getSource: function () {
              return this.source;
          },
          setSource: function (v) {
              this.source = String(v);
          },

          toString: function() {
              var functionName = this.getFunctionName() || '{anonymous}';
              var args = '(' + (this.getArgs() || []).join(',') + ')';
              var fileName = this.getFileName() ? ('@' + this.getFileName()) : '';
              var lineNumber = _isNumber(this.getLineNumber()) ? (':' + this.getLineNumber()) : '';
              var columnNumber = _isNumber(this.getColumnNumber()) ? (':' + this.getColumnNumber()) : '';
              return functionName + args + fileName + lineNumber + columnNumber;
          }
      };

      return StackFrame;
  }));


/***/ },
/* 617 */
/***/ function(module, exports) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

  var filenameWithoutLoaders = exports.filenameWithoutLoaders = function filenameWithoutLoaders() {
    var filename = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';

    var index = filename.lastIndexOf('!');

    return index < 0 ? filename : filename.substr(index + 1);
  };

  var filenameHasLoaders = exports.filenameHasLoaders = function filenameHasLoaders(filename) {
    var actualFilename = _get__('filenameWithoutLoaders')(filename);

    return actualFilename !== filename;
  };

  var filenameHasSchema = exports.filenameHasSchema = function filenameHasSchema(filename) {
    return (/^[\w]+\:/.test(filename)
    );
  };

  var isFilenameAbsolute = exports.isFilenameAbsolute = function isFilenameAbsolute(filename) {
    var actualFilename = _get__('filenameWithoutLoaders')(filename);

    if (actualFilename.indexOf('/') === 0) {
      return true;
    }

    return false;
  };

  var makeUrl = exports.makeUrl = function makeUrl(filename, scheme, line, column) {
    var actualFilename = _get__('filenameWithoutLoaders')(filename);

    if (_get__('filenameHasSchema')(filename)) {
      return actualFilename;
    }

    var url = 'file://' + actualFilename;

    if (scheme) {
      url = scheme + '://open?url=' + url;

      if (line && actualFilename === filename) {
        url = url + '&line=' + line;

        if (column) {
          url = url + '&column=' + column;
        }
      }
    }

    return url;
  };

  var makeLinkText = exports.makeLinkText = function makeLinkText(filename, line, column) {
    var text = _get__('filenameWithoutLoaders')(filename);

    if (line && text === filename) {
      text = text + ':' + line;

      if (column) {
        text = text + ':' + column;
      }
    }

    return text;
  };

  var _RewiredData__ = Object.create(null);

  var INTENTIONAL_UNDEFINED = '__INTENTIONAL_UNDEFINED__';
  var _RewireAPI__ = {};

  (function () {
    function addPropertyToAPIObject(name, value) {
      Object.defineProperty(_RewireAPI__, name, {
        value: value,
        enumerable: false,
        configurable: true
      });
    }

    addPropertyToAPIObject('__get__', _get__);
    addPropertyToAPIObject('__GetDependency__', _get__);
    addPropertyToAPIObject('__Rewire__', _set__);
    addPropertyToAPIObject('__set__', _set__);
    addPropertyToAPIObject('__reset__', _reset__);
    addPropertyToAPIObject('__ResetDependency__', _reset__);
    addPropertyToAPIObject('__with__', _with__);
  })();

  function _get__(variableName) {
    if (_RewiredData__ === undefined || _RewiredData__[variableName] === undefined) {
      return _get_original__(variableName);
    } else {
      var value = _RewiredData__[variableName];

      if (value === INTENTIONAL_UNDEFINED) {
        return undefined;
      } else {
        return value;
      }
    }
  }

  function _get_original__(variableName) {
    switch (variableName) {
      case 'filenameWithoutLoaders':
        return filenameWithoutLoaders;

      case 'filenameHasSchema':
        return filenameHasSchema;
    }

    return undefined;
  }

  function _assign__(variableName, value) {
    if (_RewiredData__ === undefined || _RewiredData__[variableName] === undefined) {
      return _set_original__(variableName, value);
    } else {
      return _RewiredData__[variableName] = value;
    }
  }

  function _set_original__(variableName, _value) {
    switch (variableName) {}

    return undefined;
  }

  function _update_operation__(operation, variableName, prefix) {
    var oldValue = _get__(variableName);

    var newValue = operation === '++' ? oldValue + 1 : oldValue - 1;

    _assign__(variableName, newValue);

    return prefix ? newValue : oldValue;
  }

  function _set__(variableName, value) {
    if ((typeof variableName === 'undefined' ? 'undefined' : _typeof(variableName)) === 'object') {
      Object.keys(variableName).forEach(function (name) {
        _RewiredData__[name] = variableName[name];
      });
    } else {
      if (value === undefined) {
        _RewiredData__[variableName] = INTENTIONAL_UNDEFINED;
      } else {
        _RewiredData__[variableName] = value;
      }

      return function () {
        _reset__(variableName);
      };
    }
  }

  function _reset__(variableName) {
    delete _RewiredData__[variableName];
  }

  function _with__(object) {
    var rewiredVariableNames = Object.keys(object);
    var previousValues = {};

    function reset() {
      rewiredVariableNames.forEach(function (variableName) {
        _RewiredData__[variableName] = previousValues[variableName];
      });
    }

    return function (callback) {
      rewiredVariableNames.forEach(function (variableName) {
        previousValues[variableName] = _RewiredData__[variableName];
        _RewiredData__[variableName] = object[variableName];
      });
      var result = callback();

      if (!!result && typeof result.then == 'function') {
        result.then(reset).catch(reset);
      } else {
        reset();
      }

      return result;
    };
  }

  exports.__get__ = _get__;
  exports.__GetDependency__ = _get__;
  exports.__Rewire__ = _set__;
  exports.__set__ = _set__;
  exports.__ResetDependency__ = _reset__;
  exports.__RewireAPI__ = _RewireAPI__;
  exports.default = _RewireAPI__;

/***/ },
/* 618 */
/***/ function(module, exports) {

  'use strict';

  exports.__esModule = true;
  exports['default'] = deepForceUpdate;
  function traverseRenderedChildren(internalInstance, callback, argument) {
    callback(internalInstance, argument);

    if (internalInstance._renderedComponent) {
      traverseRenderedChildren(internalInstance._renderedComponent, callback, argument);
    } else {
      for (var key in internalInstance._renderedChildren) {
        if (internalInstance._renderedChildren.hasOwnProperty(key)) {
          traverseRenderedChildren(internalInstance._renderedChildren[key], callback, argument);
        }
      }
    }
  }

  function setPendingForceUpdate(internalInstance) {
    if (internalInstance._pendingForceUpdate === false) {
      internalInstance._pendingForceUpdate = true;
    }
  }

  function forceUpdateIfPending(internalInstance) {
    if (internalInstance._pendingForceUpdate === true) {
      var publicInstance = internalInstance._instance;
      var updater = publicInstance.updater;

      if (typeof publicInstance.forceUpdate === 'function') {
        publicInstance.forceUpdate();
      } else if (updater && typeof updater.enqueueForceUpdate === 'function') {
        updater.enqueueForceUpdate(publicInstance);
      }
    }
  }

  function deepForceUpdate(instance) {
    var internalInstance = instance._reactInternalInstance;
    traverseRenderedChildren(internalInstance, setPendingForceUpdate);
    traverseRenderedChildren(internalInstance, forceUpdateIfPending);
  }

  module.exports = exports['default'];

/***/ },
/* 619 */,
/* 620 */,
/* 621 */,
/* 622 */,
/* 623 */
/***/ function(module, exports, __webpack_require__) {

  "use strict";

  exports.__esModule = true;

  var _assign = __webpack_require__(563);

  var _assign2 = _interopRequireDefault(_assign);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  exports.default = _assign2.default || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

/***/ },
/* 624 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _Confirm = __webpack_require__(625);

  Object.defineProperty(exports, 'Confirm', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_Confirm).default;
    }
  });

  var _Portal = __webpack_require__(945);

  Object.defineProperty(exports, 'Portal', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_Portal).default;
    }
  });

  var _Radio = __webpack_require__(967);

  Object.defineProperty(exports, 'Radio', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_Radio).default;
    }
  });

  var _Select = __webpack_require__(971);

  Object.defineProperty(exports, 'Select', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_Select).default;
    }
  });

  var _TextArea = __webpack_require__(993);

  Object.defineProperty(exports, 'TextArea', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_TextArea).default;
    }
  });

  var _Breadcrumb = __webpack_require__(995);

  Object.defineProperty(exports, 'Breadcrumb', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_Breadcrumb).default;
    }
  });

  var _BreadcrumbDivider = __webpack_require__(997);

  Object.defineProperty(exports, 'BreadcrumbDivider', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_BreadcrumbDivider).default;
    }
  });

  var _BreadcrumbSection = __webpack_require__(998);

  Object.defineProperty(exports, 'BreadcrumbSection', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_BreadcrumbSection).default;
    }
  });

  var _Form = __webpack_require__(999);

  Object.defineProperty(exports, 'Form', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_Form).default;
    }
  });

  var _FormButton = __webpack_require__(1001);

  Object.defineProperty(exports, 'FormButton', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_FormButton).default;
    }
  });

  var _FormCheckbox = __webpack_require__(1003);

  Object.defineProperty(exports, 'FormCheckbox', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_FormCheckbox).default;
    }
  });

  var _FormDropdown = __webpack_require__(1004);

  Object.defineProperty(exports, 'FormDropdown', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_FormDropdown).default;
    }
  });

  var _FormField = __webpack_require__(1002);

  Object.defineProperty(exports, 'FormField', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_FormField).default;
    }
  });

  var _FormGroup = __webpack_require__(1005);

  Object.defineProperty(exports, 'FormGroup', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_FormGroup).default;
    }
  });

  var _FormInput = __webpack_require__(1006);

  Object.defineProperty(exports, 'FormInput', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_FormInput).default;
    }
  });

  var _FormRadio = __webpack_require__(1009);

  Object.defineProperty(exports, 'FormRadio', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_FormRadio).default;
    }
  });

  var _FormSelect = __webpack_require__(1010);

  Object.defineProperty(exports, 'FormSelect', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_FormSelect).default;
    }
  });

  var _FormTextArea = __webpack_require__(1011);

  Object.defineProperty(exports, 'FormTextArea', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_FormTextArea).default;
    }
  });

  var _Grid = __webpack_require__(1012);

  Object.defineProperty(exports, 'Grid', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_Grid).default;
    }
  });

  var _GridColumn = __webpack_require__(1014);

  Object.defineProperty(exports, 'GridColumn', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_GridColumn).default;
    }
  });

  var _GridRow = __webpack_require__(1015);

  Object.defineProperty(exports, 'GridRow', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_GridRow).default;
    }
  });

  var _Menu = __webpack_require__(1016);

  Object.defineProperty(exports, 'Menu', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_Menu).default;
    }
  });

  var _MenuHeader = __webpack_require__(1018);

  Object.defineProperty(exports, 'MenuHeader', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_MenuHeader).default;
    }
  });

  var _MenuItem = __webpack_require__(1019);

  Object.defineProperty(exports, 'MenuItem', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_MenuItem).default;
    }
  });

  var _MenuMenu = __webpack_require__(1036);

  Object.defineProperty(exports, 'MenuMenu', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_MenuMenu).default;
    }
  });

  var _Message = __webpack_require__(1037);

  Object.defineProperty(exports, 'Message', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_Message).default;
    }
  });

  var _MessageContent = __webpack_require__(1039);

  Object.defineProperty(exports, 'MessageContent', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_MessageContent).default;
    }
  });

  var _MessageHeader = __webpack_require__(1040);

  Object.defineProperty(exports, 'MessageHeader', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_MessageHeader).default;
    }
  });

  var _MessageItem = __webpack_require__(1042);

  Object.defineProperty(exports, 'MessageItem', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_MessageItem).default;
    }
  });

  var _MessageList = __webpack_require__(1041);

  Object.defineProperty(exports, 'MessageList', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_MessageList).default;
    }
  });

  var _Table = __webpack_require__(1043);

  Object.defineProperty(exports, 'Table', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_Table).default;
    }
  });

  var _TableBody = __webpack_require__(1045);

  Object.defineProperty(exports, 'TableBody', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_TableBody).default;
    }
  });

  var _TableCell = __webpack_require__(1046);

  Object.defineProperty(exports, 'TableCell', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_TableCell).default;
    }
  });

  var _TableFooter = __webpack_require__(1047);

  Object.defineProperty(exports, 'TableFooter', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_TableFooter).default;
    }
  });

  var _TableHeader = __webpack_require__(1048);

  Object.defineProperty(exports, 'TableHeader', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_TableHeader).default;
    }
  });

  var _TableHeaderCell = __webpack_require__(1049);

  Object.defineProperty(exports, 'TableHeaderCell', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_TableHeaderCell).default;
    }
  });

  var _TableRow = __webpack_require__(1050);

  Object.defineProperty(exports, 'TableRow', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_TableRow).default;
    }
  });

  var _Button = __webpack_require__(937);

  Object.defineProperty(exports, 'Button', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_Button).default;
    }
  });

  var _ButtonContent = __webpack_require__(955);

  Object.defineProperty(exports, 'ButtonContent', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_ButtonContent).default;
    }
  });

  var _ButtonGroup = __webpack_require__(956);

  Object.defineProperty(exports, 'ButtonGroup', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_ButtonGroup).default;
    }
  });

  var _ButtonOr = __webpack_require__(957);

  Object.defineProperty(exports, 'ButtonOr', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_ButtonOr).default;
    }
  });

  var _Container = __webpack_require__(1051);

  Object.defineProperty(exports, 'Container', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_Container).default;
    }
  });

  var _Divider = __webpack_require__(1053);

  Object.defineProperty(exports, 'Divider', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_Divider).default;
    }
  });

  var _Flag = __webpack_require__(988);

  Object.defineProperty(exports, 'Flag', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_Flag).default;
    }
  });

  var _Header = __webpack_require__(1055);

  Object.defineProperty(exports, 'Header', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_Header).default;
    }
  });

  var _HeaderContent = __webpack_require__(1058);

  Object.defineProperty(exports, 'HeaderContent', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_HeaderContent).default;
    }
  });

  var _HeaderSubheader = __webpack_require__(1057);

  Object.defineProperty(exports, 'HeaderSubheader', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_HeaderSubheader).default;
    }
  });

  var _Icon = __webpack_require__(966);

  Object.defineProperty(exports, 'Icon', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_Icon).default;
    }
  });

  var _IconGroup = __webpack_require__(940);

  Object.defineProperty(exports, 'IconGroup', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_IconGroup).default;
    }
  });

  var _Image = __webpack_require__(990);

  Object.defineProperty(exports, 'Image', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_Image).default;
    }
  });

  var _ImageGroup = __webpack_require__(952);

  Object.defineProperty(exports, 'ImageGroup', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_ImageGroup).default;
    }
  });

  var _Input = __webpack_require__(1007);

  Object.defineProperty(exports, 'Input', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_Input).default;
    }
  });

  var _Label = __webpack_require__(985);

  Object.defineProperty(exports, 'Label', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_Label).default;
    }
  });

  var _LabelDetail = __webpack_require__(953);

  Object.defineProperty(exports, 'LabelDetail', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_LabelDetail).default;
    }
  });

  var _LabelGroup = __webpack_require__(954);

  Object.defineProperty(exports, 'LabelGroup', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_LabelGroup).default;
    }
  });

  var _List = __webpack_require__(1059);

  Object.defineProperty(exports, 'List', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_List).default;
    }
  });

  var _ListContent = __webpack_require__(1061);

  Object.defineProperty(exports, 'ListContent', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_ListContent).default;
    }
  });

  var _ListDescription = __webpack_require__(1062);

  Object.defineProperty(exports, 'ListDescription', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_ListDescription).default;
    }
  });

  var _ListHeader = __webpack_require__(1063);

  Object.defineProperty(exports, 'ListHeader', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_ListHeader).default;
    }
  });

  var _ListIcon = __webpack_require__(1064);

  Object.defineProperty(exports, 'ListIcon', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_ListIcon).default;
    }
  });

  var _ListItem = __webpack_require__(1065);

  Object.defineProperty(exports, 'ListItem', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_ListItem).default;
    }
  });

  var _ListList = __webpack_require__(1066);

  Object.defineProperty(exports, 'ListList', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_ListList).default;
    }
  });

  var _Loader = __webpack_require__(1067);

  Object.defineProperty(exports, 'Loader', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_Loader).default;
    }
  });

  var _Rail = __webpack_require__(1069);

  Object.defineProperty(exports, 'Rail', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_Rail).default;
    }
  });

  var _Reveal = __webpack_require__(1071);

  Object.defineProperty(exports, 'Reveal', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_Reveal).default;
    }
  });

  var _RevealContent = __webpack_require__(1073);

  Object.defineProperty(exports, 'RevealContent', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_RevealContent).default;
    }
  });

  var _Segment = __webpack_require__(1074);

  Object.defineProperty(exports, 'Segment', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_Segment).default;
    }
  });

  var _SegmentGroup = __webpack_require__(1076);

  Object.defineProperty(exports, 'SegmentGroup', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_SegmentGroup).default;
    }
  });

  var _Step = __webpack_require__(1077);

  Object.defineProperty(exports, 'Step', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_Step).default;
    }
  });

  var _StepContent = __webpack_require__(1079);

  Object.defineProperty(exports, 'StepContent', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_StepContent).default;
    }
  });

  var _StepDescription = __webpack_require__(1080);

  Object.defineProperty(exports, 'StepDescription', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_StepDescription).default;
    }
  });

  var _StepGroup = __webpack_require__(1082);

  Object.defineProperty(exports, 'StepGroup', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_StepGroup).default;
    }
  });

  var _StepTitle = __webpack_require__(1081);

  Object.defineProperty(exports, 'StepTitle', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_StepTitle).default;
    }
  });

  var _Accordion = __webpack_require__(1083);

  Object.defineProperty(exports, 'Accordion', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_Accordion).default;
    }
  });

  var _AccordionContent = __webpack_require__(1084);

  Object.defineProperty(exports, 'AccordionContent', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_AccordionContent).default;
    }
  });

  var _AccordionTitle = __webpack_require__(1085);

  Object.defineProperty(exports, 'AccordionTitle', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_AccordionTitle).default;
    }
  });

  var _Checkbox = __webpack_require__(969);

  Object.defineProperty(exports, 'Checkbox', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_Checkbox).default;
    }
  });

  var _Dimmer = __webpack_require__(943);

  Object.defineProperty(exports, 'Dimmer', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_Dimmer).default;
    }
  });

  var _DimmerDimmable = __webpack_require__(951);

  Object.defineProperty(exports, 'DimmerDimmable', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_DimmerDimmable).default;
    }
  });

  var _Dropdown = __webpack_require__(973);

  Object.defineProperty(exports, 'Dropdown', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_Dropdown).default;
    }
  });

  var _DropdownDivider = __webpack_require__(986);

  Object.defineProperty(exports, 'DropdownDivider', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_DropdownDivider).default;
    }
  });

  var _DropdownHeader = __webpack_require__(991);

  Object.defineProperty(exports, 'DropdownHeader', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_DropdownHeader).default;
    }
  });

  var _DropdownItem = __webpack_require__(987);

  Object.defineProperty(exports, 'DropdownItem', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_DropdownItem).default;
    }
  });

  var _DropdownMenu = __webpack_require__(992);

  Object.defineProperty(exports, 'DropdownMenu', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_DropdownMenu).default;
    }
  });

  var _Embed = __webpack_require__(1086);

  Object.defineProperty(exports, 'Embed', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_Embed).default;
    }
  });

  var _Modal = __webpack_require__(958);

  Object.defineProperty(exports, 'Modal', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_Modal).default;
    }
  });

  var _ModalActions = __webpack_require__(964);

  Object.defineProperty(exports, 'ModalActions', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_ModalActions).default;
    }
  });

  var _ModalContent = __webpack_require__(963);

  Object.defineProperty(exports, 'ModalContent', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_ModalContent).default;
    }
  });

  var _ModalDescription = __webpack_require__(965);

  Object.defineProperty(exports, 'ModalDescription', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_ModalDescription).default;
    }
  });

  var _ModalHeader = __webpack_require__(962);

  Object.defineProperty(exports, 'ModalHeader', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_ModalHeader).default;
    }
  });

  var _Popup = __webpack_require__(1088);

  Object.defineProperty(exports, 'Popup', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_Popup).default;
    }
  });

  var _PopupContent = __webpack_require__(1093);

  Object.defineProperty(exports, 'PopupContent', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_PopupContent).default;
    }
  });

  var _PopupHeader = __webpack_require__(1094);

  Object.defineProperty(exports, 'PopupHeader', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_PopupHeader).default;
    }
  });

  var _Progress = __webpack_require__(1095);

  Object.defineProperty(exports, 'Progress', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_Progress).default;
    }
  });

  var _Rating = __webpack_require__(1100);

  Object.defineProperty(exports, 'Rating', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_Rating).default;
    }
  });

  var _RatingIcon = __webpack_require__(1102);

  Object.defineProperty(exports, 'RatingIcon', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_RatingIcon).default;
    }
  });

  var _Search = __webpack_require__(1103);

  Object.defineProperty(exports, 'Search', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_Search).default;
    }
  });

  var _SearchCategory = __webpack_require__(1108);

  Object.defineProperty(exports, 'SearchCategory', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_SearchCategory).default;
    }
  });

  var _SearchResult = __webpack_require__(1109);

  Object.defineProperty(exports, 'SearchResult', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_SearchResult).default;
    }
  });

  var _SearchResults = __webpack_require__(1110);

  Object.defineProperty(exports, 'SearchResults', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_SearchResults).default;
    }
  });

  var _Sidebar = __webpack_require__(1111);

  Object.defineProperty(exports, 'Sidebar', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_Sidebar).default;
    }
  });

  var _SidebarPushable = __webpack_require__(1113);

  Object.defineProperty(exports, 'SidebarPushable', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_SidebarPushable).default;
    }
  });

  var _SidebarPusher = __webpack_require__(1114);

  Object.defineProperty(exports, 'SidebarPusher', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_SidebarPusher).default;
    }
  });

  var _Card = __webpack_require__(1115);

  Object.defineProperty(exports, 'Card', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_Card).default;
    }
  });

  var _CardContent = __webpack_require__(1116);

  Object.defineProperty(exports, 'CardContent', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_CardContent).default;
    }
  });

  var _CardDescription = __webpack_require__(1117);

  Object.defineProperty(exports, 'CardDescription', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_CardDescription).default;
    }
  });

  var _CardGroup = __webpack_require__(1120);

  Object.defineProperty(exports, 'CardGroup', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_CardGroup).default;
    }
  });

  var _CardHeader = __webpack_require__(1118);

  Object.defineProperty(exports, 'CardHeader', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_CardHeader).default;
    }
  });

  var _CardMeta = __webpack_require__(1119);

  Object.defineProperty(exports, 'CardMeta', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_CardMeta).default;
    }
  });

  var _Comment = __webpack_require__(1121);

  Object.defineProperty(exports, 'Comment', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_Comment).default;
    }
  });

  var _CommentAction = __webpack_require__(1123);

  Object.defineProperty(exports, 'CommentAction', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_CommentAction).default;
    }
  });

  var _CommentActions = __webpack_require__(1124);

  Object.defineProperty(exports, 'CommentActions', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_CommentActions).default;
    }
  });

  var _CommentAuthor = __webpack_require__(1125);

  Object.defineProperty(exports, 'CommentAuthor', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_CommentAuthor).default;
    }
  });

  var _CommentAvatar = __webpack_require__(1126);

  Object.defineProperty(exports, 'CommentAvatar', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_CommentAvatar).default;
    }
  });

  var _CommentContent = __webpack_require__(1127);

  Object.defineProperty(exports, 'CommentContent', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_CommentContent).default;
    }
  });

  var _CommentGroup = __webpack_require__(1128);

  Object.defineProperty(exports, 'CommentGroup', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_CommentGroup).default;
    }
  });

  var _CommentMetadata = __webpack_require__(1129);

  Object.defineProperty(exports, 'CommentMetadata', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_CommentMetadata).default;
    }
  });

  var _CommentText = __webpack_require__(1130);

  Object.defineProperty(exports, 'CommentText', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_CommentText).default;
    }
  });

  var _Feed = __webpack_require__(1131);

  Object.defineProperty(exports, 'Feed', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_Feed).default;
    }
  });

  var _FeedContent = __webpack_require__(1133);

  Object.defineProperty(exports, 'FeedContent', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_FeedContent).default;
    }
  });

  var _FeedDate = __webpack_require__(1134);

  Object.defineProperty(exports, 'FeedDate', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_FeedDate).default;
    }
  });

  var _FeedEvent = __webpack_require__(1140);

  Object.defineProperty(exports, 'FeedEvent', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_FeedEvent).default;
    }
  });

  var _FeedExtra = __webpack_require__(1135);

  Object.defineProperty(exports, 'FeedExtra', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_FeedExtra).default;
    }
  });

  var _FeedLabel = __webpack_require__(1141);

  Object.defineProperty(exports, 'FeedLabel', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_FeedLabel).default;
    }
  });

  var _FeedLike = __webpack_require__(1137);

  Object.defineProperty(exports, 'FeedLike', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_FeedLike).default;
    }
  });

  var _FeedMeta = __webpack_require__(1136);

  Object.defineProperty(exports, 'FeedMeta', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_FeedMeta).default;
    }
  });

  var _FeedSummary = __webpack_require__(1138);

  Object.defineProperty(exports, 'FeedSummary', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_FeedSummary).default;
    }
  });

  var _FeedUser = __webpack_require__(1139);

  Object.defineProperty(exports, 'FeedUser', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_FeedUser).default;
    }
  });

  var _Item = __webpack_require__(1142);

  Object.defineProperty(exports, 'Item', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_Item).default;
    }
  });

  var _ItemContent = __webpack_require__(1144);

  Object.defineProperty(exports, 'ItemContent', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_ItemContent).default;
    }
  });

  var _ItemDescription = __webpack_require__(1146);

  Object.defineProperty(exports, 'ItemDescription', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_ItemDescription).default;
    }
  });

  var _ItemExtra = __webpack_require__(1147);

  Object.defineProperty(exports, 'ItemExtra', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_ItemExtra).default;
    }
  });

  var _ItemGroup = __webpack_require__(1149);

  Object.defineProperty(exports, 'ItemGroup', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_ItemGroup).default;
    }
  });

  var _ItemHeader = __webpack_require__(1145);

  Object.defineProperty(exports, 'ItemHeader', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_ItemHeader).default;
    }
  });

  var _ItemImage = __webpack_require__(1150);

  Object.defineProperty(exports, 'ItemImage', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_ItemImage).default;
    }
  });

  var _ItemMeta = __webpack_require__(1148);

  Object.defineProperty(exports, 'ItemMeta', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_ItemMeta).default;
    }
  });

  var _Statistic = __webpack_require__(1151);

  Object.defineProperty(exports, 'Statistic', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_Statistic).default;
    }
  });

  var _StatisticGroup = __webpack_require__(1153);

  Object.defineProperty(exports, 'StatisticGroup', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_StatisticGroup).default;
    }
  });

  var _StatisticLabel = __webpack_require__(1154);

  Object.defineProperty(exports, 'StatisticLabel', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_StatisticLabel).default;
    }
  });

  var _StatisticValue = __webpack_require__(1155);

  Object.defineProperty(exports, 'StatisticValue', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_StatisticValue).default;
    }
  });

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/***/ },
/* 625 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _Confirm = __webpack_require__(626);

  var _Confirm2 = _interopRequireDefault(_Confirm);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  exports.default = _Confirm2.default;

/***/ },
/* 626 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _has2 = __webpack_require__(627);

  var _has3 = _interopRequireDefault(_has2);

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _lib = __webpack_require__(684);

  var _Button = __webpack_require__(936);

  var _Button2 = _interopRequireDefault(_Button);

  var _Modal = __webpack_require__(958);

  var _Modal2 = _interopRequireDefault(_Modal);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  /**
   * A Confirm modal gives the user a choice to confirm or cancel an action
   * @see Modal
   */
  function Confirm(props) {
    var open = props.open,
        cancelButton = props.cancelButton,
        confirmButton = props.confirmButton,
        header = props.header,
        content = props.content,
        onConfirm = props.onConfirm,
        onCancel = props.onCancel;

    var rest = (0, _lib.getUnhandledProps)(Confirm, props);

    // `open` is auto controlled by the Modal
    // It cannot be present (even undefined) with `defaultOpen`
    // only apply it if the user provided an open prop
    var openProp = {};
    if ((0, _has3.default)(props, 'open')) openProp.open = open;

    return _react2.default.createElement(
      _Modal2.default,
      _extends({}, openProp, { size: 'small', onClose: onCancel }, rest),
      header && _react2.default.createElement(
        _Modal2.default.Header,
        null,
        header
      ),
      content && _react2.default.createElement(
        _Modal2.default.Content,
        null,
        content
      ),
      _react2.default.createElement(
        _Modal2.default.Actions,
        null,
        _react2.default.createElement(
          _Button2.default,
          { onClick: onCancel },
          cancelButton
        ),
        _react2.default.createElement(
          _Button2.default,
          { primary: true, onClick: onConfirm },
          confirmButton
        )
      )
    );
  }

  Confirm._meta = {
    name: 'Confirm',
    type: _lib.META.TYPES.ADDON
  };

  Confirm.propTypes = {
    /** Whether or not the modal is visible */
    open: _react.PropTypes.bool,

    /** The cancel button text */
    cancelButton: _react.PropTypes.string,

    /** The OK button text */
    confirmButton: _react.PropTypes.string,

    /** The ModalHeader text */
    header: _react.PropTypes.string,

    /** The ModalContent text. */
    content: _react.PropTypes.string,

    /** Called when the OK button is clicked */
    onConfirm: _react.PropTypes.func,

    /** Called when the Cancel button is clicked */
    onCancel: _react.PropTypes.func
  };

  Confirm.defaultProps = {
    cancelButton: 'Cancel',
    confirmButton: 'OK',
    content: 'Are you sure?'
  };

  exports.default = Confirm;

/***/ },
/* 627 */
/***/ function(module, exports, __webpack_require__) {

  var baseHas = __webpack_require__(628),
      hasPath = __webpack_require__(629);

  /**
   * Checks if `path` is a direct property of `object`.
   *
   * @static
   * @since 0.1.0
   * @memberOf _
   * @category Object
   * @param {Object} object The object to query.
   * @param {Array|string} path The path to check.
   * @returns {boolean} Returns `true` if `path` exists, else `false`.
   * @example
   *
   * var object = { 'a': { 'b': 2 } };
   * var other = _.create({ 'a': _.create({ 'b': 2 }) });
   *
   * _.has(object, 'a');
   * // => true
   *
   * _.has(object, 'a.b');
   * // => true
   *
   * _.has(object, ['a', 'b']);
   * // => true
   *
   * _.has(other, 'a');
   * // => false
   */
  function has(object, path) {
    return object != null && hasPath(object, path, baseHas);
  }

  module.exports = has;


/***/ },
/* 628 */
/***/ function(module, exports) {

  /** Used for built-in method references. */
  var objectProto = Object.prototype;

  /** Used to check objects for own properties. */
  var hasOwnProperty = objectProto.hasOwnProperty;

  /**
   * The base implementation of `_.has` without support for deep paths.
   *
   * @private
   * @param {Object} [object] The object to query.
   * @param {Array|string} key The key to check.
   * @returns {boolean} Returns `true` if `key` exists, else `false`.
   */
  function baseHas(object, key) {
    return object != null && hasOwnProperty.call(object, key);
  }

  module.exports = baseHas;


/***/ },
/* 629 */
/***/ function(module, exports, __webpack_require__) {

  var castPath = __webpack_require__(630),
      isArguments = __webpack_require__(679),
      isArray = __webpack_require__(631),
      isIndex = __webpack_require__(681),
      isLength = __webpack_require__(682),
      toKey = __webpack_require__(683);

  /**
   * Checks if `path` exists on `object`.
   *
   * @private
   * @param {Object} object The object to query.
   * @param {Array|string} path The path to check.
   * @param {Function} hasFunc The function to check properties.
   * @returns {boolean} Returns `true` if `path` exists, else `false`.
   */
  function hasPath(object, path, hasFunc) {
    path = castPath(path, object);

    var index = -1,
        length = path.length,
        result = false;

    while (++index < length) {
      var key = toKey(path[index]);
      if (!(result = object != null && hasFunc(object, key))) {
        break;
      }
      object = object[key];
    }
    if (result || ++index != length) {
      return result;
    }
    length = object == null ? 0 : object.length;
    return !!length && isLength(length) && isIndex(key, length) &&
      (isArray(object) || isArguments(object));
  }

  module.exports = hasPath;


/***/ },
/* 630 */
/***/ function(module, exports, __webpack_require__) {

  var isArray = __webpack_require__(631),
      isKey = __webpack_require__(632),
      stringToPath = __webpack_require__(641),
      toString = __webpack_require__(676);

  /**
   * Casts `value` to a path array if it's not one.
   *
   * @private
   * @param {*} value The value to inspect.
   * @param {Object} [object] The object to query keys on.
   * @returns {Array} Returns the cast property path array.
   */
  function castPath(value, object) {
    if (isArray(value)) {
      return value;
    }
    return isKey(value, object) ? [value] : stringToPath(toString(value));
  }

  module.exports = castPath;


/***/ },
/* 631 */
/***/ function(module, exports) {

  /**
   * Checks if `value` is classified as an `Array` object.
   *
   * @static
   * @memberOf _
   * @since 0.1.0
   * @category Lang
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is an array, else `false`.
   * @example
   *
   * _.isArray([1, 2, 3]);
   * // => true
   *
   * _.isArray(document.body.children);
   * // => false
   *
   * _.isArray('abc');
   * // => false
   *
   * _.isArray(_.noop);
   * // => false
   */
  var isArray = Array.isArray;

  module.exports = isArray;


/***/ },
/* 632 */
/***/ function(module, exports, __webpack_require__) {

  var isArray = __webpack_require__(631),
      isSymbol = __webpack_require__(633);

  /** Used to match property names within property paths. */
  var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
      reIsPlainProp = /^\w*$/;

  /**
   * Checks if `value` is a property name and not a property path.
   *
   * @private
   * @param {*} value The value to check.
   * @param {Object} [object] The object to query keys on.
   * @returns {boolean} Returns `true` if `value` is a property name, else `false`.
   */
  function isKey(value, object) {
    if (isArray(value)) {
      return false;
    }
    var type = typeof value;
    if (type == 'number' || type == 'symbol' || type == 'boolean' ||
        value == null || isSymbol(value)) {
      return true;
    }
    return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||
      (object != null && value in Object(object));
  }

  module.exports = isKey;


/***/ },
/* 633 */
/***/ function(module, exports, __webpack_require__) {

  var baseGetTag = __webpack_require__(634),
      isObjectLike = __webpack_require__(640);

  /** `Object#toString` result references. */
  var symbolTag = '[object Symbol]';

  /**
   * Checks if `value` is classified as a `Symbol` primitive or object.
   *
   * @static
   * @memberOf _
   * @since 4.0.0
   * @category Lang
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
   * @example
   *
   * _.isSymbol(Symbol.iterator);
   * // => true
   *
   * _.isSymbol('abc');
   * // => false
   */
  function isSymbol(value) {
    return typeof value == 'symbol' ||
      (isObjectLike(value) && baseGetTag(value) == symbolTag);
  }

  module.exports = isSymbol;


/***/ },
/* 634 */
/***/ function(module, exports, __webpack_require__) {

  var Symbol = __webpack_require__(635),
      getRawTag = __webpack_require__(638),
      objectToString = __webpack_require__(639);

  /** `Object#toString` result references. */
  var nullTag = '[object Null]',
      undefinedTag = '[object Undefined]';

  /** Built-in value references. */
  var symToStringTag = Symbol ? Symbol.toStringTag : undefined;

  /**
   * The base implementation of `getTag` without fallbacks for buggy environments.
   *
   * @private
   * @param {*} value The value to query.
   * @returns {string} Returns the `toStringTag`.
   */
  function baseGetTag(value) {
    if (value == null) {
      return value === undefined ? undefinedTag : nullTag;
    }
    value = Object(value);
    return (symToStringTag && symToStringTag in value)
      ? getRawTag(value)
      : objectToString(value);
  }

  module.exports = baseGetTag;


/***/ },
/* 635 */
/***/ function(module, exports, __webpack_require__) {

  var root = __webpack_require__(636);

  /** Built-in value references. */
  var Symbol = root.Symbol;

  module.exports = Symbol;


/***/ },
/* 636 */
/***/ function(module, exports, __webpack_require__) {

  var freeGlobal = __webpack_require__(637);

  /** Detect free variable `self`. */
  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

  /** Used as a reference to the global object. */
  var root = freeGlobal || freeSelf || Function('return this')();

  module.exports = root;


/***/ },
/* 637 */
/***/ function(module, exports) {

  /* WEBPACK VAR INJECTION */(function(global) {/** Detect free variable `global` from Node.js. */
  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;

  module.exports = freeGlobal;

  /* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ },
/* 638 */
/***/ function(module, exports, __webpack_require__) {

  var Symbol = __webpack_require__(635);

  /** Used for built-in method references. */
  var objectProto = Object.prototype;

  /** Used to check objects for own properties. */
  var hasOwnProperty = objectProto.hasOwnProperty;

  /**
   * Used to resolve the
   * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
   * of values.
   */
  var nativeObjectToString = objectProto.toString;

  /** Built-in value references. */
  var symToStringTag = Symbol ? Symbol.toStringTag : undefined;

  /**
   * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
   *
   * @private
   * @param {*} value The value to query.
   * @returns {string} Returns the raw `toStringTag`.
   */
  function getRawTag(value) {
    var isOwn = hasOwnProperty.call(value, symToStringTag),
        tag = value[symToStringTag];

    try {
      value[symToStringTag] = undefined;
      var unmasked = true;
    } catch (e) {}

    var result = nativeObjectToString.call(value);
    if (unmasked) {
      if (isOwn) {
        value[symToStringTag] = tag;
      } else {
        delete value[symToStringTag];
      }
    }
    return result;
  }

  module.exports = getRawTag;


/***/ },
/* 639 */
/***/ function(module, exports) {

  /** Used for built-in method references. */
  var objectProto = Object.prototype;

  /**
   * Used to resolve the
   * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
   * of values.
   */
  var nativeObjectToString = objectProto.toString;

  /**
   * Converts `value` to a string using `Object.prototype.toString`.
   *
   * @private
   * @param {*} value The value to convert.
   * @returns {string} Returns the converted string.
   */
  function objectToString(value) {
    return nativeObjectToString.call(value);
  }

  module.exports = objectToString;


/***/ },
/* 640 */
/***/ function(module, exports) {

  /**
   * Checks if `value` is object-like. A value is object-like if it's not `null`
   * and has a `typeof` result of "object".
   *
   * @static
   * @memberOf _
   * @since 4.0.0
   * @category Lang
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
   * @example
   *
   * _.isObjectLike({});
   * // => true
   *
   * _.isObjectLike([1, 2, 3]);
   * // => true
   *
   * _.isObjectLike(_.noop);
   * // => false
   *
   * _.isObjectLike(null);
   * // => false
   */
  function isObjectLike(value) {
    return value != null && typeof value == 'object';
  }

  module.exports = isObjectLike;


/***/ },
/* 641 */
/***/ function(module, exports, __webpack_require__) {

  var memoizeCapped = __webpack_require__(642);

  /** Used to match property names within property paths. */
  var reLeadingDot = /^\./,
      rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;

  /** Used to match backslashes in property paths. */
  var reEscapeChar = /\\(\\)?/g;

  /**
   * Converts `string` to a property path array.
   *
   * @private
   * @param {string} string The string to convert.
   * @returns {Array} Returns the property path array.
   */
  var stringToPath = memoizeCapped(function(string) {
    var result = [];
    if (reLeadingDot.test(string)) {
      result.push('');
    }
    string.replace(rePropName, function(match, number, quote, string) {
      result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));
    });
    return result;
  });

  module.exports = stringToPath;


/***/ },
/* 642 */
/***/ function(module, exports, __webpack_require__) {

  var memoize = __webpack_require__(643);

  /** Used as the maximum memoize cache size. */
  var MAX_MEMOIZE_SIZE = 500;

  /**
   * A specialized version of `_.memoize` which clears the memoized function's
   * cache when it exceeds `MAX_MEMOIZE_SIZE`.
   *
   * @private
   * @param {Function} func The function to have its output memoized.
   * @returns {Function} Returns the new memoized function.
   */
  function memoizeCapped(func) {
    var result = memoize(func, function(key) {
      if (cache.size === MAX_MEMOIZE_SIZE) {
        cache.clear();
      }
      return key;
    });

    var cache = result.cache;
    return result;
  }

  module.exports = memoizeCapped;


/***/ },
/* 643 */
/***/ function(module, exports, __webpack_require__) {

  var MapCache = __webpack_require__(644);

  /** Error message constants. */
  var FUNC_ERROR_TEXT = 'Expected a function';

  /**
   * Creates a function that memoizes the result of `func`. If `resolver` is
   * provided, it determines the cache key for storing the result based on the
   * arguments provided to the memoized function. By default, the first argument
   * provided to the memoized function is used as the map cache key. The `func`
   * is invoked with the `this` binding of the memoized function.
   *
   * **Note:** The cache is exposed as the `cache` property on the memoized
   * function. Its creation may be customized by replacing the `_.memoize.Cache`
   * constructor with one whose instances implement the
   * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)
   * method interface of `clear`, `delete`, `get`, `has`, and `set`.
   *
   * @static
   * @memberOf _
   * @since 0.1.0
   * @category Function
   * @param {Function} func The function to have its output memoized.
   * @param {Function} [resolver] The function to resolve the cache key.
   * @returns {Function} Returns the new memoized function.
   * @example
   *
   * var object = { 'a': 1, 'b': 2 };
   * var other = { 'c': 3, 'd': 4 };
   *
   * var values = _.memoize(_.values);
   * values(object);
   * // => [1, 2]
   *
   * values(other);
   * // => [3, 4]
   *
   * object.a = 2;
   * values(object);
   * // => [1, 2]
   *
   * // Modify the result cache.
   * values.cache.set(object, ['a', 'b']);
   * values(object);
   * // => ['a', 'b']
   *
   * // Replace `_.memoize.Cache`.
   * _.memoize.Cache = WeakMap;
   */
  function memoize(func, resolver) {
    if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {
      throw new TypeError(FUNC_ERROR_TEXT);
    }
    var memoized = function() {
      var args = arguments,
          key = resolver ? resolver.apply(this, args) : args[0],
          cache = memoized.cache;

      if (cache.has(key)) {
        return cache.get(key);
      }
      var result = func.apply(this, args);
      memoized.cache = cache.set(key, result) || cache;
      return result;
    };
    memoized.cache = new (memoize.Cache || MapCache);
    return memoized;
  }

  // Expose `MapCache`.
  memoize.Cache = MapCache;

  module.exports = memoize;


/***/ },
/* 644 */
/***/ function(module, exports, __webpack_require__) {

  var mapCacheClear = __webpack_require__(645),
      mapCacheDelete = __webpack_require__(670),
      mapCacheGet = __webpack_require__(673),
      mapCacheHas = __webpack_require__(674),
      mapCacheSet = __webpack_require__(675);

  /**
   * Creates a map cache object to store key-value pairs.
   *
   * @private
   * @constructor
   * @param {Array} [entries] The key-value pairs to cache.
   */
  function MapCache(entries) {
    var index = -1,
        length = entries == null ? 0 : entries.length;

    this.clear();
    while (++index < length) {
      var entry = entries[index];
      this.set(entry[0], entry[1]);
    }
  }

  // Add methods to `MapCache`.
  MapCache.prototype.clear = mapCacheClear;
  MapCache.prototype['delete'] = mapCacheDelete;
  MapCache.prototype.get = mapCacheGet;
  MapCache.prototype.has = mapCacheHas;
  MapCache.prototype.set = mapCacheSet;

  module.exports = MapCache;


/***/ },
/* 645 */
/***/ function(module, exports, __webpack_require__) {

  var Hash = __webpack_require__(646),
      ListCache = __webpack_require__(661),
      Map = __webpack_require__(669);

  /**
   * Removes all key-value entries from the map.
   *
   * @private
   * @name clear
   * @memberOf MapCache
   */
  function mapCacheClear() {
    this.size = 0;
    this.__data__ = {
      'hash': new Hash,
      'map': new (Map || ListCache),
      'string': new Hash
    };
  }

  module.exports = mapCacheClear;


/***/ },
/* 646 */
/***/ function(module, exports, __webpack_require__) {

  var hashClear = __webpack_require__(647),
      hashDelete = __webpack_require__(657),
      hashGet = __webpack_require__(658),
      hashHas = __webpack_require__(659),
      hashSet = __webpack_require__(660);

  /**
   * Creates a hash object.
   *
   * @private
   * @constructor
   * @param {Array} [entries] The key-value pairs to cache.
   */
  function Hash(entries) {
    var index = -1,
        length = entries == null ? 0 : entries.length;

    this.clear();
    while (++index < length) {
      var entry = entries[index];
      this.set(entry[0], entry[1]);
    }
  }

  // Add methods to `Hash`.
  Hash.prototype.clear = hashClear;
  Hash.prototype['delete'] = hashDelete;
  Hash.prototype.get = hashGet;
  Hash.prototype.has = hashHas;
  Hash.prototype.set = hashSet;

  module.exports = Hash;


/***/ },
/* 647 */
/***/ function(module, exports, __webpack_require__) {

  var nativeCreate = __webpack_require__(648);

  /**
   * Removes all key-value entries from the hash.
   *
   * @private
   * @name clear
   * @memberOf Hash
   */
  function hashClear() {
    this.__data__ = nativeCreate ? nativeCreate(null) : {};
    this.size = 0;
  }

  module.exports = hashClear;


/***/ },
/* 648 */
/***/ function(module, exports, __webpack_require__) {

  var getNative = __webpack_require__(649);

  /* Built-in method references that are verified to be native. */
  var nativeCreate = getNative(Object, 'create');

  module.exports = nativeCreate;


/***/ },
/* 649 */
/***/ function(module, exports, __webpack_require__) {

  var baseIsNative = __webpack_require__(650),
      getValue = __webpack_require__(656);

  /**
   * Gets the native function at `key` of `object`.
   *
   * @private
   * @param {Object} object The object to query.
   * @param {string} key The key of the method to get.
   * @returns {*} Returns the function if it's native, else `undefined`.
   */
  function getNative(object, key) {
    var value = getValue(object, key);
    return baseIsNative(value) ? value : undefined;
  }

  module.exports = getNative;


/***/ },
/* 650 */
/***/ function(module, exports, __webpack_require__) {

  var isFunction = __webpack_require__(651),
      isMasked = __webpack_require__(653),
      isObject = __webpack_require__(652),
      toSource = __webpack_require__(655);

  /**
   * Used to match `RegExp`
   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
   */
  var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;

  /** Used to detect host constructors (Safari). */
  var reIsHostCtor = /^\[object .+?Constructor\]$/;

  /** Used for built-in method references. */
  var funcProto = Function.prototype,
      objectProto = Object.prototype;

  /** Used to resolve the decompiled source of functions. */
  var funcToString = funcProto.toString;

  /** Used to check objects for own properties. */
  var hasOwnProperty = objectProto.hasOwnProperty;

  /** Used to detect if a method is native. */
  var reIsNative = RegExp('^' +
    funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&')
    .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
  );

  /**
   * The base implementation of `_.isNative` without bad shim checks.
   *
   * @private
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is a native function,
   *  else `false`.
   */
  function baseIsNative(value) {
    if (!isObject(value) || isMasked(value)) {
      return false;
    }
    var pattern = isFunction(value) ? reIsNative : reIsHostCtor;
    return pattern.test(toSource(value));
  }

  module.exports = baseIsNative;


/***/ },
/* 651 */
/***/ function(module, exports, __webpack_require__) {

  var baseGetTag = __webpack_require__(634),
      isObject = __webpack_require__(652);

  /** `Object#toString` result references. */
  var asyncTag = '[object AsyncFunction]',
      funcTag = '[object Function]',
      genTag = '[object GeneratorFunction]',
      proxyTag = '[object Proxy]';

  /**
   * Checks if `value` is classified as a `Function` object.
   *
   * @static
   * @memberOf _
   * @since 0.1.0
   * @category Lang
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is a function, else `false`.
   * @example
   *
   * _.isFunction(_);
   * // => true
   *
   * _.isFunction(/abc/);
   * // => false
   */
  function isFunction(value) {
    if (!isObject(value)) {
      return false;
    }
    // The use of `Object#toString` avoids issues with the `typeof` operator
    // in Safari 9 which returns 'object' for typed arrays and other constructors.
    var tag = baseGetTag(value);
    return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
  }

  module.exports = isFunction;


/***/ },
/* 652 */
/***/ function(module, exports) {

  /**
   * Checks if `value` is the
   * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
   * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
   *
   * @static
   * @memberOf _
   * @since 0.1.0
   * @category Lang
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is an object, else `false`.
   * @example
   *
   * _.isObject({});
   * // => true
   *
   * _.isObject([1, 2, 3]);
   * // => true
   *
   * _.isObject(_.noop);
   * // => true
   *
   * _.isObject(null);
   * // => false
   */
  function isObject(value) {
    var type = typeof value;
    return value != null && (type == 'object' || type == 'function');
  }

  module.exports = isObject;


/***/ },
/* 653 */
/***/ function(module, exports, __webpack_require__) {

  var coreJsData = __webpack_require__(654);

  /** Used to detect methods masquerading as native. */
  var maskSrcKey = (function() {
    var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
    return uid ? ('Symbol(src)_1.' + uid) : '';
  }());

  /**
   * Checks if `func` has its source masked.
   *
   * @private
   * @param {Function} func The function to check.
   * @returns {boolean} Returns `true` if `func` is masked, else `false`.
   */
  function isMasked(func) {
    return !!maskSrcKey && (maskSrcKey in func);
  }

  module.exports = isMasked;


/***/ },
/* 654 */
/***/ function(module, exports, __webpack_require__) {

  var root = __webpack_require__(636);

  /** Used to detect overreaching core-js shims. */
  var coreJsData = root['__core-js_shared__'];

  module.exports = coreJsData;


/***/ },
/* 655 */
/***/ function(module, exports) {

  /** Used for built-in method references. */
  var funcProto = Function.prototype;

  /** Used to resolve the decompiled source of functions. */
  var funcToString = funcProto.toString;

  /**
   * Converts `func` to its source code.
   *
   * @private
   * @param {Function} func The function to convert.
   * @returns {string} Returns the source code.
   */
  function toSource(func) {
    if (func != null) {
      try {
        return funcToString.call(func);
      } catch (e) {}
      try {
        return (func + '');
      } catch (e) {}
    }
    return '';
  }

  module.exports = toSource;


/***/ },
/* 656 */
/***/ function(module, exports) {

  /**
   * Gets the value at `key` of `object`.
   *
   * @private
   * @param {Object} [object] The object to query.
   * @param {string} key The key of the property to get.
   * @returns {*} Returns the property value.
   */
  function getValue(object, key) {
    return object == null ? undefined : object[key];
  }

  module.exports = getValue;


/***/ },
/* 657 */
/***/ function(module, exports) {

  /**
   * Removes `key` and its value from the hash.
   *
   * @private
   * @name delete
   * @memberOf Hash
   * @param {Object} hash The hash to modify.
   * @param {string} key The key of the value to remove.
   * @returns {boolean} Returns `true` if the entry was removed, else `false`.
   */
  function hashDelete(key) {
    var result = this.has(key) && delete this.__data__[key];
    this.size -= result ? 1 : 0;
    return result;
  }

  module.exports = hashDelete;


/***/ },
/* 658 */
/***/ function(module, exports, __webpack_require__) {

  var nativeCreate = __webpack_require__(648);

  /** Used to stand-in for `undefined` hash values. */
  var HASH_UNDEFINED = '__lodash_hash_undefined__';

  /** Used for built-in method references. */
  var objectProto = Object.prototype;

  /** Used to check objects for own properties. */
  var hasOwnProperty = objectProto.hasOwnProperty;

  /**
   * Gets the hash value for `key`.
   *
   * @private
   * @name get
   * @memberOf Hash
   * @param {string} key The key of the value to get.
   * @returns {*} Returns the entry value.
   */
  function hashGet(key) {
    var data = this.__data__;
    if (nativeCreate) {
      var result = data[key];
      return result === HASH_UNDEFINED ? undefined : result;
    }
    return hasOwnProperty.call(data, key) ? data[key] : undefined;
  }

  module.exports = hashGet;


/***/ },
/* 659 */
/***/ function(module, exports, __webpack_require__) {

  var nativeCreate = __webpack_require__(648);

  /** Used for built-in method references. */
  var objectProto = Object.prototype;

  /** Used to check objects for own properties. */
  var hasOwnProperty = objectProto.hasOwnProperty;

  /**
   * Checks if a hash value for `key` exists.
   *
   * @private
   * @name has
   * @memberOf Hash
   * @param {string} key The key of the entry to check.
   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
   */
  function hashHas(key) {
    var data = this.__data__;
    return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);
  }

  module.exports = hashHas;


/***/ },
/* 660 */
/***/ function(module, exports, __webpack_require__) {

  var nativeCreate = __webpack_require__(648);

  /** Used to stand-in for `undefined` hash values. */
  var HASH_UNDEFINED = '__lodash_hash_undefined__';

  /**
   * Sets the hash `key` to `value`.
   *
   * @private
   * @name set
   * @memberOf Hash
   * @param {string} key The key of the value to set.
   * @param {*} value The value to set.
   * @returns {Object} Returns the hash instance.
   */
  function hashSet(key, value) {
    var data = this.__data__;
    this.size += this.has(key) ? 0 : 1;
    data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;
    return this;
  }

  module.exports = hashSet;


/***/ },
/* 661 */
/***/ function(module, exports, __webpack_require__) {

  var listCacheClear = __webpack_require__(662),
      listCacheDelete = __webpack_require__(663),
      listCacheGet = __webpack_require__(666),
      listCacheHas = __webpack_require__(667),
      listCacheSet = __webpack_require__(668);

  /**
   * Creates an list cache object.
   *
   * @private
   * @constructor
   * @param {Array} [entries] The key-value pairs to cache.
   */
  function ListCache(entries) {
    var index = -1,
        length = entries == null ? 0 : entries.length;

    this.clear();
    while (++index < length) {
      var entry = entries[index];
      this.set(entry[0], entry[1]);
    }
  }

  // Add methods to `ListCache`.
  ListCache.prototype.clear = listCacheClear;
  ListCache.prototype['delete'] = listCacheDelete;
  ListCache.prototype.get = listCacheGet;
  ListCache.prototype.has = listCacheHas;
  ListCache.prototype.set = listCacheSet;

  module.exports = ListCache;


/***/ },
/* 662 */
/***/ function(module, exports) {

  /**
   * Removes all key-value entries from the list cache.
   *
   * @private
   * @name clear
   * @memberOf ListCache
   */
  function listCacheClear() {
    this.__data__ = [];
    this.size = 0;
  }

  module.exports = listCacheClear;


/***/ },
/* 663 */
/***/ function(module, exports, __webpack_require__) {

  var assocIndexOf = __webpack_require__(664);

  /** Used for built-in method references. */
  var arrayProto = Array.prototype;

  /** Built-in value references. */
  var splice = arrayProto.splice;

  /**
   * Removes `key` and its value from the list cache.
   *
   * @private
   * @name delete
   * @memberOf ListCache
   * @param {string} key The key of the value to remove.
   * @returns {boolean} Returns `true` if the entry was removed, else `false`.
   */
  function listCacheDelete(key) {
    var data = this.__data__,
        index = assocIndexOf(data, key);

    if (index < 0) {
      return false;
    }
    var lastIndex = data.length - 1;
    if (index == lastIndex) {
      data.pop();
    } else {
      splice.call(data, index, 1);
    }
    --this.size;
    return true;
  }

  module.exports = listCacheDelete;


/***/ },
/* 664 */
/***/ function(module, exports, __webpack_require__) {

  var eq = __webpack_require__(665);

  /**
   * Gets the index at which the `key` is found in `array` of key-value pairs.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} key The key to search for.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function assocIndexOf(array, key) {
    var length = array.length;
    while (length--) {
      if (eq(array[length][0], key)) {
        return length;
      }
    }
    return -1;
  }

  module.exports = assocIndexOf;


/***/ },
/* 665 */
/***/ function(module, exports) {

  /**
   * Performs a
   * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
   * comparison between two values to determine if they are equivalent.
   *
   * @static
   * @memberOf _
   * @since 4.0.0
   * @category Lang
   * @param {*} value The value to compare.
   * @param {*} other The other value to compare.
   * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
   * @example
   *
   * var object = { 'a': 1 };
   * var other = { 'a': 1 };
   *
   * _.eq(object, object);
   * // => true
   *
   * _.eq(object, other);
   * // => false
   *
   * _.eq('a', 'a');
   * // => true
   *
   * _.eq('a', Object('a'));
   * // => false
   *
   * _.eq(NaN, NaN);
   * // => true
   */
  function eq(value, other) {
    return value === other || (value !== value && other !== other);
  }

  module.exports = eq;


/***/ },
/* 666 */
/***/ function(module, exports, __webpack_require__) {

  var assocIndexOf = __webpack_require__(664);

  /**
   * Gets the list cache value for `key`.
   *
   * @private
   * @name get
   * @memberOf ListCache
   * @param {string} key The key of the value to get.
   * @returns {*} Returns the entry value.
   */
  function listCacheGet(key) {
    var data = this.__data__,
        index = assocIndexOf(data, key);

    return index < 0 ? undefined : data[index][1];
  }

  module.exports = listCacheGet;


/***/ },
/* 667 */
/***/ function(module, exports, __webpack_require__) {

  var assocIndexOf = __webpack_require__(664);

  /**
   * Checks if a list cache value for `key` exists.
   *
   * @private
   * @name has
   * @memberOf ListCache
   * @param {string} key The key of the entry to check.
   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
   */
  function listCacheHas(key) {
    return assocIndexOf(this.__data__, key) > -1;
  }

  module.exports = listCacheHas;


/***/ },
/* 668 */
/***/ function(module, exports, __webpack_require__) {

  var assocIndexOf = __webpack_require__(664);

  /**
   * Sets the list cache `key` to `value`.
   *
   * @private
   * @name set
   * @memberOf ListCache
   * @param {string} key The key of the value to set.
   * @param {*} value The value to set.
   * @returns {Object} Returns the list cache instance.
   */
  function listCacheSet(key, value) {
    var data = this.__data__,
        index = assocIndexOf(data, key);

    if (index < 0) {
      ++this.size;
      data.push([key, value]);
    } else {
      data[index][1] = value;
    }
    return this;
  }

  module.exports = listCacheSet;


/***/ },
/* 669 */
/***/ function(module, exports, __webpack_require__) {

  var getNative = __webpack_require__(649),
      root = __webpack_require__(636);

  /* Built-in method references that are verified to be native. */
  var Map = getNative(root, 'Map');

  module.exports = Map;


/***/ },
/* 670 */
/***/ function(module, exports, __webpack_require__) {

  var getMapData = __webpack_require__(671);

  /**
   * Removes `key` and its value from the map.
   *
   * @private
   * @name delete
   * @memberOf MapCache
   * @param {string} key The key of the value to remove.
   * @returns {boolean} Returns `true` if the entry was removed, else `false`.
   */
  function mapCacheDelete(key) {
    var result = getMapData(this, key)['delete'](key);
    this.size -= result ? 1 : 0;
    return result;
  }

  module.exports = mapCacheDelete;


/***/ },
/* 671 */
/***/ function(module, exports, __webpack_require__) {

  var isKeyable = __webpack_require__(672);

  /**
   * Gets the data for `map`.
   *
   * @private
   * @param {Object} map The map to query.
   * @param {string} key The reference key.
   * @returns {*} Returns the map data.
   */
  function getMapData(map, key) {
    var data = map.__data__;
    return isKeyable(key)
      ? data[typeof key == 'string' ? 'string' : 'hash']
      : data.map;
  }

  module.exports = getMapData;


/***/ },
/* 672 */
/***/ function(module, exports) {

  /**
   * Checks if `value` is suitable for use as unique object key.
   *
   * @private
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
   */
  function isKeyable(value) {
    var type = typeof value;
    return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')
      ? (value !== '__proto__')
      : (value === null);
  }

  module.exports = isKeyable;


/***/ },
/* 673 */
/***/ function(module, exports, __webpack_require__) {

  var getMapData = __webpack_require__(671);

  /**
   * Gets the map value for `key`.
   *
   * @private
   * @name get
   * @memberOf MapCache
   * @param {string} key The key of the value to get.
   * @returns {*} Returns the entry value.
   */
  function mapCacheGet(key) {
    return getMapData(this, key).get(key);
  }

  module.exports = mapCacheGet;


/***/ },
/* 674 */
/***/ function(module, exports, __webpack_require__) {

  var getMapData = __webpack_require__(671);

  /**
   * Checks if a map value for `key` exists.
   *
   * @private
   * @name has
   * @memberOf MapCache
   * @param {string} key The key of the entry to check.
   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
   */
  function mapCacheHas(key) {
    return getMapData(this, key).has(key);
  }

  module.exports = mapCacheHas;


/***/ },
/* 675 */
/***/ function(module, exports, __webpack_require__) {

  var getMapData = __webpack_require__(671);

  /**
   * Sets the map `key` to `value`.
   *
   * @private
   * @name set
   * @memberOf MapCache
   * @param {string} key The key of the value to set.
   * @param {*} value The value to set.
   * @returns {Object} Returns the map cache instance.
   */
  function mapCacheSet(key, value) {
    var data = getMapData(this, key),
        size = data.size;

    data.set(key, value);
    this.size += data.size == size ? 0 : 1;
    return this;
  }

  module.exports = mapCacheSet;


/***/ },
/* 676 */
/***/ function(module, exports, __webpack_require__) {

  var baseToString = __webpack_require__(677);

  /**
   * Converts `value` to a string. An empty string is returned for `null`
   * and `undefined` values. The sign of `-0` is preserved.
   *
   * @static
   * @memberOf _
   * @since 4.0.0
   * @category Lang
   * @param {*} value The value to convert.
   * @returns {string} Returns the converted string.
   * @example
   *
   * _.toString(null);
   * // => ''
   *
   * _.toString(-0);
   * // => '-0'
   *
   * _.toString([1, 2, 3]);
   * // => '1,2,3'
   */
  function toString(value) {
    return value == null ? '' : baseToString(value);
  }

  module.exports = toString;


/***/ },
/* 677 */
/***/ function(module, exports, __webpack_require__) {

  var Symbol = __webpack_require__(635),
      arrayMap = __webpack_require__(678),
      isArray = __webpack_require__(631),
      isSymbol = __webpack_require__(633);

  /** Used as references for various `Number` constants. */
  var INFINITY = 1 / 0;

  /** Used to convert symbols to primitives and strings. */
  var symbolProto = Symbol ? Symbol.prototype : undefined,
      symbolToString = symbolProto ? symbolProto.toString : undefined;

  /**
   * The base implementation of `_.toString` which doesn't convert nullish
   * values to empty strings.
   *
   * @private
   * @param {*} value The value to process.
   * @returns {string} Returns the string.
   */
  function baseToString(value) {
    // Exit early for strings to avoid a performance hit in some environments.
    if (typeof value == 'string') {
      return value;
    }
    if (isArray(value)) {
      // Recursively convert values (susceptible to call stack limits).
      return arrayMap(value, baseToString) + '';
    }
    if (isSymbol(value)) {
      return symbolToString ? symbolToString.call(value) : '';
    }
    var result = (value + '');
    return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
  }

  module.exports = baseToString;


/***/ },
/* 678 */
/***/ function(module, exports) {

  /**
   * A specialized version of `_.map` for arrays without support for iteratee
   * shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns the new mapped array.
   */
  function arrayMap(array, iteratee) {
    var index = -1,
        length = array == null ? 0 : array.length,
        result = Array(length);

    while (++index < length) {
      result[index] = iteratee(array[index], index, array);
    }
    return result;
  }

  module.exports = arrayMap;


/***/ },
/* 679 */
/***/ function(module, exports, __webpack_require__) {

  var baseIsArguments = __webpack_require__(680),
      isObjectLike = __webpack_require__(640);

  /** Used for built-in method references. */
  var objectProto = Object.prototype;

  /** Used to check objects for own properties. */
  var hasOwnProperty = objectProto.hasOwnProperty;

  /** Built-in value references. */
  var propertyIsEnumerable = objectProto.propertyIsEnumerable;

  /**
   * Checks if `value` is likely an `arguments` object.
   *
   * @static
   * @memberOf _
   * @since 0.1.0
   * @category Lang
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is an `arguments` object,
   *  else `false`.
   * @example
   *
   * _.isArguments(function() { return arguments; }());
   * // => true
   *
   * _.isArguments([1, 2, 3]);
   * // => false
   */
  var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {
    return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&
      !propertyIsEnumerable.call(value, 'callee');
  };

  module.exports = isArguments;


/***/ },
/* 680 */
/***/ function(module, exports, __webpack_require__) {

  var baseGetTag = __webpack_require__(634),
      isObjectLike = __webpack_require__(640);

  /** `Object#toString` result references. */
  var argsTag = '[object Arguments]';

  /**
   * The base implementation of `_.isArguments`.
   *
   * @private
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is an `arguments` object,
   */
  function baseIsArguments(value) {
    return isObjectLike(value) && baseGetTag(value) == argsTag;
  }

  module.exports = baseIsArguments;


/***/ },
/* 681 */
/***/ function(module, exports) {

  /** Used as references for various `Number` constants. */
  var MAX_SAFE_INTEGER = 9007199254740991;

  /** Used to detect unsigned integer values. */
  var reIsUint = /^(?:0|[1-9]\d*)$/;

  /**
   * Checks if `value` is a valid array-like index.
   *
   * @private
   * @param {*} value The value to check.
   * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
   * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
   */
  function isIndex(value, length) {
    length = length == null ? MAX_SAFE_INTEGER : length;
    return !!length &&
      (typeof value == 'number' || reIsUint.test(value)) &&
      (value > -1 && value % 1 == 0 && value < length);
  }

  module.exports = isIndex;


/***/ },
/* 682 */
/***/ function(module, exports) {

  /** Used as references for various `Number` constants. */
  var MAX_SAFE_INTEGER = 9007199254740991;

  /**
   * Checks if `value` is a valid array-like length.
   *
   * **Note:** This method is loosely based on
   * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
   *
   * @static
   * @memberOf _
   * @since 4.0.0
   * @category Lang
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
   * @example
   *
   * _.isLength(3);
   * // => true
   *
   * _.isLength(Number.MIN_VALUE);
   * // => false
   *
   * _.isLength(Infinity);
   * // => false
   *
   * _.isLength('3');
   * // => false
   */
  function isLength(value) {
    return typeof value == 'number' &&
      value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
  }

  module.exports = isLength;


/***/ },
/* 683 */
/***/ function(module, exports, __webpack_require__) {

  var isSymbol = __webpack_require__(633);

  /** Used as references for various `Number` constants. */
  var INFINITY = 1 / 0;

  /**
   * Converts `value` to a string key if it's not a string or symbol.
   *
   * @private
   * @param {*} value The value to inspect.
   * @returns {string|symbol} Returns the key.
   */
  function toKey(value) {
    if (typeof value == 'string' || isSymbol(value)) {
      return value;
    }
    var result = (value + '');
    return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
  }

  module.exports = toKey;


/***/ },
/* 684 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.objectDiff = exports.numberToWord = exports.numberToWordMap = exports.keyboardKey = exports.SUI = exports.META = exports.leven = exports.isBrowser = exports.getElementType = exports.getUnhandledProps = exports.makeDebugger = exports.debug = exports.customPropTypes = exports.useVerticalAlignProp = exports.useTextAlignProp = exports.useWidthProp = exports.useKeyOrValueAndKey = exports.useValueAndKey = exports.useKeyOnly = exports.childrenUtils = exports.AutoControlledComponent = undefined;

  var _AutoControlledComponent = __webpack_require__(685);

  Object.defineProperty(exports, 'AutoControlledComponent', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_AutoControlledComponent).default;
    }
  });

  var _classNameBuilders = __webpack_require__(782);

  Object.defineProperty(exports, 'useKeyOnly', {
    enumerable: true,
    get: function get() {
      return _classNameBuilders.useKeyOnly;
    }
  });
  Object.defineProperty(exports, 'useValueAndKey', {
    enumerable: true,
    get: function get() {
      return _classNameBuilders.useValueAndKey;
    }
  });
  Object.defineProperty(exports, 'useKeyOrValueAndKey', {
    enumerable: true,
    get: function get() {
      return _classNameBuilders.useKeyOrValueAndKey;
    }
  });
  Object.defineProperty(exports, 'useWidthProp', {
    enumerable: true,
    get: function get() {
      return _classNameBuilders.useWidthProp;
    }
  });
  Object.defineProperty(exports, 'useTextAlignProp', {
    enumerable: true,
    get: function get() {
      return _classNameBuilders.useTextAlignProp;
    }
  });
  Object.defineProperty(exports, 'useVerticalAlignProp', {
    enumerable: true,
    get: function get() {
      return _classNameBuilders.useVerticalAlignProp;
    }
  });

  var _debug = __webpack_require__(784);

  Object.defineProperty(exports, 'debug', {
    enumerable: true,
    get: function get() {
      return _debug.debug;
    }
  });
  Object.defineProperty(exports, 'makeDebugger', {
    enumerable: true,
    get: function get() {
      return _debug.makeDebugger;
    }
  });

  var _factories = __webpack_require__(789);

  Object.keys(_factories).forEach(function (key) {
    if (key === "default" || key === "__esModule") return;
    Object.defineProperty(exports, key, {
      enumerable: true,
      get: function get() {
        return _factories[key];
      }
    });
  });

  var _getUnhandledProps = __webpack_require__(795);

  Object.defineProperty(exports, 'getUnhandledProps', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_getUnhandledProps).default;
    }
  });

  var _getElementType = __webpack_require__(796);

  Object.defineProperty(exports, 'getElementType', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_getElementType).default;
    }
  });

  var _isBrowser = __webpack_require__(785);

  Object.defineProperty(exports, 'isBrowser', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_isBrowser).default;
    }
  });

  var _leven = __webpack_require__(797);

  Object.defineProperty(exports, 'leven', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_leven).default;
    }
  });

  var _keyboardKey = __webpack_require__(798);

  Object.defineProperty(exports, 'keyboardKey', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_keyboardKey).default;
    }
  });

  var _numberToWord = __webpack_require__(783);

  Object.defineProperty(exports, 'numberToWordMap', {
    enumerable: true,
    get: function get() {
      return _numberToWord.numberToWordMap;
    }
  });
  Object.defineProperty(exports, 'numberToWord', {
    enumerable: true,
    get: function get() {
      return _numberToWord.numberToWord;
    }
  });

  var _objectDiff = __webpack_require__(800);

  Object.defineProperty(exports, 'objectDiff', {
    enumerable: true,
    get: function get() {
      return _objectDiff.objectDiff;
    }
  });

  var _childrenUtils2 = __webpack_require__(804);

  var _childrenUtils = _interopRequireWildcard(_childrenUtils2);

  var _customPropTypes2 = __webpack_require__(811);

  var _customPropTypes = _interopRequireWildcard(_customPropTypes2);

  var _META2 = __webpack_require__(928);

  var _META = _interopRequireWildcard(_META2);

  var _SUI2 = __webpack_require__(935);

  var _SUI = _interopRequireWildcard(_SUI2);

  function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  exports.childrenUtils = _childrenUtils;
  exports.customPropTypes = _customPropTypes;
  exports.META = _META;
  exports.SUI = _SUI;

/***/ },
/* 685 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.getAutoControlledStateValue = undefined;

  var _difference2 = __webpack_require__(686);

  var _difference3 = _interopRequireDefault(_difference2);

  var _isUndefined2 = __webpack_require__(713);

  var _isUndefined3 = _interopRequireDefault(_isUndefined2);

  var _startsWith2 = __webpack_require__(714);

  var _startsWith3 = _interopRequireDefault(_startsWith2);

  var _filter2 = __webpack_require__(719);

  var _filter3 = _interopRequireDefault(_filter2);

  var _isEmpty2 = __webpack_require__(774);

  var _isEmpty3 = _interopRequireDefault(_isEmpty2);

  var _keys2 = __webpack_require__(726);

  var _keys3 = _interopRequireDefault(_keys2);

  var _intersection2 = __webpack_require__(775);

  var _intersection3 = _interopRequireDefault(_intersection2);

  var _has2 = __webpack_require__(627);

  var _has3 = _interopRequireDefault(_has2);

  var _each2 = __webpack_require__(778);

  var _each3 = _interopRequireDefault(_each2);

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

  var _react = __webpack_require__(385);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

  function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* eslint-disable no-console */
  /**
   * Why choose inheritance over a HOC?  Multiple advantages for this particular use case.
   * In short, we need identical functionality to setState(), unless there is a prop defined
   * for the state key.  Also:
   *
   * 1. Single Renders
   *    Calling trySetState() in constructor(), componentWillMount(), or componentWillReceiveProps()
   *    does not cause two renders. Consumers and tests do not have to wait two renders to get state.
   *    See www.react.run/4kJFdKoxb/27 for an example of this issue.
   *
   * 2. Simple Testing
   *    Using a HOC means you must either test the undecorated component or test through the decorator.
   *    Testing the undecorated component means you must mock the decorator functionality.
   *    Testing through the HOC means you can not simply shallow render your component.
   *
   * 3. Statics
   *    HOC wrap instances, so statics are no longer accessible.  They can be hoisted, but this is more
   *    looping over properties and storing references.  We rely heavily on statics for testing and sub
   *    components.
   *
   * 4. Instance Methods
   *    Some instance methods may be exposed to users via refs.  Again, these are lost with HOC unless
   *    hoisted and exposed by the HOC.
   */


  var getDefaultPropName = function getDefaultPropName(prop) {
    return 'default' + (prop[0].toUpperCase() + prop.slice(1));
  };

  /**
   * Return the auto controlled state value for a give prop. The initial value is chosen in this order:
   *  - regular props
   *  - then, default props
   *  - then, initial state
   *  - then, `checked` defaults to false
   *  - then, `value` defaults to '' or [] if props.multiple
   *  - else, undefined
   *
   *  @param {string} propName A prop name
   *  @param {object} [props] A props object
   *  @param {object} [state] A state object
   *  @param {boolean} [includeDefaults=false] Whether or not to heed the default props or initial state
   */
  var getAutoControlledStateValue = exports.getAutoControlledStateValue = function getAutoControlledStateValue(propName, props, state) {
    var includeDefaults = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;

    // regular props
    var propValue = props[propName];
    if (propValue !== undefined) return propValue;

    if (includeDefaults) {
      // defaultProps
      var defaultProp = props[getDefaultPropName(propName)];
      if (defaultProp !== undefined) return defaultProp;

      // initial state - state may be null or undefined
      if (state) {
        var initialState = state[propName];
        if (initialState !== undefined) return initialState;
      }
    }

    // React doesn't allow changing from uncontrolled to controlled components,
    // default checked/value if they were not present.
    if (propName === 'checked') return false;
    if (propName === 'value') return props.multiple ? [] : '';

    // otherwise, undefined
  };

  var AutoControlledComponent = function (_Component) {
    _inherits(AutoControlledComponent, _Component);

    function AutoControlledComponent() {
      var _ref;

      var _temp, _this, _ret;

      _classCallCheck(this, AutoControlledComponent);

      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = AutoControlledComponent.__proto__ || Object.getPrototypeOf(AutoControlledComponent)).call.apply(_ref, [this].concat(args))), _this), _this.trySetState = function (maybeState, state) {
        var autoControlledProps = _this.constructor.autoControlledProps;

        if (true) {
          var name = _this.constructor.name;
          // warn about failed attempts to setState for keys not listed in autoControlledProps

          var illegalKeys = (0, _difference3.default)((0, _keys3.default)(maybeState), autoControlledProps);
          if (!(0, _isEmpty3.default)(illegalKeys)) {
            console.error([name + ' called trySetState() with controlled props: "' + illegalKeys + '".', 'State will not be set.', 'Only props in static autoControlledProps will be set on state.'].join(' '));
          }
        }

        var newState = Object.keys(maybeState).reduce(function (acc, prop) {
          // ignore props defined by the parent
          if (_this.props[prop] !== undefined) return acc;

          // ignore props not listed in auto controlled props
          if (autoControlledProps.indexOf(prop) === -1) return acc;

          acc[prop] = maybeState[prop];
          return acc;
        }, {});

        if (state) newState = _extends({}, newState, state);

        if (Object.keys(newState).length > 0) _this.setState(newState);
      }, _temp), _possibleConstructorReturn(_this, _ret);
    }

    _createClass(AutoControlledComponent, [{
      key: 'componentWillMount',
      value: function componentWillMount() {
        var _this2 = this;

        var autoControlledProps = this.constructor.autoControlledProps;


        if (true) {
          (function () {
            var _constructor = _this2.constructor,
                defaultProps = _constructor.defaultProps,
                name = _constructor.name,
                propTypes = _constructor.propTypes;
            // require static autoControlledProps

            if (!autoControlledProps) {
              console.error('Auto controlled ' + name + ' must specify a static autoControlledProps array.');
            }

            // require propTypes
            (0, _each3.default)(autoControlledProps, function (prop) {
              var defaultProp = getDefaultPropName(prop);
              // regular prop
              if (!(0, _has3.default)(propTypes, defaultProp)) {
                console.error(name + ' is missing "' + defaultProp + '" propTypes validation for auto controlled prop "' + prop + '".');
              }
              // its default prop
              if (!(0, _has3.default)(propTypes, prop)) {
                console.error(name + ' is missing propTypes validation for auto controlled prop "' + prop + '".');
              }
            });

            // prevent autoControlledProps in defaultProps
            //
            // When setting state, auto controlled props values always win (so the parent can manage them).
            // It is not reasonable to decipher the difference between props from the parent and defaultProps.
            // Allowing defaultProps results in trySetState always deferring to the defaultProp value.
            // Auto controlled props also listed in defaultProps can never be updated.
            //
            // To set defaults for an AutoControlled prop, you can set the initial state in the
            // constructor or by using an ES7 property initializer:
            // https://babeljs.io/blog/2015/06/07/react-on-es6-plus#property-initializers
            var illegalDefaults = (0, _intersection3.default)(autoControlledProps, (0, _keys3.default)(defaultProps));
            if (!(0, _isEmpty3.default)(illegalDefaults)) {
              console.error(['Do not set defaultProps for autoControlledProps. You can set defaults by', 'setting state in the constructor or using an ES7 property initializer', '(https://babeljs.io/blog/2015/06/07/react-on-es6-plus#property-initializers)', 'See ' + name + ' props: "' + illegalDefaults + '".'].join(' '));
            }

            // prevent listing defaultProps in autoControlledProps
            //
            // Default props are automatically handled.
            // Listing defaults in autoControlledProps would result in allowing defaultDefaultValue props.
            var illegalAutoControlled = (0, _filter3.default)(autoControlledProps, function (prop) {
              return (0, _startsWith3.default)(prop, 'default');
            });
            if (!(0, _isEmpty3.default)(illegalAutoControlled)) {
              console.error(['Do not add default props to autoControlledProps.', 'Default props are automatically handled.', 'See ' + name + ' autoControlledProps: "' + illegalAutoControlled + '".'].join(' '));
            }
          })();
        }

        // Auto controlled props are copied to state.
        // Set initial state by copying auto controlled props to state.
        // Also look for the default prop for any auto controlled props (foo => defaultFoo)
        // so we can set initial values from defaults.
        var initialAutoControlledState = autoControlledProps.reduce(function (acc, prop) {
          acc[prop] = getAutoControlledStateValue(prop, _this2.props, _this2.state, true);

          if (true) {
            var defaultPropName = getDefaultPropName(prop);
            var _name = _this2.constructor.name;
            // prevent defaultFoo={} along side foo={}

            if (defaultPropName in _this2.props && prop in _this2.props) {
              console.error(_name + ' prop "' + prop + '" is auto controlled. Specify either ' + defaultPropName + ' or ' + prop + ', but not both.');
            }
          }

          return acc;
        }, {});

        this.state = _extends({}, this.state, initialAutoControlledState);
      }
    }, {
      key: 'componentWillReceiveProps',
      value: function componentWillReceiveProps(nextProps) {
        var _this3 = this;

        var autoControlledProps = this.constructor.autoControlledProps;

        // Solve the next state for autoControlledProps

        var newState = autoControlledProps.reduce(function (acc, prop) {
          var isNextUndefined = (0, _isUndefined3.default)(nextProps[prop]);
          var propWasRemoved = !(0, _isUndefined3.default)(_this3.props[prop]) && isNextUndefined;

          // if next is defined then use its value
          if (!isNextUndefined) acc[prop] = nextProps[prop];

          // reinitialize state for props just removed / set undefined
          else if (propWasRemoved) acc[prop] = getAutoControlledStateValue(prop, nextProps);

          return acc;
        }, {});

        if (Object.keys(newState).length > 0) this.setState(newState);
      }

      /**
       * Safely attempt to set state for props that might be controlled by the user.
       * Second argument is a state object that is always passed to setState.
       * @param {object} maybeState State that corresponds to controlled props.
       * @param {object} [state] Actual state, useful when you also need to setState.
       */

    }]);

    return AutoControlledComponent;
  }(_react.Component);

  exports.default = AutoControlledComponent;

/***/ },
/* 686 */
/***/ function(module, exports, __webpack_require__) {

  var baseDifference = __webpack_require__(687),
      baseFlatten = __webpack_require__(699),
      baseRest = __webpack_require__(702),
      isArrayLikeObject = __webpack_require__(711);

  /**
   * Creates an array of `array` values not included in the other given arrays
   * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
   * for equality comparisons. The order and references of result values are
   * determined by the first array.
   *
   * **Note:** Unlike `_.pullAll`, this method returns a new array.
   *
   * @static
   * @memberOf _
   * @since 0.1.0
   * @category Array
   * @param {Array} array The array to inspect.
   * @param {...Array} [values] The values to exclude.
   * @returns {Array} Returns the new array of filtered values.
   * @see _.without, _.xor
   * @example
   *
   * _.difference([2, 1], [2, 3]);
   * // => [1]
   */
  var difference = baseRest(function(array, values) {
    return isArrayLikeObject(array)
      ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))
      : [];
  });

  module.exports = difference;


/***/ },
/* 687 */
/***/ function(module, exports, __webpack_require__) {

  var SetCache = __webpack_require__(688),
      arrayIncludes = __webpack_require__(691),
      arrayIncludesWith = __webpack_require__(696),
      arrayMap = __webpack_require__(678),
      baseUnary = __webpack_require__(697),
      cacheHas = __webpack_require__(698);

  /** Used as the size to enable large array optimizations. */
  var LARGE_ARRAY_SIZE = 200;

  /**
   * The base implementation of methods like `_.difference` without support
   * for excluding multiple arrays or iteratee shorthands.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {Array} values The values to exclude.
   * @param {Function} [iteratee] The iteratee invoked per element.
   * @param {Function} [comparator] The comparator invoked per element.
   * @returns {Array} Returns the new array of filtered values.
   */
  function baseDifference(array, values, iteratee, comparator) {
    var index = -1,
        includes = arrayIncludes,
        isCommon = true,
        length = array.length,
        result = [],
        valuesLength = values.length;

    if (!length) {
      return result;
    }
    if (iteratee) {
      values = arrayMap(values, baseUnary(iteratee));
    }
    if (comparator) {
      includes = arrayIncludesWith;
      isCommon = false;
    }
    else if (values.length >= LARGE_ARRAY_SIZE) {
      includes = cacheHas;
      isCommon = false;
      values = new SetCache(values);
    }
    outer:
    while (++index < length) {
      var value = array[index],
          computed = iteratee == null ? value : iteratee(value);

      value = (comparator || value !== 0) ? value : 0;
      if (isCommon && computed === computed) {
        var valuesIndex = valuesLength;
        while (valuesIndex--) {
          if (values[valuesIndex] === computed) {
            continue outer;
          }
        }
        result.push(value);
      }
      else if (!includes(values, computed, comparator)) {
        result.push(value);
      }
    }
    return result;
  }

  module.exports = baseDifference;


/***/ },
/* 688 */
/***/ function(module, exports, __webpack_require__) {

  var MapCache = __webpack_require__(644),
      setCacheAdd = __webpack_require__(689),
      setCacheHas = __webpack_require__(690);

  /**
   *
   * Creates an array cache object to store unique values.
   *
   * @private
   * @constructor
   * @param {Array} [values] The values to cache.
   */
  function SetCache(values) {
    var index = -1,
        length = values == null ? 0 : values.length;

    this.__data__ = new MapCache;
    while (++index < length) {
      this.add(values[index]);
    }
  }

  // Add methods to `SetCache`.
  SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
  SetCache.prototype.has = setCacheHas;

  module.exports = SetCache;


/***/ },
/* 689 */
/***/ function(module, exports) {

  /** Used to stand-in for `undefined` hash values. */
  var HASH_UNDEFINED = '__lodash_hash_undefined__';

  /**
   * Adds `value` to the array cache.
   *
   * @private
   * @name add
   * @memberOf SetCache
   * @alias push
   * @param {*} value The value to cache.
   * @returns {Object} Returns the cache instance.
   */
  function setCacheAdd(value) {
    this.__data__.set(value, HASH_UNDEFINED);
    return this;
  }

  module.exports = setCacheAdd;


/***/ },
/* 690 */
/***/ function(module, exports) {

  /**
   * Checks if `value` is in the array cache.
   *
   * @private
   * @name has
   * @memberOf SetCache
   * @param {*} value The value to search for.
   * @returns {number} Returns `true` if `value` is found, else `false`.
   */
  function setCacheHas(value) {
    return this.__data__.has(value);
  }

  module.exports = setCacheHas;


/***/ },
/* 691 */
/***/ function(module, exports, __webpack_require__) {

  var baseIndexOf = __webpack_require__(692);

  /**
   * A specialized version of `_.includes` for arrays without support for
   * specifying an index to search from.
   *
   * @private
   * @param {Array} [array] The array to inspect.
   * @param {*} target The value to search for.
   * @returns {boolean} Returns `true` if `target` is found, else `false`.
   */
  function arrayIncludes(array, value) {
    var length = array == null ? 0 : array.length;
    return !!length && baseIndexOf(array, value, 0) > -1;
  }

  module.exports = arrayIncludes;


/***/ },
/* 692 */
/***/ function(module, exports, __webpack_require__) {

  var baseFindIndex = __webpack_require__(693),
      baseIsNaN = __webpack_require__(694),
      strictIndexOf = __webpack_require__(695);

  /**
   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function baseIndexOf(array, value, fromIndex) {
    return value === value
      ? strictIndexOf(array, value, fromIndex)
      : baseFindIndex(array, baseIsNaN, fromIndex);
  }

  module.exports = baseIndexOf;


/***/ },
/* 693 */
/***/ function(module, exports) {

  /**
   * The base implementation of `_.findIndex` and `_.findLastIndex` without
   * support for iteratee shorthands.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {Function} predicate The function invoked per iteration.
   * @param {number} fromIndex The index to search from.
   * @param {boolean} [fromRight] Specify iterating from right to left.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function baseFindIndex(array, predicate, fromIndex, fromRight) {
    var length = array.length,
        index = fromIndex + (fromRight ? 1 : -1);

    while ((fromRight ? index-- : ++index < length)) {
      if (predicate(array[index], index, array)) {
        return index;
      }
    }
    return -1;
  }

  module.exports = baseFindIndex;


/***/ },
/* 694 */
/***/ function(module, exports) {

  /**
   * The base implementation of `_.isNaN` without support for number objects.
   *
   * @private
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
   */
  function baseIsNaN(value) {
    return value !== value;
  }

  module.exports = baseIsNaN;


/***/ },
/* 695 */
/***/ function(module, exports) {

  /**
   * A specialized version of `_.indexOf` which performs strict equality
   * comparisons of values, i.e. `===`.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function strictIndexOf(array, value, fromIndex) {
    var index = fromIndex - 1,
        length = array.length;

    while (++index < length) {
      if (array[index] === value) {
        return index;
      }
    }
    return -1;
  }

  module.exports = strictIndexOf;


/***/ },
/* 696 */
/***/ function(module, exports) {

  /**
   * This function is like `arrayIncludes` except that it accepts a comparator.
   *
   * @private
   * @param {Array} [array] The array to inspect.
   * @param {*} target The value to search for.
   * @param {Function} comparator The comparator invoked per element.
   * @returns {boolean} Returns `true` if `target` is found, else `false`.
   */
  function arrayIncludesWith(array, value, comparator) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      if (comparator(value, array[index])) {
        return true;
      }
    }
    return false;
  }

  module.exports = arrayIncludesWith;


/***/ },
/* 697 */
/***/ function(module, exports) {

  /**
   * The base implementation of `_.unary` without support for storing metadata.
   *
   * @private
   * @param {Function} func The function to cap arguments for.
   * @returns {Function} Returns the new capped function.
   */
  function baseUnary(func) {
    return function(value) {
      return func(value);
    };
  }

  module.exports = baseUnary;


/***/ },
/* 698 */
/***/ function(module, exports) {

  /**
   * Checks if a `cache` value for `key` exists.
   *
   * @private
   * @param {Object} cache The cache to query.
   * @param {string} key The key of the entry to check.
   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
   */
  function cacheHas(cache, key) {
    return cache.has(key);
  }

  module.exports = cacheHas;


/***/ },
/* 699 */
/***/ function(module, exports, __webpack_require__) {

  var arrayPush = __webpack_require__(700),
      isFlattenable = __webpack_require__(701);

  /**
   * The base implementation of `_.flatten` with support for restricting flattening.
   *
   * @private
   * @param {Array} array The array to flatten.
   * @param {number} depth The maximum recursion depth.
   * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.
   * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.
   * @param {Array} [result=[]] The initial result value.
   * @returns {Array} Returns the new flattened array.
   */
  function baseFlatten(array, depth, predicate, isStrict, result) {
    var index = -1,
        length = array.length;

    predicate || (predicate = isFlattenable);
    result || (result = []);

    while (++index < length) {
      var value = array[index];
      if (depth > 0 && predicate(value)) {
        if (depth > 1) {
          // Recursively flatten arrays (susceptible to call stack limits).
          baseFlatten(value, depth - 1, predicate, isStrict, result);
        } else {
          arrayPush(result, value);
        }
      } else if (!isStrict) {
        result[result.length] = value;
      }
    }
    return result;
  }

  module.exports = baseFlatten;


/***/ },
/* 700 */
/***/ function(module, exports) {

  /**
   * Appends the elements of `values` to `array`.
   *
   * @private
   * @param {Array} array The array to modify.
   * @param {Array} values The values to append.
   * @returns {Array} Returns `array`.
   */
  function arrayPush(array, values) {
    var index = -1,
        length = values.length,
        offset = array.length;

    while (++index < length) {
      array[offset + index] = values[index];
    }
    return array;
  }

  module.exports = arrayPush;


/***/ },
/* 701 */
/***/ function(module, exports, __webpack_require__) {

  var Symbol = __webpack_require__(635),
      isArguments = __webpack_require__(679),
      isArray = __webpack_require__(631);

  /** Built-in value references. */
  var spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;

  /**
   * Checks if `value` is a flattenable `arguments` object or array.
   *
   * @private
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.
   */
  function isFlattenable(value) {
    return isArray(value) || isArguments(value) ||
      !!(spreadableSymbol && value && value[spreadableSymbol]);
  }

  module.exports = isFlattenable;


/***/ },
/* 702 */
/***/ function(module, exports, __webpack_require__) {

  var identity = __webpack_require__(703),
      overRest = __webpack_require__(704),
      setToString = __webpack_require__(706);

  /**
   * The base implementation of `_.rest` which doesn't validate or coerce arguments.
   *
   * @private
   * @param {Function} func The function to apply a rest parameter to.
   * @param {number} [start=func.length-1] The start position of the rest parameter.
   * @returns {Function} Returns the new function.
   */
  function baseRest(func, start) {
    return setToString(overRest(func, start, identity), func + '');
  }

  module.exports = baseRest;


/***/ },
/* 703 */
/***/ function(module, exports) {

  /**
   * This method returns the first argument it receives.
   *
   * @static
   * @since 0.1.0
   * @memberOf _
   * @category Util
   * @param {*} value Any value.
   * @returns {*} Returns `value`.
   * @example
   *
   * var object = { 'a': 1 };
   *
   * console.log(_.identity(object) === object);
   * // => true
   */
  function identity(value) {
    return value;
  }

  module.exports = identity;


/***/ },
/* 704 */
/***/ function(module, exports, __webpack_require__) {

  var apply = __webpack_require__(705);

  /* Built-in method references for those with the same name as other `lodash` methods. */
  var nativeMax = Math.max;

  /**
   * A specialized version of `baseRest` which transforms the rest array.
   *
   * @private
   * @param {Function} func The function to apply a rest parameter to.
   * @param {number} [start=func.length-1] The start position of the rest parameter.
   * @param {Function} transform The rest array transform.
   * @returns {Function} Returns the new function.
   */
  function overRest(func, start, transform) {
    start = nativeMax(start === undefined ? (func.length - 1) : start, 0);
    return function() {
      var args = arguments,
          index = -1,
          length = nativeMax(args.length - start, 0),
          array = Array(length);

      while (++index < length) {
        array[index] = args[start + index];
      }
      index = -1;
      var otherArgs = Array(start + 1);
      while (++index < start) {
        otherArgs[index] = args[index];
      }
      otherArgs[start] = transform(array);
      return apply(func, this, otherArgs);
    };
  }

  module.exports = overRest;


/***/ },
/* 705 */
/***/ function(module, exports) {

  /**
   * A faster alternative to `Function#apply`, this function invokes `func`
   * with the `this` binding of `thisArg` and the arguments of `args`.
   *
   * @private
   * @param {Function} func The function to invoke.
   * @param {*} thisArg The `this` binding of `func`.
   * @param {Array} args The arguments to invoke `func` with.
   * @returns {*} Returns the result of `func`.
   */
  function apply(func, thisArg, args) {
    switch (args.length) {
      case 0: return func.call(thisArg);
      case 1: return func.call(thisArg, args[0]);
      case 2: return func.call(thisArg, args[0], args[1]);
      case 3: return func.call(thisArg, args[0], args[1], args[2]);
    }
    return func.apply(thisArg, args);
  }

  module.exports = apply;


/***/ },
/* 706 */
/***/ function(module, exports, __webpack_require__) {

  var baseSetToString = __webpack_require__(707),
      shortOut = __webpack_require__(710);

  /**
   * Sets the `toString` method of `func` to return `string`.
   *
   * @private
   * @param {Function} func The function to modify.
   * @param {Function} string The `toString` result.
   * @returns {Function} Returns `func`.
   */
  var setToString = shortOut(baseSetToString);

  module.exports = setToString;


/***/ },
/* 707 */
/***/ function(module, exports, __webpack_require__) {

  var constant = __webpack_require__(708),
      defineProperty = __webpack_require__(709),
      identity = __webpack_require__(703);

  /**
   * The base implementation of `setToString` without support for hot loop shorting.
   *
   * @private
   * @param {Function} func The function to modify.
   * @param {Function} string The `toString` result.
   * @returns {Function} Returns `func`.
   */
  var baseSetToString = !defineProperty ? identity : function(func, string) {
    return defineProperty(func, 'toString', {
      'configurable': true,
      'enumerable': false,
      'value': constant(string),
      'writable': true
    });
  };

  module.exports = baseSetToString;


/***/ },
/* 708 */
/***/ function(module, exports) {

  /**
   * Creates a function that returns `value`.
   *
   * @static
   * @memberOf _
   * @since 2.4.0
   * @category Util
   * @param {*} value The value to return from the new function.
   * @returns {Function} Returns the new constant function.
   * @example
   *
   * var objects = _.times(2, _.constant({ 'a': 1 }));
   *
   * console.log(objects);
   * // => [{ 'a': 1 }, { 'a': 1 }]
   *
   * console.log(objects[0] === objects[1]);
   * // => true
   */
  function constant(value) {
    return function() {
      return value;
    };
  }

  module.exports = constant;


/***/ },
/* 709 */
/***/ function(module, exports, __webpack_require__) {

  var getNative = __webpack_require__(649);

  var defineProperty = (function() {
    try {
      var func = getNative(Object, 'defineProperty');
      func({}, '', {});
      return func;
    } catch (e) {}
  }());

  module.exports = defineProperty;


/***/ },
/* 710 */
/***/ function(module, exports) {

  /** Used to detect hot functions by number of calls within a span of milliseconds. */
  var HOT_COUNT = 800,
      HOT_SPAN = 16;

  /* Built-in method references for those with the same name as other `lodash` methods. */
  var nativeNow = Date.now;

  /**
   * Creates a function that'll short out and invoke `identity` instead
   * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`
   * milliseconds.
   *
   * @private
   * @param {Function} func The function to restrict.
   * @returns {Function} Returns the new shortable function.
   */
  function shortOut(func) {
    var count = 0,
        lastCalled = 0;

    return function() {
      var stamp = nativeNow(),
          remaining = HOT_SPAN - (stamp - lastCalled);

      lastCalled = stamp;
      if (remaining > 0) {
        if (++count >= HOT_COUNT) {
          return arguments[0];
        }
      } else {
        count = 0;
      }
      return func.apply(undefined, arguments);
    };
  }

  module.exports = shortOut;


/***/ },
/* 711 */
/***/ function(module, exports, __webpack_require__) {

  var isArrayLike = __webpack_require__(712),
      isObjectLike = __webpack_require__(640);

  /**
   * This method is like `_.isArrayLike` except that it also checks if `value`
   * is an object.
   *
   * @static
   * @memberOf _
   * @since 4.0.0
   * @category Lang
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is an array-like object,
   *  else `false`.
   * @example
   *
   * _.isArrayLikeObject([1, 2, 3]);
   * // => true
   *
   * _.isArrayLikeObject(document.body.children);
   * // => true
   *
   * _.isArrayLikeObject('abc');
   * // => false
   *
   * _.isArrayLikeObject(_.noop);
   * // => false
   */
  function isArrayLikeObject(value) {
    return isObjectLike(value) && isArrayLike(value);
  }

  module.exports = isArrayLikeObject;


/***/ },
/* 712 */
/***/ function(module, exports, __webpack_require__) {

  var isFunction = __webpack_require__(651),
      isLength = __webpack_require__(682);

  /**
   * Checks if `value` is array-like. A value is considered array-like if it's
   * not a function and has a `value.length` that's an integer greater than or
   * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
   *
   * @static
   * @memberOf _
   * @since 4.0.0
   * @category Lang
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
   * @example
   *
   * _.isArrayLike([1, 2, 3]);
   * // => true
   *
   * _.isArrayLike(document.body.children);
   * // => true
   *
   * _.isArrayLike('abc');
   * // => true
   *
   * _.isArrayLike(_.noop);
   * // => false
   */
  function isArrayLike(value) {
    return value != null && isLength(value.length) && !isFunction(value);
  }

  module.exports = isArrayLike;


/***/ },
/* 713 */
/***/ function(module, exports) {

  /**
   * Checks if `value` is `undefined`.
   *
   * @static
   * @since 0.1.0
   * @memberOf _
   * @category Lang
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.
   * @example
   *
   * _.isUndefined(void 0);
   * // => true
   *
   * _.isUndefined(null);
   * // => false
   */
  function isUndefined(value) {
    return value === undefined;
  }

  module.exports = isUndefined;


/***/ },
/* 714 */
/***/ function(module, exports, __webpack_require__) {

  var baseClamp = __webpack_require__(715),
      baseToString = __webpack_require__(677),
      toInteger = __webpack_require__(716),
      toString = __webpack_require__(676);

  /**
   * Checks if `string` starts with the given target string.
   *
   * @static
   * @memberOf _
   * @since 3.0.0
   * @category String
   * @param {string} [string=''] The string to inspect.
   * @param {string} [target] The string to search for.
   * @param {number} [position=0] The position to search from.
   * @returns {boolean} Returns `true` if `string` starts with `target`,
   *  else `false`.
   * @example
   *
   * _.startsWith('abc', 'a');
   * // => true
   *
   * _.startsWith('abc', 'b');
   * // => false
   *
   * _.startsWith('abc', 'b', 1);
   * // => true
   */
  function startsWith(string, target, position) {
    string = toString(string);
    position = baseClamp(toInteger(position), 0, string.length);
    target = baseToString(target);
    return string.slice(position, position + target.length) == target;
  }

  module.exports = startsWith;


/***/ },
/* 715 */
/***/ function(module, exports) {

  /**
   * The base implementation of `_.clamp` which doesn't coerce arguments.
   *
   * @private
   * @param {number} number The number to clamp.
   * @param {number} [lower] The lower bound.
   * @param {number} upper The upper bound.
   * @returns {number} Returns the clamped number.
   */
  function baseClamp(number, lower, upper) {
    if (number === number) {
      if (upper !== undefined) {
        number = number <= upper ? number : upper;
      }
      if (lower !== undefined) {
        number = number >= lower ? number : lower;
      }
    }
    return number;
  }

  module.exports = baseClamp;


/***/ },
/* 716 */
/***/ function(module, exports, __webpack_require__) {

  var toFinite = __webpack_require__(717);

  /**
   * Converts `value` to an integer.
   *
   * **Note:** This method is loosely based on
   * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).
   *
   * @static
   * @memberOf _
   * @since 4.0.0
   * @category Lang
   * @param {*} value The value to convert.
   * @returns {number} Returns the converted integer.
   * @example
   *
   * _.toInteger(3.2);
   * // => 3
   *
   * _.toInteger(Number.MIN_VALUE);
   * // => 0
   *
   * _.toInteger(Infinity);
   * // => 1.7976931348623157e+308
   *
   * _.toInteger('3.2');
   * // => 3
   */
  function toInteger(value) {
    var result = toFinite(value),
        remainder = result % 1;

    return result === result ? (remainder ? result - remainder : result) : 0;
  }

  module.exports = toInteger;


/***/ },
/* 717 */
/***/ function(module, exports, __webpack_require__) {

  var toNumber = __webpack_require__(718);

  /** Used as references for various `Number` constants. */
  var INFINITY = 1 / 0,
      MAX_INTEGER = 1.7976931348623157e+308;

  /**
   * Converts `value` to a finite number.
   *
   * @static
   * @memberOf _
   * @since 4.12.0
   * @category Lang
   * @param {*} value The value to convert.
   * @returns {number} Returns the converted number.
   * @example
   *
   * _.toFinite(3.2);
   * // => 3.2
   *
   * _.toFinite(Number.MIN_VALUE);
   * // => 5e-324
   *
   * _.toFinite(Infinity);
   * // => 1.7976931348623157e+308
   *
   * _.toFinite('3.2');
   * // => 3.2
   */
  function toFinite(value) {
    if (!value) {
      return value === 0 ? value : 0;
    }
    value = toNumber(value);
    if (value === INFINITY || value === -INFINITY) {
      var sign = (value < 0 ? -1 : 1);
      return sign * MAX_INTEGER;
    }
    return value === value ? value : 0;
  }

  module.exports = toFinite;


/***/ },
/* 718 */
/***/ function(module, exports, __webpack_require__) {

  var isObject = __webpack_require__(652),
      isSymbol = __webpack_require__(633);

  /** Used as references for various `Number` constants. */
  var NAN = 0 / 0;

  /** Used to match leading and trailing whitespace. */
  var reTrim = /^\s+|\s+$/g;

  /** Used to detect bad signed hexadecimal string values. */
  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;

  /** Used to detect binary string values. */
  var reIsBinary = /^0b[01]+$/i;

  /** Used to detect octal string values. */
  var reIsOctal = /^0o[0-7]+$/i;

  /** Built-in method references without a dependency on `root`. */
  var freeParseInt = parseInt;

  /**
   * Converts `value` to a number.
   *
   * @static
   * @memberOf _
   * @since 4.0.0
   * @category Lang
   * @param {*} value The value to process.
   * @returns {number} Returns the number.
   * @example
   *
   * _.toNumber(3.2);
   * // => 3.2
   *
   * _.toNumber(Number.MIN_VALUE);
   * // => 5e-324
   *
   * _.toNumber(Infinity);
   * // => Infinity
   *
   * _.toNumber('3.2');
   * // => 3.2
   */
  function toNumber(value) {
    if (typeof value == 'number') {
      return value;
    }
    if (isSymbol(value)) {
      return NAN;
    }
    if (isObject(value)) {
      var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
      value = isObject(other) ? (other + '') : other;
    }
    if (typeof value != 'string') {
      return value === 0 ? value : +value;
    }
    value = value.replace(reTrim, '');
    var isBinary = reIsBinary.test(value);
    return (isBinary || reIsOctal.test(value))
      ? freeParseInt(value.slice(2), isBinary ? 2 : 8)
      : (reIsBadHex.test(value) ? NAN : +value);
  }

  module.exports = toNumber;


/***/ },
/* 719 */
/***/ function(module, exports, __webpack_require__) {

  var arrayFilter = __webpack_require__(720),
      baseFilter = __webpack_require__(721),
      baseIteratee = __webpack_require__(740),
      isArray = __webpack_require__(631);

  /**
   * Iterates over elements of `collection`, returning an array of all elements
   * `predicate` returns truthy for. The predicate is invoked with three
   * arguments: (value, index|key, collection).
   *
   * **Note:** Unlike `_.remove`, this method returns a new array.
   *
   * @static
   * @memberOf _
   * @since 0.1.0
   * @category Collection
   * @param {Array|Object} collection The collection to iterate over.
   * @param {Function} [predicate=_.identity] The function invoked per iteration.
   * @returns {Array} Returns the new filtered array.
   * @see _.reject
   * @example
   *
   * var users = [
   *   { 'user': 'barney', 'age': 36, 'active': true },
   *   { 'user': 'fred',   'age': 40, 'active': false }
   * ];
   *
   * _.filter(users, function(o) { return !o.active; });
   * // => objects for ['fred']
   *
   * // The `_.matches` iteratee shorthand.
   * _.filter(users, { 'age': 36, 'active': true });
   * // => objects for ['barney']
   *
   * // The `_.matchesProperty` iteratee shorthand.
   * _.filter(users, ['active', false]);
   * // => objects for ['fred']
   *
   * // The `_.property` iteratee shorthand.
   * _.filter(users, 'active');
   * // => objects for ['barney']
   */
  function filter(collection, predicate) {
    var func = isArray(collection) ? arrayFilter : baseFilter;
    return func(collection, baseIteratee(predicate, 3));
  }

  module.exports = filter;


/***/ },
/* 720 */
/***/ function(module, exports) {

  /**
   * A specialized version of `_.filter` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} predicate The function invoked per iteration.
   * @returns {Array} Returns the new filtered array.
   */
  function arrayFilter(array, predicate) {
    var index = -1,
        length = array == null ? 0 : array.length,
        resIndex = 0,
        result = [];

    while (++index < length) {
      var value = array[index];
      if (predicate(value, index, array)) {
        result[resIndex++] = value;
      }
    }
    return result;
  }

  module.exports = arrayFilter;


/***/ },
/* 721 */
/***/ function(module, exports, __webpack_require__) {

  var baseEach = __webpack_require__(722);

  /**
   * The base implementation of `_.filter` without support for iteratee shorthands.
   *
   * @private
   * @param {Array|Object} collection The collection to iterate over.
   * @param {Function} predicate The function invoked per iteration.
   * @returns {Array} Returns the new filtered array.
   */
  function baseFilter(collection, predicate) {
    var result = [];
    baseEach(collection, function(value, index, collection) {
      if (predicate(value, index, collection)) {
        result.push(value);
      }
    });
    return result;
  }

  module.exports = baseFilter;


/***/ },
/* 722 */
/***/ function(module, exports, __webpack_require__) {

  var baseForOwn = __webpack_require__(723),
      createBaseEach = __webpack_require__(739);

  /**
   * The base implementation of `_.forEach` without support for iteratee shorthands.
   *
   * @private
   * @param {Array|Object} collection The collection to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array|Object} Returns `collection`.
   */
  var baseEach = createBaseEach(baseForOwn);

  module.exports = baseEach;


/***/ },
/* 723 */
/***/ function(module, exports, __webpack_require__) {

  var baseFor = __webpack_require__(724),
      keys = __webpack_require__(726);

  /**
   * The base implementation of `_.forOwn` without support for iteratee shorthands.
   *
   * @private
   * @param {Object} object The object to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Object} Returns `object`.
   */
  function baseForOwn(object, iteratee) {
    return object && baseFor(object, iteratee, keys);
  }

  module.exports = baseForOwn;


/***/ },
/* 724 */
/***/ function(module, exports, __webpack_require__) {

  var createBaseFor = __webpack_require__(725);

  /**
   * The base implementation of `baseForOwn` which iterates over `object`
   * properties returned by `keysFunc` and invokes `iteratee` for each property.
   * Iteratee functions may exit iteration early by explicitly returning `false`.
   *
   * @private
   * @param {Object} object The object to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @param {Function} keysFunc The function to get the keys of `object`.
   * @returns {Object} Returns `object`.
   */
  var baseFor = createBaseFor();

  module.exports = baseFor;


/***/ },
/* 725 */
/***/ function(module, exports) {

  /**
   * Creates a base function for methods like `_.forIn` and `_.forOwn`.
   *
   * @private
   * @param {boolean} [fromRight] Specify iterating from right to left.
   * @returns {Function} Returns the new base function.
   */
  function createBaseFor(fromRight) {
    return function(object, iteratee, keysFunc) {
      var index = -1,
          iterable = Object(object),
          props = keysFunc(object),
          length = props.length;

      while (length--) {
        var key = props[fromRight ? length : ++index];
        if (iteratee(iterable[key], key, iterable) === false) {
          break;
        }
      }
      return object;
    };
  }

  module.exports = createBaseFor;


/***/ },
/* 726 */
/***/ function(module, exports, __webpack_require__) {

  var arrayLikeKeys = __webpack_require__(727),
      baseKeys = __webpack_require__(735),
      isArrayLike = __webpack_require__(712);

  /**
   * Creates an array of the own enumerable property names of `object`.
   *
   * **Note:** Non-object values are coerced to objects. See the
   * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
   * for more details.
   *
   * @static
   * @since 0.1.0
   * @memberOf _
   * @category Object
   * @param {Object} object The object to query.
   * @returns {Array} Returns the array of property names.
   * @example
   *
   * function Foo() {
   *   this.a = 1;
   *   this.b = 2;
   * }
   *
   * Foo.prototype.c = 3;
   *
   * _.keys(new Foo);
   * // => ['a', 'b'] (iteration order is not guaranteed)
   *
   * _.keys('hi');
   * // => ['0', '1']
   */
  function keys(object) {
    return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
  }

  module.exports = keys;


/***/ },
/* 727 */
/***/ function(module, exports, __webpack_require__) {

  var baseTimes = __webpack_require__(728),
      isArguments = __webpack_require__(679),
      isArray = __webpack_require__(631),
      isBuffer = __webpack_require__(729),
      isIndex = __webpack_require__(681),
      isTypedArray = __webpack_require__(732);

  /** Used for built-in method references. */
  var objectProto = Object.prototype;

  /** Used to check objects for own properties. */
  var hasOwnProperty = objectProto.hasOwnProperty;

  /**
   * Creates an array of the enumerable property names of the array-like `value`.
   *
   * @private
   * @param {*} value The value to query.
   * @param {boolean} inherited Specify returning inherited property names.
   * @returns {Array} Returns the array of property names.
   */
  function arrayLikeKeys(value, inherited) {
    var isArr = isArray(value),
        isArg = !isArr && isArguments(value),
        isBuff = !isArr && !isArg && isBuffer(value),
        isType = !isArr && !isArg && !isBuff && isTypedArray(value),
        skipIndexes = isArr || isArg || isBuff || isType,
        result = skipIndexes ? baseTimes(value.length, String) : [],
        length = result.length;

    for (var key in value) {
      if ((inherited || hasOwnProperty.call(value, key)) &&
          !(skipIndexes && (
             // Safari 9 has enumerable `arguments.length` in strict mode.
             key == 'length' ||
             // Node.js 0.10 has enumerable non-index properties on buffers.
             (isBuff && (key == 'offset' || key == 'parent')) ||
             // PhantomJS 2 has enumerable non-index properties on typed arrays.
             (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||
             // Skip index properties.
             isIndex(key, length)
          ))) {
        result.push(key);
      }
    }
    return result;
  }

  module.exports = arrayLikeKeys;


/***/ },
/* 728 */
/***/ function(module, exports) {

  /**
   * The base implementation of `_.times` without support for iteratee shorthands
   * or max array length checks.
   *
   * @private
   * @param {number} n The number of times to invoke `iteratee`.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns the array of results.
   */
  function baseTimes(n, iteratee) {
    var index = -1,
        result = Array(n);

    while (++index < n) {
      result[index] = iteratee(index);
    }
    return result;
  }

  module.exports = baseTimes;


/***/ },
/* 729 */
/***/ function(module, exports, __webpack_require__) {

  /* WEBPACK VAR INJECTION */(function(module) {var root = __webpack_require__(636),
      stubFalse = __webpack_require__(731);

  /** Detect free variable `exports`. */
  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;

  /** Detect free variable `module`. */
  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

  /** Detect the popular CommonJS extension `module.exports`. */
  var moduleExports = freeModule && freeModule.exports === freeExports;

  /** Built-in value references. */
  var Buffer = moduleExports ? root.Buffer : undefined;

  /* Built-in method references for those with the same name as other `lodash` methods. */
  var nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;

  /**
   * Checks if `value` is a buffer.
   *
   * @static
   * @memberOf _
   * @since 4.3.0
   * @category Lang
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
   * @example
   *
   * _.isBuffer(new Buffer(2));
   * // => true
   *
   * _.isBuffer(new Uint8Array(2));
   * // => false
   */
  var isBuffer = nativeIsBuffer || stubFalse;

  module.exports = isBuffer;

  /* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(730)(module)))

/***/ },
/* 730 */
/***/ function(module, exports) {

  module.exports = function(module) {
  	if(!module.webpackPolyfill) {
  		module.deprecate = function() {};
  		module.paths = [];
  		// module.parent = undefined by default
  		module.children = [];
  		module.webpackPolyfill = 1;
  	}
  	return module;
  }


/***/ },
/* 731 */
/***/ function(module, exports) {

  /**
   * This method returns `false`.
   *
   * @static
   * @memberOf _
   * @since 4.13.0
   * @category Util
   * @returns {boolean} Returns `false`.
   * @example
   *
   * _.times(2, _.stubFalse);
   * // => [false, false]
   */
  function stubFalse() {
    return false;
  }

  module.exports = stubFalse;


/***/ },
/* 732 */
/***/ function(module, exports, __webpack_require__) {

  var baseIsTypedArray = __webpack_require__(733),
      baseUnary = __webpack_require__(697),
      nodeUtil = __webpack_require__(734);

  /* Node.js helper references. */
  var nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;

  /**
   * Checks if `value` is classified as a typed array.
   *
   * @static
   * @memberOf _
   * @since 3.0.0
   * @category Lang
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
   * @example
   *
   * _.isTypedArray(new Uint8Array);
   * // => true
   *
   * _.isTypedArray([]);
   * // => false
   */
  var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;

  module.exports = isTypedArray;


/***/ },
/* 733 */
/***/ function(module, exports, __webpack_require__) {

  var baseGetTag = __webpack_require__(634),
      isLength = __webpack_require__(682),
      isObjectLike = __webpack_require__(640);

  /** `Object#toString` result references. */
  var argsTag = '[object Arguments]',
      arrayTag = '[object Array]',
      boolTag = '[object Boolean]',
      dateTag = '[object Date]',
      errorTag = '[object Error]',
      funcTag = '[object Function]',
      mapTag = '[object Map]',
      numberTag = '[object Number]',
      objectTag = '[object Object]',
      regexpTag = '[object RegExp]',
      setTag = '[object Set]',
      stringTag = '[object String]',
      weakMapTag = '[object WeakMap]';

  var arrayBufferTag = '[object ArrayBuffer]',
      dataViewTag = '[object DataView]',
      float32Tag = '[object Float32Array]',
      float64Tag = '[object Float64Array]',
      int8Tag = '[object Int8Array]',
      int16Tag = '[object Int16Array]',
      int32Tag = '[object Int32Array]',
      uint8Tag = '[object Uint8Array]',
      uint8ClampedTag = '[object Uint8ClampedArray]',
      uint16Tag = '[object Uint16Array]',
      uint32Tag = '[object Uint32Array]';

  /** Used to identify `toStringTag` values of typed arrays. */
  var typedArrayTags = {};
  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =
  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =
  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =
  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =
  typedArrayTags[uint32Tag] = true;
  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =
  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =
  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =
  typedArrayTags[errorTag] = typedArrayTags[funcTag] =
  typedArrayTags[mapTag] = typedArrayTags[numberTag] =
  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =
  typedArrayTags[setTag] = typedArrayTags[stringTag] =
  typedArrayTags[weakMapTag] = false;

  /**
   * The base implementation of `_.isTypedArray` without Node.js optimizations.
   *
   * @private
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
   */
  function baseIsTypedArray(value) {
    return isObjectLike(value) &&
      isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
  }

  module.exports = baseIsTypedArray;


/***/ },
/* 734 */
/***/ function(module, exports, __webpack_require__) {

  /* WEBPACK VAR INJECTION */(function(module) {var freeGlobal = __webpack_require__(637);

  /** Detect free variable `exports`. */
  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;

  /** Detect free variable `module`. */
  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

  /** Detect the popular CommonJS extension `module.exports`. */
  var moduleExports = freeModule && freeModule.exports === freeExports;

  /** Detect free variable `process` from Node.js. */
  var freeProcess = moduleExports && freeGlobal.process;

  /** Used to access faster Node.js helpers. */
  var nodeUtil = (function() {
    try {
      return freeProcess && freeProcess.binding && freeProcess.binding('util');
    } catch (e) {}
  }());

  module.exports = nodeUtil;

  /* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(730)(module)))

/***/ },
/* 735 */
/***/ function(module, exports, __webpack_require__) {

  var isPrototype = __webpack_require__(736),
      nativeKeys = __webpack_require__(737);

  /** Used for built-in method references. */
  var objectProto = Object.prototype;

  /** Used to check objects for own properties. */
  var hasOwnProperty = objectProto.hasOwnProperty;

  /**
   * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
   *
   * @private
   * @param {Object} object The object to query.
   * @returns {Array} Returns the array of property names.
   */
  function baseKeys(object) {
    if (!isPrototype(object)) {
      return nativeKeys(object);
    }
    var result = [];
    for (var key in Object(object)) {
      if (hasOwnProperty.call(object, key) && key != 'constructor') {
        result.push(key);
      }
    }
    return result;
  }

  module.exports = baseKeys;


/***/ },
/* 736 */
/***/ function(module, exports) {

  /** Used for built-in method references. */
  var objectProto = Object.prototype;

  /**
   * Checks if `value` is likely a prototype object.
   *
   * @private
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
   */
  function isPrototype(value) {
    var Ctor = value && value.constructor,
        proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;

    return value === proto;
  }

  module.exports = isPrototype;


/***/ },
/* 737 */
/***/ function(module, exports, __webpack_require__) {

  var overArg = __webpack_require__(738);

  /* Built-in method references for those with the same name as other `lodash` methods. */
  var nativeKeys = overArg(Object.keys, Object);

  module.exports = nativeKeys;


/***/ },
/* 738 */
/***/ function(module, exports) {

  /**
   * Creates a unary function that invokes `func` with its argument transformed.
   *
   * @private
   * @param {Function} func The function to wrap.
   * @param {Function} transform The argument transform.
   * @returns {Function} Returns the new function.
   */
  function overArg(func, transform) {
    return function(arg) {
      return func(transform(arg));
    };
  }

  module.exports = overArg;


/***/ },
/* 739 */
/***/ function(module, exports, __webpack_require__) {

  var isArrayLike = __webpack_require__(712);

  /**
   * Creates a `baseEach` or `baseEachRight` function.
   *
   * @private
   * @param {Function} eachFunc The function to iterate over a collection.
   * @param {boolean} [fromRight] Specify iterating from right to left.
   * @returns {Function} Returns the new base function.
   */
  function createBaseEach(eachFunc, fromRight) {
    return function(collection, iteratee) {
      if (collection == null) {
        return collection;
      }
      if (!isArrayLike(collection)) {
        return eachFunc(collection, iteratee);
      }
      var length = collection.length,
          index = fromRight ? length : -1,
          iterable = Object(collection);

      while ((fromRight ? index-- : ++index < length)) {
        if (iteratee(iterable[index], index, iterable) === false) {
          break;
        }
      }
      return collection;
    };
  }

  module.exports = createBaseEach;


/***/ },
/* 740 */
/***/ function(module, exports, __webpack_require__) {

  var baseMatches = __webpack_require__(741),
      baseMatchesProperty = __webpack_require__(766),
      identity = __webpack_require__(703),
      isArray = __webpack_require__(631),
      property = __webpack_require__(771);

  /**
   * The base implementation of `_.iteratee`.
   *
   * @private
   * @param {*} [value=_.identity] The value to convert to an iteratee.
   * @returns {Function} Returns the iteratee.
   */
  function baseIteratee(value) {
    // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.
    // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.
    if (typeof value == 'function') {
      return value;
    }
    if (value == null) {
      return identity;
    }
    if (typeof value == 'object') {
      return isArray(value)
        ? baseMatchesProperty(value[0], value[1])
        : baseMatches(value);
    }
    return property(value);
  }

  module.exports = baseIteratee;


/***/ },
/* 741 */
/***/ function(module, exports, __webpack_require__) {

  var baseIsMatch = __webpack_require__(742),
      getMatchData = __webpack_require__(763),
      matchesStrictComparable = __webpack_require__(765);

  /**
   * The base implementation of `_.matches` which doesn't clone `source`.
   *
   * @private
   * @param {Object} source The object of property values to match.
   * @returns {Function} Returns the new spec function.
   */
  function baseMatches(source) {
    var matchData = getMatchData(source);
    if (matchData.length == 1 && matchData[0][2]) {
      return matchesStrictComparable(matchData[0][0], matchData[0][1]);
    }
    return function(object) {
      return object === source || baseIsMatch(object, source, matchData);
    };
  }

  module.exports = baseMatches;


/***/ },
/* 742 */
/***/ function(module, exports, __webpack_require__) {

  var Stack = __webpack_require__(743),
      baseIsEqual = __webpack_require__(749);

  /** Used to compose bitmasks for value comparisons. */
  var COMPARE_PARTIAL_FLAG = 1,
      COMPARE_UNORDERED_FLAG = 2;

  /**
   * The base implementation of `_.isMatch` without support for iteratee shorthands.
   *
   * @private
   * @param {Object} object The object to inspect.
   * @param {Object} source The object of property values to match.
   * @param {Array} matchData The property names, values, and compare flags to match.
   * @param {Function} [customizer] The function to customize comparisons.
   * @returns {boolean} Returns `true` if `object` is a match, else `false`.
   */
  function baseIsMatch(object, source, matchData, customizer) {
    var index = matchData.length,
        length = index,
        noCustomizer = !customizer;

    if (object == null) {
      return !length;
    }
    object = Object(object);
    while (index--) {
      var data = matchData[index];
      if ((noCustomizer && data[2])
            ? data[1] !== object[data[0]]
            : !(data[0] in object)
          ) {
        return false;
      }
    }
    while (++index < length) {
      data = matchData[index];
      var key = data[0],
          objValue = object[key],
          srcValue = data[1];

      if (noCustomizer && data[2]) {
        if (objValue === undefined && !(key in object)) {
          return false;
        }
      } else {
        var stack = new Stack;
        if (customizer) {
          var result = customizer(objValue, srcValue, key, object, source, stack);
        }
        if (!(result === undefined
              ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)
              : result
            )) {
          return false;
        }
      }
    }
    return true;
  }

  module.exports = baseIsMatch;


/***/ },
/* 743 */
/***/ function(module, exports, __webpack_require__) {

  var ListCache = __webpack_require__(661),
      stackClear = __webpack_require__(744),
      stackDelete = __webpack_require__(745),
      stackGet = __webpack_require__(746),
      stackHas = __webpack_require__(747),
      stackSet = __webpack_require__(748);

  /**
   * Creates a stack cache object to store key-value pairs.
   *
   * @private
   * @constructor
   * @param {Array} [entries] The key-value pairs to cache.
   */
  function Stack(entries) {
    var data = this.__data__ = new ListCache(entries);
    this.size = data.size;
  }

  // Add methods to `Stack`.
  Stack.prototype.clear = stackClear;
  Stack.prototype['delete'] = stackDelete;
  Stack.prototype.get = stackGet;
  Stack.prototype.has = stackHas;
  Stack.prototype.set = stackSet;

  module.exports = Stack;


/***/ },
/* 744 */
/***/ function(module, exports, __webpack_require__) {

  var ListCache = __webpack_require__(661);

  /**
   * Removes all key-value entries from the stack.
   *
   * @private
   * @name clear
   * @memberOf Stack
   */
  function stackClear() {
    this.__data__ = new ListCache;
    this.size = 0;
  }

  module.exports = stackClear;


/***/ },
/* 745 */
/***/ function(module, exports) {

  /**
   * Removes `key` and its value from the stack.
   *
   * @private
   * @name delete
   * @memberOf Stack
   * @param {string} key The key of the value to remove.
   * @returns {boolean} Returns `true` if the entry was removed, else `false`.
   */
  function stackDelete(key) {
    var data = this.__data__,
        result = data['delete'](key);

    this.size = data.size;
    return result;
  }

  module.exports = stackDelete;


/***/ },
/* 746 */
/***/ function(module, exports) {

  /**
   * Gets the stack value for `key`.
   *
   * @private
   * @name get
   * @memberOf Stack
   * @param {string} key The key of the value to get.
   * @returns {*} Returns the entry value.
   */
  function stackGet(key) {
    return this.__data__.get(key);
  }

  module.exports = stackGet;


/***/ },
/* 747 */
/***/ function(module, exports) {

  /**
   * Checks if a stack value for `key` exists.
   *
   * @private
   * @name has
   * @memberOf Stack
   * @param {string} key The key of the entry to check.
   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
   */
  function stackHas(key) {
    return this.__data__.has(key);
  }

  module.exports = stackHas;


/***/ },
/* 748 */
/***/ function(module, exports, __webpack_require__) {

  var ListCache = __webpack_require__(661),
      Map = __webpack_require__(669),
      MapCache = __webpack_require__(644);

  /** Used as the size to enable large array optimizations. */
  var LARGE_ARRAY_SIZE = 200;

  /**
   * Sets the stack `key` to `value`.
   *
   * @private
   * @name set
   * @memberOf Stack
   * @param {string} key The key of the value to set.
   * @param {*} value The value to set.
   * @returns {Object} Returns the stack cache instance.
   */
  function stackSet(key, value) {
    var data = this.__data__;
    if (data instanceof ListCache) {
      var pairs = data.__data__;
      if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {
        pairs.push([key, value]);
        this.size = ++data.size;
        return this;
      }
      data = this.__data__ = new MapCache(pairs);
    }
    data.set(key, value);
    this.size = data.size;
    return this;
  }

  module.exports = stackSet;


/***/ },
/* 749 */
/***/ function(module, exports, __webpack_require__) {

  var baseIsEqualDeep = __webpack_require__(750),
      isObject = __webpack_require__(652),
      isObjectLike = __webpack_require__(640);

  /**
   * The base implementation of `_.isEqual` which supports partial comparisons
   * and tracks traversed objects.
   *
   * @private
   * @param {*} value The value to compare.
   * @param {*} other The other value to compare.
   * @param {boolean} bitmask The bitmask flags.
   *  1 - Unordered comparison
   *  2 - Partial comparison
   * @param {Function} [customizer] The function to customize comparisons.
   * @param {Object} [stack] Tracks traversed `value` and `other` objects.
   * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
   */
  function baseIsEqual(value, other, bitmask, customizer, stack) {
    if (value === other) {
      return true;
    }
    if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {
      return value !== value && other !== other;
    }
    return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
  }

  module.exports = baseIsEqual;


/***/ },
/* 750 */
/***/ function(module, exports, __webpack_require__) {

  var Stack = __webpack_require__(743),
      equalArrays = __webpack_require__(751),
      equalByTag = __webpack_require__(753),
      equalObjects = __webpack_require__(757),
      getTag = __webpack_require__(758),
      isArray = __webpack_require__(631),
      isBuffer = __webpack_require__(729),
      isTypedArray = __webpack_require__(732);

  /** Used to compose bitmasks for value comparisons. */
  var COMPARE_PARTIAL_FLAG = 1;

  /** `Object#toString` result references. */
  var argsTag = '[object Arguments]',
      arrayTag = '[object Array]',
      objectTag = '[object Object]';

  /** Used for built-in method references. */
  var objectProto = Object.prototype;

  /** Used to check objects for own properties. */
  var hasOwnProperty = objectProto.hasOwnProperty;

  /**
   * A specialized version of `baseIsEqual` for arrays and objects which performs
   * deep comparisons and tracks traversed objects enabling objects with circular
   * references to be compared.
   *
   * @private
   * @param {Object} object The object to compare.
   * @param {Object} other The other object to compare.
   * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
   * @param {Function} customizer The function to customize comparisons.
   * @param {Function} equalFunc The function to determine equivalents of values.
   * @param {Object} [stack] Tracks traversed `object` and `other` objects.
   * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
   */
  function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
    var objIsArr = isArray(object),
        othIsArr = isArray(other),
        objTag = arrayTag,
        othTag = arrayTag;

    if (!objIsArr) {
      objTag = getTag(object);
      objTag = objTag == argsTag ? objectTag : objTag;
    }
    if (!othIsArr) {
      othTag = getTag(other);
      othTag = othTag == argsTag ? objectTag : othTag;
    }
    var objIsObj = objTag == objectTag,
        othIsObj = othTag == objectTag,
        isSameTag = objTag == othTag;

    if (isSameTag && isBuffer(object)) {
      if (!isBuffer(other)) {
        return false;
      }
      objIsArr = true;
      objIsObj = false;
    }
    if (isSameTag && !objIsObj) {
      stack || (stack = new Stack);
      return (objIsArr || isTypedArray(object))
        ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)
        : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
    }
    if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
      var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),
          othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');

      if (objIsWrapped || othIsWrapped) {
        var objUnwrapped = objIsWrapped ? object.value() : object,
            othUnwrapped = othIsWrapped ? other.value() : other;

        stack || (stack = new Stack);
        return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
      }
    }
    if (!isSameTag) {
      return false;
    }
    stack || (stack = new Stack);
    return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
  }

  module.exports = baseIsEqualDeep;


/***/ },
/* 751 */
/***/ function(module, exports, __webpack_require__) {

  var SetCache = __webpack_require__(688),
      arraySome = __webpack_require__(752),
      cacheHas = __webpack_require__(698);

  /** Used to compose bitmasks for value comparisons. */
  var COMPARE_PARTIAL_FLAG = 1,
      COMPARE_UNORDERED_FLAG = 2;

  /**
   * A specialized version of `baseIsEqualDeep` for arrays with support for
   * partial deep comparisons.
   *
   * @private
   * @param {Array} array The array to compare.
   * @param {Array} other The other array to compare.
   * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
   * @param {Function} customizer The function to customize comparisons.
   * @param {Function} equalFunc The function to determine equivalents of values.
   * @param {Object} stack Tracks traversed `array` and `other` objects.
   * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.
   */
  function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
    var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
        arrLength = array.length,
        othLength = other.length;

    if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
      return false;
    }
    // Assume cyclic values are equal.
    var stacked = stack.get(array);
    if (stacked && stack.get(other)) {
      return stacked == other;
    }
    var index = -1,
        result = true,
        seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;

    stack.set(array, other);
    stack.set(other, array);

    // Ignore non-index properties.
    while (++index < arrLength) {
      var arrValue = array[index],
          othValue = other[index];

      if (customizer) {
        var compared = isPartial
          ? customizer(othValue, arrValue, index, other, array, stack)
          : customizer(arrValue, othValue, index, array, other, stack);
      }
      if (compared !== undefined) {
        if (compared) {
          continue;
        }
        result = false;
        break;
      }
      // Recursively compare arrays (susceptible to call stack limits).
      if (seen) {
        if (!arraySome(other, function(othValue, othIndex) {
              if (!cacheHas(seen, othIndex) &&
                  (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
                return seen.push(othIndex);
              }
            })) {
          result = false;
          break;
        }
      } else if (!(
            arrValue === othValue ||
              equalFunc(arrValue, othValue, bitmask, customizer, stack)
          )) {
        result = false;
        break;
      }
    }
    stack['delete'](array);
    stack['delete'](other);
    return result;
  }

  module.exports = equalArrays;


/***/ },
/* 752 */
/***/ function(module, exports) {

  /**
   * A specialized version of `_.some` for arrays without support for iteratee
   * shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} predicate The function invoked per iteration.
   * @returns {boolean} Returns `true` if any element passes the predicate check,
   *  else `false`.
   */
  function arraySome(array, predicate) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      if (predicate(array[index], index, array)) {
        return true;
      }
    }
    return false;
  }

  module.exports = arraySome;


/***/ },
/* 753 */
/***/ function(module, exports, __webpack_require__) {

  var Symbol = __webpack_require__(635),
      Uint8Array = __webpack_require__(754),
      eq = __webpack_require__(665),
      equalArrays = __webpack_require__(751),
      mapToArray = __webpack_require__(755),
      setToArray = __webpack_require__(756);

  /** Used to compose bitmasks for value comparisons. */
  var COMPARE_PARTIAL_FLAG = 1,
      COMPARE_UNORDERED_FLAG = 2;

  /** `Object#toString` result references. */
  var boolTag = '[object Boolean]',
      dateTag = '[object Date]',
      errorTag = '[object Error]',
      mapTag = '[object Map]',
      numberTag = '[object Number]',
      regexpTag = '[object RegExp]',
      setTag = '[object Set]',
      stringTag = '[object String]',
      symbolTag = '[object Symbol]';

  var arrayBufferTag = '[object ArrayBuffer]',
      dataViewTag = '[object DataView]';

  /** Used to convert symbols to primitives and strings. */
  var symbolProto = Symbol ? Symbol.prototype : undefined,
      symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;

  /**
   * A specialized version of `baseIsEqualDeep` for comparing objects of
   * the same `toStringTag`.
   *
   * **Note:** This function only supports comparing values with tags of
   * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
   *
   * @private
   * @param {Object} object The object to compare.
   * @param {Object} other The other object to compare.
   * @param {string} tag The `toStringTag` of the objects to compare.
   * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
   * @param {Function} customizer The function to customize comparisons.
   * @param {Function} equalFunc The function to determine equivalents of values.
   * @param {Object} stack Tracks traversed `object` and `other` objects.
   * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
   */
  function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
    switch (tag) {
      case dataViewTag:
        if ((object.byteLength != other.byteLength) ||
            (object.byteOffset != other.byteOffset)) {
          return false;
        }
        object = object.buffer;
        other = other.buffer;

      case arrayBufferTag:
        if ((object.byteLength != other.byteLength) ||
            !equalFunc(new Uint8Array(object), new Uint8Array(other))) {
          return false;
        }
        return true;

      case boolTag:
      case dateTag:
      case numberTag:
        // Coerce booleans to `1` or `0` and dates to milliseconds.
        // Invalid dates are coerced to `NaN`.
        return eq(+object, +other);

      case errorTag:
        return object.name == other.name && object.message == other.message;

      case regexpTag:
      case stringTag:
        // Coerce regexes to strings and treat strings, primitives and objects,
        // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring
        // for more details.
        return object == (other + '');

      case mapTag:
        var convert = mapToArray;

      case setTag:
        var isPartial = bitmask & COMPARE_PARTIAL_FLAG;
        convert || (convert = setToArray);

        if (object.size != other.size && !isPartial) {
          return false;
        }
        // Assume cyclic values are equal.
        var stacked = stack.get(object);
        if (stacked) {
          return stacked == other;
        }
        bitmask |= COMPARE_UNORDERED_FLAG;

        // Recursively compare objects (susceptible to call stack limits).
        stack.set(object, other);
        var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
        stack['delete'](object);
        return result;

      case symbolTag:
        if (symbolValueOf) {
          return symbolValueOf.call(object) == symbolValueOf.call(other);
        }
    }
    return false;
  }

  module.exports = equalByTag;


/***/ },
/* 754 */
/***/ function(module, exports, __webpack_require__) {

  var root = __webpack_require__(636);

  /** Built-in value references. */
  var Uint8Array = root.Uint8Array;

  module.exports = Uint8Array;


/***/ },
/* 755 */
/***/ function(module, exports) {

  /**
   * Converts `map` to its key-value pairs.
   *
   * @private
   * @param {Object} map The map to convert.
   * @returns {Array} Returns the key-value pairs.
   */
  function mapToArray(map) {
    var index = -1,
        result = Array(map.size);

    map.forEach(function(value, key) {
      result[++index] = [key, value];
    });
    return result;
  }

  module.exports = mapToArray;


/***/ },
/* 756 */
/***/ function(module, exports) {

  /**
   * Converts `set` to an array of its values.
   *
   * @private
   * @param {Object} set The set to convert.
   * @returns {Array} Returns the values.
   */
  function setToArray(set) {
    var index = -1,
        result = Array(set.size);

    set.forEach(function(value) {
      result[++index] = value;
    });
    return result;
  }

  module.exports = setToArray;


/***/ },
/* 757 */
/***/ function(module, exports, __webpack_require__) {

  var keys = __webpack_require__(726);

  /** Used to compose bitmasks for value comparisons. */
  var COMPARE_PARTIAL_FLAG = 1;

  /** Used for built-in method references. */
  var objectProto = Object.prototype;

  /** Used to check objects for own properties. */
  var hasOwnProperty = objectProto.hasOwnProperty;

  /**
   * A specialized version of `baseIsEqualDeep` for objects with support for
   * partial deep comparisons.
   *
   * @private
   * @param {Object} object The object to compare.
   * @param {Object} other The other object to compare.
   * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
   * @param {Function} customizer The function to customize comparisons.
   * @param {Function} equalFunc The function to determine equivalents of values.
   * @param {Object} stack Tracks traversed `object` and `other` objects.
   * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
   */
  function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
    var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
        objProps = keys(object),
        objLength = objProps.length,
        othProps = keys(other),
        othLength = othProps.length;

    if (objLength != othLength && !isPartial) {
      return false;
    }
    var index = objLength;
    while (index--) {
      var key = objProps[index];
      if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {
        return false;
      }
    }
    // Assume cyclic values are equal.
    var stacked = stack.get(object);
    if (stacked && stack.get(other)) {
      return stacked == other;
    }
    var result = true;
    stack.set(object, other);
    stack.set(other, object);

    var skipCtor = isPartial;
    while (++index < objLength) {
      key = objProps[index];
      var objValue = object[key],
          othValue = other[key];

      if (customizer) {
        var compared = isPartial
          ? customizer(othValue, objValue, key, other, object, stack)
          : customizer(objValue, othValue, key, object, other, stack);
      }
      // Recursively compare objects (susceptible to call stack limits).
      if (!(compared === undefined
            ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))
            : compared
          )) {
        result = false;
        break;
      }
      skipCtor || (skipCtor = key == 'constructor');
    }
    if (result && !skipCtor) {
      var objCtor = object.constructor,
          othCtor = other.constructor;

      // Non `Object` object instances with different constructors are not equal.
      if (objCtor != othCtor &&
          ('constructor' in object && 'constructor' in other) &&
          !(typeof objCtor == 'function' && objCtor instanceof objCtor &&
            typeof othCtor == 'function' && othCtor instanceof othCtor)) {
        result = false;
      }
    }
    stack['delete'](object);
    stack['delete'](other);
    return result;
  }

  module.exports = equalObjects;


/***/ },
/* 758 */
/***/ function(module, exports, __webpack_require__) {

  var DataView = __webpack_require__(759),
      Map = __webpack_require__(669),
      Promise = __webpack_require__(760),
      Set = __webpack_require__(761),
      WeakMap = __webpack_require__(762),
      baseGetTag = __webpack_require__(634),
      toSource = __webpack_require__(655);

  /** `Object#toString` result references. */
  var mapTag = '[object Map]',
      objectTag = '[object Object]',
      promiseTag = '[object Promise]',
      setTag = '[object Set]',
      weakMapTag = '[object WeakMap]';

  var dataViewTag = '[object DataView]';

  /** Used to detect maps, sets, and weakmaps. */
  var dataViewCtorString = toSource(DataView),
      mapCtorString = toSource(Map),
      promiseCtorString = toSource(Promise),
      setCtorString = toSource(Set),
      weakMapCtorString = toSource(WeakMap);

  /**
   * Gets the `toStringTag` of `value`.
   *
   * @private
   * @param {*} value The value to query.
   * @returns {string} Returns the `toStringTag`.
   */
  var getTag = baseGetTag;

  // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.
  if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||
      (Map && getTag(new Map) != mapTag) ||
      (Promise && getTag(Promise.resolve()) != promiseTag) ||
      (Set && getTag(new Set) != setTag) ||
      (WeakMap && getTag(new WeakMap) != weakMapTag)) {
    getTag = function(value) {
      var result = baseGetTag(value),
          Ctor = result == objectTag ? value.constructor : undefined,
          ctorString = Ctor ? toSource(Ctor) : '';

      if (ctorString) {
        switch (ctorString) {
          case dataViewCtorString: return dataViewTag;
          case mapCtorString: return mapTag;
          case promiseCtorString: return promiseTag;
          case setCtorString: return setTag;
          case weakMapCtorString: return weakMapTag;
        }
      }
      return result;
    };
  }

  module.exports = getTag;


/***/ },
/* 759 */
/***/ function(module, exports, __webpack_require__) {

  var getNative = __webpack_require__(649),
      root = __webpack_require__(636);

  /* Built-in method references that are verified to be native. */
  var DataView = getNative(root, 'DataView');

  module.exports = DataView;


/***/ },
/* 760 */
/***/ function(module, exports, __webpack_require__) {

  var getNative = __webpack_require__(649),
      root = __webpack_require__(636);

  /* Built-in method references that are verified to be native. */
  var Promise = getNative(root, 'Promise');

  module.exports = Promise;


/***/ },
/* 761 */
/***/ function(module, exports, __webpack_require__) {

  var getNative = __webpack_require__(649),
      root = __webpack_require__(636);

  /* Built-in method references that are verified to be native. */
  var Set = getNative(root, 'Set');

  module.exports = Set;


/***/ },
/* 762 */
/***/ function(module, exports, __webpack_require__) {

  var getNative = __webpack_require__(649),
      root = __webpack_require__(636);

  /* Built-in method references that are verified to be native. */
  var WeakMap = getNative(root, 'WeakMap');

  module.exports = WeakMap;


/***/ },
/* 763 */
/***/ function(module, exports, __webpack_require__) {

  var isStrictComparable = __webpack_require__(764),
      keys = __webpack_require__(726);

  /**
   * Gets the property names, values, and compare flags of `object`.
   *
   * @private
   * @param {Object} object The object to query.
   * @returns {Array} Returns the match data of `object`.
   */
  function getMatchData(object) {
    var result = keys(object),
        length = result.length;

    while (length--) {
      var key = result[length],
          value = object[key];

      result[length] = [key, value, isStrictComparable(value)];
    }
    return result;
  }

  module.exports = getMatchData;


/***/ },
/* 764 */
/***/ function(module, exports, __webpack_require__) {

  var isObject = __webpack_require__(652);

  /**
   * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.
   *
   * @private
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` if suitable for strict
   *  equality comparisons, else `false`.
   */
  function isStrictComparable(value) {
    return value === value && !isObject(value);
  }

  module.exports = isStrictComparable;


/***/ },
/* 765 */
/***/ function(module, exports) {

  /**
   * A specialized version of `matchesProperty` for source values suitable
   * for strict equality comparisons, i.e. `===`.
   *
   * @private
   * @param {string} key The key of the property to get.
   * @param {*} srcValue The value to match.
   * @returns {Function} Returns the new spec function.
   */
  function matchesStrictComparable(key, srcValue) {
    return function(object) {
      if (object == null) {
        return false;
      }
      return object[key] === srcValue &&
        (srcValue !== undefined || (key in Object(object)));
    };
  }

  module.exports = matchesStrictComparable;


/***/ },
/* 766 */
/***/ function(module, exports, __webpack_require__) {

  var baseIsEqual = __webpack_require__(749),
      get = __webpack_require__(767),
      hasIn = __webpack_require__(769),
      isKey = __webpack_require__(632),
      isStrictComparable = __webpack_require__(764),
      matchesStrictComparable = __webpack_require__(765),
      toKey = __webpack_require__(683);

  /** Used to compose bitmasks for value comparisons. */
  var COMPARE_PARTIAL_FLAG = 1,
      COMPARE_UNORDERED_FLAG = 2;

  /**
   * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.
   *
   * @private
   * @param {string} path The path of the property to get.
   * @param {*} srcValue The value to match.
   * @returns {Function} Returns the new spec function.
   */
  function baseMatchesProperty(path, srcValue) {
    if (isKey(path) && isStrictComparable(srcValue)) {
      return matchesStrictComparable(toKey(path), srcValue);
    }
    return function(object) {
      var objValue = get(object, path);
      return (objValue === undefined && objValue === srcValue)
        ? hasIn(object, path)
        : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);
    };
  }

  module.exports = baseMatchesProperty;


/***/ },
/* 767 */
/***/ function(module, exports, __webpack_require__) {

  var baseGet = __webpack_require__(768);

  /**
   * Gets the value at `path` of `object`. If the resolved value is
   * `undefined`, the `defaultValue` is returned in its place.
   *
   * @static
   * @memberOf _
   * @since 3.7.0
   * @category Object
   * @param {Object} object The object to query.
   * @param {Array|string} path The path of the property to get.
   * @param {*} [defaultValue] The value returned for `undefined` resolved values.
   * @returns {*} Returns the resolved value.
   * @example
   *
   * var object = { 'a': [{ 'b': { 'c': 3 } }] };
   *
   * _.get(object, 'a[0].b.c');
   * // => 3
   *
   * _.get(object, ['a', '0', 'b', 'c']);
   * // => 3
   *
   * _.get(object, 'a.b.c', 'default');
   * // => 'default'
   */
  function get(object, path, defaultValue) {
    var result = object == null ? undefined : baseGet(object, path);
    return result === undefined ? defaultValue : result;
  }

  module.exports = get;


/***/ },
/* 768 */
/***/ function(module, exports, __webpack_require__) {

  var castPath = __webpack_require__(630),
      toKey = __webpack_require__(683);

  /**
   * The base implementation of `_.get` without support for default values.
   *
   * @private
   * @param {Object} object The object to query.
   * @param {Array|string} path The path of the property to get.
   * @returns {*} Returns the resolved value.
   */
  function baseGet(object, path) {
    path = castPath(path, object);

    var index = 0,
        length = path.length;

    while (object != null && index < length) {
      object = object[toKey(path[index++])];
    }
    return (index && index == length) ? object : undefined;
  }

  module.exports = baseGet;


/***/ },
/* 769 */
/***/ function(module, exports, __webpack_require__) {

  var baseHasIn = __webpack_require__(770),
      hasPath = __webpack_require__(629);

  /**
   * Checks if `path` is a direct or inherited property of `object`.
   *
   * @static
   * @memberOf _
   * @since 4.0.0
   * @category Object
   * @param {Object} object The object to query.
   * @param {Array|string} path The path to check.
   * @returns {boolean} Returns `true` if `path` exists, else `false`.
   * @example
   *
   * var object = _.create({ 'a': _.create({ 'b': 2 }) });
   *
   * _.hasIn(object, 'a');
   * // => true
   *
   * _.hasIn(object, 'a.b');
   * // => true
   *
   * _.hasIn(object, ['a', 'b']);
   * // => true
   *
   * _.hasIn(object, 'b');
   * // => false
   */
  function hasIn(object, path) {
    return object != null && hasPath(object, path, baseHasIn);
  }

  module.exports = hasIn;


/***/ },
/* 770 */
/***/ function(module, exports) {

  /**
   * The base implementation of `_.hasIn` without support for deep paths.
   *
   * @private
   * @param {Object} [object] The object to query.
   * @param {Array|string} key The key to check.
   * @returns {boolean} Returns `true` if `key` exists, else `false`.
   */
  function baseHasIn(object, key) {
    return object != null && key in Object(object);
  }

  module.exports = baseHasIn;


/***/ },
/* 771 */
/***/ function(module, exports, __webpack_require__) {

  var baseProperty = __webpack_require__(772),
      basePropertyDeep = __webpack_require__(773),
      isKey = __webpack_require__(632),
      toKey = __webpack_require__(683);

  /**
   * Creates a function that returns the value at `path` of a given object.
   *
   * @static
   * @memberOf _
   * @since 2.4.0
   * @category Util
   * @param {Array|string} path The path of the property to get.
   * @returns {Function} Returns the new accessor function.
   * @example
   *
   * var objects = [
   *   { 'a': { 'b': 2 } },
   *   { 'a': { 'b': 1 } }
   * ];
   *
   * _.map(objects, _.property('a.b'));
   * // => [2, 1]
   *
   * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');
   * // => [1, 2]
   */
  function property(path) {
    return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);
  }

  module.exports = property;


/***/ },
/* 772 */
/***/ function(module, exports) {

  /**
   * The base implementation of `_.property` without support for deep paths.
   *
   * @private
   * @param {string} key The key of the property to get.
   * @returns {Function} Returns the new accessor function.
   */
  function baseProperty(key) {
    return function(object) {
      return object == null ? undefined : object[key];
    };
  }

  module.exports = baseProperty;


/***/ },
/* 773 */
/***/ function(module, exports, __webpack_require__) {

  var baseGet = __webpack_require__(768);

  /**
   * A specialized version of `baseProperty` which supports deep paths.
   *
   * @private
   * @param {Array|string} path The path of the property to get.
   * @returns {Function} Returns the new accessor function.
   */
  function basePropertyDeep(path) {
    return function(object) {
      return baseGet(object, path);
    };
  }

  module.exports = basePropertyDeep;


/***/ },
/* 774 */
/***/ function(module, exports, __webpack_require__) {

  var baseKeys = __webpack_require__(735),
      getTag = __webpack_require__(758),
      isArguments = __webpack_require__(679),
      isArray = __webpack_require__(631),
      isArrayLike = __webpack_require__(712),
      isBuffer = __webpack_require__(729),
      isPrototype = __webpack_require__(736),
      isTypedArray = __webpack_require__(732);

  /** `Object#toString` result references. */
  var mapTag = '[object Map]',
      setTag = '[object Set]';

  /** Used for built-in method references. */
  var objectProto = Object.prototype;

  /** Used to check objects for own properties. */
  var hasOwnProperty = objectProto.hasOwnProperty;

  /**
   * Checks if `value` is an empty object, collection, map, or set.
   *
   * Objects are considered empty if they have no own enumerable string keyed
   * properties.
   *
   * Array-like values such as `arguments` objects, arrays, buffers, strings, or
   * jQuery-like collections are considered empty if they have a `length` of `0`.
   * Similarly, maps and sets are considered empty if they have a `size` of `0`.
   *
   * @static
   * @memberOf _
   * @since 0.1.0
   * @category Lang
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is empty, else `false`.
   * @example
   *
   * _.isEmpty(null);
   * // => true
   *
   * _.isEmpty(true);
   * // => true
   *
   * _.isEmpty(1);
   * // => true
   *
   * _.isEmpty([1, 2, 3]);
   * // => false
   *
   * _.isEmpty({ 'a': 1 });
   * // => false
   */
  function isEmpty(value) {
    if (value == null) {
      return true;
    }
    if (isArrayLike(value) &&
        (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||
          isBuffer(value) || isTypedArray(value) || isArguments(value))) {
      return !value.length;
    }
    var tag = getTag(value);
    if (tag == mapTag || tag == setTag) {
      return !value.size;
    }
    if (isPrototype(value)) {
      return !baseKeys(value).length;
    }
    for (var key in value) {
      if (hasOwnProperty.call(value, key)) {
        return false;
      }
    }
    return true;
  }

  module.exports = isEmpty;


/***/ },
/* 775 */
/***/ function(module, exports, __webpack_require__) {

  var arrayMap = __webpack_require__(678),
      baseIntersection = __webpack_require__(776),
      baseRest = __webpack_require__(702),
      castArrayLikeObject = __webpack_require__(777);

  /**
   * Creates an array of unique values that are included in all given arrays
   * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
   * for equality comparisons. The order and references of result values are
   * determined by the first array.
   *
   * @static
   * @memberOf _
   * @since 0.1.0
   * @category Array
   * @param {...Array} [arrays] The arrays to inspect.
   * @returns {Array} Returns the new array of intersecting values.
   * @example
   *
   * _.intersection([2, 1], [2, 3]);
   * // => [2]
   */
  var intersection = baseRest(function(arrays) {
    var mapped = arrayMap(arrays, castArrayLikeObject);
    return (mapped.length && mapped[0] === arrays[0])
      ? baseIntersection(mapped)
      : [];
  });

  module.exports = intersection;


/***/ },
/* 776 */
/***/ function(module, exports, __webpack_require__) {

  var SetCache = __webpack_require__(688),
      arrayIncludes = __webpack_require__(691),
      arrayIncludesWith = __webpack_require__(696),
      arrayMap = __webpack_require__(678),
      baseUnary = __webpack_require__(697),
      cacheHas = __webpack_require__(698);

  /* Built-in method references for those with the same name as other `lodash` methods. */
  var nativeMin = Math.min;

  /**
   * The base implementation of methods like `_.intersection`, without support
   * for iteratee shorthands, that accepts an array of arrays to inspect.
   *
   * @private
   * @param {Array} arrays The arrays to inspect.
   * @param {Function} [iteratee] The iteratee invoked per element.
   * @param {Function} [comparator] The comparator invoked per element.
   * @returns {Array} Returns the new array of shared values.
   */
  function baseIntersection(arrays, iteratee, comparator) {
    var includes = comparator ? arrayIncludesWith : arrayIncludes,
        length = arrays[0].length,
        othLength = arrays.length,
        othIndex = othLength,
        caches = Array(othLength),
        maxLength = Infinity,
        result = [];

    while (othIndex--) {
      var array = arrays[othIndex];
      if (othIndex && iteratee) {
        array = arrayMap(array, baseUnary(iteratee));
      }
      maxLength = nativeMin(array.length, maxLength);
      caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))
        ? new SetCache(othIndex && array)
        : undefined;
    }
    array = arrays[0];

    var index = -1,
        seen = caches[0];

    outer:
    while (++index < length && result.length < maxLength) {
      var value = array[index],
          computed = iteratee ? iteratee(value) : value;

      value = (comparator || value !== 0) ? value : 0;
      if (!(seen
            ? cacheHas(seen, computed)
            : includes(result, computed, comparator)
          )) {
        othIndex = othLength;
        while (--othIndex) {
          var cache = caches[othIndex];
          if (!(cache
                ? cacheHas(cache, computed)
                : includes(arrays[othIndex], computed, comparator))
              ) {
            continue outer;
          }
        }
        if (seen) {
          seen.push(computed);
        }
        result.push(value);
      }
    }
    return result;
  }

  module.exports = baseIntersection;


/***/ },
/* 777 */
/***/ function(module, exports, __webpack_require__) {

  var isArrayLikeObject = __webpack_require__(711);

  /**
   * Casts `value` to an empty array if it's not an array like object.
   *
   * @private
   * @param {*} value The value to inspect.
   * @returns {Array|Object} Returns the cast array-like object.
   */
  function castArrayLikeObject(value) {
    return isArrayLikeObject(value) ? value : [];
  }

  module.exports = castArrayLikeObject;


/***/ },
/* 778 */
/***/ function(module, exports, __webpack_require__) {

  module.exports = __webpack_require__(779);


/***/ },
/* 779 */
/***/ function(module, exports, __webpack_require__) {

  var arrayEach = __webpack_require__(780),
      baseEach = __webpack_require__(722),
      castFunction = __webpack_require__(781),
      isArray = __webpack_require__(631);

  /**
   * Iterates over elements of `collection` and invokes `iteratee` for each element.
   * The iteratee is invoked with three arguments: (value, index|key, collection).
   * Iteratee functions may exit iteration early by explicitly returning `false`.
   *
   * **Note:** As with other "Collections" methods, objects with a "length"
   * property are iterated like arrays. To avoid this behavior use `_.forIn`
   * or `_.forOwn` for object iteration.
   *
   * @static
   * @memberOf _
   * @since 0.1.0
   * @alias each
   * @category Collection
   * @param {Array|Object} collection The collection to iterate over.
   * @param {Function} [iteratee=_.identity] The function invoked per iteration.
   * @returns {Array|Object} Returns `collection`.
   * @see _.forEachRight
   * @example
   *
   * _.forEach([1, 2], function(value) {
   *   console.log(value);
   * });
   * // => Logs `1` then `2`.
   *
   * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {
   *   console.log(key);
   * });
   * // => Logs 'a' then 'b' (iteration order is not guaranteed).
   */
  function forEach(collection, iteratee) {
    var func = isArray(collection) ? arrayEach : baseEach;
    return func(collection, castFunction(iteratee));
  }

  module.exports = forEach;


/***/ },
/* 780 */
/***/ function(module, exports) {

  /**
   * A specialized version of `_.forEach` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns `array`.
   */
  function arrayEach(array, iteratee) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      if (iteratee(array[index], index, array) === false) {
        break;
      }
    }
    return array;
  }

  module.exports = arrayEach;


/***/ },
/* 781 */
/***/ function(module, exports, __webpack_require__) {

  var identity = __webpack_require__(703);

  /**
   * Casts `value` to `identity` if it's not a function.
   *
   * @private
   * @param {*} value The value to inspect.
   * @returns {Function} Returns cast function.
   */
  function castFunction(value) {
    return typeof value == 'function' ? value : identity;
  }

  module.exports = castFunction;


/***/ },
/* 782 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.useVerticalAlignProp = exports.useTextAlignProp = exports.useWidthProp = exports.useKeyOrValueAndKey = exports.useValueAndKey = exports.useKeyOnly = undefined;

  var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; /*
                                                                                                                                                                                                                                                                                 * There are 4 prop patterns used to build up the className for a component.
                                                                                                                                                                                                                                                                                 * Each utility here is meant for use in a classnames() argument.
                                                                                                                                                                                                                                                                                 *
                                                                                                                                                                                                                                                                                 * There is no util for valueOnly() because it would simply return val.
                                                                                                                                                                                                                                                                                 * Use the prop value inline instead.
                                                                                                                                                                                                                                                                                 *   <Label size='big' />
                                                                                                                                                                                                                                                                                 *   <div class="ui big label"></div>
                                                                                                                                                                                                                                                                                 */


  var _numberToWord = __webpack_require__(783);

  /**
   * Props where only the prop key is used in the className.
   * @param {*} val A props value
   * @param {string} key A props key
   *
   * @example
   * <Label tag />
   * <div class="ui tag label"></div>
   */
  var useKeyOnly = exports.useKeyOnly = function useKeyOnly(val, key) {
    return val && key;
  };

  /**
   * Props that require both a key and value to create a className.
   * @param {*} val A props value
   * @param {string} key A props key
   *
   * @example
   * <Label corner='left' />
   * <div class="ui left corner label"></div>
   */
  var useValueAndKey = exports.useValueAndKey = function useValueAndKey(val, key) {
    return val && val !== true && val + ' ' + key;
  };

  /**
   * Props whose key will be used in className, or value and key.
   * @param {*} val A props value
   * @param {string} key A props key
   *
   * @example Key Only
   * <Label pointing />
   * <div class="ui pointing label"></div>
   *
   * @example Key and Value
   * <Label pointing='left' />
   * <div class="ui left pointing label"></div>
   */
  var useKeyOrValueAndKey = exports.useKeyOrValueAndKey = function useKeyOrValueAndKey(val, key) {
    return val && (val === true ? key : val + ' ' + key);
  };

  //
  // Prop to className exceptions
  //

  /**
   * Create "X", "X wide" and "equal width" classNames.
   * "X" is a numberToWord value and "wide" is configurable.
   * @param {*} val The prop value
   * @param {string} [widthClass=''] The class
   * @param {boolean} [canEqual=false] Flag that indicates possibility of "equal" value
   *
   * @example
   * <Grid columns='equal' />
   * <div class="ui equal width grid"></div>
   *
   * <Form widths='equal' />
   * <div class="ui equal width form"></div>
   *
   * <FieldGroup widths='equal' />
   * <div class="equal width fields"></div>
   *
   * @example
   * <Grid columns={4} />
   * <div class="ui four column grid"></div>
   */
  var useWidthProp = exports.useWidthProp = function useWidthProp(val) {
    var widthClass = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';
    var canEqual = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

    if (canEqual && val === 'equal') {
      return 'equal width';
    }
    var valType = typeof val === 'undefined' ? 'undefined' : _typeof(val);
    if ((valType === 'string' || valType === 'number') && widthClass) {
      return (0, _numberToWord.numberToWord)(val) + ' ' + widthClass;
    }
    return (0, _numberToWord.numberToWord)(val);
  };
  /**
   * The "textAlign" prop follows the useValueAndKey except when the value is "justified'.
   * In this case, only the class "justified" is used, ignoring the "aligned" class.
   * @param {*} val The value of the "textAlign" prop
   *
   * @example
   * <Container textAlign='justified' />
   * <div class="ui justified container"></div>
   *
   * @example
   * <Container textAlign='left' />
   * <div class="ui left aligned container"></div>
   */
  var useTextAlignProp = exports.useTextAlignProp = function useTextAlignProp(val) {
    return val === 'justified' ? 'justified' : useValueAndKey(val, 'aligned');
  };

  /**
   * The "verticalAlign" prop follows the useValueAndKey.
   *
   * @param {*} val The value of the "verticalAlign" prop
   *
   * @example
   * <Grid verticalAlign='middle' />
   * <div class="ui middle aligned grid"></div>
   */
  var useVerticalAlignProp = exports.useVerticalAlignProp = function useVerticalAlignProp(val) {
    return useValueAndKey(val, 'aligned');
  };

/***/ },
/* 783 */
/***/ function(module, exports) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

  exports.numberToWord = numberToWord;
  var numberToWordMap = exports.numberToWordMap = {
    1: 'one',
    2: 'two',
    3: 'three',
    4: 'four',
    5: 'five',
    6: 'six',
    7: 'seven',
    8: 'eight',
    9: 'nine',
    10: 'ten',
    11: 'eleven',
    12: 'twelve',
    13: 'thirteen',
    14: 'fourteen',
    15: 'fifteen',
    16: 'sixteen'
  };

  /**
   * Return the number word for numbers 1-16.
   * Returns strings or numbers as is if there is no corresponding word.
   * Returns an empty string if value is not a string or number.
   * @param {string|number} value The value to convert to a word.
   * @returns {string}
   */
  function numberToWord(value) {
    var type = typeof value === 'undefined' ? 'undefined' : _typeof(value);
    if (type === 'string' || type === 'number') {
      return numberToWordMap[value] || value;
    }

    return '';
  }

/***/ },
/* 784 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.debug = exports.makeDebugger = undefined;

  var _isBrowser = __webpack_require__(785);

  var _isBrowser2 = _interopRequireDefault(_isBrowser);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  var _debug = void 0;
  var noop = function noop() {
    return undefined;
  };

  if (_isBrowser2.default && ("development") !== 'production' && ("development") !== 'test') {
    // Heads Up!
    // https://github.com/visionmedia/debug/pull/331
    //
    // debug now clears storage on load, grab the debug settings before require('debug').
    // We try/catch here as Safari throws on localStorage access in private mode or with cookies disabled.
    var DEBUG = void 0;
    try {
      DEBUG = window.localStorage.debug;
    } catch (e) {
      /* eslint-disable no-console */
      console.error('Semantic-UI-React could not enable debug.');
      console.error(e);
      /* eslint-enable no-console */
    }

    _debug = __webpack_require__(786);

    // enable what ever settings we got from storage
    _debug.enable(DEBUG);
  } else {
    _debug = function _debug() {
      return noop;
    };
  }

  /**
   * Create a namespaced debug function.
   * @param {String} namespace Usually a component name.
   * @example
   * import { makeDebugger } from 'src/lib'
   * const debug = makeDebugger('namespace')
   *
   * debug('Some message')
   * @returns {Function}
   */
  var makeDebugger = exports.makeDebugger = function makeDebugger(namespace) {
    return _debug('semanticUIReact:' + namespace);
  };

  /**
   * Default debugger, simple log.
   * @example
   * import { debug } from 'src/lib'
   * debug('Some message')
   */
  var debug = exports.debug = makeDebugger('log');

/***/ },
/* 785 */
/***/ function(module, exports) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

  var hasDocument = (typeof document === 'undefined' ? 'undefined' : _typeof(document)) === 'object' && document !== null;
  var hasWindow = (typeof window === 'undefined' ? 'undefined' : _typeof(window)) === 'object' && window !== null && window.self === window;

  exports.default = hasDocument && hasWindow;

/***/ },
/* 786 */
/***/ function(module, exports, __webpack_require__) {

  /* WEBPACK VAR INJECTION */(function(process) {/**
   * This is the web browser implementation of `debug()`.
   *
   * Expose `debug()` as the module.
   */

  exports = module.exports = __webpack_require__(787);
  exports.log = log;
  exports.formatArgs = formatArgs;
  exports.save = save;
  exports.load = load;
  exports.useColors = useColors;
  exports.storage = 'undefined' != typeof chrome
                 && 'undefined' != typeof chrome.storage
                    ? chrome.storage.local
                    : localstorage();

  /**
   * Colors.
   */

  exports.colors = [
    'lightseagreen',
    'forestgreen',
    'goldenrod',
    'dodgerblue',
    'darkorchid',
    'crimson'
  ];

  /**
   * Currently only WebKit-based Web Inspectors, Firefox >= v31,
   * and the Firebug extension (any Firefox version) are known
   * to support "%c" CSS customizations.
   *
   * TODO: add a `localStorage` variable to explicitly enable/disable colors
   */

  function useColors() {
    // NB: In an Electron preload script, document will be defined but not fully
    // initialized. Since we know we're in Chrome, we'll just detect this case
    // explicitly
    if (typeof window !== 'undefined' && window && typeof window.process !== 'undefined' && window.process.type === 'renderer') {
      return true;
    }

    // is webkit? http://stackoverflow.com/a/16459606/376773
    // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632
    return (typeof document !== 'undefined' && document && 'WebkitAppearance' in document.documentElement.style) ||
      // is firebug? http://stackoverflow.com/a/398120/376773
      (typeof window !== 'undefined' && window && window.console && (console.firebug || (console.exception && console.table))) ||
      // is firefox >= v31?
      // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages
      (typeof navigator !== 'undefined' && navigator && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||
      // double check webkit in userAgent just in case we are in a worker
      (typeof navigator !== 'undefined' && navigator && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/));
  }

  /**
   * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.
   */

  exports.formatters.j = function(v) {
    try {
      return JSON.stringify(v);
    } catch (err) {
      return '[UnexpectedJSONParseError]: ' + err.message;
    }
  };


  /**
   * Colorize log arguments if enabled.
   *
   * @api public
   */

  function formatArgs(args) {
    var useColors = this.useColors;

    args[0] = (useColors ? '%c' : '')
      + this.namespace
      + (useColors ? ' %c' : ' ')
      + args[0]
      + (useColors ? '%c ' : ' ')
      + '+' + exports.humanize(this.diff);

    if (!useColors) return;

    var c = 'color: ' + this.color;
    args.splice(1, 0, c, 'color: inherit')

    // the final "%c" is somewhat tricky, because there could be other
    // arguments passed either before or after the %c, so we need to
    // figure out the correct index to insert the CSS into
    var index = 0;
    var lastC = 0;
    args[0].replace(/%[a-zA-Z%]/g, function(match) {
      if ('%%' === match) return;
      index++;
      if ('%c' === match) {
        // we only are interested in the *last* %c
        // (the user may have provided their own)
        lastC = index;
      }
    });

    args.splice(lastC, 0, c);
  }

  /**
   * Invokes `console.log()` when available.
   * No-op when `console.log` is not a "function".
   *
   * @api public
   */

  function log() {
    // this hackery is required for IE8/9, where
    // the `console.log` function doesn't have 'apply'
    return 'object' === typeof console
      && console.log
      && Function.prototype.apply.call(console.log, console, arguments);
  }

  /**
   * Save `namespaces`.
   *
   * @param {String} namespaces
   * @api private
   */

  function save(namespaces) {
    try {
      if (null == namespaces) {
        exports.storage.removeItem('debug');
      } else {
        exports.storage.debug = namespaces;
      }
    } catch(e) {}
  }

  /**
   * Load `namespaces`.
   *
   * @return {String} returns the previously persisted debug modes
   * @api private
   */

  function load() {
    var r;
    try {
      r = exports.storage.debug;
    } catch(e) {}

    // If debug isn't set in LS, and we're in Electron, try to load $DEBUG
    if (!r && typeof process !== 'undefined' && 'env' in process) {
      r = process.env.DEBUG;
    }

    return r;
  }

  /**
   * Enable namespaces listed in `localStorage.debug` initially.
   */

  exports.enable(load());

  /**
   * Localstorage attempts to return the localstorage.
   *
   * This is necessary because safari throws
   * when a user disables cookies/localstorage
   * and you attempt to access it.
   *
   * @return {LocalStorage}
   * @api private
   */

  function localstorage() {
    try {
      return window.localStorage;
    } catch (e) {}
  }

  /* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(72)))

/***/ },
/* 787 */
/***/ function(module, exports, __webpack_require__) {

  
  /**
   * This is the common logic for both the Node.js and web browser
   * implementations of `debug()`.
   *
   * Expose `debug()` as the module.
   */

  exports = module.exports = createDebug.debug = createDebug['default'] = createDebug;
  exports.coerce = coerce;
  exports.disable = disable;
  exports.enable = enable;
  exports.enabled = enabled;
  exports.humanize = __webpack_require__(788);

  /**
   * The currently active debug mode names, and names to skip.
   */

  exports.names = [];
  exports.skips = [];

  /**
   * Map of special "%n" handling functions, for the debug "format" argument.
   *
   * Valid key names are a single, lower or upper-case letter, i.e. "n" and "N".
   */

  exports.formatters = {};

  /**
   * Previous log timestamp.
   */

  var prevTime;

  /**
   * Select a color.
   * @param {String} namespace
   * @return {Number}
   * @api private
   */

  function selectColor(namespace) {
    var hash = 0, i;

    for (i in namespace) {
      hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);
      hash |= 0; // Convert to 32bit integer
    }

    return exports.colors[Math.abs(hash) % exports.colors.length];
  }

  /**
   * Create a debugger with the given `namespace`.
   *
   * @param {String} namespace
   * @return {Function}
   * @api public
   */

  function createDebug(namespace) {

    function debug() {
      // disabled?
      if (!debug.enabled) return;

      var self = debug;

      // set `diff` timestamp
      var curr = +new Date();
      var ms = curr - (prevTime || curr);
      self.diff = ms;
      self.prev = prevTime;
      self.curr = curr;
      prevTime = curr;

      // turn the `arguments` into a proper Array
      var args = new Array(arguments.length);
      for (var i = 0; i < args.length; i++) {
        args[i] = arguments[i];
      }

      args[0] = exports.coerce(args[0]);

      if ('string' !== typeof args[0]) {
        // anything else let's inspect with %O
        args.unshift('%O');
      }

      // apply any `formatters` transformations
      var index = 0;
      args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {
        // if we encounter an escaped % then don't increase the array index
        if (match === '%%') return match;
        index++;
        var formatter = exports.formatters[format];
        if ('function' === typeof formatter) {
          var val = args[index];
          match = formatter.call(self, val);

          // now we need to remove `args[index]` since it's inlined in the `format`
          args.splice(index, 1);
          index--;
        }
        return match;
      });

      // apply env-specific formatting (colors, etc.)
      exports.formatArgs.call(self, args);

      var logFn = debug.log || exports.log || console.log.bind(console);
      logFn.apply(self, args);
    }

    debug.namespace = namespace;
    debug.enabled = exports.enabled(namespace);
    debug.useColors = exports.useColors();
    debug.color = selectColor(namespace);

    // env-specific initialization logic for debug instances
    if ('function' === typeof exports.init) {
      exports.init(debug);
    }

    return debug;
  }

  /**
   * Enables a debug mode by namespaces. This can include modes
   * separated by a colon and wildcards.
   *
   * @param {String} namespaces
   * @api public
   */

  function enable(namespaces) {
    exports.save(namespaces);

    exports.names = [];
    exports.skips = [];

    var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\s,]+/);
    var len = split.length;

    for (var i = 0; i < len; i++) {
      if (!split[i]) continue; // ignore empty strings
      namespaces = split[i].replace(/\*/g, '.*?');
      if (namespaces[0] === '-') {
        exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));
      } else {
        exports.names.push(new RegExp('^' + namespaces + '$'));
      }
    }
  }

  /**
   * Disable debug output.
   *
   * @api public
   */

  function disable() {
    exports.enable('');
  }

  /**
   * Returns true if the given mode name is enabled, false otherwise.
   *
   * @param {String} name
   * @return {Boolean}
   * @api public
   */

  function enabled(name) {
    var i, len;
    for (i = 0, len = exports.skips.length; i < len; i++) {
      if (exports.skips[i].test(name)) {
        return false;
      }
    }
    for (i = 0, len = exports.names.length; i < len; i++) {
      if (exports.names[i].test(name)) {
        return true;
      }
    }
    return false;
  }

  /**
   * Coerce `val`.
   *
   * @param {Mixed} val
   * @return {Mixed}
   * @api private
   */

  function coerce(val) {
    if (val instanceof Error) return val.stack || val.message;
    return val;
  }


/***/ },
/* 788 */
/***/ function(module, exports) {

  /**
   * Helpers.
   */

  var s = 1000
  var m = s * 60
  var h = m * 60
  var d = h * 24
  var y = d * 365.25

  /**
   * Parse or format the given `val`.
   *
   * Options:
   *
   *  - `long` verbose formatting [false]
   *
   * @param {String|Number} val
   * @param {Object} [options]
   * @throws {Error} throw an error if val is not a non-empty string or a number
   * @return {String|Number}
   * @api public
   */

  module.exports = function (val, options) {
    options = options || {}
    var type = typeof val
    if (type === 'string' && val.length > 0) {
      return parse(val)
    } else if (type === 'number' && isNaN(val) === false) {
      return options.long ?
  			fmtLong(val) :
  			fmtShort(val)
    }
    throw new Error('val is not a non-empty string or a valid number. val=' + JSON.stringify(val))
  }

  /**
   * Parse the given `str` and return milliseconds.
   *
   * @param {String} str
   * @return {Number}
   * @api private
   */

  function parse(str) {
    str = String(str)
    if (str.length > 10000) {
      return
    }
    var match = /^((?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(str)
    if (!match) {
      return
    }
    var n = parseFloat(match[1])
    var type = (match[2] || 'ms').toLowerCase()
    switch (type) {
      case 'years':
      case 'year':
      case 'yrs':
      case 'yr':
      case 'y':
        return n * y
      case 'days':
      case 'day':
      case 'd':
        return n * d
      case 'hours':
      case 'hour':
      case 'hrs':
      case 'hr':
      case 'h':
        return n * h
      case 'minutes':
      case 'minute':
      case 'mins':
      case 'min':
      case 'm':
        return n * m
      case 'seconds':
      case 'second':
      case 'secs':
      case 'sec':
      case 's':
        return n * s
      case 'milliseconds':
      case 'millisecond':
      case 'msecs':
      case 'msec':
      case 'ms':
        return n
      default:
        return undefined
    }
  }

  /**
   * Short format for `ms`.
   *
   * @param {Number} ms
   * @return {String}
   * @api private
   */

  function fmtShort(ms) {
    if (ms >= d) {
      return Math.round(ms / d) + 'd'
    }
    if (ms >= h) {
      return Math.round(ms / h) + 'h'
    }
    if (ms >= m) {
      return Math.round(ms / m) + 'm'
    }
    if (ms >= s) {
      return Math.round(ms / s) + 's'
    }
    return ms + 'ms'
  }

  /**
   * Long format for `ms`.
   *
   * @param {Number} ms
   * @return {String}
   * @api private
   */

  function fmtLong(ms) {
    return plural(ms, d, 'day') ||
      plural(ms, h, 'hour') ||
      plural(ms, m, 'minute') ||
      plural(ms, s, 'second') ||
      ms + ' ms'
  }

  /**
   * Pluralization helper.
   */

  function plural(ms, n, name) {
    if (ms < n) {
      return
    }
    if (ms < n * 1.5) {
      return Math.floor(ms / n) + ' ' + name
    }
    return Math.ceil(ms / n) + ' ' + name + 's'
  }


/***/ },
/* 789 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.createHTMLLabel = exports.createHTMLInput = exports.createHTMLImage = exports.getChildKey = undefined;

  var _has2 = __webpack_require__(627);

  var _has3 = _interopRequireDefault(_has2);

  var _isFunction2 = __webpack_require__(651);

  var _isFunction3 = _interopRequireDefault(_isFunction2);

  var _isArray2 = __webpack_require__(631);

  var _isArray3 = _interopRequireDefault(_isArray2);

  var _isNumber2 = __webpack_require__(790);

  var _isNumber3 = _interopRequireDefault(_isNumber2);

  var _isString2 = __webpack_require__(791);

  var _isString3 = _interopRequireDefault(_isString2);

  var _isPlainObject2 = __webpack_require__(792);

  var _isPlainObject3 = _interopRequireDefault(_isPlainObject2);

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

  exports.createShorthand = createShorthand;
  exports.createShorthandFactory = createShorthandFactory;

  var _classnames = __webpack_require__(794);

  var _classnames2 = _interopRequireDefault(_classnames);

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  // ============================================================
  // Factory Utilities
  // ============================================================
  /**
   * A pure function that generates a unique child key hash code from an element's props.
   *
   * @param {object} props A ReactElement's props object.
   * @returns {number}
   */
  var getChildKey = exports.getChildKey = function getChildKey(props) {
    var key = props.key,
        childKey = props.childKey;

    // already defines a key

    if (key) return key;

    // defines a childKey function or value
    if (childKey) return typeof childKey === 'function' ? childKey(props) : childKey;

    // 1. Stringify props to a short as possible run on string of key/values.
    // 2. Don't stringify entire functions, use the function name || 'f'.
    // 3. Generate a short hash number from the string.
    //     props  : { color: 'red', onClick: handleClick }
    //     string : 'color:"red",onClick:handleClick'
    //     hash   : 110042245
    return Object.keys(props).map(function (name) {
      var val = props[name];
      var type = typeof val === 'undefined' ? 'undefined' : _typeof(val);

      var valueString = type === 'string' && val || type === 'number' && val || type === 'boolean' && (val ? 'true' : 'false') || type === 'function' && (val.name || 'function') || Array.isArray(val) && ['[', val.join(','), ']'].join('') || val === null && 'null' || type === 'object' && ['{', Object.keys(val).map(function (k) {
        return [k, ':', val[k]].join('');
      }), '}'].join('') || val === undefined && 'undefined';

      return [name, ':', valueString].join('');
    }).join(',');
  };

  // ============================================================
  // Factories
  // ============================================================

  /**
   * A more robust React.createElement. It can create elements from primitive values.
   *
   * @param {function|string} Component A ReactClass or string
   * @param {function} mapValueToProps A function that maps a primitive value to the Component props
   * @param {string|object|function} val The value to create a ReactElement from
   * @param {object|function} [defaultProps={}] Default props object or function (called with regular props).
   * @param {boolean} [generateKey=false] Whether or not to generate a child key, useful for collections.
   * @returns {object|null}
   */
  function createShorthand(Component, mapValueToProps, val) {
    var defaultProps = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};
    var generateKey = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;

    if (typeof Component !== 'function' && typeof Component !== 'string') {
      throw new Error('createShorthandFactory() Component must be a string or function.');
    }
    // short circuit for disabling shorthand
    if (val === null) return null;

    var isReactElement = (0, _react.isValidElement)(val);
    var isPropsObject = (0, _isPlainObject3.default)(val);
    var isPrimitiveValue = (0, _isString3.default)(val) || (0, _isNumber3.default)(val) || (0, _isArray3.default)(val);

    // ----------------------------------------
    // Build up props
    // ----------------------------------------

    // User's props
    var usersProps = isReactElement && val.props || isPropsObject && val || isPrimitiveValue && mapValueToProps(val);

    // Default props
    defaultProps = (0, _isFunction3.default)(defaultProps) ? defaultProps(usersProps) : defaultProps;

    // Merge props and className
    var props = _extends({}, defaultProps, usersProps);

    if ((0, _has3.default)(usersProps, 'className') || (0, _has3.default)(defaultProps.className)) {
      props.className = (0, _classnames2.default)(defaultProps.className, usersProps.className); // eslint-disable-line react/prop-types
    }

    // Generate child key
    if (generateKey) props.key = getChildKey(props); // eslint-disable-line react/prop-types

    // ----------------------------------------
    // Create Element
    // ----------------------------------------

    // Clone ReactElements
    if (isReactElement) return (0, _react.cloneElement)(val, props);

    // Create ReactElements from built up props
    if (isPrimitiveValue || isPropsObject) return _react2.default.createElement(Component, props);

    // Otherwise null
    return null;
  }

  // ============================================================
  // Factories Creators
  // ============================================================

  /**
   * Creates a `createShorthand` function that is waiting for a value and defaultProps.
   *
   * @param {function|string} Component A ReactClass or string
   * @param {function} mapValueToProps A function that maps a primitive value to the Component props
   * @param {boolean} [generateKey] Whether or not to generate a child key, useful for collections.
   * @return {function} A shorthand factory function waiting for `val` and `defaultProps`.
   */
  function createShorthandFactory(Component, mapValueToProps, generateKey) {
    if (typeof Component !== 'function' && typeof Component !== 'string') {
      throw new Error('createShorthandFactory() Component must be a string or function.');
    }

    return function (val, defaultProps) {
      return createShorthand(Component, mapValueToProps, val, defaultProps, generateKey);
    };
  }

  // ============================================================
  // HTML Factories
  // ============================================================
  var createHTMLImage = exports.createHTMLImage = createShorthandFactory('img', function (value) {
    return { src: value };
  });
  var createHTMLInput = exports.createHTMLInput = createShorthandFactory('input', function (value) {
    return { type: value };
  });
  var createHTMLLabel = exports.createHTMLLabel = createShorthandFactory('label', function (value) {
    return { children: value };
  });

/***/ },
/* 790 */
/***/ function(module, exports, __webpack_require__) {

  var baseGetTag = __webpack_require__(634),
      isObjectLike = __webpack_require__(640);

  /** `Object#toString` result references. */
  var numberTag = '[object Number]';

  /**
   * Checks if `value` is classified as a `Number` primitive or object.
   *
   * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are
   * classified as numbers, use the `_.isFinite` method.
   *
   * @static
   * @memberOf _
   * @since 0.1.0
   * @category Lang
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is a number, else `false`.
   * @example
   *
   * _.isNumber(3);
   * // => true
   *
   * _.isNumber(Number.MIN_VALUE);
   * // => true
   *
   * _.isNumber(Infinity);
   * // => true
   *
   * _.isNumber('3');
   * // => false
   */
  function isNumber(value) {
    return typeof value == 'number' ||
      (isObjectLike(value) && baseGetTag(value) == numberTag);
  }

  module.exports = isNumber;


/***/ },
/* 791 */
/***/ function(module, exports, __webpack_require__) {

  var baseGetTag = __webpack_require__(634),
      isArray = __webpack_require__(631),
      isObjectLike = __webpack_require__(640);

  /** `Object#toString` result references. */
  var stringTag = '[object String]';

  /**
   * Checks if `value` is classified as a `String` primitive or object.
   *
   * @static
   * @since 0.1.0
   * @memberOf _
   * @category Lang
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is a string, else `false`.
   * @example
   *
   * _.isString('abc');
   * // => true
   *
   * _.isString(1);
   * // => false
   */
  function isString(value) {
    return typeof value == 'string' ||
      (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);
  }

  module.exports = isString;


/***/ },
/* 792 */
/***/ function(module, exports, __webpack_require__) {

  var baseGetTag = __webpack_require__(634),
      getPrototype = __webpack_require__(793),
      isObjectLike = __webpack_require__(640);

  /** `Object#toString` result references. */
  var objectTag = '[object Object]';

  /** Used for built-in method references. */
  var funcProto = Function.prototype,
      objectProto = Object.prototype;

  /** Used to resolve the decompiled source of functions. */
  var funcToString = funcProto.toString;

  /** Used to check objects for own properties. */
  var hasOwnProperty = objectProto.hasOwnProperty;

  /** Used to infer the `Object` constructor. */
  var objectCtorString = funcToString.call(Object);

  /**
   * Checks if `value` is a plain object, that is, an object created by the
   * `Object` constructor or one with a `[[Prototype]]` of `null`.
   *
   * @static
   * @memberOf _
   * @since 0.8.0
   * @category Lang
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
   * @example
   *
   * function Foo() {
   *   this.a = 1;
   * }
   *
   * _.isPlainObject(new Foo);
   * // => false
   *
   * _.isPlainObject([1, 2, 3]);
   * // => false
   *
   * _.isPlainObject({ 'x': 0, 'y': 0 });
   * // => true
   *
   * _.isPlainObject(Object.create(null));
   * // => true
   */
  function isPlainObject(value) {
    if (!isObjectLike(value) || baseGetTag(value) != objectTag) {
      return false;
    }
    var proto = getPrototype(value);
    if (proto === null) {
      return true;
    }
    var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;
    return typeof Ctor == 'function' && Ctor instanceof Ctor &&
      funcToString.call(Ctor) == objectCtorString;
  }

  module.exports = isPlainObject;


/***/ },
/* 793 */
/***/ function(module, exports, __webpack_require__) {

  var overArg = __webpack_require__(738);

  /** Built-in value references. */
  var getPrototype = overArg(Object.getPrototypeOf, Object);

  module.exports = getPrototype;


/***/ },
/* 794 */
/***/ function(module, exports, __webpack_require__) {

  var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
    Copyright (c) 2016 Jed Watson.
    Licensed under the MIT License (MIT), see
    http://jedwatson.github.io/classnames
  */
  /* global define */

  (function () {
  	'use strict';

  	var hasOwn = {}.hasOwnProperty;

  	function classNames () {
  		var classes = [];

  		for (var i = 0; i < arguments.length; i++) {
  			var arg = arguments[i];
  			if (!arg) continue;

  			var argType = typeof arg;

  			if (argType === 'string' || argType === 'number') {
  				classes.push(arg);
  			} else if (Array.isArray(arg)) {
  				classes.push(classNames.apply(null, arg));
  			} else if (argType === 'object') {
  				for (var key in arg) {
  					if (hasOwn.call(arg, key) && arg[key]) {
  						classes.push(key);
  					}
  				}
  			}
  		}

  		return classes.join(' ');
  	}

  	if (typeof module !== 'undefined' && module.exports) {
  		module.exports = classNames;
  	} else if (true) {
  		// register as 'classnames', consistent with npm package name
  		!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {
  			return classNames;
  		}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  	} else {
  		window.classNames = classNames;
  	}
  }());


/***/ },
/* 795 */
/***/ function(module, exports) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  /**
   * Push all `source` array elements to the `target` array if they don't already exist in `target`.
   *
   * @param {Array} source - An array of elements to add to the `target`
   * @param {Array} target - An array to receive unique elements from the `source`
   * @returns {Array} Mutated `target` array
   */
  var pushUnique = function pushUnique(source, target) {
    return source.forEach(function (x) {
      if (target.indexOf(x) === -1) target.push(x);
    });
  };

  /**
   * Returns an object consisting of props beyond the scope of the Component.
   * Useful for getting and spreading unknown props from the user.
   * @param {function} Component A function or ReactClass.
   * @param {object} props A ReactElement props object
   * @returns {{}} A shallow copy of the prop object
   */
  var getUnhandledProps = function getUnhandledProps(Component, props) {
    var autoControlledProps = Component.autoControlledProps,
        defaultProps = Component.defaultProps,
        propTypes = Component.propTypes;
    var handledProps = Component.handledProps;

    // ----------------------------------------
    // Calculate handledProps once and cache
    // ----------------------------------------

    if (!handledProps) {
      handledProps = [];

      if (autoControlledProps) pushUnique(autoControlledProps, handledProps);
      if (defaultProps) pushUnique(Object.keys(defaultProps), handledProps);
      if (propTypes) pushUnique(Object.keys(propTypes), handledProps);

      Component.handledProps = handledProps;
    }

    // ----------------------------------------
    // Return _unhandled_ props
    // ----------------------------------------
    return Object.keys(props).reduce(function (acc, prop) {
      if (prop === 'childKey') return acc;
      if (handledProps.indexOf(prop) === -1) acc[prop] = props[prop];
      return acc;
    }, {});
  };

  exports.default = getUnhandledProps;

/***/ },
/* 796 */
/***/ function(module, exports) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  /**
   * Returns a createElement() type based on the props of the Component.
   * Useful for calculating what type a component should render as.
   *
   * @param {function} Component A function or ReactClass.
   * @param {object} props A ReactElement props object
   * @param {function} [getDefault] A function that returns a default element type.
   * @returns {string|function} A ReactElement type
   */
  function getElementType(Component, props, getDefault) {
    var _Component$defaultPro = Component.defaultProps,
        defaultProps = _Component$defaultPro === undefined ? {} : _Component$defaultPro;

    // ----------------------------------------
    // user defined "as" element type

    if (props.as && props.as !== defaultProps.as) return props.as;

    // ----------------------------------------
    // computed default element type

    if (getDefault) {
      var computedDefault = getDefault();
      if (computedDefault) return computedDefault;
    }

    // ----------------------------------------
    // infer anchor links

    if (props.href) return 'a';

    // ----------------------------------------
    // use defaultProp or 'div'

    return defaultProps.as || 'div';
  }

  exports.default = getElementType;

/***/ },
/* 797 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  // Copy of sindre's leven, wrapped in dead code elimination for production
  // https://github.com/sindresorhus/leven/blob/master/index.js

  var leven = function leven() {
    return 0;
  };

  if (true) {
    (function () {
      /* eslint-disable complexity, no-nested-ternary */
      var arr = [];
      var charCodeCache = [];

      leven = function leven(a, b) {
        if (a === b) return 0;

        var aLen = a.length;
        var bLen = b.length;

        if (aLen === 0) return bLen;
        if (bLen === 0) return aLen;

        var bCharCode = void 0;
        var ret = void 0;
        var tmp = void 0;
        var tmp2 = void 0;
        var i = 0;
        var j = 0;

        while (i < aLen) {
          charCodeCache[i] = a.charCodeAt(i);
          arr[i] = ++i;
        }

        while (j < bLen) {
          bCharCode = b.charCodeAt(j);
          tmp = j++;
          ret = j;

          for (i = 0; i < aLen; i++) {
            tmp2 = bCharCode === charCodeCache[i] ? tmp : tmp + 1;
            tmp = arr[i];
            ret = arr[i] = tmp > ret ? tmp2 > ret ? ret + 1 : tmp2 : tmp2 > tmp ? tmp + 1 : tmp2;
          }
        }

        return ret;
      };
    })();
  }

  exports.default = leven;

/***/ },
/* 798 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _isObject2 = __webpack_require__(652);

  var _isObject3 = _interopRequireDefault(_isObject2);

  var _times2 = __webpack_require__(799);

  var _times3 = _interopRequireDefault(_times2);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  /**
   * All previous KeyboardEvent key identifying properties are deprecated in favor of `key`.
   * Unfortunately, `key` is not yet fully supported.
   * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key
   */
  var codes = {
    // ----------------------------------------
    // By Code
    // ----------------------------------------
    3: 'Cancel',
    6: 'Help',
    8: 'Backspace',
    9: 'Tab',
    12: 'Clear',
    13: 'Enter',
    16: 'Shift',
    17: 'Control',
    18: 'Alt',
    19: 'Pause',
    20: 'CapsLock',
    27: 'Escape',
    28: 'Convert',
    29: 'NonConvert',
    30: 'Accept',
    31: 'ModeChange',
    32: ' ',
    33: 'PageUp',
    34: 'PageDown',
    35: 'End',
    36: 'Home',
    37: 'ArrowLeft',
    38: 'ArrowUp',
    39: 'ArrowRight',
    40: 'ArrowDown',
    41: 'Select',
    42: 'Print',
    43: 'Execute',
    44: 'PrintScreen',
    45: 'Insert',
    46: 'Delete',
    48: ['0', ')'],
    49: ['1', '!'],
    50: ['2', '@'],
    51: ['3', '#'],
    52: ['4', '$'],
    53: ['5', '%'],
    54: ['6', '^'],
    55: ['7', '&'],
    56: ['8', '*'],
    57: ['9', '('],
    91: 'OS',
    93: 'ContextMenu',
    144: 'NumLock',
    145: 'ScrollLock',
    181: 'VolumeMute',
    182: 'VolumeDown',
    183: 'VolumeUp',
    186: [';', ':'],
    187: ['=', '+'],
    188: [',', '<'],
    189: ['-', '_'],
    190: ['.', '>'],
    191: ['/', '?'],
    192: ['`', '~'],
    219: ['[', '{'],
    220: ['\\', '|'],
    221: [']', '}'],
    222: ["'", '"'],
    224: 'Meta',
    225: 'AltGraph',
    246: 'Attn',
    247: 'CrSel',
    248: 'ExSel',
    249: 'EraseEof',
    250: 'Play',
    251: 'ZoomOut'
  };

  // Function Keys (F1-24)
  (0, _times3.default)(24, function (i) {
    return codes[112 + i] = 'F' + (i + 1);
  });

  // Alphabet (a-Z)
  (0, _times3.default)(26, function (i) {
    var n = i + 65;
    codes[n] = [String.fromCharCode(n + 32), String.fromCharCode(n)];
  });

  var keyboardKey = {
    codes: codes,

    /**
     * Get the `keyCode` or `which` value from a keyboard event or `key` name.
     * @param {string|object} name A keyboard event like object or `key` name.
     * @param {string} [name.key] If object, it must have one of these keys.
     * @param {string} [name.keyCode] If object, it must have one of these keys.
     * @param {string} [name.which] If object, it must have one of these keys.
     * @returns {*}
     */
    getCode: function getCode(name) {
      if ((0, _isObject3.default)(name)) {
        return name.keyCode || name.which || this[name.key];
      }
      return this[name];
    },


    /**
     * Get the key name from a keyboard event, `keyCode`, or `which` value.
     * @param {number|object} code A keyboard event like object or key name.
     * @param {number} [code.keyCode] If object, it must have one of these keys.
     * @param {number} [code.which] If object, it must have one of these keys.
     * @param {number} [code.shiftKey] If object, it must have one of these keys.
     * @returns {*}
     */
    getName: function getName(code) {
      var isEvent = (0, _isObject3.default)(code);
      var name = codes[isEvent ? code.keyCode || code.which : code];

      if (Array.isArray(name)) {
        if (isEvent) {
          name = name[code.shiftKey ? 1 : 0];
        } else {
          name = name[0];
        }
      }

      return name;
    },


    // ----------------------------------------
    // By Name
    // ----------------------------------------
    // declare these manually for static analysis
    Cancel: 3,
    Help: 6,
    Backspace: 8,
    Tab: 9,
    Clear: 12,
    Enter: 13,
    Shift: 16,
    Control: 17,
    Alt: 18,
    Pause: 19,
    CapsLock: 20,
    Escape: 27,
    Convert: 28,
    NonConvert: 29,
    Accept: 30,
    ModeChange: 31,
    ' ': 32,
    PageUp: 33,
    PageDown: 34,
    End: 35,
    Home: 36,
    ArrowLeft: 37,
    ArrowUp: 38,
    ArrowRight: 39,
    ArrowDown: 40,
    Select: 41,
    Print: 42,
    Execute: 43,
    PrintScreen: 44,
    Insert: 45,
    Delete: 46,
    0: 48, ')': 48,
    1: 49, '!': 49,
    2: 50, '@': 50,
    3: 51, '#': 51,
    4: 52, $: 52,
    5: 53, '%': 53,
    6: 54, '^': 54,
    7: 55, '&': 55,
    8: 56, '*': 56,
    9: 57, '(': 57,
    a: 65, A: 65,
    b: 66, B: 66,
    c: 67, C: 67,
    d: 68, D: 68,
    e: 69, E: 69,
    f: 70, F: 70,
    g: 71, G: 71,
    h: 72, H: 72,
    i: 73, I: 73,
    j: 74, J: 74,
    k: 75, K: 75,
    l: 76, L: 76,
    m: 77, M: 77,
    n: 78, N: 78,
    o: 79, O: 79,
    p: 80, P: 80,
    q: 81, Q: 81,
    r: 82, R: 82,
    s: 83, S: 83,
    t: 84, T: 84,
    u: 85, U: 85,
    v: 86, V: 86,
    w: 87, W: 87,
    x: 88, X: 88,
    y: 89, Y: 89,
    z: 90, Z: 90,
    OS: 91,
    ContextMenu: 93,
    F1: 112,
    F2: 113,
    F3: 114,
    F4: 115,
    F5: 116,
    F6: 117,
    F7: 118,
    F8: 119,
    F9: 120,
    F10: 121,
    F11: 122,
    F12: 123,
    F13: 124,
    F14: 125,
    F15: 126,
    F16: 127,
    F17: 128,
    F18: 129,
    F19: 130,
    F20: 131,
    F21: 132,
    F22: 133,
    F23: 134,
    F24: 135,
    NumLock: 144,
    ScrollLock: 145,
    VolumeMute: 181,
    VolumeDown: 182,
    VolumeUp: 183,
    ';': 186, ':': 186,
    '=': 187, '+': 187,
    ',': 188, '<': 188,
    '-': 189, _: 189,
    '.': 190, '>': 190,
    '/': 191, '?': 191,
    '`': 192, '~': 192,
    '[': 219, '{': 219,
    '\\': 220, '\|': 220,
    ']': 221, '}': 221,
    "'": 222, '"': 222,
    Meta: 224,
    AltGraph: 225,
    Attn: 246,
    CrSel: 247,
    ExSel: 248,
    EraseEof: 249,
    Play: 250,
    ZoomOut: 251
  };

  // ----------------------------------------
  // By Alias
  // ----------------------------------------
  // provide dot-notation accessible keys for all key names
  keyboardKey.Spacebar = keyboardKey[' '];
  keyboardKey.Digit0 = keyboardKey['0'];
  keyboardKey.Digit1 = keyboardKey['1'];
  keyboardKey.Digit2 = keyboardKey['2'];
  keyboardKey.Digit3 = keyboardKey['3'];
  keyboardKey.Digit4 = keyboardKey['4'];
  keyboardKey.Digit5 = keyboardKey['5'];
  keyboardKey.Digit6 = keyboardKey['6'];
  keyboardKey.Digit7 = keyboardKey['7'];
  keyboardKey.Digit8 = keyboardKey['8'];
  keyboardKey.Digit9 = keyboardKey['9'];
  keyboardKey.Tilde = keyboardKey['~'];
  keyboardKey.GraveAccent = keyboardKey['`'];
  keyboardKey.ExclamationPoint = keyboardKey['!'];
  keyboardKey.AtSign = keyboardKey['@'];
  keyboardKey.PoundSign = keyboardKey['#'];
  keyboardKey.PercentSign = keyboardKey['%'];
  keyboardKey.Caret = keyboardKey['^'];
  keyboardKey.Ampersand = keyboardKey['&'];
  keyboardKey.PlusSign = keyboardKey['+'];
  keyboardKey.MinusSign = keyboardKey['-'];
  keyboardKey.EqualsSign = keyboardKey['='];
  keyboardKey.DivisionSign = keyboardKey['/'];
  keyboardKey.MultiplicationSign = keyboardKey['*'];
  keyboardKey.Comma = keyboardKey[','];
  keyboardKey.Decimal = keyboardKey['.'];
  keyboardKey.Colon = keyboardKey[':'];
  keyboardKey.Semicolon = keyboardKey[';'];
  keyboardKey.Pipe = keyboardKey['|'];
  keyboardKey.BackSlash = keyboardKey['\\'];
  keyboardKey.QuestionMark = keyboardKey['?'];
  keyboardKey.SingleQuote = keyboardKey['"'];
  keyboardKey.DoubleQuote = keyboardKey['"'];
  keyboardKey.LeftCurlyBrace = keyboardKey['{'];
  keyboardKey.RightCurlyBrace = keyboardKey['}'];
  keyboardKey.LeftParenthesis = keyboardKey['('];
  keyboardKey.RightParenthesis = keyboardKey[')'];
  keyboardKey.LeftAngleBracket = keyboardKey['<'];
  keyboardKey.RightAngleBracket = keyboardKey['>'];
  keyboardKey.LeftSquareBracket = keyboardKey['['];
  keyboardKey.RightSquareBracket = keyboardKey[']'];

  exports.default = keyboardKey;

/***/ },
/* 799 */
/***/ function(module, exports, __webpack_require__) {

  var baseTimes = __webpack_require__(728),
      castFunction = __webpack_require__(781),
      toInteger = __webpack_require__(716);

  /** Used as references for various `Number` constants. */
  var MAX_SAFE_INTEGER = 9007199254740991;

  /** Used as references for the maximum length and index of an array. */
  var MAX_ARRAY_LENGTH = 4294967295;

  /* Built-in method references for those with the same name as other `lodash` methods. */
  var nativeMin = Math.min;

  /**
   * Invokes the iteratee `n` times, returning an array of the results of
   * each invocation. The iteratee is invoked with one argument; (index).
   *
   * @static
   * @since 0.1.0
   * @memberOf _
   * @category Util
   * @param {number} n The number of times to invoke `iteratee`.
   * @param {Function} [iteratee=_.identity] The function invoked per iteration.
   * @returns {Array} Returns the array of results.
   * @example
   *
   * _.times(3, String);
   * // => ['0', '1', '2']
   *
   *  _.times(4, _.constant(0));
   * // => [0, 0, 0, 0]
   */
  function times(n, iteratee) {
    n = toInteger(n);
    if (n < 1 || n > MAX_SAFE_INTEGER) {
      return [];
    }
    var index = MAX_ARRAY_LENGTH,
        length = nativeMin(n, MAX_ARRAY_LENGTH);

    iteratee = castFunction(iteratee);
    n -= MAX_ARRAY_LENGTH;

    var result = baseTimes(length, iteratee);
    while (++index < n) {
      iteratee(index);
    }
    return result;
  }

  module.exports = times;


/***/ },
/* 800 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.objectDiff = undefined;

  var _isEqual2 = __webpack_require__(801);

  var _isEqual3 = _interopRequireDefault(_isEqual2);

  var _has2 = __webpack_require__(627);

  var _has3 = _interopRequireDefault(_has2);

  var _transform2 = __webpack_require__(802);

  var _transform3 = _interopRequireDefault(_transform2);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  /**
   * Naive and inefficient object difference, intended for development / debugging use only.
   * Deleted keys are shown as [DELETED].
   * @param {{}} source The source object
   * @param {{}} target The target object.
   * @returns {{}} A new object containing new/modified/deleted keys.
   * @example
   * import { objectDiff } from 'src/lib'
   *
   * const a = { key: 'val', foo: 'bar' }
   * const b = { key: 'val', foo: 'baz' }
   *
   * objectDiff(a, b)
   * //=> { foo: 'baz' }
   */
  var objectDiff = exports.objectDiff = function objectDiff(source, target) {
    return (0, _transform3.default)(source, function (res, val, key) {
      // deleted keys
      if (!(0, _has3.default)(target, key)) res[key] = '[DELETED]';
      // new keys / changed values
      else if (!(0, _isEqual3.default)(val, target[key])) res[key] = target[key];
    }, {});
  };

/***/ },
/* 801 */
/***/ function(module, exports, __webpack_require__) {

  var baseIsEqual = __webpack_require__(749);

  /**
   * Performs a deep comparison between two values to determine if they are
   * equivalent.
   *
   * **Note:** This method supports comparing arrays, array buffers, booleans,
   * date objects, error objects, maps, numbers, `Object` objects, regexes,
   * sets, strings, symbols, and typed arrays. `Object` objects are compared
   * by their own, not inherited, enumerable properties. Functions and DOM
   * nodes are **not** supported.
   *
   * @static
   * @memberOf _
   * @since 0.1.0
   * @category Lang
   * @param {*} value The value to compare.
   * @param {*} other The other value to compare.
   * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
   * @example
   *
   * var object = { 'a': 1 };
   * var other = { 'a': 1 };
   *
   * _.isEqual(object, other);
   * // => true
   *
   * object === other;
   * // => false
   */
  function isEqual(value, other) {
    return baseIsEqual(value, other);
  }

  module.exports = isEqual;


/***/ },
/* 802 */
/***/ function(module, exports, __webpack_require__) {

  var arrayEach = __webpack_require__(780),
      baseCreate = __webpack_require__(803),
      baseForOwn = __webpack_require__(723),
      baseIteratee = __webpack_require__(740),
      getPrototype = __webpack_require__(793),
      isArray = __webpack_require__(631),
      isBuffer = __webpack_require__(729),
      isFunction = __webpack_require__(651),
      isObject = __webpack_require__(652),
      isTypedArray = __webpack_require__(732);

  /**
   * An alternative to `_.reduce`; this method transforms `object` to a new
   * `accumulator` object which is the result of running each of its own
   * enumerable string keyed properties thru `iteratee`, with each invocation
   * potentially mutating the `accumulator` object. If `accumulator` is not
   * provided, a new object with the same `[[Prototype]]` will be used. The
   * iteratee is invoked with four arguments: (accumulator, value, key, object).
   * Iteratee functions may exit iteration early by explicitly returning `false`.
   *
   * @static
   * @memberOf _
   * @since 1.3.0
   * @category Object
   * @param {Object} object The object to iterate over.
   * @param {Function} [iteratee=_.identity] The function invoked per iteration.
   * @param {*} [accumulator] The custom accumulator value.
   * @returns {*} Returns the accumulated value.
   * @example
   *
   * _.transform([2, 3, 4], function(result, n) {
   *   result.push(n *= n);
   *   return n % 2 == 0;
   * }, []);
   * // => [4, 9]
   *
   * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {
   *   (result[value] || (result[value] = [])).push(key);
   * }, {});
   * // => { '1': ['a', 'c'], '2': ['b'] }
   */
  function transform(object, iteratee, accumulator) {
    var isArr = isArray(object),
        isArrLike = isArr || isBuffer(object) || isTypedArray(object);

    iteratee = baseIteratee(iteratee, 4);
    if (accumulator == null) {
      var Ctor = object && object.constructor;
      if (isArrLike) {
        accumulator = isArr ? new Ctor : [];
      }
      else if (isObject(object)) {
        accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};
      }
      else {
        accumulator = {};
      }
    }
    (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {
      return iteratee(accumulator, value, index, object);
    });
    return accumulator;
  }

  module.exports = transform;


/***/ },
/* 803 */
/***/ function(module, exports, __webpack_require__) {

  var isObject = __webpack_require__(652);

  /** Built-in value references. */
  var objectCreate = Object.create;

  /**
   * The base implementation of `_.create` without support for assigning
   * properties to the created object.
   *
   * @private
   * @param {Object} proto The object to inherit from.
   * @returns {Object} Returns the new object.
   */
  var baseCreate = (function() {
    function object() {}
    return function(proto) {
      if (!isObject(proto)) {
        return {};
      }
      if (objectCreate) {
        return objectCreate(proto);
      }
      object.prototype = proto;
      var result = new object;
      object.prototype = undefined;
      return result;
    };
  }());

  module.exports = baseCreate;


/***/ },
/* 804 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.findByType = exports.someByType = undefined;

  var _find2 = __webpack_require__(805);

  var _find3 = _interopRequireDefault(_find2);

  var _some2 = __webpack_require__(808);

  var _some3 = _interopRequireDefault(_some2);

  var _react = __webpack_require__(385);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  /**
   * Determine if child by type exists in children.
   * @param {Object} children The children prop of a component.
   * @param {string|Function} type An html tag name string or React component.
   * @returns {Boolean}
   */
  var someByType = exports.someByType = function someByType(children, type) {
    return (0, _some3.default)(_react.Children.toArray(children), { type: type });
  };

  /**
   * Find child by type.
   * @param {Object} children The children prop of a component.
   * @param {string|Function} type An html tag name string or React component.
   * @returns {undefined|Object}
   */
  var findByType = exports.findByType = function findByType(children, type) {
    return (0, _find3.default)(_react.Children.toArray(children), { type: type });
  };

/***/ },
/* 805 */
/***/ function(module, exports, __webpack_require__) {

  var createFind = __webpack_require__(806),
      findIndex = __webpack_require__(807);

  /**
   * Iterates over elements of `collection`, returning the first element
   * `predicate` returns truthy for. The predicate is invoked with three
   * arguments: (value, index|key, collection).
   *
   * @static
   * @memberOf _
   * @since 0.1.0
   * @category Collection
   * @param {Array|Object} collection The collection to inspect.
   * @param {Function} [predicate=_.identity] The function invoked per iteration.
   * @param {number} [fromIndex=0] The index to search from.
   * @returns {*} Returns the matched element, else `undefined`.
   * @example
   *
   * var users = [
   *   { 'user': 'barney',  'age': 36, 'active': true },
   *   { 'user': 'fred',    'age': 40, 'active': false },
   *   { 'user': 'pebbles', 'age': 1,  'active': true }
   * ];
   *
   * _.find(users, function(o) { return o.age < 40; });
   * // => object for 'barney'
   *
   * // The `_.matches` iteratee shorthand.
   * _.find(users, { 'age': 1, 'active': true });
   * // => object for 'pebbles'
   *
   * // The `_.matchesProperty` iteratee shorthand.
   * _.find(users, ['active', false]);
   * // => object for 'fred'
   *
   * // The `_.property` iteratee shorthand.
   * _.find(users, 'active');
   * // => object for 'barney'
   */
  var find = createFind(findIndex);

  module.exports = find;


/***/ },
/* 806 */
/***/ function(module, exports, __webpack_require__) {

  var baseIteratee = __webpack_require__(740),
      isArrayLike = __webpack_require__(712),
      keys = __webpack_require__(726);

  /**
   * Creates a `_.find` or `_.findLast` function.
   *
   * @private
   * @param {Function} findIndexFunc The function to find the collection index.
   * @returns {Function} Returns the new find function.
   */
  function createFind(findIndexFunc) {
    return function(collection, predicate, fromIndex) {
      var iterable = Object(collection);
      if (!isArrayLike(collection)) {
        var iteratee = baseIteratee(predicate, 3);
        collection = keys(collection);
        predicate = function(key) { return iteratee(iterable[key], key, iterable); };
      }
      var index = findIndexFunc(collection, predicate, fromIndex);
      return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;
    };
  }

  module.exports = createFind;


/***/ },
/* 807 */
/***/ function(module, exports, __webpack_require__) {

  var baseFindIndex = __webpack_require__(693),
      baseIteratee = __webpack_require__(740),
      toInteger = __webpack_require__(716);

  /* Built-in method references for those with the same name as other `lodash` methods. */
  var nativeMax = Math.max;

  /**
   * This method is like `_.find` except that it returns the index of the first
   * element `predicate` returns truthy for instead of the element itself.
   *
   * @static
   * @memberOf _
   * @since 1.1.0
   * @category Array
   * @param {Array} array The array to inspect.
   * @param {Function} [predicate=_.identity] The function invoked per iteration.
   * @param {number} [fromIndex=0] The index to search from.
   * @returns {number} Returns the index of the found element, else `-1`.
   * @example
   *
   * var users = [
   *   { 'user': 'barney',  'active': false },
   *   { 'user': 'fred',    'active': false },
   *   { 'user': 'pebbles', 'active': true }
   * ];
   *
   * _.findIndex(users, function(o) { return o.user == 'barney'; });
   * // => 0
   *
   * // The `_.matches` iteratee shorthand.
   * _.findIndex(users, { 'user': 'fred', 'active': false });
   * // => 1
   *
   * // The `_.matchesProperty` iteratee shorthand.
   * _.findIndex(users, ['active', false]);
   * // => 0
   *
   * // The `_.property` iteratee shorthand.
   * _.findIndex(users, 'active');
   * // => 2
   */
  function findIndex(array, predicate, fromIndex) {
    var length = array == null ? 0 : array.length;
    if (!length) {
      return -1;
    }
    var index = fromIndex == null ? 0 : toInteger(fromIndex);
    if (index < 0) {
      index = nativeMax(length + index, 0);
    }
    return baseFindIndex(array, baseIteratee(predicate, 3), index);
  }

  module.exports = findIndex;


/***/ },
/* 808 */
/***/ function(module, exports, __webpack_require__) {

  var arraySome = __webpack_require__(752),
      baseIteratee = __webpack_require__(740),
      baseSome = __webpack_require__(809),
      isArray = __webpack_require__(631),
      isIterateeCall = __webpack_require__(810);

  /**
   * Checks if `predicate` returns truthy for **any** element of `collection`.
   * Iteration is stopped once `predicate` returns truthy. The predicate is
   * invoked with three arguments: (value, index|key, collection).
   *
   * @static
   * @memberOf _
   * @since 0.1.0
   * @category Collection
   * @param {Array|Object} collection The collection to iterate over.
   * @param {Function} [predicate=_.identity] The function invoked per iteration.
   * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
   * @returns {boolean} Returns `true` if any element passes the predicate check,
   *  else `false`.
   * @example
   *
   * _.some([null, 0, 'yes', false], Boolean);
   * // => true
   *
   * var users = [
   *   { 'user': 'barney', 'active': true },
   *   { 'user': 'fred',   'active': false }
   * ];
   *
   * // The `_.matches` iteratee shorthand.
   * _.some(users, { 'user': 'barney', 'active': false });
   * // => false
   *
   * // The `_.matchesProperty` iteratee shorthand.
   * _.some(users, ['active', false]);
   * // => true
   *
   * // The `_.property` iteratee shorthand.
   * _.some(users, 'active');
   * // => true
   */
  function some(collection, predicate, guard) {
    var func = isArray(collection) ? arraySome : baseSome;
    if (guard && isIterateeCall(collection, predicate, guard)) {
      predicate = undefined;
    }
    return func(collection, baseIteratee(predicate, 3));
  }

  module.exports = some;


/***/ },
/* 809 */
/***/ function(module, exports, __webpack_require__) {

  var baseEach = __webpack_require__(722);

  /**
   * The base implementation of `_.some` without support for iteratee shorthands.
   *
   * @private
   * @param {Array|Object} collection The collection to iterate over.
   * @param {Function} predicate The function invoked per iteration.
   * @returns {boolean} Returns `true` if any element passes the predicate check,
   *  else `false`.
   */
  function baseSome(collection, predicate) {
    var result;

    baseEach(collection, function(value, index, collection) {
      result = predicate(value, index, collection);
      return !result;
    });
    return !!result;
  }

  module.exports = baseSome;


/***/ },
/* 810 */
/***/ function(module, exports, __webpack_require__) {

  var eq = __webpack_require__(665),
      isArrayLike = __webpack_require__(712),
      isIndex = __webpack_require__(681),
      isObject = __webpack_require__(652);

  /**
   * Checks if the given arguments are from an iteratee call.
   *
   * @private
   * @param {*} value The potential iteratee value argument.
   * @param {*} index The potential iteratee index or key argument.
   * @param {*} object The potential iteratee object argument.
   * @returns {boolean} Returns `true` if the arguments are from an iteratee call,
   *  else `false`.
   */
  function isIterateeCall(value, index, object) {
    if (!isObject(object)) {
      return false;
    }
    var type = typeof index;
    if (type == 'number'
          ? (isArrayLike(object) && isIndex(index, object.length))
          : (type == 'string' && index in object)
        ) {
      return eq(object[index], value);
    }
    return false;
  }

  module.exports = isIterateeCall;


/***/ },
/* 811 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.deprecate = exports.collectionShorthand = exports.itemShorthand = exports.contentShorthand = exports.demand = exports.givenProps = exports.some = exports.every = exports.disallow = exports.suggest = exports.as = undefined;

  var _isObject2 = __webpack_require__(812);

  var _isObject3 = _interopRequireDefault(_isObject2);

  var _pick2 = __webpack_require__(890);

  var _pick3 = _interopRequireDefault(_pick2);

  var _keys2 = __webpack_require__(895);

  var _keys3 = _interopRequireDefault(_keys2);

  var _isPlainObject2 = __webpack_require__(896);

  var _isPlainObject3 = _interopRequireDefault(_isPlainObject2);

  var _isFunction2 = __webpack_require__(897);

  var _isFunction3 = _interopRequireDefault(_isFunction2);

  var _compact2 = __webpack_require__(898);

  var _compact3 = _interopRequireDefault(_compact2);

  var _take2 = __webpack_require__(900);

  var _take3 = _interopRequireDefault(_take2);

  var _sortBy2 = __webpack_require__(903);

  var _sortBy3 = _interopRequireDefault(_sortBy2);

  var _sum2 = __webpack_require__(910);

  var _sum3 = _interopRequireDefault(_sum2);

  var _min2 = __webpack_require__(913);

  var _min3 = _interopRequireDefault(_min2);

  var _map2 = __webpack_require__(917);

  var _map3 = _interopRequireDefault(_map2);

  var _flow2 = __webpack_require__(919);

  var _flow3 = _interopRequireDefault(_flow2);

  var _includes2 = __webpack_require__(922);

  var _includes3 = _interopRequireDefault(_includes2);

  var _isNil2 = __webpack_require__(926);

  var _isNil3 = _interopRequireDefault(_isNil2);

  var _react = __webpack_require__(385);

  var _leven = __webpack_require__(797);

  var _leven2 = _interopRequireDefault(_leven);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

  var typeOf = function typeOf() {
    var _Object$prototype$toS;

    return (_Object$prototype$toS = Object.prototype.toString).call.apply(_Object$prototype$toS, arguments);
  };

  /**
   * Ensure a component can render as a give prop value.
   */
  var as = exports.as = function as() {
    return _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.func]).apply(undefined, arguments);
  };

  /**
   * Similar to PropTypes.oneOf but shows closest matches.
   * Word order is ignored allowing `left chevron` to match `chevron left`.
   * Useful for very large lists of options (e.g. Icon name, Flag name, etc.)
   * @param {string[]} suggestions An array of allowed values.
   */
  var suggest = exports.suggest = function suggest(suggestions) {
    return function (props, propName, componentName) {
      if (!Array.isArray(suggestions)) {
        throw new Error(['Invalid argument supplied to suggest, expected an instance of array.', ' See `' + propName + '` prop in `' + componentName + '`.'].join(''));
      }
      var propValue = props[propName];

      // skip if prop is undefined or is included in the suggestions
      if ((0, _isNil3.default)(propValue) || propValue === false || (0, _includes3.default)(propValue, suggestions)) return;

      // find best suggestions
      var propValueWords = propValue.split(' ');

      /* eslint-disable max-nested-callbacks */
      var bestMatches = (0, _flow3.default)((0, _map3.default)(function (suggestion) {
        var suggestionWords = suggestion.split(' ');

        var propValueScore = (0, _flow3.default)((0, _map3.default)(function (x) {
          return (0, _map3.default)(function (y) {
            return (0, _leven2.default)(x, y);
          }, suggestionWords);
        }), (0, _map3.default)(_min3.default), _sum3.default)(propValueWords);

        var suggestionScore = (0, _flow3.default)((0, _map3.default)(function (x) {
          return (0, _map3.default)(function (y) {
            return (0, _leven2.default)(x, y);
          }, propValueWords);
        }), (0, _map3.default)(_min3.default), _sum3.default)(suggestionWords);

        return { suggestion: suggestion, score: propValueScore + suggestionScore };
      }), (0, _sortBy3.default)(['score', 'suggestion']), (0, _take3.default)(3))(suggestions);
      /* eslint-enable max-nested-callbacks */

      // skip if a match scored 0
      // since we're matching on words (classNames) this allows any word order to pass validation
      // e.g. `left chevron` vs `chevron left`
      if (bestMatches.some(function (x) {
        return x.score === 0;
      })) return;

      return new Error(['Invalid prop `' + propName + '` of value `' + propValue + '` supplied to `' + componentName + '`.', '\n\nInstead of `' + propValue + '`, did you mean:', bestMatches.map(function (x) {
        return '\n  - ' + x.suggestion;
      }).join(''), '\n'].join(''));
    };
  };

  /**
   * Disallow other props form being defined with this prop.
   * @param {string[]} disallowedProps An array of props that cannot be used with this prop.
   */
  var disallow = exports.disallow = function disallow(disallowedProps) {
    return function (props, propName, componentName) {
      if (!Array.isArray(disallowedProps)) {
        throw new Error(['Invalid argument supplied to disallow, expected an instance of array.', ' See `' + propName + '` prop in `' + componentName + '`.'].join(''));
      }

      // skip if prop is undefined
      if ((0, _isNil3.default)(props[propName]) || props[propName] === false) return;

      // find disallowed props with values
      var disallowed = disallowedProps.reduce(function (acc, disallowedProp) {
        if (!(0, _isNil3.default)(props[disallowedProp]) && props[disallowedProp] !== false) {
          return [].concat(_toConsumableArray(acc), [disallowedProp]);
        }
        return acc;
      }, []);

      if (disallowed.length > 0) {
        return new Error(['Prop `' + propName + '` in `' + componentName + '` conflicts with props: `' + disallowed.join('`, `') + '`.', 'They cannot be defined together, choose one or the other.'].join(' '));
      }
    };
  };

  /**
   * Ensure a prop adherers to multiple prop type validators.
   * @param {function[]} validators An array of propType functions.
   */
  var every = exports.every = function every(validators) {
    return function (props, propName, componentName) {
      for (var _len = arguments.length, rest = Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {
        rest[_key - 3] = arguments[_key];
      }

      if (!Array.isArray(validators)) {
        throw new Error(['Invalid argument supplied to every, expected an instance of array.', 'See `' + propName + '` prop in `' + componentName + '`.'].join(' '));
      }

      var errors = (0, _flow3.default)((0, _map3.default)(function (validator) {
        if (typeof validator !== 'function') {
          throw new Error('every() argument "validators" should contain functions, found: ' + typeOf(validator) + '.');
        }
        return validator.apply(undefined, [props, propName, componentName].concat(rest));
      }), _compact3.default)(validators);

      // we can only return one error at a time
      return errors[0];
    };
  };

  /**
   * Ensure a prop adherers to at least one of the given prop type validators.
   * @param {function[]} validators An array of propType functions.
   */
  var some = exports.some = function some(validators) {
    return function (props, propName, componentName) {
      for (var _len2 = arguments.length, rest = Array(_len2 > 3 ? _len2 - 3 : 0), _key2 = 3; _key2 < _len2; _key2++) {
        rest[_key2 - 3] = arguments[_key2];
      }

      if (!Array.isArray(validators)) {
        throw new Error(['Invalid argument supplied to some, expected an instance of array.', 'See `' + propName + '` prop in `' + componentName + '`.'].join(' '));
      }

      var errors = (0, _compact3.default)((0, _map3.default)(validators, function (validator) {
        if (!(0, _isFunction3.default)(validator)) {
          throw new Error('some() argument "validators" should contain functions, found: ' + typeOf(validator) + '.');
        }
        return validator.apply(undefined, [props, propName, componentName].concat(rest));
      }));

      // fail only if all validators failed
      if (errors.length === validators.length) {
        var error = new Error('One of these validators must pass:');
        error.message += '\n' + (0, _map3.default)(errors, function (err, i) {
          return '[' + (i + 1) + ']: ' + err.message;
        }).join('\n');
        return error;
      }
    };
  };

  /**
   * Ensure a validator passes only when a component has a given propsShape.
   * @param {object} propsShape An object describing the prop shape.
   * @param {function} validator A propType function.
   */
  var givenProps = exports.givenProps = function givenProps(propsShape, validator) {
    return function (props, propName, componentName) {
      for (var _len3 = arguments.length, rest = Array(_len3 > 3 ? _len3 - 3 : 0), _key3 = 3; _key3 < _len3; _key3++) {
        rest[_key3 - 3] = arguments[_key3];
      }

      if (!(0, _isPlainObject3.default)(propsShape)) {
        throw new Error(['Invalid argument supplied to givenProps, expected an object.', 'See `' + propName + '` prop in `' + componentName + '`.'].join(' '));
      }

      if (typeof validator !== 'function') {
        throw new Error(['Invalid argument supplied to givenProps, expected a function.', 'See `' + propName + '` prop in `' + componentName + '`.'].join(' '));
      }

      var shouldValidate = (0, _keys3.default)(propsShape).every(function (key) {
        var val = propsShape[key];
        // require propShape validators to pass or prop values to match
        return typeof val === 'function' ? !val.apply(undefined, [props, key, componentName].concat(rest)) : val === props[propName];
      });

      if (!shouldValidate) return;

      var error = validator.apply(undefined, [props, propName, componentName].concat(rest));

      if (error) {
        // poor mans shallow pretty print, prevents JSON circular reference errors
        var prettyProps = '{ ' + (0, _keys3.default)((0, _pick3.default)((0, _keys3.default)(propsShape), props)).map(function (key) {
          var val = props[key];
          var renderedValue = val;
          if (typeof val === 'string') renderedValue = '"' + val + '"';else if (Array.isArray(val)) renderedValue = '[' + val.join(', ') + ']';else if ((0, _isObject3.default)(val)) renderedValue = '{...}';

          return key + ': ' + renderedValue;
        }).join(', ') + ' }';

        error.message = 'Given props ' + prettyProps + ': ' + error.message;
        return error;
      }
    };
  };

  /**
   * Define prop dependencies by requiring other props.
   * @param {string[]} requiredProps An array of required prop names.
   */
  var demand = exports.demand = function demand(requiredProps) {
    return function (props, propName, componentName) {
      if (!Array.isArray(requiredProps)) {
        throw new Error(['Invalid `requiredProps` argument supplied to require, expected an instance of array.', ' See `' + propName + '` prop in `' + componentName + '`.'].join(''));
      }

      // skip if prop is undefined
      if (props[propName] === undefined) return;

      var missingRequired = requiredProps.filter(function (requiredProp) {
        return props[requiredProp] === undefined;
      });
      if (missingRequired.length > 0) {
        return new Error('`' + propName + '` prop in `' + componentName + '` requires props: `' + missingRequired.join('`, `') + '`.');
      }
    };
  };

  /**
   * Ensure a component can render as a node passed as a prop value in place of children.
   */
  var contentShorthand = exports.contentShorthand = function contentShorthand() {
    return every([disallow(['children']), _react.PropTypes.node]).apply(undefined, arguments);
  };

  /**
   * Item shorthand is a description of a component that can be a literal,
   * a props object, or an element.
   */
  var itemShorthand = exports.itemShorthand = function itemShorthand() {
    return every([disallow(['children']), _react.PropTypes.oneOfType([_react.PropTypes.array, _react.PropTypes.node, _react.PropTypes.object])]).apply(undefined, arguments);
  };

  /**
   * Collection shorthand ensures a prop is an array of item shorthand.
   */
  var collectionShorthand = exports.collectionShorthand = function collectionShorthand() {
    return every([disallow(['children']), _react.PropTypes.arrayOf(itemShorthand)]).apply(undefined, arguments);
  };

  /**
   * Show a deprecated warning for component props with a help message and optional validator.
   * @param {string} help A help message to display with the deprecation warning.
   * @param {function} [validator] A propType function.
   */
  var deprecate = exports.deprecate = function deprecate(help, validator) {
    return function (props, propName, componentName) {
      for (var _len4 = arguments.length, args = Array(_len4 > 3 ? _len4 - 3 : 0), _key4 = 3; _key4 < _len4; _key4++) {
        args[_key4 - 3] = arguments[_key4];
      }

      if (typeof help !== 'string') {
        throw new Error(['Invalid `help` argument supplied to deprecate, expected a string.', 'See `' + propName + '` prop in `' + componentName + '`.'].join(' '));
      }

      // skip if prop is undefined
      if (props[propName] === undefined) return;

      // deprecation error and help
      var error = new Error('The `' + propName + '` prop in `' + componentName + '` is deprecated.');
      if (help) error.message += ' ' + help;

      // add optional validation error message
      if (validator) {
        if (typeof validator === 'function') {
          var validationError = validator.apply(undefined, [props, propName, componentName].concat(args));
          if (validationError) {
            error.message = error.message + ' ' + validationError.message;
          }
        } else {
          throw new Error(['Invalid argument supplied to deprecate, expected a function.', 'See `' + propName + '` prop in `' + componentName + '`.'].join(' '));
        }
      }

      return error;
    };
  };

/***/ },
/* 812 */
/***/ function(module, exports, __webpack_require__) {

  var convert = __webpack_require__(813),
      func = convert('isObject', __webpack_require__(652), __webpack_require__(889));

  func.placeholder = __webpack_require__(816);
  module.exports = func;


/***/ },
/* 813 */
/***/ function(module, exports, __webpack_require__) {

  var baseConvert = __webpack_require__(814),
      util = __webpack_require__(817);

  /**
   * Converts `func` of `name` to an immutable auto-curried iteratee-first data-last
   * version with conversion `options` applied. If `name` is an object its methods
   * will be converted.
   *
   * @param {string} name The name of the function to wrap.
   * @param {Function} [func] The function to wrap.
   * @param {Object} [options] The options object. See `baseConvert` for more details.
   * @returns {Function|Object} Returns the converted function or object.
   */
  function convert(name, func, options) {
    return baseConvert(util, name, func, options);
  }

  module.exports = convert;


/***/ },
/* 814 */
/***/ function(module, exports, __webpack_require__) {

  var mapping = __webpack_require__(815),
      fallbackHolder = __webpack_require__(816);

  /** Built-in value reference. */
  var push = Array.prototype.push;

  /**
   * Creates a function, with an arity of `n`, that invokes `func` with the
   * arguments it receives.
   *
   * @private
   * @param {Function} func The function to wrap.
   * @param {number} n The arity of the new function.
   * @returns {Function} Returns the new function.
   */
  function baseArity(func, n) {
    return n == 2
      ? function(a, b) { return func.apply(undefined, arguments); }
      : function(a) { return func.apply(undefined, arguments); };
  }

  /**
   * Creates a function that invokes `func`, with up to `n` arguments, ignoring
   * any additional arguments.
   *
   * @private
   * @param {Function} func The function to cap arguments for.
   * @param {number} n The arity cap.
   * @returns {Function} Returns the new function.
   */
  function baseAry(func, n) {
    return n == 2
      ? function(a, b) { return func(a, b); }
      : function(a) { return func(a); };
  }

  /**
   * Creates a clone of `array`.
   *
   * @private
   * @param {Array} array The array to clone.
   * @returns {Array} Returns the cloned array.
   */
  function cloneArray(array) {
    var length = array ? array.length : 0,
        result = Array(length);

    while (length--) {
      result[length] = array[length];
    }
    return result;
  }

  /**
   * Creates a function that clones a given object using the assignment `func`.
   *
   * @private
   * @param {Function} func The assignment function.
   * @returns {Function} Returns the new cloner function.
   */
  function createCloner(func) {
    return function(object) {
      return func({}, object);
    };
  }

  /**
   * This function is like `_.spread` except that it includes arguments after those spread.
   *
   * @private
   * @param {Function} func The function to spread arguments over.
   * @param {number} start The start position of the spread.
   * @returns {Function} Returns the new function.
   */
  function spread(func, start) {
    return function() {
      var length = arguments.length,
          args = Array(length);

      while (length--) {
        args[length] = arguments[length];
      }
      var array = args[start],
          lastIndex = args.length - 1,
          otherArgs = args.slice(0, start);

      if (array) {
        push.apply(otherArgs, array);
      }
      if (start != lastIndex) {
        push.apply(otherArgs, args.slice(start + 1));
      }
      return func.apply(this, otherArgs);
    };
  }

  /**
   * Creates a function that wraps `func` and uses `cloner` to clone the first
   * argument it receives.
   *
   * @private
   * @param {Function} func The function to wrap.
   * @param {Function} cloner The function to clone arguments.
   * @returns {Function} Returns the new immutable function.
   */
  function wrapImmutable(func, cloner) {
    return function() {
      var length = arguments.length;
      if (!length) {
        return;
      }
      var args = Array(length);
      while (length--) {
        args[length] = arguments[length];
      }
      var result = args[0] = cloner.apply(undefined, args);
      func.apply(undefined, args);
      return result;
    };
  }

  /**
   * The base implementation of `convert` which accepts a `util` object of methods
   * required to perform conversions.
   *
   * @param {Object} util The util object.
   * @param {string} name The name of the function to convert.
   * @param {Function} func The function to convert.
   * @param {Object} [options] The options object.
   * @param {boolean} [options.cap=true] Specify capping iteratee arguments.
   * @param {boolean} [options.curry=true] Specify currying.
   * @param {boolean} [options.fixed=true] Specify fixed arity.
   * @param {boolean} [options.immutable=true] Specify immutable operations.
   * @param {boolean} [options.rearg=true] Specify rearranging arguments.
   * @returns {Function|Object} Returns the converted function or object.
   */
  function baseConvert(util, name, func, options) {
    var setPlaceholder,
        isLib = typeof name == 'function',
        isObj = name === Object(name);

    if (isObj) {
      options = func;
      func = name;
      name = undefined;
    }
    if (func == null) {
      throw new TypeError;
    }
    options || (options = {});

    var config = {
      'cap': 'cap' in options ? options.cap : true,
      'curry': 'curry' in options ? options.curry : true,
      'fixed': 'fixed' in options ? options.fixed : true,
      'immutable': 'immutable' in options ? options.immutable : true,
      'rearg': 'rearg' in options ? options.rearg : true
    };

    var forceCurry = ('curry' in options) && options.curry,
        forceFixed = ('fixed' in options) && options.fixed,
        forceRearg = ('rearg' in options) && options.rearg,
        placeholder = isLib ? func : fallbackHolder,
        pristine = isLib ? func.runInContext() : undefined;

    var helpers = isLib ? func : {
      'ary': util.ary,
      'assign': util.assign,
      'clone': util.clone,
      'curry': util.curry,
      'forEach': util.forEach,
      'isArray': util.isArray,
      'isFunction': util.isFunction,
      'iteratee': util.iteratee,
      'keys': util.keys,
      'rearg': util.rearg,
      'toInteger': util.toInteger,
      'toPath': util.toPath
    };

    var ary = helpers.ary,
        assign = helpers.assign,
        clone = helpers.clone,
        curry = helpers.curry,
        each = helpers.forEach,
        isArray = helpers.isArray,
        isFunction = helpers.isFunction,
        keys = helpers.keys,
        rearg = helpers.rearg,
        toInteger = helpers.toInteger,
        toPath = helpers.toPath;

    var aryMethodKeys = keys(mapping.aryMethod);

    var wrappers = {
      'castArray': function(castArray) {
        return function() {
          var value = arguments[0];
          return isArray(value)
            ? castArray(cloneArray(value))
            : castArray.apply(undefined, arguments);
        };
      },
      'iteratee': function(iteratee) {
        return function() {
          var func = arguments[0],
              arity = arguments[1],
              result = iteratee(func, arity),
              length = result.length;

          if (config.cap && typeof arity == 'number') {
            arity = arity > 2 ? (arity - 2) : 1;
            return (length && length <= arity) ? result : baseAry(result, arity);
          }
          return result;
        };
      },
      'mixin': function(mixin) {
        return function(source) {
          var func = this;
          if (!isFunction(func)) {
            return mixin(func, Object(source));
          }
          var pairs = [];
          each(keys(source), function(key) {
            if (isFunction(source[key])) {
              pairs.push([key, func.prototype[key]]);
            }
          });

          mixin(func, Object(source));

          each(pairs, function(pair) {
            var value = pair[1];
            if (isFunction(value)) {
              func.prototype[pair[0]] = value;
            } else {
              delete func.prototype[pair[0]];
            }
          });
          return func;
        };
      },
      'nthArg': function(nthArg) {
        return function(n) {
          var arity = n < 0 ? 1 : (toInteger(n) + 1);
          return curry(nthArg(n), arity);
        };
      },
      'rearg': function(rearg) {
        return function(func, indexes) {
          var arity = indexes ? indexes.length : 0;
          return curry(rearg(func, indexes), arity);
        };
      },
      'runInContext': function(runInContext) {
        return function(context) {
          return baseConvert(util, runInContext(context), options);
        };
      }
    };

    /*--------------------------------------------------------------------------*/

    /**
     * Casts `func` to a function with an arity capped iteratee if needed.
     *
     * @private
     * @param {string} name The name of the function to inspect.
     * @param {Function} func The function to inspect.
     * @returns {Function} Returns the cast function.
     */
    function castCap(name, func) {
      if (config.cap) {
        var indexes = mapping.iterateeRearg[name];
        if (indexes) {
          return iterateeRearg(func, indexes);
        }
        var n = !isLib && mapping.iterateeAry[name];
        if (n) {
          return iterateeAry(func, n);
        }
      }
      return func;
    }

    /**
     * Casts `func` to a curried function if needed.
     *
     * @private
     * @param {string} name The name of the function to inspect.
     * @param {Function} func The function to inspect.
     * @param {number} n The arity of `func`.
     * @returns {Function} Returns the cast function.
     */
    function castCurry(name, func, n) {
      return (forceCurry || (config.curry && n > 1))
        ? curry(func, n)
        : func;
    }

    /**
     * Casts `func` to a fixed arity function if needed.
     *
     * @private
     * @param {string} name The name of the function to inspect.
     * @param {Function} func The function to inspect.
     * @param {number} n The arity cap.
     * @returns {Function} Returns the cast function.
     */
    function castFixed(name, func, n) {
      if (config.fixed && (forceFixed || !mapping.skipFixed[name])) {
        var data = mapping.methodSpread[name],
            start = data && data.start;

        return start  === undefined ? ary(func, n) : spread(func, start);
      }
      return func;
    }

    /**
     * Casts `func` to an rearged function if needed.
     *
     * @private
     * @param {string} name The name of the function to inspect.
     * @param {Function} func The function to inspect.
     * @param {number} n The arity of `func`.
     * @returns {Function} Returns the cast function.
     */
    function castRearg(name, func, n) {
      return (config.rearg && n > 1 && (forceRearg || !mapping.skipRearg[name]))
        ? rearg(func, mapping.methodRearg[name] || mapping.aryRearg[n])
        : func;
    }

    /**
     * Creates a clone of `object` by `path`.
     *
     * @private
     * @param {Object} object The object to clone.
     * @param {Array|string} path The path to clone by.
     * @returns {Object} Returns the cloned object.
     */
    function cloneByPath(object, path) {
      path = toPath(path);

      var index = -1,
          length = path.length,
          lastIndex = length - 1,
          result = clone(Object(object)),
          nested = result;

      while (nested != null && ++index < length) {
        var key = path[index],
            value = nested[key];

        if (value != null) {
          nested[path[index]] = clone(index == lastIndex ? value : Object(value));
        }
        nested = nested[key];
      }
      return result;
    }

    /**
     * Converts `lodash` to an immutable auto-curried iteratee-first data-last
     * version with conversion `options` applied.
     *
     * @param {Object} [options] The options object. See `baseConvert` for more details.
     * @returns {Function} Returns the converted `lodash`.
     */
    function convertLib(options) {
      return _.runInContext.convert(options)(undefined);
    }

    /**
     * Create a converter function for `func` of `name`.
     *
     * @param {string} name The name of the function to convert.
     * @param {Function} func The function to convert.
     * @returns {Function} Returns the new converter function.
     */
    function createConverter(name, func) {
      var realName = mapping.aliasToReal[name] || name,
          methodName = mapping.remap[realName] || realName,
          oldOptions = options;

      return function(options) {
        var newUtil = isLib ? pristine : helpers,
            newFunc = isLib ? pristine[methodName] : func,
            newOptions = assign(assign({}, oldOptions), options);

        return baseConvert(newUtil, realName, newFunc, newOptions);
      };
    }

    /**
     * Creates a function that wraps `func` to invoke its iteratee, with up to `n`
     * arguments, ignoring any additional arguments.
     *
     * @private
     * @param {Function} func The function to cap iteratee arguments for.
     * @param {number} n The arity cap.
     * @returns {Function} Returns the new function.
     */
    function iterateeAry(func, n) {
      return overArg(func, function(func) {
        return typeof func == 'function' ? baseAry(func, n) : func;
      });
    }

    /**
     * Creates a function that wraps `func` to invoke its iteratee with arguments
     * arranged according to the specified `indexes` where the argument value at
     * the first index is provided as the first argument, the argument value at
     * the second index is provided as the second argument, and so on.
     *
     * @private
     * @param {Function} func The function to rearrange iteratee arguments for.
     * @param {number[]} indexes The arranged argument indexes.
     * @returns {Function} Returns the new function.
     */
    function iterateeRearg(func, indexes) {
      return overArg(func, function(func) {
        var n = indexes.length;
        return baseArity(rearg(baseAry(func, n), indexes), n);
      });
    }

    /**
     * Creates a function that invokes `func` with its first argument transformed.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {Function} transform The argument transform.
     * @returns {Function} Returns the new function.
     */
    function overArg(func, transform) {
      return function() {
        var length = arguments.length;
        if (!length) {
          return func();
        }
        var args = Array(length);
        while (length--) {
          args[length] = arguments[length];
        }
        var index = config.rearg ? 0 : (length - 1);
        args[index] = transform(args[index]);
        return func.apply(undefined, args);
      };
    }

    /**
     * Creates a function that wraps `func` and applys the conversions
     * rules by `name`.
     *
     * @private
     * @param {string} name The name of the function to wrap.
     * @param {Function} func The function to wrap.
     * @returns {Function} Returns the converted function.
     */
    function wrap(name, func) {
      var result,
          realName = mapping.aliasToReal[name] || name,
          wrapped = func,
          wrapper = wrappers[realName];

      if (wrapper) {
        wrapped = wrapper(func);
      }
      else if (config.immutable) {
        if (mapping.mutate.array[realName]) {
          wrapped = wrapImmutable(func, cloneArray);
        }
        else if (mapping.mutate.object[realName]) {
          wrapped = wrapImmutable(func, createCloner(func));
        }
        else if (mapping.mutate.set[realName]) {
          wrapped = wrapImmutable(func, cloneByPath);
        }
      }
      each(aryMethodKeys, function(aryKey) {
        each(mapping.aryMethod[aryKey], function(otherName) {
          if (realName == otherName) {
            var spreadData = mapping.methodSpread[realName],
                afterRearg = spreadData && spreadData.afterRearg;

            result = afterRearg
              ? castFixed(realName, castRearg(realName, wrapped, aryKey), aryKey)
              : castRearg(realName, castFixed(realName, wrapped, aryKey), aryKey);

            result = castCap(realName, result);
            result = castCurry(realName, result, aryKey);
            return false;
          }
        });
        return !result;
      });

      result || (result = wrapped);
      if (result == func) {
        result = forceCurry ? curry(result, 1) : function() {
          return func.apply(this, arguments);
        };
      }
      result.convert = createConverter(realName, func);
      if (mapping.placeholder[realName]) {
        setPlaceholder = true;
        result.placeholder = func.placeholder = placeholder;
      }
      return result;
    }

    /*--------------------------------------------------------------------------*/

    if (!isObj) {
      return wrap(name, func);
    }
    var _ = func;

    // Convert methods by ary cap.
    var pairs = [];
    each(aryMethodKeys, function(aryKey) {
      each(mapping.aryMethod[aryKey], function(key) {
        var func = _[mapping.remap[key] || key];
        if (func) {
          pairs.push([key, wrap(key, func)]);
        }
      });
    });

    // Convert remaining methods.
    each(keys(_), function(key) {
      var func = _[key];
      if (typeof func == 'function') {
        var length = pairs.length;
        while (length--) {
          if (pairs[length][0] == key) {
            return;
          }
        }
        func.convert = createConverter(key, func);
        pairs.push([key, func]);
      }
    });

    // Assign to `_` leaving `_.prototype` unchanged to allow chaining.
    each(pairs, function(pair) {
      _[pair[0]] = pair[1];
    });

    _.convert = convertLib;
    if (setPlaceholder) {
      _.placeholder = placeholder;
    }
    // Assign aliases.
    each(keys(_), function(key) {
      each(mapping.realToAlias[key] || [], function(alias) {
        _[alias] = _[key];
      });
    });

    return _;
  }

  module.exports = baseConvert;


/***/ },
/* 815 */
/***/ function(module, exports) {

  /** Used to map aliases to their real names. */
  exports.aliasToReal = {

    // Lodash aliases.
    'each': 'forEach',
    'eachRight': 'forEachRight',
    'entries': 'toPairs',
    'entriesIn': 'toPairsIn',
    'extend': 'assignIn',
    'extendAll': 'assignInAll',
    'extendAllWith': 'assignInAllWith',
    'extendWith': 'assignInWith',
    'first': 'head',

    // Methods that are curried variants of others.
    'conforms': 'conformsTo',
    'matches': 'isMatch',
    'property': 'get',

    // Ramda aliases.
    '__': 'placeholder',
    'F': 'stubFalse',
    'T': 'stubTrue',
    'all': 'every',
    'allPass': 'overEvery',
    'always': 'constant',
    'any': 'some',
    'anyPass': 'overSome',
    'apply': 'spread',
    'assoc': 'set',
    'assocPath': 'set',
    'complement': 'negate',
    'compose': 'flowRight',
    'contains': 'includes',
    'dissoc': 'unset',
    'dissocPath': 'unset',
    'dropLast': 'dropRight',
    'dropLastWhile': 'dropRightWhile',
    'equals': 'isEqual',
    'identical': 'eq',
    'indexBy': 'keyBy',
    'init': 'initial',
    'invertObj': 'invert',
    'juxt': 'over',
    'omitAll': 'omit',
    'nAry': 'ary',
    'path': 'get',
    'pathEq': 'matchesProperty',
    'pathOr': 'getOr',
    'paths': 'at',
    'pickAll': 'pick',
    'pipe': 'flow',
    'pluck': 'map',
    'prop': 'get',
    'propEq': 'matchesProperty',
    'propOr': 'getOr',
    'props': 'at',
    'symmetricDifference': 'xor',
    'symmetricDifferenceBy': 'xorBy',
    'symmetricDifferenceWith': 'xorWith',
    'takeLast': 'takeRight',
    'takeLastWhile': 'takeRightWhile',
    'unapply': 'rest',
    'unnest': 'flatten',
    'useWith': 'overArgs',
    'where': 'conformsTo',
    'whereEq': 'isMatch',
    'zipObj': 'zipObject'
  };

  /** Used to map ary to method names. */
  exports.aryMethod = {
    '1': [
      'assignAll', 'assignInAll', 'attempt', 'castArray', 'ceil', 'create',
      'curry', 'curryRight', 'defaultsAll', 'defaultsDeepAll', 'floor', 'flow',
      'flowRight', 'fromPairs', 'invert', 'iteratee', 'memoize', 'method', 'mergeAll',
      'methodOf', 'mixin', 'nthArg', 'over', 'overEvery', 'overSome','rest', 'reverse',
      'round', 'runInContext', 'spread', 'template', 'trim', 'trimEnd', 'trimStart',
      'uniqueId', 'words', 'zipAll'
    ],
    '2': [
      'add', 'after', 'ary', 'assign', 'assignAllWith', 'assignIn', 'assignInAllWith',
      'at', 'before', 'bind', 'bindAll', 'bindKey', 'chunk', 'cloneDeepWith',
      'cloneWith', 'concat', 'conformsTo', 'countBy', 'curryN', 'curryRightN',
      'debounce', 'defaults', 'defaultsDeep', 'defaultTo', 'delay', 'difference',
      'divide', 'drop', 'dropRight', 'dropRightWhile', 'dropWhile', 'endsWith', 'eq',
      'every', 'filter', 'find', 'findIndex', 'findKey', 'findLast', 'findLastIndex',
      'findLastKey', 'flatMap', 'flatMapDeep', 'flattenDepth', 'forEach',
      'forEachRight', 'forIn', 'forInRight', 'forOwn', 'forOwnRight', 'get',
      'groupBy', 'gt', 'gte', 'has', 'hasIn', 'includes', 'indexOf', 'intersection',
      'invertBy', 'invoke', 'invokeMap', 'isEqual', 'isMatch', 'join', 'keyBy',
      'lastIndexOf', 'lt', 'lte', 'map', 'mapKeys', 'mapValues', 'matchesProperty',
      'maxBy', 'meanBy', 'merge', 'mergeAllWith', 'minBy', 'multiply', 'nth', 'omit',
      'omitBy', 'overArgs', 'pad', 'padEnd', 'padStart', 'parseInt', 'partial',
      'partialRight', 'partition', 'pick', 'pickBy', 'propertyOf', 'pull', 'pullAll',
      'pullAt', 'random', 'range', 'rangeRight', 'rearg', 'reject', 'remove',
      'repeat', 'restFrom', 'result', 'sampleSize', 'some', 'sortBy', 'sortedIndex',
      'sortedIndexOf', 'sortedLastIndex', 'sortedLastIndexOf', 'sortedUniqBy',
      'split', 'spreadFrom', 'startsWith', 'subtract', 'sumBy', 'take', 'takeRight',
      'takeRightWhile', 'takeWhile', 'tap', 'throttle', 'thru', 'times', 'trimChars',
      'trimCharsEnd', 'trimCharsStart', 'truncate', 'union', 'uniqBy', 'uniqWith',
      'unset', 'unzipWith', 'without', 'wrap', 'xor', 'zip', 'zipObject',
      'zipObjectDeep'
    ],
    '3': [
      'assignInWith', 'assignWith', 'clamp', 'differenceBy', 'differenceWith',
      'findFrom', 'findIndexFrom', 'findLastFrom', 'findLastIndexFrom', 'getOr',
      'includesFrom', 'indexOfFrom', 'inRange', 'intersectionBy', 'intersectionWith',
      'invokeArgs', 'invokeArgsMap', 'isEqualWith', 'isMatchWith', 'flatMapDepth',
      'lastIndexOfFrom', 'mergeWith', 'orderBy', 'padChars', 'padCharsEnd',
      'padCharsStart', 'pullAllBy', 'pullAllWith', 'rangeStep', 'rangeStepRight',
      'reduce', 'reduceRight', 'replace', 'set', 'slice', 'sortedIndexBy',
      'sortedLastIndexBy', 'transform', 'unionBy', 'unionWith', 'update', 'xorBy',
      'xorWith', 'zipWith'
    ],
    '4': [
      'fill', 'setWith', 'updateWith'
    ]
  };

  /** Used to map ary to rearg configs. */
  exports.aryRearg = {
    '2': [1, 0],
    '3': [2, 0, 1],
    '4': [3, 2, 0, 1]
  };

  /** Used to map method names to their iteratee ary. */
  exports.iterateeAry = {
    'dropRightWhile': 1,
    'dropWhile': 1,
    'every': 1,
    'filter': 1,
    'find': 1,
    'findFrom': 1,
    'findIndex': 1,
    'findIndexFrom': 1,
    'findKey': 1,
    'findLast': 1,
    'findLastFrom': 1,
    'findLastIndex': 1,
    'findLastIndexFrom': 1,
    'findLastKey': 1,
    'flatMap': 1,
    'flatMapDeep': 1,
    'flatMapDepth': 1,
    'forEach': 1,
    'forEachRight': 1,
    'forIn': 1,
    'forInRight': 1,
    'forOwn': 1,
    'forOwnRight': 1,
    'map': 1,
    'mapKeys': 1,
    'mapValues': 1,
    'partition': 1,
    'reduce': 2,
    'reduceRight': 2,
    'reject': 1,
    'remove': 1,
    'some': 1,
    'takeRightWhile': 1,
    'takeWhile': 1,
    'times': 1,
    'transform': 2
  };

  /** Used to map method names to iteratee rearg configs. */
  exports.iterateeRearg = {
    'mapKeys': [1]
  };

  /** Used to map method names to rearg configs. */
  exports.methodRearg = {
    'assignInAllWith': [1, 0],
    'assignInWith': [1, 2, 0],
    'assignAllWith': [1, 0],
    'assignWith': [1, 2, 0],
    'differenceBy': [1, 2, 0],
    'differenceWith': [1, 2, 0],
    'getOr': [2, 1, 0],
    'intersectionBy': [1, 2, 0],
    'intersectionWith': [1, 2, 0],
    'isEqualWith': [1, 2, 0],
    'isMatchWith': [2, 1, 0],
    'mergeAllWith': [1, 0],
    'mergeWith': [1, 2, 0],
    'padChars': [2, 1, 0],
    'padCharsEnd': [2, 1, 0],
    'padCharsStart': [2, 1, 0],
    'pullAllBy': [2, 1, 0],
    'pullAllWith': [2, 1, 0],
    'rangeStep': [1, 2, 0],
    'rangeStepRight': [1, 2, 0],
    'setWith': [3, 1, 2, 0],
    'sortedIndexBy': [2, 1, 0],
    'sortedLastIndexBy': [2, 1, 0],
    'unionBy': [1, 2, 0],
    'unionWith': [1, 2, 0],
    'updateWith': [3, 1, 2, 0],
    'xorBy': [1, 2, 0],
    'xorWith': [1, 2, 0],
    'zipWith': [1, 2, 0]
  };

  /** Used to map method names to spread configs. */
  exports.methodSpread = {
    'assignAll': { 'start': 0 },
    'assignAllWith': { 'start': 0 },
    'assignInAll': { 'start': 0 },
    'assignInAllWith': { 'start': 0 },
    'defaultsAll': { 'start': 0 },
    'defaultsDeepAll': { 'start': 0 },
    'invokeArgs': { 'start': 2 },
    'invokeArgsMap': { 'start': 2 },
    'mergeAll': { 'start': 0 },
    'mergeAllWith': { 'start': 0 },
    'partial': { 'start': 1 },
    'partialRight': { 'start': 1 },
    'without': { 'start': 1 },
    'zipAll': { 'start': 0 }
  };

  /** Used to identify methods which mutate arrays or objects. */
  exports.mutate = {
    'array': {
      'fill': true,
      'pull': true,
      'pullAll': true,
      'pullAllBy': true,
      'pullAllWith': true,
      'pullAt': true,
      'remove': true,
      'reverse': true
    },
    'object': {
      'assign': true,
      'assignAll': true,
      'assignAllWith': true,
      'assignIn': true,
      'assignInAll': true,
      'assignInAllWith': true,
      'assignInWith': true,
      'assignWith': true,
      'defaults': true,
      'defaultsAll': true,
      'defaultsDeep': true,
      'defaultsDeepAll': true,
      'merge': true,
      'mergeAll': true,
      'mergeAllWith': true,
      'mergeWith': true,
    },
    'set': {
      'set': true,
      'setWith': true,
      'unset': true,
      'update': true,
      'updateWith': true
    }
  };

  /** Used to track methods with placeholder support */
  exports.placeholder = {
    'bind': true,
    'bindKey': true,
    'curry': true,
    'curryRight': true,
    'partial': true,
    'partialRight': true
  };

  /** Used to map real names to their aliases. */
  exports.realToAlias = (function() {
    var hasOwnProperty = Object.prototype.hasOwnProperty,
        object = exports.aliasToReal,
        result = {};

    for (var key in object) {
      var value = object[key];
      if (hasOwnProperty.call(result, value)) {
        result[value].push(key);
      } else {
        result[value] = [key];
      }
    }
    return result;
  }());

  /** Used to map method names to other names. */
  exports.remap = {
    'assignAll': 'assign',
    'assignAllWith': 'assignWith',
    'assignInAll': 'assignIn',
    'assignInAllWith': 'assignInWith',
    'curryN': 'curry',
    'curryRightN': 'curryRight',
    'defaultsAll': 'defaults',
    'defaultsDeepAll': 'defaultsDeep',
    'findFrom': 'find',
    'findIndexFrom': 'findIndex',
    'findLastFrom': 'findLast',
    'findLastIndexFrom': 'findLastIndex',
    'getOr': 'get',
    'includesFrom': 'includes',
    'indexOfFrom': 'indexOf',
    'invokeArgs': 'invoke',
    'invokeArgsMap': 'invokeMap',
    'lastIndexOfFrom': 'lastIndexOf',
    'mergeAll': 'merge',
    'mergeAllWith': 'mergeWith',
    'padChars': 'pad',
    'padCharsEnd': 'padEnd',
    'padCharsStart': 'padStart',
    'propertyOf': 'get',
    'rangeStep': 'range',
    'rangeStepRight': 'rangeRight',
    'restFrom': 'rest',
    'spreadFrom': 'spread',
    'trimChars': 'trim',
    'trimCharsEnd': 'trimEnd',
    'trimCharsStart': 'trimStart',
    'zipAll': 'zip'
  };

  /** Used to track methods that skip fixing their arity. */
  exports.skipFixed = {
    'castArray': true,
    'flow': true,
    'flowRight': true,
    'iteratee': true,
    'mixin': true,
    'rearg': true,
    'runInContext': true
  };

  /** Used to track methods that skip rearranging arguments. */
  exports.skipRearg = {
    'add': true,
    'assign': true,
    'assignIn': true,
    'bind': true,
    'bindKey': true,
    'concat': true,
    'difference': true,
    'divide': true,
    'eq': true,
    'gt': true,
    'gte': true,
    'isEqual': true,
    'lt': true,
    'lte': true,
    'matchesProperty': true,
    'merge': true,
    'multiply': true,
    'overArgs': true,
    'partial': true,
    'partialRight': true,
    'propertyOf': true,
    'random': true,
    'range': true,
    'rangeRight': true,
    'subtract': true,
    'zip': true,
    'zipObject': true,
    'zipObjectDeep': true
  };


/***/ },
/* 816 */
/***/ function(module, exports) {

  /**
   * The default argument placeholder value for methods.
   *
   * @type {Object}
   */
  module.exports = {};


/***/ },
/* 817 */
/***/ function(module, exports, __webpack_require__) {

  module.exports = {
    'ary': __webpack_require__(818),
    'assign': __webpack_require__(851),
    'clone': __webpack_require__(855),
    'curry': __webpack_require__(883),
    'forEach': __webpack_require__(780),
    'isArray': __webpack_require__(631),
    'isFunction': __webpack_require__(651),
    'iteratee': __webpack_require__(884),
    'keys': __webpack_require__(735),
    'rearg': __webpack_require__(885),
    'toInteger': __webpack_require__(716),
    'toPath': __webpack_require__(888)
  };


/***/ },
/* 818 */
/***/ function(module, exports, __webpack_require__) {

  var createWrap = __webpack_require__(819);

  /** Used to compose bitmasks for function metadata. */
  var WRAP_ARY_FLAG = 128;

  /**
   * Creates a function that invokes `func`, with up to `n` arguments,
   * ignoring any additional arguments.
   *
   * @static
   * @memberOf _
   * @since 3.0.0
   * @category Function
   * @param {Function} func The function to cap arguments for.
   * @param {number} [n=func.length] The arity cap.
   * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
   * @returns {Function} Returns the new capped function.
   * @example
   *
   * _.map(['6', '8', '10'], _.ary(parseInt, 1));
   * // => [6, 8, 10]
   */
  function ary(func, n, guard) {
    n = guard ? undefined : n;
    n = (func && n == null) ? func.length : n;
    return createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);
  }

  module.exports = ary;


/***/ },
/* 819 */
/***/ function(module, exports, __webpack_require__) {

  var baseSetData = __webpack_require__(820),
      createBind = __webpack_require__(822),
      createCurry = __webpack_require__(824),
      createHybrid = __webpack_require__(825),
      createPartial = __webpack_require__(849),
      getData = __webpack_require__(833),
      mergeData = __webpack_require__(850),
      setData = __webpack_require__(841),
      setWrapToString = __webpack_require__(842),
      toInteger = __webpack_require__(716);

  /** Error message constants. */
  var FUNC_ERROR_TEXT = 'Expected a function';

  /** Used to compose bitmasks for function metadata. */
  var WRAP_BIND_FLAG = 1,
      WRAP_BIND_KEY_FLAG = 2,
      WRAP_CURRY_FLAG = 8,
      WRAP_CURRY_RIGHT_FLAG = 16,
      WRAP_PARTIAL_FLAG = 32,
      WRAP_PARTIAL_RIGHT_FLAG = 64;

  /* Built-in method references for those with the same name as other `lodash` methods. */
  var nativeMax = Math.max;

  /**
   * Creates a function that either curries or invokes `func` with optional
   * `this` binding and partially applied arguments.
   *
   * @private
   * @param {Function|string} func The function or method name to wrap.
   * @param {number} bitmask The bitmask flags.
   *    1 - `_.bind`
   *    2 - `_.bindKey`
   *    4 - `_.curry` or `_.curryRight` of a bound function
   *    8 - `_.curry`
   *   16 - `_.curryRight`
   *   32 - `_.partial`
   *   64 - `_.partialRight`
   *  128 - `_.rearg`
   *  256 - `_.ary`
   *  512 - `_.flip`
   * @param {*} [thisArg] The `this` binding of `func`.
   * @param {Array} [partials] The arguments to be partially applied.
   * @param {Array} [holders] The `partials` placeholder indexes.
   * @param {Array} [argPos] The argument positions of the new function.
   * @param {number} [ary] The arity cap of `func`.
   * @param {number} [arity] The arity of `func`.
   * @returns {Function} Returns the new wrapped function.
   */
  function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {
    var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;
    if (!isBindKey && typeof func != 'function') {
      throw new TypeError(FUNC_ERROR_TEXT);
    }
    var length = partials ? partials.length : 0;
    if (!length) {
      bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);
      partials = holders = undefined;
    }
    ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);
    arity = arity === undefined ? arity : toInteger(arity);
    length -= holders ? holders.length : 0;

    if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {
      var partialsRight = partials,
          holdersRight = holders;

      partials = holders = undefined;
    }
    var data = isBindKey ? undefined : getData(func);

    var newData = [
      func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,
      argPos, ary, arity
    ];

    if (data) {
      mergeData(newData, data);
    }
    func = newData[0];
    bitmask = newData[1];
    thisArg = newData[2];
    partials = newData[3];
    holders = newData[4];
    arity = newData[9] = newData[9] == null
      ? (isBindKey ? 0 : func.length)
      : nativeMax(newData[9] - length, 0);

    if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {
      bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);
    }
    if (!bitmask || bitmask == WRAP_BIND_FLAG) {
      var result = createBind(func, bitmask, thisArg);
    } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {
      result = createCurry(func, bitmask, arity);
    } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {
      result = createPartial(func, bitmask, thisArg, partials);
    } else {
      result = createHybrid.apply(undefined, newData);
    }
    var setter = data ? baseSetData : setData;
    return setWrapToString(setter(result, newData), func, bitmask);
  }

  module.exports = createWrap;


/***/ },
/* 820 */
/***/ function(module, exports, __webpack_require__) {

  var identity = __webpack_require__(703),
      metaMap = __webpack_require__(821);

  /**
   * The base implementation of `setData` without support for hot loop shorting.
   *
   * @private
   * @param {Function} func The function to associate metadata with.
   * @param {*} data The metadata.
   * @returns {Function} Returns `func`.
   */
  var baseSetData = !metaMap ? identity : function(func, data) {
    metaMap.set(func, data);
    return func;
  };

  module.exports = baseSetData;


/***/ },
/* 821 */
/***/ function(module, exports, __webpack_require__) {

  var WeakMap = __webpack_require__(762);

  /** Used to store function metadata. */
  var metaMap = WeakMap && new WeakMap;

  module.exports = metaMap;


/***/ },
/* 822 */
/***/ function(module, exports, __webpack_require__) {

  var createCtor = __webpack_require__(823),
      root = __webpack_require__(636);

  /** Used to compose bitmasks for function metadata. */
  var WRAP_BIND_FLAG = 1;

  /**
   * Creates a function that wraps `func` to invoke it with the optional `this`
   * binding of `thisArg`.
   *
   * @private
   * @param {Function} func The function to wrap.
   * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
   * @param {*} [thisArg] The `this` binding of `func`.
   * @returns {Function} Returns the new wrapped function.
   */
  function createBind(func, bitmask, thisArg) {
    var isBind = bitmask & WRAP_BIND_FLAG,
        Ctor = createCtor(func);

    function wrapper() {
      var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;
      return fn.apply(isBind ? thisArg : this, arguments);
    }
    return wrapper;
  }

  module.exports = createBind;


/***/ },
/* 823 */
/***/ function(module, exports, __webpack_require__) {

  var baseCreate = __webpack_require__(803),
      isObject = __webpack_require__(652);

  /**
   * Creates a function that produces an instance of `Ctor` regardless of
   * whether it was invoked as part of a `new` expression or by `call` or `apply`.
   *
   * @private
   * @param {Function} Ctor The constructor to wrap.
   * @returns {Function} Returns the new wrapped function.
   */
  function createCtor(Ctor) {
    return function() {
      // Use a `switch` statement to work with class constructors. See
      // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist
      // for more details.
      var args = arguments;
      switch (args.length) {
        case 0: return new Ctor;
        case 1: return new Ctor(args[0]);
        case 2: return new Ctor(args[0], args[1]);
        case 3: return new Ctor(args[0], args[1], args[2]);
        case 4: return new Ctor(args[0], args[1], args[2], args[3]);
        case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);
        case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);
        case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);
      }
      var thisBinding = baseCreate(Ctor.prototype),
          result = Ctor.apply(thisBinding, args);

      // Mimic the constructor's `return` behavior.
      // See https://es5.github.io/#x13.2.2 for more details.
      return isObject(result) ? result : thisBinding;
    };
  }

  module.exports = createCtor;


/***/ },
/* 824 */
/***/ function(module, exports, __webpack_require__) {

  var apply = __webpack_require__(705),
      createCtor = __webpack_require__(823),
      createHybrid = __webpack_require__(825),
      createRecurry = __webpack_require__(829),
      getHolder = __webpack_require__(846),
      replaceHolders = __webpack_require__(848),
      root = __webpack_require__(636);

  /**
   * Creates a function that wraps `func` to enable currying.
   *
   * @private
   * @param {Function} func The function to wrap.
   * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
   * @param {number} arity The arity of `func`.
   * @returns {Function} Returns the new wrapped function.
   */
  function createCurry(func, bitmask, arity) {
    var Ctor = createCtor(func);

    function wrapper() {
      var length = arguments.length,
          args = Array(length),
          index = length,
          placeholder = getHolder(wrapper);

      while (index--) {
        args[index] = arguments[index];
      }
      var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)
        ? []
        : replaceHolders(args, placeholder);

      length -= holders.length;
      if (length < arity) {
        return createRecurry(
          func, bitmask, createHybrid, wrapper.placeholder, undefined,
          args, holders, undefined, undefined, arity - length);
      }
      var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;
      return apply(fn, this, args);
    }
    return wrapper;
  }

  module.exports = createCurry;


/***/ },
/* 825 */
/***/ function(module, exports, __webpack_require__) {

  var composeArgs = __webpack_require__(826),
      composeArgsRight = __webpack_require__(827),
      countHolders = __webpack_require__(828),
      createCtor = __webpack_require__(823),
      createRecurry = __webpack_require__(829),
      getHolder = __webpack_require__(846),
      reorder = __webpack_require__(847),
      replaceHolders = __webpack_require__(848),
      root = __webpack_require__(636);

  /** Used to compose bitmasks for function metadata. */
  var WRAP_BIND_FLAG = 1,
      WRAP_BIND_KEY_FLAG = 2,
      WRAP_CURRY_FLAG = 8,
      WRAP_CURRY_RIGHT_FLAG = 16,
      WRAP_ARY_FLAG = 128,
      WRAP_FLIP_FLAG = 512;

  /**
   * Creates a function that wraps `func` to invoke it with optional `this`
   * binding of `thisArg`, partial application, and currying.
   *
   * @private
   * @param {Function|string} func The function or method name to wrap.
   * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
   * @param {*} [thisArg] The `this` binding of `func`.
   * @param {Array} [partials] The arguments to prepend to those provided to
   *  the new function.
   * @param {Array} [holders] The `partials` placeholder indexes.
   * @param {Array} [partialsRight] The arguments to append to those provided
   *  to the new function.
   * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.
   * @param {Array} [argPos] The argument positions of the new function.
   * @param {number} [ary] The arity cap of `func`.
   * @param {number} [arity] The arity of `func`.
   * @returns {Function} Returns the new wrapped function.
   */
  function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {
    var isAry = bitmask & WRAP_ARY_FLAG,
        isBind = bitmask & WRAP_BIND_FLAG,
        isBindKey = bitmask & WRAP_BIND_KEY_FLAG,
        isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),
        isFlip = bitmask & WRAP_FLIP_FLAG,
        Ctor = isBindKey ? undefined : createCtor(func);

    function wrapper() {
      var length = arguments.length,
          args = Array(length),
          index = length;

      while (index--) {
        args[index] = arguments[index];
      }
      if (isCurried) {
        var placeholder = getHolder(wrapper),
            holdersCount = countHolders(args, placeholder);
      }
      if (partials) {
        args = composeArgs(args, partials, holders, isCurried);
      }
      if (partialsRight) {
        args = composeArgsRight(args, partialsRight, holdersRight, isCurried);
      }
      length -= holdersCount;
      if (isCurried && length < arity) {
        var newHolders = replaceHolders(args, placeholder);
        return createRecurry(
          func, bitmask, createHybrid, wrapper.placeholder, thisArg,
          args, newHolders, argPos, ary, arity - length
        );
      }
      var thisBinding = isBind ? thisArg : this,
          fn = isBindKey ? thisBinding[func] : func;

      length = args.length;
      if (argPos) {
        args = reorder(args, argPos);
      } else if (isFlip && length > 1) {
        args.reverse();
      }
      if (isAry && ary < length) {
        args.length = ary;
      }
      if (this && this !== root && this instanceof wrapper) {
        fn = Ctor || createCtor(fn);
      }
      return fn.apply(thisBinding, args);
    }
    return wrapper;
  }

  module.exports = createHybrid;


/***/ },
/* 826 */
/***/ function(module, exports) {

  /* Built-in method references for those with the same name as other `lodash` methods. */
  var nativeMax = Math.max;

  /**
   * Creates an array that is the composition of partially applied arguments,
   * placeholders, and provided arguments into a single array of arguments.
   *
   * @private
   * @param {Array} args The provided arguments.
   * @param {Array} partials The arguments to prepend to those provided.
   * @param {Array} holders The `partials` placeholder indexes.
   * @params {boolean} [isCurried] Specify composing for a curried function.
   * @returns {Array} Returns the new array of composed arguments.
   */
  function composeArgs(args, partials, holders, isCurried) {
    var argsIndex = -1,
        argsLength = args.length,
        holdersLength = holders.length,
        leftIndex = -1,
        leftLength = partials.length,
        rangeLength = nativeMax(argsLength - holdersLength, 0),
        result = Array(leftLength + rangeLength),
        isUncurried = !isCurried;

    while (++leftIndex < leftLength) {
      result[leftIndex] = partials[leftIndex];
    }
    while (++argsIndex < holdersLength) {
      if (isUncurried || argsIndex < argsLength) {
        result[holders[argsIndex]] = args[argsIndex];
      }
    }
    while (rangeLength--) {
      result[leftIndex++] = args[argsIndex++];
    }
    return result;
  }

  module.exports = composeArgs;


/***/ },
/* 827 */
/***/ function(module, exports) {

  /* Built-in method references for those with the same name as other `lodash` methods. */
  var nativeMax = Math.max;

  /**
   * This function is like `composeArgs` except that the arguments composition
   * is tailored for `_.partialRight`.
   *
   * @private
   * @param {Array} args The provided arguments.
   * @param {Array} partials The arguments to append to those provided.
   * @param {Array} holders The `partials` placeholder indexes.
   * @params {boolean} [isCurried] Specify composing for a curried function.
   * @returns {Array} Returns the new array of composed arguments.
   */
  function composeArgsRight(args, partials, holders, isCurried) {
    var argsIndex = -1,
        argsLength = args.length,
        holdersIndex = -1,
        holdersLength = holders.length,
        rightIndex = -1,
        rightLength = partials.length,
        rangeLength = nativeMax(argsLength - holdersLength, 0),
        result = Array(rangeLength + rightLength),
        isUncurried = !isCurried;

    while (++argsIndex < rangeLength) {
      result[argsIndex] = args[argsIndex];
    }
    var offset = argsIndex;
    while (++rightIndex < rightLength) {
      result[offset + rightIndex] = partials[rightIndex];
    }
    while (++holdersIndex < holdersLength) {
      if (isUncurried || argsIndex < argsLength) {
        result[offset + holders[holdersIndex]] = args[argsIndex++];
      }
    }
    return result;
  }

  module.exports = composeArgsRight;


/***/ },
/* 828 */
/***/ function(module, exports) {

  /**
   * Gets the number of `placeholder` occurrences in `array`.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} placeholder The placeholder to search for.
   * @returns {number} Returns the placeholder count.
   */
  function countHolders(array, placeholder) {
    var length = array.length,
        result = 0;

    while (length--) {
      if (array[length] === placeholder) {
        ++result;
      }
    }
    return result;
  }

  module.exports = countHolders;


/***/ },
/* 829 */
/***/ function(module, exports, __webpack_require__) {

  var isLaziable = __webpack_require__(830),
      setData = __webpack_require__(841),
      setWrapToString = __webpack_require__(842);

  /** Used to compose bitmasks for function metadata. */
  var WRAP_BIND_FLAG = 1,
      WRAP_BIND_KEY_FLAG = 2,
      WRAP_CURRY_BOUND_FLAG = 4,
      WRAP_CURRY_FLAG = 8,
      WRAP_PARTIAL_FLAG = 32,
      WRAP_PARTIAL_RIGHT_FLAG = 64;

  /**
   * Creates a function that wraps `func` to continue currying.
   *
   * @private
   * @param {Function} func The function to wrap.
   * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
   * @param {Function} wrapFunc The function to create the `func` wrapper.
   * @param {*} placeholder The placeholder value.
   * @param {*} [thisArg] The `this` binding of `func`.
   * @param {Array} [partials] The arguments to prepend to those provided to
   *  the new function.
   * @param {Array} [holders] The `partials` placeholder indexes.
   * @param {Array} [argPos] The argument positions of the new function.
   * @param {number} [ary] The arity cap of `func`.
   * @param {number} [arity] The arity of `func`.
   * @returns {Function} Returns the new wrapped function.
   */
  function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {
    var isCurry = bitmask & WRAP_CURRY_FLAG,
        newHolders = isCurry ? holders : undefined,
        newHoldersRight = isCurry ? undefined : holders,
        newPartials = isCurry ? partials : undefined,
        newPartialsRight = isCurry ? undefined : partials;

    bitmask |= (isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG);
    bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);

    if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {
      bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);
    }
    var newData = [
      func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,
      newHoldersRight, argPos, ary, arity
    ];

    var result = wrapFunc.apply(undefined, newData);
    if (isLaziable(func)) {
      setData(result, newData);
    }
    result.placeholder = placeholder;
    return setWrapToString(result, func, bitmask);
  }

  module.exports = createRecurry;


/***/ },
/* 830 */
/***/ function(module, exports, __webpack_require__) {

  var LazyWrapper = __webpack_require__(831),
      getData = __webpack_require__(833),
      getFuncName = __webpack_require__(835),
      lodash = __webpack_require__(837);

  /**
   * Checks if `func` has a lazy counterpart.
   *
   * @private
   * @param {Function} func The function to check.
   * @returns {boolean} Returns `true` if `func` has a lazy counterpart,
   *  else `false`.
   */
  function isLaziable(func) {
    var funcName = getFuncName(func),
        other = lodash[funcName];

    if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {
      return false;
    }
    if (func === other) {
      return true;
    }
    var data = getData(other);
    return !!data && func === data[0];
  }

  module.exports = isLaziable;


/***/ },
/* 831 */
/***/ function(module, exports, __webpack_require__) {

  var baseCreate = __webpack_require__(803),
      baseLodash = __webpack_require__(832);

  /** Used as references for the maximum length and index of an array. */
  var MAX_ARRAY_LENGTH = 4294967295;

  /**
   * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.
   *
   * @private
   * @constructor
   * @param {*} value The value to wrap.
   */
  function LazyWrapper(value) {
    this.__wrapped__ = value;
    this.__actions__ = [];
    this.__dir__ = 1;
    this.__filtered__ = false;
    this.__iteratees__ = [];
    this.__takeCount__ = MAX_ARRAY_LENGTH;
    this.__views__ = [];
  }

  // Ensure `LazyWrapper` is an instance of `baseLodash`.
  LazyWrapper.prototype = baseCreate(baseLodash.prototype);
  LazyWrapper.prototype.constructor = LazyWrapper;

  module.exports = LazyWrapper;


/***/ },
/* 832 */
/***/ function(module, exports) {

  /**
   * The function whose prototype chain sequence wrappers inherit from.
   *
   * @private
   */
  function baseLodash() {
    // No operation performed.
  }

  module.exports = baseLodash;


/***/ },
/* 833 */
/***/ function(module, exports, __webpack_require__) {

  var metaMap = __webpack_require__(821),
      noop = __webpack_require__(834);

  /**
   * Gets metadata for `func`.
   *
   * @private
   * @param {Function} func The function to query.
   * @returns {*} Returns the metadata for `func`.
   */
  var getData = !metaMap ? noop : function(func) {
    return metaMap.get(func);
  };

  module.exports = getData;


/***/ },
/* 834 */
/***/ function(module, exports) {

  /**
   * This method returns `undefined`.
   *
   * @static
   * @memberOf _
   * @since 2.3.0
   * @category Util
   * @example
   *
   * _.times(2, _.noop);
   * // => [undefined, undefined]
   */
  function noop() {
    // No operation performed.
  }

  module.exports = noop;


/***/ },
/* 835 */
/***/ function(module, exports, __webpack_require__) {

  var realNames = __webpack_require__(836);

  /** Used for built-in method references. */
  var objectProto = Object.prototype;

  /** Used to check objects for own properties. */
  var hasOwnProperty = objectProto.hasOwnProperty;

  /**
   * Gets the name of `func`.
   *
   * @private
   * @param {Function} func The function to query.
   * @returns {string} Returns the function name.
   */
  function getFuncName(func) {
    var result = (func.name + ''),
        array = realNames[result],
        length = hasOwnProperty.call(realNames, result) ? array.length : 0;

    while (length--) {
      var data = array[length],
          otherFunc = data.func;
      if (otherFunc == null || otherFunc == func) {
        return data.name;
      }
    }
    return result;
  }

  module.exports = getFuncName;


/***/ },
/* 836 */
/***/ function(module, exports) {

  /** Used to lookup unminified function names. */
  var realNames = {};

  module.exports = realNames;


/***/ },
/* 837 */
/***/ function(module, exports, __webpack_require__) {

  var LazyWrapper = __webpack_require__(831),
      LodashWrapper = __webpack_require__(838),
      baseLodash = __webpack_require__(832),
      isArray = __webpack_require__(631),
      isObjectLike = __webpack_require__(640),
      wrapperClone = __webpack_require__(839);

  /** Used for built-in method references. */
  var objectProto = Object.prototype;

  /** Used to check objects for own properties. */
  var hasOwnProperty = objectProto.hasOwnProperty;

  /**
   * Creates a `lodash` object which wraps `value` to enable implicit method
   * chain sequences. Methods that operate on and return arrays, collections,
   * and functions can be chained together. Methods that retrieve a single value
   * or may return a primitive value will automatically end the chain sequence
   * and return the unwrapped value. Otherwise, the value must be unwrapped
   * with `_#value`.
   *
   * Explicit chain sequences, which must be unwrapped with `_#value`, may be
   * enabled using `_.chain`.
   *
   * The execution of chained methods is lazy, that is, it's deferred until
   * `_#value` is implicitly or explicitly called.
   *
   * Lazy evaluation allows several methods to support shortcut fusion.
   * Shortcut fusion is an optimization to merge iteratee calls; this avoids
   * the creation of intermediate arrays and can greatly reduce the number of
   * iteratee executions. Sections of a chain sequence qualify for shortcut
   * fusion if the section is applied to an array of at least `200` elements
   * and any iteratees accept only one argument. The heuristic for whether a
   * section qualifies for shortcut fusion is subject to change.
   *
   * Chaining is supported in custom builds as long as the `_#value` method is
   * directly or indirectly included in the build.
   *
   * In addition to lodash methods, wrappers have `Array` and `String` methods.
   *
   * The wrapper `Array` methods are:
   * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`
   *
   * The wrapper `String` methods are:
   * `replace` and `split`
   *
   * The wrapper methods that support shortcut fusion are:
   * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,
   * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,
   * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`
   *
   * The chainable wrapper methods are:
   * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,
   * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,
   * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,
   * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,
   * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,
   * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,
   * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,
   * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,
   * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,
   * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,
   * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,
   * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,
   * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,
   * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,
   * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,
   * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,
   * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,
   * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,
   * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,
   * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,
   * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,
   * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,
   * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,
   * `zipObject`, `zipObjectDeep`, and `zipWith`
   *
   * The wrapper methods that are **not** chainable by default are:
   * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,
   * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,
   * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,
   * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,
   * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,
   * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,
   * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,
   * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,
   * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,
   * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,
   * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,
   * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,
   * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,
   * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,
   * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,
   * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,
   * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,
   * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,
   * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,
   * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,
   * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,
   * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,
   * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,
   * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,
   * `upperFirst`, `value`, and `words`
   *
   * @name _
   * @constructor
   * @category Seq
   * @param {*} value The value to wrap in a `lodash` instance.
   * @returns {Object} Returns the new `lodash` wrapper instance.
   * @example
   *
   * function square(n) {
   *   return n * n;
   * }
   *
   * var wrapped = _([1, 2, 3]);
   *
   * // Returns an unwrapped value.
   * wrapped.reduce(_.add);
   * // => 6
   *
   * // Returns a wrapped value.
   * var squares = wrapped.map(square);
   *
   * _.isArray(squares);
   * // => false
   *
   * _.isArray(squares.value());
   * // => true
   */
  function lodash(value) {
    if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {
      if (value instanceof LodashWrapper) {
        return value;
      }
      if (hasOwnProperty.call(value, '__wrapped__')) {
        return wrapperClone(value);
      }
    }
    return new LodashWrapper(value);
  }

  // Ensure wrappers are instances of `baseLodash`.
  lodash.prototype = baseLodash.prototype;
  lodash.prototype.constructor = lodash;

  module.exports = lodash;


/***/ },
/* 838 */
/***/ function(module, exports, __webpack_require__) {

  var baseCreate = __webpack_require__(803),
      baseLodash = __webpack_require__(832);

  /**
   * The base constructor for creating `lodash` wrapper objects.
   *
   * @private
   * @param {*} value The value to wrap.
   * @param {boolean} [chainAll] Enable explicit method chain sequences.
   */
  function LodashWrapper(value, chainAll) {
    this.__wrapped__ = value;
    this.__actions__ = [];
    this.__chain__ = !!chainAll;
    this.__index__ = 0;
    this.__values__ = undefined;
  }

  LodashWrapper.prototype = baseCreate(baseLodash.prototype);
  LodashWrapper.prototype.constructor = LodashWrapper;

  module.exports = LodashWrapper;


/***/ },
/* 839 */
/***/ function(module, exports, __webpack_require__) {

  var LazyWrapper = __webpack_require__(831),
      LodashWrapper = __webpack_require__(838),
      copyArray = __webpack_require__(840);

  /**
   * Creates a clone of `wrapper`.
   *
   * @private
   * @param {Object} wrapper The wrapper to clone.
   * @returns {Object} Returns the cloned wrapper.
   */
  function wrapperClone(wrapper) {
    if (wrapper instanceof LazyWrapper) {
      return wrapper.clone();
    }
    var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);
    result.__actions__ = copyArray(wrapper.__actions__);
    result.__index__  = wrapper.__index__;
    result.__values__ = wrapper.__values__;
    return result;
  }

  module.exports = wrapperClone;


/***/ },
/* 840 */
/***/ function(module, exports) {

  /**
   * Copies the values of `source` to `array`.
   *
   * @private
   * @param {Array} source The array to copy values from.
   * @param {Array} [array=[]] The array to copy values to.
   * @returns {Array} Returns `array`.
   */
  function copyArray(source, array) {
    var index = -1,
        length = source.length;

    array || (array = Array(length));
    while (++index < length) {
      array[index] = source[index];
    }
    return array;
  }

  module.exports = copyArray;


/***/ },
/* 841 */
/***/ function(module, exports, __webpack_require__) {

  var baseSetData = __webpack_require__(820),
      shortOut = __webpack_require__(710);

  /**
   * Sets metadata for `func`.
   *
   * **Note:** If this function becomes hot, i.e. is invoked a lot in a short
   * period of time, it will trip its breaker and transition to an identity
   * function to avoid garbage collection pauses in V8. See
   * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)
   * for more details.
   *
   * @private
   * @param {Function} func The function to associate metadata with.
   * @param {*} data The metadata.
   * @returns {Function} Returns `func`.
   */
  var setData = shortOut(baseSetData);

  module.exports = setData;


/***/ },
/* 842 */
/***/ function(module, exports, __webpack_require__) {

  var getWrapDetails = __webpack_require__(843),
      insertWrapDetails = __webpack_require__(844),
      setToString = __webpack_require__(706),
      updateWrapDetails = __webpack_require__(845);

  /**
   * Sets the `toString` method of `wrapper` to mimic the source of `reference`
   * with wrapper details in a comment at the top of the source body.
   *
   * @private
   * @param {Function} wrapper The function to modify.
   * @param {Function} reference The reference function.
   * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
   * @returns {Function} Returns `wrapper`.
   */
  function setWrapToString(wrapper, reference, bitmask) {
    var source = (reference + '');
    return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));
  }

  module.exports = setWrapToString;


/***/ },
/* 843 */
/***/ function(module, exports) {

  /** Used to match wrap detail comments. */
  var reWrapDetails = /\{\n\/\* \[wrapped with (.+)\] \*/,
      reSplitDetails = /,? & /;

  /**
   * Extracts wrapper details from the `source` body comment.
   *
   * @private
   * @param {string} source The source to inspect.
   * @returns {Array} Returns the wrapper details.
   */
  function getWrapDetails(source) {
    var match = source.match(reWrapDetails);
    return match ? match[1].split(reSplitDetails) : [];
  }

  module.exports = getWrapDetails;


/***/ },
/* 844 */
/***/ function(module, exports) {

  /** Used to match wrap detail comments. */
  var reWrapComment = /\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/;

  /**
   * Inserts wrapper `details` in a comment at the top of the `source` body.
   *
   * @private
   * @param {string} source The source to modify.
   * @returns {Array} details The details to insert.
   * @returns {string} Returns the modified source.
   */
  function insertWrapDetails(source, details) {
    var length = details.length;
    if (!length) {
      return source;
    }
    var lastIndex = length - 1;
    details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];
    details = details.join(length > 2 ? ', ' : ' ');
    return source.replace(reWrapComment, '{\n/* [wrapped with ' + details + '] */\n');
  }

  module.exports = insertWrapDetails;


/***/ },
/* 845 */
/***/ function(module, exports, __webpack_require__) {

  var arrayEach = __webpack_require__(780),
      arrayIncludes = __webpack_require__(691);

  /** Used to compose bitmasks for function metadata. */
  var WRAP_BIND_FLAG = 1,
      WRAP_BIND_KEY_FLAG = 2,
      WRAP_CURRY_FLAG = 8,
      WRAP_CURRY_RIGHT_FLAG = 16,
      WRAP_PARTIAL_FLAG = 32,
      WRAP_PARTIAL_RIGHT_FLAG = 64,
      WRAP_ARY_FLAG = 128,
      WRAP_REARG_FLAG = 256,
      WRAP_FLIP_FLAG = 512;

  /** Used to associate wrap methods with their bit flags. */
  var wrapFlags = [
    ['ary', WRAP_ARY_FLAG],
    ['bind', WRAP_BIND_FLAG],
    ['bindKey', WRAP_BIND_KEY_FLAG],
    ['curry', WRAP_CURRY_FLAG],
    ['curryRight', WRAP_CURRY_RIGHT_FLAG],
    ['flip', WRAP_FLIP_FLAG],
    ['partial', WRAP_PARTIAL_FLAG],
    ['partialRight', WRAP_PARTIAL_RIGHT_FLAG],
    ['rearg', WRAP_REARG_FLAG]
  ];

  /**
   * Updates wrapper `details` based on `bitmask` flags.
   *
   * @private
   * @returns {Array} details The details to modify.
   * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
   * @returns {Array} Returns `details`.
   */
  function updateWrapDetails(details, bitmask) {
    arrayEach(wrapFlags, function(pair) {
      var value = '_.' + pair[0];
      if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {
        details.push(value);
      }
    });
    return details.sort();
  }

  module.exports = updateWrapDetails;


/***/ },
/* 846 */
/***/ function(module, exports) {

  /**
   * Gets the argument placeholder value for `func`.
   *
   * @private
   * @param {Function} func The function to inspect.
   * @returns {*} Returns the placeholder value.
   */
  function getHolder(func) {
    var object = func;
    return object.placeholder;
  }

  module.exports = getHolder;


/***/ },
/* 847 */
/***/ function(module, exports, __webpack_require__) {

  var copyArray = __webpack_require__(840),
      isIndex = __webpack_require__(681);

  /* Built-in method references for those with the same name as other `lodash` methods. */
  var nativeMin = Math.min;

  /**
   * Reorder `array` according to the specified indexes where the element at
   * the first index is assigned as the first element, the element at
   * the second index is assigned as the second element, and so on.
   *
   * @private
   * @param {Array} array The array to reorder.
   * @param {Array} indexes The arranged array indexes.
   * @returns {Array} Returns `array`.
   */
  function reorder(array, indexes) {
    var arrLength = array.length,
        length = nativeMin(indexes.length, arrLength),
        oldArray = copyArray(array);

    while (length--) {
      var index = indexes[length];
      array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;
    }
    return array;
  }

  module.exports = reorder;


/***/ },
/* 848 */
/***/ function(module, exports) {

  /** Used as the internal argument placeholder. */
  var PLACEHOLDER = '__lodash_placeholder__';

  /**
   * Replaces all `placeholder` elements in `array` with an internal placeholder
   * and returns an array of their indexes.
   *
   * @private
   * @param {Array} array The array to modify.
   * @param {*} placeholder The placeholder to replace.
   * @returns {Array} Returns the new array of placeholder indexes.
   */
  function replaceHolders(array, placeholder) {
    var index = -1,
        length = array.length,
        resIndex = 0,
        result = [];

    while (++index < length) {
      var value = array[index];
      if (value === placeholder || value === PLACEHOLDER) {
        array[index] = PLACEHOLDER;
        result[resIndex++] = index;
      }
    }
    return result;
  }

  module.exports = replaceHolders;


/***/ },
/* 849 */
/***/ function(module, exports, __webpack_require__) {

  var apply = __webpack_require__(705),
      createCtor = __webpack_require__(823),
      root = __webpack_require__(636);

  /** Used to compose bitmasks for function metadata. */
  var WRAP_BIND_FLAG = 1;

  /**
   * Creates a function that wraps `func` to invoke it with the `this` binding
   * of `thisArg` and `partials` prepended to the arguments it receives.
   *
   * @private
   * @param {Function} func The function to wrap.
   * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
   * @param {*} thisArg The `this` binding of `func`.
   * @param {Array} partials The arguments to prepend to those provided to
   *  the new function.
   * @returns {Function} Returns the new wrapped function.
   */
  function createPartial(func, bitmask, thisArg, partials) {
    var isBind = bitmask & WRAP_BIND_FLAG,
        Ctor = createCtor(func);

    function wrapper() {
      var argsIndex = -1,
          argsLength = arguments.length,
          leftIndex = -1,
          leftLength = partials.length,
          args = Array(leftLength + argsLength),
          fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;

      while (++leftIndex < leftLength) {
        args[leftIndex] = partials[leftIndex];
      }
      while (argsLength--) {
        args[leftIndex++] = arguments[++argsIndex];
      }
      return apply(fn, isBind ? thisArg : this, args);
    }
    return wrapper;
  }

  module.exports = createPartial;


/***/ },
/* 850 */
/***/ function(module, exports, __webpack_require__) {

  var composeArgs = __webpack_require__(826),
      composeArgsRight = __webpack_require__(827),
      replaceHolders = __webpack_require__(848);

  /** Used as the internal argument placeholder. */
  var PLACEHOLDER = '__lodash_placeholder__';

  /** Used to compose bitmasks for function metadata. */
  var WRAP_BIND_FLAG = 1,
      WRAP_BIND_KEY_FLAG = 2,
      WRAP_CURRY_BOUND_FLAG = 4,
      WRAP_CURRY_FLAG = 8,
      WRAP_ARY_FLAG = 128,
      WRAP_REARG_FLAG = 256;

  /* Built-in method references for those with the same name as other `lodash` methods. */
  var nativeMin = Math.min;

  /**
   * Merges the function metadata of `source` into `data`.
   *
   * Merging metadata reduces the number of wrappers used to invoke a function.
   * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`
   * may be applied regardless of execution order. Methods like `_.ary` and
   * `_.rearg` modify function arguments, making the order in which they are
   * executed important, preventing the merging of metadata. However, we make
   * an exception for a safe combined case where curried functions have `_.ary`
   * and or `_.rearg` applied.
   *
   * @private
   * @param {Array} data The destination metadata.
   * @param {Array} source The source metadata.
   * @returns {Array} Returns `data`.
   */
  function mergeData(data, source) {
    var bitmask = data[1],
        srcBitmask = source[1],
        newBitmask = bitmask | srcBitmask,
        isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);

    var isCombo =
      ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_CURRY_FLAG)) ||
      ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_REARG_FLAG) && (data[7].length <= source[8])) ||
      ((srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == WRAP_CURRY_FLAG));

    // Exit early if metadata can't be merged.
    if (!(isCommon || isCombo)) {
      return data;
    }
    // Use source `thisArg` if available.
    if (srcBitmask & WRAP_BIND_FLAG) {
      data[2] = source[2];
      // Set when currying a bound function.
      newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;
    }
    // Compose partial arguments.
    var value = source[3];
    if (value) {
      var partials = data[3];
      data[3] = partials ? composeArgs(partials, value, source[4]) : value;
      data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];
    }
    // Compose partial right arguments.
    value = source[5];
    if (value) {
      partials = data[5];
      data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;
      data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];
    }
    // Use source `argPos` if available.
    value = source[7];
    if (value) {
      data[7] = value;
    }
    // Use source `ary` if it's smaller.
    if (srcBitmask & WRAP_ARY_FLAG) {
      data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);
    }
    // Use source `arity` if one is not provided.
    if (data[9] == null) {
      data[9] = source[9];
    }
    // Use source `func` and merge bitmasks.
    data[0] = source[0];
    data[1] = newBitmask;

    return data;
  }

  module.exports = mergeData;


/***/ },
/* 851 */
/***/ function(module, exports, __webpack_require__) {

  var copyObject = __webpack_require__(852),
      keys = __webpack_require__(726);

  /**
   * The base implementation of `_.assign` without support for multiple sources
   * or `customizer` functions.
   *
   * @private
   * @param {Object} object The destination object.
   * @param {Object} source The source object.
   * @returns {Object} Returns `object`.
   */
  function baseAssign(object, source) {
    return object && copyObject(source, keys(source), object);
  }

  module.exports = baseAssign;


/***/ },
/* 852 */
/***/ function(module, exports, __webpack_require__) {

  var assignValue = __webpack_require__(853),
      baseAssignValue = __webpack_require__(854);

  /**
   * Copies properties of `source` to `object`.
   *
   * @private
   * @param {Object} source The object to copy properties from.
   * @param {Array} props The property identifiers to copy.
   * @param {Object} [object={}] The object to copy properties to.
   * @param {Function} [customizer] The function to customize copied values.
   * @returns {Object} Returns `object`.
   */
  function copyObject(source, props, object, customizer) {
    var isNew = !object;
    object || (object = {});

    var index = -1,
        length = props.length;

    while (++index < length) {
      var key = props[index];

      var newValue = customizer
        ? customizer(object[key], source[key], key, object, source)
        : undefined;

      if (newValue === undefined) {
        newValue = source[key];
      }
      if (isNew) {
        baseAssignValue(object, key, newValue);
      } else {
        assignValue(object, key, newValue);
      }
    }
    return object;
  }

  module.exports = copyObject;


/***/ },
/* 853 */
/***/ function(module, exports, __webpack_require__) {

  var baseAssignValue = __webpack_require__(854),
      eq = __webpack_require__(665);

  /** Used for built-in method references. */
  var objectProto = Object.prototype;

  /** Used to check objects for own properties. */
  var hasOwnProperty = objectProto.hasOwnProperty;

  /**
   * Assigns `value` to `key` of `object` if the existing value is not equivalent
   * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
   * for equality comparisons.
   *
   * @private
   * @param {Object} object The object to modify.
   * @param {string} key The key of the property to assign.
   * @param {*} value The value to assign.
   */
  function assignValue(object, key, value) {
    var objValue = object[key];
    if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||
        (value === undefined && !(key in object))) {
      baseAssignValue(object, key, value);
    }
  }

  module.exports = assignValue;


/***/ },
/* 854 */
/***/ function(module, exports, __webpack_require__) {

  var defineProperty = __webpack_require__(709);

  /**
   * The base implementation of `assignValue` and `assignMergeValue` without
   * value checks.
   *
   * @private
   * @param {Object} object The object to modify.
   * @param {string} key The key of the property to assign.
   * @param {*} value The value to assign.
   */
  function baseAssignValue(object, key, value) {
    if (key == '__proto__' && defineProperty) {
      defineProperty(object, key, {
        'configurable': true,
        'enumerable': true,
        'value': value,
        'writable': true
      });
    } else {
      object[key] = value;
    }
  }

  module.exports = baseAssignValue;


/***/ },
/* 855 */
/***/ function(module, exports, __webpack_require__) {

  var baseClone = __webpack_require__(856);

  /** Used to compose bitmasks for cloning. */
  var CLONE_SYMBOLS_FLAG = 4;

  /**
   * Creates a shallow clone of `value`.
   *
   * **Note:** This method is loosely based on the
   * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)
   * and supports cloning arrays, array buffers, booleans, date objects, maps,
   * numbers, `Object` objects, regexes, sets, strings, symbols, and typed
   * arrays. The own enumerable properties of `arguments` objects are cloned
   * as plain objects. An empty object is returned for uncloneable values such
   * as error objects, functions, DOM nodes, and WeakMaps.
   *
   * @static
   * @memberOf _
   * @since 0.1.0
   * @category Lang
   * @param {*} value The value to clone.
   * @returns {*} Returns the cloned value.
   * @see _.cloneDeep
   * @example
   *
   * var objects = [{ 'a': 1 }, { 'b': 2 }];
   *
   * var shallow = _.clone(objects);
   * console.log(shallow[0] === objects[0]);
   * // => true
   */
  function clone(value) {
    return baseClone(value, CLONE_SYMBOLS_FLAG);
  }

  module.exports = clone;


/***/ },
/* 856 */
/***/ function(module, exports, __webpack_require__) {

  var Stack = __webpack_require__(743),
      arrayEach = __webpack_require__(780),
      assignValue = __webpack_require__(853),
      baseAssign = __webpack_require__(851),
      baseAssignIn = __webpack_require__(857),
      cloneBuffer = __webpack_require__(861),
      copyArray = __webpack_require__(840),
      copySymbols = __webpack_require__(862),
      copySymbolsIn = __webpack_require__(865),
      getAllKeys = __webpack_require__(867),
      getAllKeysIn = __webpack_require__(869),
      getTag = __webpack_require__(758),
      initCloneArray = __webpack_require__(870),
      initCloneByTag = __webpack_require__(871),
      initCloneObject = __webpack_require__(882),
      isArray = __webpack_require__(631),
      isBuffer = __webpack_require__(729),
      isObject = __webpack_require__(652),
      keys = __webpack_require__(726);

  /** Used to compose bitmasks for cloning. */
  var CLONE_DEEP_FLAG = 1,
      CLONE_FLAT_FLAG = 2,
      CLONE_SYMBOLS_FLAG = 4;

  /** `Object#toString` result references. */
  var argsTag = '[object Arguments]',
      arrayTag = '[object Array]',
      boolTag = '[object Boolean]',
      dateTag = '[object Date]',
      errorTag = '[object Error]',
      funcTag = '[object Function]',
      genTag = '[object GeneratorFunction]',
      mapTag = '[object Map]',
      numberTag = '[object Number]',
      objectTag = '[object Object]',
      regexpTag = '[object RegExp]',
      setTag = '[object Set]',
      stringTag = '[object String]',
      symbolTag = '[object Symbol]',
      weakMapTag = '[object WeakMap]';

  var arrayBufferTag = '[object ArrayBuffer]',
      dataViewTag = '[object DataView]',
      float32Tag = '[object Float32Array]',
      float64Tag = '[object Float64Array]',
      int8Tag = '[object Int8Array]',
      int16Tag = '[object Int16Array]',
      int32Tag = '[object Int32Array]',
      uint8Tag = '[object Uint8Array]',
      uint8ClampedTag = '[object Uint8ClampedArray]',
      uint16Tag = '[object Uint16Array]',
      uint32Tag = '[object Uint32Array]';

  /** Used to identify `toStringTag` values supported by `_.clone`. */
  var cloneableTags = {};
  cloneableTags[argsTag] = cloneableTags[arrayTag] =
  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =
  cloneableTags[boolTag] = cloneableTags[dateTag] =
  cloneableTags[float32Tag] = cloneableTags[float64Tag] =
  cloneableTags[int8Tag] = cloneableTags[int16Tag] =
  cloneableTags[int32Tag] = cloneableTags[mapTag] =
  cloneableTags[numberTag] = cloneableTags[objectTag] =
  cloneableTags[regexpTag] = cloneableTags[setTag] =
  cloneableTags[stringTag] = cloneableTags[symbolTag] =
  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =
  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
  cloneableTags[errorTag] = cloneableTags[funcTag] =
  cloneableTags[weakMapTag] = false;

  /**
   * The base implementation of `_.clone` and `_.cloneDeep` which tracks
   * traversed objects.
   *
   * @private
   * @param {*} value The value to clone.
   * @param {boolean} bitmask The bitmask flags.
   *  1 - Deep clone
   *  2 - Flatten inherited properties
   *  4 - Clone symbols
   * @param {Function} [customizer] The function to customize cloning.
   * @param {string} [key] The key of `value`.
   * @param {Object} [object] The parent object of `value`.
   * @param {Object} [stack] Tracks traversed objects and their clone counterparts.
   * @returns {*} Returns the cloned value.
   */
  function baseClone(value, bitmask, customizer, key, object, stack) {
    var result,
        isDeep = bitmask & CLONE_DEEP_FLAG,
        isFlat = bitmask & CLONE_FLAT_FLAG,
        isFull = bitmask & CLONE_SYMBOLS_FLAG;

    if (customizer) {
      result = object ? customizer(value, key, object, stack) : customizer(value);
    }
    if (result !== undefined) {
      return result;
    }
    if (!isObject(value)) {
      return value;
    }
    var isArr = isArray(value);
    if (isArr) {
      result = initCloneArray(value);
      if (!isDeep) {
        return copyArray(value, result);
      }
    } else {
      var tag = getTag(value),
          isFunc = tag == funcTag || tag == genTag;

      if (isBuffer(value)) {
        return cloneBuffer(value, isDeep);
      }
      if (tag == objectTag || tag == argsTag || (isFunc && !object)) {
        result = (isFlat || isFunc) ? {} : initCloneObject(value);
        if (!isDeep) {
          return isFlat
            ? copySymbolsIn(value, baseAssignIn(result, value))
            : copySymbols(value, baseAssign(result, value));
        }
      } else {
        if (!cloneableTags[tag]) {
          return object ? value : {};
        }
        result = initCloneByTag(value, tag, baseClone, isDeep);
      }
    }
    // Check for circular references and return its corresponding clone.
    stack || (stack = new Stack);
    var stacked = stack.get(value);
    if (stacked) {
      return stacked;
    }
    stack.set(value, result);

    var keysFunc = isFull
      ? (isFlat ? getAllKeysIn : getAllKeys)
      : (isFlat ? keysIn : keys);

    var props = isArr ? undefined : keysFunc(value);
    arrayEach(props || value, function(subValue, key) {
      if (props) {
        key = subValue;
        subValue = value[key];
      }
      // Recursively populate clone (susceptible to call stack limits).
      assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));
    });
    return result;
  }

  module.exports = baseClone;


/***/ },
/* 857 */
/***/ function(module, exports, __webpack_require__) {

  var copyObject = __webpack_require__(852),
      keysIn = __webpack_require__(858);

  /**
   * The base implementation of `_.assignIn` without support for multiple sources
   * or `customizer` functions.
   *
   * @private
   * @param {Object} object The destination object.
   * @param {Object} source The source object.
   * @returns {Object} Returns `object`.
   */
  function baseAssignIn(object, source) {
    return object && copyObject(source, keysIn(source), object);
  }

  module.exports = baseAssignIn;


/***/ },
/* 858 */
/***/ function(module, exports, __webpack_require__) {

  var arrayLikeKeys = __webpack_require__(727),
      baseKeysIn = __webpack_require__(859),
      isArrayLike = __webpack_require__(712);

  /**
   * Creates an array of the own and inherited enumerable property names of `object`.
   *
   * **Note:** Non-object values are coerced to objects.
   *
   * @static
   * @memberOf _
   * @since 3.0.0
   * @category Object
   * @param {Object} object The object to query.
   * @returns {Array} Returns the array of property names.
   * @example
   *
   * function Foo() {
   *   this.a = 1;
   *   this.b = 2;
   * }
   *
   * Foo.prototype.c = 3;
   *
   * _.keysIn(new Foo);
   * // => ['a', 'b', 'c'] (iteration order is not guaranteed)
   */
  function keysIn(object) {
    return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);
  }

  module.exports = keysIn;


/***/ },
/* 859 */
/***/ function(module, exports, __webpack_require__) {

  var isObject = __webpack_require__(652),
      isPrototype = __webpack_require__(736),
      nativeKeysIn = __webpack_require__(860);

  /** Used for built-in method references. */
  var objectProto = Object.prototype;

  /** Used to check objects for own properties. */
  var hasOwnProperty = objectProto.hasOwnProperty;

  /**
   * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.
   *
   * @private
   * @param {Object} object The object to query.
   * @returns {Array} Returns the array of property names.
   */
  function baseKeysIn(object) {
    if (!isObject(object)) {
      return nativeKeysIn(object);
    }
    var isProto = isPrototype(object),
        result = [];

    for (var key in object) {
      if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {
        result.push(key);
      }
    }
    return result;
  }

  module.exports = baseKeysIn;


/***/ },
/* 860 */
/***/ function(module, exports) {

  /**
   * This function is like
   * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
   * except that it includes inherited enumerable properties.
   *
   * @private
   * @param {Object} object The object to query.
   * @returns {Array} Returns the array of property names.
   */
  function nativeKeysIn(object) {
    var result = [];
    if (object != null) {
      for (var key in Object(object)) {
        result.push(key);
      }
    }
    return result;
  }

  module.exports = nativeKeysIn;


/***/ },
/* 861 */
/***/ function(module, exports, __webpack_require__) {

  /* WEBPACK VAR INJECTION */(function(module) {var root = __webpack_require__(636);

  /** Detect free variable `exports`. */
  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;

  /** Detect free variable `module`. */
  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

  /** Detect the popular CommonJS extension `module.exports`. */
  var moduleExports = freeModule && freeModule.exports === freeExports;

  /** Built-in value references. */
  var Buffer = moduleExports ? root.Buffer : undefined,
      allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined;

  /**
   * Creates a clone of  `buffer`.
   *
   * @private
   * @param {Buffer} buffer The buffer to clone.
   * @param {boolean} [isDeep] Specify a deep clone.
   * @returns {Buffer} Returns the cloned buffer.
   */
  function cloneBuffer(buffer, isDeep) {
    if (isDeep) {
      return buffer.slice();
    }
    var length = buffer.length,
        result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);

    buffer.copy(result);
    return result;
  }

  module.exports = cloneBuffer;

  /* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(730)(module)))

/***/ },
/* 862 */
/***/ function(module, exports, __webpack_require__) {

  var copyObject = __webpack_require__(852),
      getSymbols = __webpack_require__(863);

  /**
   * Copies own symbols of `source` to `object`.
   *
   * @private
   * @param {Object} source The object to copy symbols from.
   * @param {Object} [object={}] The object to copy symbols to.
   * @returns {Object} Returns `object`.
   */
  function copySymbols(source, object) {
    return copyObject(source, getSymbols(source), object);
  }

  module.exports = copySymbols;


/***/ },
/* 863 */
/***/ function(module, exports, __webpack_require__) {

  var overArg = __webpack_require__(738),
      stubArray = __webpack_require__(864);

  /* Built-in method references for those with the same name as other `lodash` methods. */
  var nativeGetSymbols = Object.getOwnPropertySymbols;

  /**
   * Creates an array of the own enumerable symbols of `object`.
   *
   * @private
   * @param {Object} object The object to query.
   * @returns {Array} Returns the array of symbols.
   */
  var getSymbols = nativeGetSymbols ? overArg(nativeGetSymbols, Object) : stubArray;

  module.exports = getSymbols;


/***/ },
/* 864 */
/***/ function(module, exports) {

  /**
   * This method returns a new empty array.
   *
   * @static
   * @memberOf _
   * @since 4.13.0
   * @category Util
   * @returns {Array} Returns the new empty array.
   * @example
   *
   * var arrays = _.times(2, _.stubArray);
   *
   * console.log(arrays);
   * // => [[], []]
   *
   * console.log(arrays[0] === arrays[1]);
   * // => false
   */
  function stubArray() {
    return [];
  }

  module.exports = stubArray;


/***/ },
/* 865 */
/***/ function(module, exports, __webpack_require__) {

  var copyObject = __webpack_require__(852),
      getSymbolsIn = __webpack_require__(866);

  /**
   * Copies own and inherited symbols of `source` to `object`.
   *
   * @private
   * @param {Object} source The object to copy symbols from.
   * @param {Object} [object={}] The object to copy symbols to.
   * @returns {Object} Returns `object`.
   */
  function copySymbolsIn(source, object) {
    return copyObject(source, getSymbolsIn(source), object);
  }

  module.exports = copySymbolsIn;


/***/ },
/* 866 */
/***/ function(module, exports, __webpack_require__) {

  var arrayPush = __webpack_require__(700),
      getPrototype = __webpack_require__(793),
      getSymbols = __webpack_require__(863),
      stubArray = __webpack_require__(864);

  /* Built-in method references for those with the same name as other `lodash` methods. */
  var nativeGetSymbols = Object.getOwnPropertySymbols;

  /**
   * Creates an array of the own and inherited enumerable symbols of `object`.
   *
   * @private
   * @param {Object} object The object to query.
   * @returns {Array} Returns the array of symbols.
   */
  var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {
    var result = [];
    while (object) {
      arrayPush(result, getSymbols(object));
      object = getPrototype(object);
    }
    return result;
  };

  module.exports = getSymbolsIn;


/***/ },
/* 867 */
/***/ function(module, exports, __webpack_require__) {

  var baseGetAllKeys = __webpack_require__(868),
      getSymbols = __webpack_require__(863),
      keys = __webpack_require__(726);

  /**
   * Creates an array of own enumerable property names and symbols of `object`.
   *
   * @private
   * @param {Object} object The object to query.
   * @returns {Array} Returns the array of property names and symbols.
   */
  function getAllKeys(object) {
    return baseGetAllKeys(object, keys, getSymbols);
  }

  module.exports = getAllKeys;


/***/ },
/* 868 */
/***/ function(module, exports, __webpack_require__) {

  var arrayPush = __webpack_require__(700),
      isArray = __webpack_require__(631);

  /**
   * The base implementation of `getAllKeys` and `getAllKeysIn` which uses
   * `keysFunc` and `symbolsFunc` to get the enumerable property names and
   * symbols of `object`.
   *
   * @private
   * @param {Object} object The object to query.
   * @param {Function} keysFunc The function to get the keys of `object`.
   * @param {Function} symbolsFunc The function to get the symbols of `object`.
   * @returns {Array} Returns the array of property names and symbols.
   */
  function baseGetAllKeys(object, keysFunc, symbolsFunc) {
    var result = keysFunc(object);
    return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
  }

  module.exports = baseGetAllKeys;


/***/ },
/* 869 */
/***/ function(module, exports, __webpack_require__) {

  var baseGetAllKeys = __webpack_require__(868),
      getSymbolsIn = __webpack_require__(866),
      keysIn = __webpack_require__(858);

  /**
   * Creates an array of own and inherited enumerable property names and
   * symbols of `object`.
   *
   * @private
   * @param {Object} object The object to query.
   * @returns {Array} Returns the array of property names and symbols.
   */
  function getAllKeysIn(object) {
    return baseGetAllKeys(object, keysIn, getSymbolsIn);
  }

  module.exports = getAllKeysIn;


/***/ },
/* 870 */
/***/ function(module, exports) {

  /** Used for built-in method references. */
  var objectProto = Object.prototype;

  /** Used to check objects for own properties. */
  var hasOwnProperty = objectProto.hasOwnProperty;

  /**
   * Initializes an array clone.
   *
   * @private
   * @param {Array} array The array to clone.
   * @returns {Array} Returns the initialized clone.
   */
  function initCloneArray(array) {
    var length = array.length,
        result = array.constructor(length);

    // Add properties assigned by `RegExp#exec`.
    if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {
      result.index = array.index;
      result.input = array.input;
    }
    return result;
  }

  module.exports = initCloneArray;


/***/ },
/* 871 */
/***/ function(module, exports, __webpack_require__) {

  var cloneArrayBuffer = __webpack_require__(872),
      cloneDataView = __webpack_require__(873),
      cloneMap = __webpack_require__(874),
      cloneRegExp = __webpack_require__(877),
      cloneSet = __webpack_require__(878),
      cloneSymbol = __webpack_require__(880),
      cloneTypedArray = __webpack_require__(881);

  /** `Object#toString` result references. */
  var boolTag = '[object Boolean]',
      dateTag = '[object Date]',
      mapTag = '[object Map]',
      numberTag = '[object Number]',
      regexpTag = '[object RegExp]',
      setTag = '[object Set]',
      stringTag = '[object String]',
      symbolTag = '[object Symbol]';

  var arrayBufferTag = '[object ArrayBuffer]',
      dataViewTag = '[object DataView]',
      float32Tag = '[object Float32Array]',
      float64Tag = '[object Float64Array]',
      int8Tag = '[object Int8Array]',
      int16Tag = '[object Int16Array]',
      int32Tag = '[object Int32Array]',
      uint8Tag = '[object Uint8Array]',
      uint8ClampedTag = '[object Uint8ClampedArray]',
      uint16Tag = '[object Uint16Array]',
      uint32Tag = '[object Uint32Array]';

  /**
   * Initializes an object clone based on its `toStringTag`.
   *
   * **Note:** This function only supports cloning values with tags of
   * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
   *
   * @private
   * @param {Object} object The object to clone.
   * @param {string} tag The `toStringTag` of the object to clone.
   * @param {Function} cloneFunc The function to clone values.
   * @param {boolean} [isDeep] Specify a deep clone.
   * @returns {Object} Returns the initialized clone.
   */
  function initCloneByTag(object, tag, cloneFunc, isDeep) {
    var Ctor = object.constructor;
    switch (tag) {
      case arrayBufferTag:
        return cloneArrayBuffer(object);

      case boolTag:
      case dateTag:
        return new Ctor(+object);

      case dataViewTag:
        return cloneDataView(object, isDeep);

      case float32Tag: case float64Tag:
      case int8Tag: case int16Tag: case int32Tag:
      case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:
        return cloneTypedArray(object, isDeep);

      case mapTag:
        return cloneMap(object, isDeep, cloneFunc);

      case numberTag:
      case stringTag:
        return new Ctor(object);

      case regexpTag:
        return cloneRegExp(object);

      case setTag:
        return cloneSet(object, isDeep, cloneFunc);

      case symbolTag:
        return cloneSymbol(object);
    }
  }

  module.exports = initCloneByTag;


/***/ },
/* 872 */
/***/ function(module, exports, __webpack_require__) {

  var Uint8Array = __webpack_require__(754);

  /**
   * Creates a clone of `arrayBuffer`.
   *
   * @private
   * @param {ArrayBuffer} arrayBuffer The array buffer to clone.
   * @returns {ArrayBuffer} Returns the cloned array buffer.
   */
  function cloneArrayBuffer(arrayBuffer) {
    var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
    new Uint8Array(result).set(new Uint8Array(arrayBuffer));
    return result;
  }

  module.exports = cloneArrayBuffer;


/***/ },
/* 873 */
/***/ function(module, exports, __webpack_require__) {

  var cloneArrayBuffer = __webpack_require__(872);

  /**
   * Creates a clone of `dataView`.
   *
   * @private
   * @param {Object} dataView The data view to clone.
   * @param {boolean} [isDeep] Specify a deep clone.
   * @returns {Object} Returns the cloned data view.
   */
  function cloneDataView(dataView, isDeep) {
    var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;
    return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
  }

  module.exports = cloneDataView;


/***/ },
/* 874 */
/***/ function(module, exports, __webpack_require__) {

  var addMapEntry = __webpack_require__(875),
      arrayReduce = __webpack_require__(876),
      mapToArray = __webpack_require__(755);

  /** Used to compose bitmasks for cloning. */
  var CLONE_DEEP_FLAG = 1;

  /**
   * Creates a clone of `map`.
   *
   * @private
   * @param {Object} map The map to clone.
   * @param {Function} cloneFunc The function to clone values.
   * @param {boolean} [isDeep] Specify a deep clone.
   * @returns {Object} Returns the cloned map.
   */
  function cloneMap(map, isDeep, cloneFunc) {
    var array = isDeep ? cloneFunc(mapToArray(map), CLONE_DEEP_FLAG) : mapToArray(map);
    return arrayReduce(array, addMapEntry, new map.constructor);
  }

  module.exports = cloneMap;


/***/ },
/* 875 */
/***/ function(module, exports) {

  /**
   * Adds the key-value `pair` to `map`.
   *
   * @private
   * @param {Object} map The map to modify.
   * @param {Array} pair The key-value pair to add.
   * @returns {Object} Returns `map`.
   */
  function addMapEntry(map, pair) {
    // Don't return `map.set` because it's not chainable in IE 11.
    map.set(pair[0], pair[1]);
    return map;
  }

  module.exports = addMapEntry;


/***/ },
/* 876 */
/***/ function(module, exports) {

  /**
   * A specialized version of `_.reduce` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @param {*} [accumulator] The initial value.
   * @param {boolean} [initAccum] Specify using the first element of `array` as
   *  the initial value.
   * @returns {*} Returns the accumulated value.
   */
  function arrayReduce(array, iteratee, accumulator, initAccum) {
    var index = -1,
        length = array == null ? 0 : array.length;

    if (initAccum && length) {
      accumulator = array[++index];
    }
    while (++index < length) {
      accumulator = iteratee(accumulator, array[index], index, array);
    }
    return accumulator;
  }

  module.exports = arrayReduce;


/***/ },
/* 877 */
/***/ function(module, exports) {

  /** Used to match `RegExp` flags from their coerced string values. */
  var reFlags = /\w*$/;

  /**
   * Creates a clone of `regexp`.
   *
   * @private
   * @param {Object} regexp The regexp to clone.
   * @returns {Object} Returns the cloned regexp.
   */
  function cloneRegExp(regexp) {
    var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));
    result.lastIndex = regexp.lastIndex;
    return result;
  }

  module.exports = cloneRegExp;


/***/ },
/* 878 */
/***/ function(module, exports, __webpack_require__) {

  var addSetEntry = __webpack_require__(879),
      arrayReduce = __webpack_require__(876),
      setToArray = __webpack_require__(756);

  /** Used to compose bitmasks for cloning. */
  var CLONE_DEEP_FLAG = 1;

  /**
   * Creates a clone of `set`.
   *
   * @private
   * @param {Object} set The set to clone.
   * @param {Function} cloneFunc The function to clone values.
   * @param {boolean} [isDeep] Specify a deep clone.
   * @returns {Object} Returns the cloned set.
   */
  function cloneSet(set, isDeep, cloneFunc) {
    var array = isDeep ? cloneFunc(setToArray(set), CLONE_DEEP_FLAG) : setToArray(set);
    return arrayReduce(array, addSetEntry, new set.constructor);
  }

  module.exports = cloneSet;


/***/ },
/* 879 */
/***/ function(module, exports) {

  /**
   * Adds `value` to `set`.
   *
   * @private
   * @param {Object} set The set to modify.
   * @param {*} value The value to add.
   * @returns {Object} Returns `set`.
   */
  function addSetEntry(set, value) {
    // Don't return `set.add` because it's not chainable in IE 11.
    set.add(value);
    return set;
  }

  module.exports = addSetEntry;


/***/ },
/* 880 */
/***/ function(module, exports, __webpack_require__) {

  var Symbol = __webpack_require__(635);

  /** Used to convert symbols to primitives and strings. */
  var symbolProto = Symbol ? Symbol.prototype : undefined,
      symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;

  /**
   * Creates a clone of the `symbol` object.
   *
   * @private
   * @param {Object} symbol The symbol object to clone.
   * @returns {Object} Returns the cloned symbol object.
   */
  function cloneSymbol(symbol) {
    return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};
  }

  module.exports = cloneSymbol;


/***/ },
/* 881 */
/***/ function(module, exports, __webpack_require__) {

  var cloneArrayBuffer = __webpack_require__(872);

  /**
   * Creates a clone of `typedArray`.
   *
   * @private
   * @param {Object} typedArray The typed array to clone.
   * @param {boolean} [isDeep] Specify a deep clone.
   * @returns {Object} Returns the cloned typed array.
   */
  function cloneTypedArray(typedArray, isDeep) {
    var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
    return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
  }

  module.exports = cloneTypedArray;


/***/ },
/* 882 */
/***/ function(module, exports, __webpack_require__) {

  var baseCreate = __webpack_require__(803),
      getPrototype = __webpack_require__(793),
      isPrototype = __webpack_require__(736);

  /**
   * Initializes an object clone.
   *
   * @private
   * @param {Object} object The object to clone.
   * @returns {Object} Returns the initialized clone.
   */
  function initCloneObject(object) {
    return (typeof object.constructor == 'function' && !isPrototype(object))
      ? baseCreate(getPrototype(object))
      : {};
  }

  module.exports = initCloneObject;


/***/ },
/* 883 */
/***/ function(module, exports, __webpack_require__) {

  var createWrap = __webpack_require__(819);

  /** Used to compose bitmasks for function metadata. */
  var WRAP_CURRY_FLAG = 8;

  /**
   * Creates a function that accepts arguments of `func` and either invokes
   * `func` returning its result, if at least `arity` number of arguments have
   * been provided, or returns a function that accepts the remaining `func`
   * arguments, and so on. The arity of `func` may be specified if `func.length`
   * is not sufficient.
   *
   * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,
   * may be used as a placeholder for provided arguments.
   *
   * **Note:** This method doesn't set the "length" property of curried functions.
   *
   * @static
   * @memberOf _
   * @since 2.0.0
   * @category Function
   * @param {Function} func The function to curry.
   * @param {number} [arity=func.length] The arity of `func`.
   * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
   * @returns {Function} Returns the new curried function.
   * @example
   *
   * var abc = function(a, b, c) {
   *   return [a, b, c];
   * };
   *
   * var curried = _.curry(abc);
   *
   * curried(1)(2)(3);
   * // => [1, 2, 3]
   *
   * curried(1, 2)(3);
   * // => [1, 2, 3]
   *
   * curried(1, 2, 3);
   * // => [1, 2, 3]
   *
   * // Curried with placeholders.
   * curried(1)(_, 3)(2);
   * // => [1, 2, 3]
   */
  function curry(func, arity, guard) {
    arity = guard ? undefined : arity;
    var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);
    result.placeholder = curry.placeholder;
    return result;
  }

  // Assign default placeholders.
  curry.placeholder = {};

  module.exports = curry;


/***/ },
/* 884 */
/***/ function(module, exports, __webpack_require__) {

  var baseClone = __webpack_require__(856),
      baseIteratee = __webpack_require__(740);

  /** Used to compose bitmasks for cloning. */
  var CLONE_DEEP_FLAG = 1;

  /**
   * Creates a function that invokes `func` with the arguments of the created
   * function. If `func` is a property name, the created function returns the
   * property value for a given element. If `func` is an array or object, the
   * created function returns `true` for elements that contain the equivalent
   * source properties, otherwise it returns `false`.
   *
   * @static
   * @since 4.0.0
   * @memberOf _
   * @category Util
   * @param {*} [func=_.identity] The value to convert to a callback.
   * @returns {Function} Returns the callback.
   * @example
   *
   * var users = [
   *   { 'user': 'barney', 'age': 36, 'active': true },
   *   { 'user': 'fred',   'age': 40, 'active': false }
   * ];
   *
   * // The `_.matches` iteratee shorthand.
   * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));
   * // => [{ 'user': 'barney', 'age': 36, 'active': true }]
   *
   * // The `_.matchesProperty` iteratee shorthand.
   * _.filter(users, _.iteratee(['user', 'fred']));
   * // => [{ 'user': 'fred', 'age': 40 }]
   *
   * // The `_.property` iteratee shorthand.
   * _.map(users, _.iteratee('user'));
   * // => ['barney', 'fred']
   *
   * // Create custom iteratee shorthands.
   * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {
   *   return !_.isRegExp(func) ? iteratee(func) : function(string) {
   *     return func.test(string);
   *   };
   * });
   *
   * _.filter(['abc', 'def'], /ef/);
   * // => ['def']
   */
  function iteratee(func) {
    return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG));
  }

  module.exports = iteratee;


/***/ },
/* 885 */
/***/ function(module, exports, __webpack_require__) {

  var createWrap = __webpack_require__(819),
      flatRest = __webpack_require__(886);

  /** Used to compose bitmasks for function metadata. */
  var WRAP_REARG_FLAG = 256;

  /**
   * Creates a function that invokes `func` with arguments arranged according
   * to the specified `indexes` where the argument value at the first index is
   * provided as the first argument, the argument value at the second index is
   * provided as the second argument, and so on.
   *
   * @static
   * @memberOf _
   * @since 3.0.0
   * @category Function
   * @param {Function} func The function to rearrange arguments for.
   * @param {...(number|number[])} indexes The arranged argument indexes.
   * @returns {Function} Returns the new function.
   * @example
   *
   * var rearged = _.rearg(function(a, b, c) {
   *   return [a, b, c];
   * }, [2, 0, 1]);
   *
   * rearged('b', 'c', 'a')
   * // => ['a', 'b', 'c']
   */
  var rearg = flatRest(function(func, indexes) {
    return createWrap(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);
  });

  module.exports = rearg;


/***/ },
/* 886 */
/***/ function(module, exports, __webpack_require__) {

  var flatten = __webpack_require__(887),
      overRest = __webpack_require__(704),
      setToString = __webpack_require__(706);

  /**
   * A specialized version of `baseRest` which flattens the rest array.
   *
   * @private
   * @param {Function} func The function to apply a rest parameter to.
   * @returns {Function} Returns the new function.
   */
  function flatRest(func) {
    return setToString(overRest(func, undefined, flatten), func + '');
  }

  module.exports = flatRest;


/***/ },
/* 887 */
/***/ function(module, exports, __webpack_require__) {

  var baseFlatten = __webpack_require__(699);

  /**
   * Flattens `array` a single level deep.
   *
   * @static
   * @memberOf _
   * @since 0.1.0
   * @category Array
   * @param {Array} array The array to flatten.
   * @returns {Array} Returns the new flattened array.
   * @example
   *
   * _.flatten([1, [2, [3, [4]], 5]]);
   * // => [1, 2, [3, [4]], 5]
   */
  function flatten(array) {
    var length = array == null ? 0 : array.length;
    return length ? baseFlatten(array, 1) : [];
  }

  module.exports = flatten;


/***/ },
/* 888 */
/***/ function(module, exports, __webpack_require__) {

  var arrayMap = __webpack_require__(678),
      copyArray = __webpack_require__(840),
      isArray = __webpack_require__(631),
      isSymbol = __webpack_require__(633),
      stringToPath = __webpack_require__(641),
      toKey = __webpack_require__(683),
      toString = __webpack_require__(676);

  /**
   * Converts `value` to a property path array.
   *
   * @static
   * @memberOf _
   * @since 4.0.0
   * @category Util
   * @param {*} value The value to convert.
   * @returns {Array} Returns the new property path array.
   * @example
   *
   * _.toPath('a.b.c');
   * // => ['a', 'b', 'c']
   *
   * _.toPath('a[0].b.c');
   * // => ['a', '0', 'b', 'c']
   */
  function toPath(value) {
    if (isArray(value)) {
      return arrayMap(value, toKey);
    }
    return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));
  }

  module.exports = toPath;


/***/ },
/* 889 */
/***/ function(module, exports) {

  module.exports = {
    'cap': false,
    'curry': false,
    'fixed': false,
    'immutable': false,
    'rearg': false
  };


/***/ },
/* 890 */
/***/ function(module, exports, __webpack_require__) {

  var convert = __webpack_require__(813),
      func = convert('pick', __webpack_require__(891));

  func.placeholder = __webpack_require__(816);
  module.exports = func;


/***/ },
/* 891 */
/***/ function(module, exports, __webpack_require__) {

  var basePick = __webpack_require__(892),
      flatRest = __webpack_require__(886);

  /**
   * Creates an object composed of the picked `object` properties.
   *
   * @static
   * @since 0.1.0
   * @memberOf _
   * @category Object
   * @param {Object} object The source object.
   * @param {...(string|string[])} [paths] The property paths to pick.
   * @returns {Object} Returns the new object.
   * @example
   *
   * var object = { 'a': 1, 'b': '2', 'c': 3 };
   *
   * _.pick(object, ['a', 'c']);
   * // => { 'a': 1, 'c': 3 }
   */
  var pick = flatRest(function(object, paths) {
    return object == null ? {} : basePick(object, paths);
  });

  module.exports = pick;


/***/ },
/* 892 */
/***/ function(module, exports, __webpack_require__) {

  var basePickBy = __webpack_require__(893),
      hasIn = __webpack_require__(769);

  /**
   * The base implementation of `_.pick` without support for individual
   * property identifiers.
   *
   * @private
   * @param {Object} object The source object.
   * @param {string[]} paths The property paths to pick.
   * @returns {Object} Returns the new object.
   */
  function basePick(object, paths) {
    object = Object(object);
    return basePickBy(object, paths, function(value, path) {
      return hasIn(object, path);
    });
  }

  module.exports = basePick;


/***/ },
/* 893 */
/***/ function(module, exports, __webpack_require__) {

  var baseGet = __webpack_require__(768),
      baseSet = __webpack_require__(894),
      castPath = __webpack_require__(630);

  /**
   * The base implementation of  `_.pickBy` without support for iteratee shorthands.
   *
   * @private
   * @param {Object} object The source object.
   * @param {string[]} paths The property paths to pick.
   * @param {Function} predicate The function invoked per property.
   * @returns {Object} Returns the new object.
   */
  function basePickBy(object, paths, predicate) {
    var index = -1,
        length = paths.length,
        result = {};

    while (++index < length) {
      var path = paths[index],
          value = baseGet(object, path);

      if (predicate(value, path)) {
        baseSet(result, castPath(path, object), value);
      }
    }
    return result;
  }

  module.exports = basePickBy;


/***/ },
/* 894 */
/***/ function(module, exports, __webpack_require__) {

  var assignValue = __webpack_require__(853),
      castPath = __webpack_require__(630),
      isIndex = __webpack_require__(681),
      isObject = __webpack_require__(652),
      toKey = __webpack_require__(683);

  /**
   * The base implementation of `_.set`.
   *
   * @private
   * @param {Object} object The object to modify.
   * @param {Array|string} path The path of the property to set.
   * @param {*} value The value to set.
   * @param {Function} [customizer] The function to customize path creation.
   * @returns {Object} Returns `object`.
   */
  function baseSet(object, path, value, customizer) {
    if (!isObject(object)) {
      return object;
    }
    path = castPath(path, object);

    var index = -1,
        length = path.length,
        lastIndex = length - 1,
        nested = object;

    while (nested != null && ++index < length) {
      var key = toKey(path[index]),
          newValue = value;

      if (index != lastIndex) {
        var objValue = nested[key];
        newValue = customizer ? customizer(objValue, key, nested) : undefined;
        if (newValue === undefined) {
          newValue = isObject(objValue)
            ? objValue
            : (isIndex(path[index + 1]) ? [] : {});
        }
      }
      assignValue(nested, key, newValue);
      nested = nested[key];
    }
    return object;
  }

  module.exports = baseSet;


/***/ },
/* 895 */
/***/ function(module, exports, __webpack_require__) {

  var convert = __webpack_require__(813),
      func = convert('keys', __webpack_require__(726), __webpack_require__(889));

  func.placeholder = __webpack_require__(816);
  module.exports = func;


/***/ },
/* 896 */
/***/ function(module, exports, __webpack_require__) {

  var convert = __webpack_require__(813),
      func = convert('isPlainObject', __webpack_require__(792), __webpack_require__(889));

  func.placeholder = __webpack_require__(816);
  module.exports = func;


/***/ },
/* 897 */
/***/ function(module, exports, __webpack_require__) {

  var convert = __webpack_require__(813),
      func = convert('isFunction', __webpack_require__(651), __webpack_require__(889));

  func.placeholder = __webpack_require__(816);
  module.exports = func;


/***/ },
/* 898 */
/***/ function(module, exports, __webpack_require__) {

  var convert = __webpack_require__(813),
      func = convert('compact', __webpack_require__(899), __webpack_require__(889));

  func.placeholder = __webpack_require__(816);
  module.exports = func;


/***/ },
/* 899 */
/***/ function(module, exports) {

  /**
   * Creates an array with all falsey values removed. The values `false`, `null`,
   * `0`, `""`, `undefined`, and `NaN` are falsey.
   *
   * @static
   * @memberOf _
   * @since 0.1.0
   * @category Array
   * @param {Array} array The array to compact.
   * @returns {Array} Returns the new array of filtered values.
   * @example
   *
   * _.compact([0, 1, false, 2, '', 3]);
   * // => [1, 2, 3]
   */
  function compact(array) {
    var index = -1,
        length = array == null ? 0 : array.length,
        resIndex = 0,
        result = [];

    while (++index < length) {
      var value = array[index];
      if (value) {
        result[resIndex++] = value;
      }
    }
    return result;
  }

  module.exports = compact;


/***/ },
/* 900 */
/***/ function(module, exports, __webpack_require__) {

  var convert = __webpack_require__(813),
      func = convert('take', __webpack_require__(901));

  func.placeholder = __webpack_require__(816);
  module.exports = func;


/***/ },
/* 901 */
/***/ function(module, exports, __webpack_require__) {

  var baseSlice = __webpack_require__(902),
      toInteger = __webpack_require__(716);

  /**
   * Creates a slice of `array` with `n` elements taken from the beginning.
   *
   * @static
   * @memberOf _
   * @since 0.1.0
   * @category Array
   * @param {Array} array The array to query.
   * @param {number} [n=1] The number of elements to take.
   * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
   * @returns {Array} Returns the slice of `array`.
   * @example
   *
   * _.take([1, 2, 3]);
   * // => [1]
   *
   * _.take([1, 2, 3], 2);
   * // => [1, 2]
   *
   * _.take([1, 2, 3], 5);
   * // => [1, 2, 3]
   *
   * _.take([1, 2, 3], 0);
   * // => []
   */
  function take(array, n, guard) {
    if (!(array && array.length)) {
      return [];
    }
    n = (guard || n === undefined) ? 1 : toInteger(n);
    return baseSlice(array, 0, n < 0 ? 0 : n);
  }

  module.exports = take;


/***/ },
/* 902 */
/***/ function(module, exports) {

  /**
   * The base implementation of `_.slice` without an iteratee call guard.
   *
   * @private
   * @param {Array} array The array to slice.
   * @param {number} [start=0] The start position.
   * @param {number} [end=array.length] The end position.
   * @returns {Array} Returns the slice of `array`.
   */
  function baseSlice(array, start, end) {
    var index = -1,
        length = array.length;

    if (start < 0) {
      start = -start > length ? 0 : (length + start);
    }
    end = end > length ? length : end;
    if (end < 0) {
      end += length;
    }
    length = start > end ? 0 : ((end - start) >>> 0);
    start >>>= 0;

    var result = Array(length);
    while (++index < length) {
      result[index] = array[index + start];
    }
    return result;
  }

  module.exports = baseSlice;


/***/ },
/* 903 */
/***/ function(module, exports, __webpack_require__) {

  var convert = __webpack_require__(813),
      func = convert('sortBy', __webpack_require__(904));

  func.placeholder = __webpack_require__(816);
  module.exports = func;


/***/ },
/* 904 */
/***/ function(module, exports, __webpack_require__) {

  var baseFlatten = __webpack_require__(699),
      baseOrderBy = __webpack_require__(905),
      baseRest = __webpack_require__(702),
      isIterateeCall = __webpack_require__(810);

  /**
   * Creates an array of elements, sorted in ascending order by the results of
   * running each element in a collection thru each iteratee. This method
   * performs a stable sort, that is, it preserves the original sort order of
   * equal elements. The iteratees are invoked with one argument: (value).
   *
   * @static
   * @memberOf _
   * @since 0.1.0
   * @category Collection
   * @param {Array|Object} collection The collection to iterate over.
   * @param {...(Function|Function[])} [iteratees=[_.identity]]
   *  The iteratees to sort by.
   * @returns {Array} Returns the new sorted array.
   * @example
   *
   * var users = [
   *   { 'user': 'fred',   'age': 48 },
   *   { 'user': 'barney', 'age': 36 },
   *   { 'user': 'fred',   'age': 40 },
   *   { 'user': 'barney', 'age': 34 }
   * ];
   *
   * _.sortBy(users, [function(o) { return o.user; }]);
   * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]
   *
   * _.sortBy(users, ['user', 'age']);
   * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]
   */
  var sortBy = baseRest(function(collection, iteratees) {
    if (collection == null) {
      return [];
    }
    var length = iteratees.length;
    if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {
      iteratees = [];
    } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {
      iteratees = [iteratees[0]];
    }
    return baseOrderBy(collection, baseFlatten(iteratees, 1), []);
  });

  module.exports = sortBy;


/***/ },
/* 905 */
/***/ function(module, exports, __webpack_require__) {

  var arrayMap = __webpack_require__(678),
      baseIteratee = __webpack_require__(740),
      baseMap = __webpack_require__(906),
      baseSortBy = __webpack_require__(907),
      baseUnary = __webpack_require__(697),
      compareMultiple = __webpack_require__(908),
      identity = __webpack_require__(703);

  /**
   * The base implementation of `_.orderBy` without param guards.
   *
   * @private
   * @param {Array|Object} collection The collection to iterate over.
   * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.
   * @param {string[]} orders The sort orders of `iteratees`.
   * @returns {Array} Returns the new sorted array.
   */
  function baseOrderBy(collection, iteratees, orders) {
    var index = -1;
    iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(baseIteratee));

    var result = baseMap(collection, function(value, key, collection) {
      var criteria = arrayMap(iteratees, function(iteratee) {
        return iteratee(value);
      });
      return { 'criteria': criteria, 'index': ++index, 'value': value };
    });

    return baseSortBy(result, function(object, other) {
      return compareMultiple(object, other, orders);
    });
  }

  module.exports = baseOrderBy;


/***/ },
/* 906 */
/***/ function(module, exports, __webpack_require__) {

  var baseEach = __webpack_require__(722),
      isArrayLike = __webpack_require__(712);

  /**
   * The base implementation of `_.map` without support for iteratee shorthands.
   *
   * @private
   * @param {Array|Object} collection The collection to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns the new mapped array.
   */
  function baseMap(collection, iteratee) {
    var index = -1,
        result = isArrayLike(collection) ? Array(collection.length) : [];

    baseEach(collection, function(value, key, collection) {
      result[++index] = iteratee(value, key, collection);
    });
    return result;
  }

  module.exports = baseMap;


/***/ },
/* 907 */
/***/ function(module, exports) {

  /**
   * The base implementation of `_.sortBy` which uses `comparer` to define the
   * sort order of `array` and replaces criteria objects with their corresponding
   * values.
   *
   * @private
   * @param {Array} array The array to sort.
   * @param {Function} comparer The function to define sort order.
   * @returns {Array} Returns `array`.
   */
  function baseSortBy(array, comparer) {
    var length = array.length;

    array.sort(comparer);
    while (length--) {
      array[length] = array[length].value;
    }
    return array;
  }

  module.exports = baseSortBy;


/***/ },
/* 908 */
/***/ function(module, exports, __webpack_require__) {

  var compareAscending = __webpack_require__(909);

  /**
   * Used by `_.orderBy` to compare multiple properties of a value to another
   * and stable sort them.
   *
   * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,
   * specify an order of "desc" for descending or "asc" for ascending sort order
   * of corresponding values.
   *
   * @private
   * @param {Object} object The object to compare.
   * @param {Object} other The other object to compare.
   * @param {boolean[]|string[]} orders The order to sort by for each property.
   * @returns {number} Returns the sort order indicator for `object`.
   */
  function compareMultiple(object, other, orders) {
    var index = -1,
        objCriteria = object.criteria,
        othCriteria = other.criteria,
        length = objCriteria.length,
        ordersLength = orders.length;

    while (++index < length) {
      var result = compareAscending(objCriteria[index], othCriteria[index]);
      if (result) {
        if (index >= ordersLength) {
          return result;
        }
        var order = orders[index];
        return result * (order == 'desc' ? -1 : 1);
      }
    }
    // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications
    // that causes it, under certain circumstances, to provide the same value for
    // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247
    // for more details.
    //
    // This also ensures a stable sort in V8 and other engines.
    // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.
    return object.index - other.index;
  }

  module.exports = compareMultiple;


/***/ },
/* 909 */
/***/ function(module, exports, __webpack_require__) {

  var isSymbol = __webpack_require__(633);

  /**
   * Compares values to sort them in ascending order.
   *
   * @private
   * @param {*} value The value to compare.
   * @param {*} other The other value to compare.
   * @returns {number} Returns the sort order indicator for `value`.
   */
  function compareAscending(value, other) {
    if (value !== other) {
      var valIsDefined = value !== undefined,
          valIsNull = value === null,
          valIsReflexive = value === value,
          valIsSymbol = isSymbol(value);

      var othIsDefined = other !== undefined,
          othIsNull = other === null,
          othIsReflexive = other === other,
          othIsSymbol = isSymbol(other);

      if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||
          (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||
          (valIsNull && othIsDefined && othIsReflexive) ||
          (!valIsDefined && othIsReflexive) ||
          !valIsReflexive) {
        return 1;
      }
      if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||
          (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||
          (othIsNull && valIsDefined && valIsReflexive) ||
          (!othIsDefined && valIsReflexive) ||
          !othIsReflexive) {
        return -1;
      }
    }
    return 0;
  }

  module.exports = compareAscending;


/***/ },
/* 910 */
/***/ function(module, exports, __webpack_require__) {

  var convert = __webpack_require__(813),
      func = convert('sum', __webpack_require__(911), __webpack_require__(889));

  func.placeholder = __webpack_require__(816);
  module.exports = func;


/***/ },
/* 911 */
/***/ function(module, exports, __webpack_require__) {

  var baseSum = __webpack_require__(912),
      identity = __webpack_require__(703);

  /**
   * Computes the sum of the values in `array`.
   *
   * @static
   * @memberOf _
   * @since 3.4.0
   * @category Math
   * @param {Array} array The array to iterate over.
   * @returns {number} Returns the sum.
   * @example
   *
   * _.sum([4, 2, 8, 6]);
   * // => 20
   */
  function sum(array) {
    return (array && array.length)
      ? baseSum(array, identity)
      : 0;
  }

  module.exports = sum;


/***/ },
/* 912 */
/***/ function(module, exports) {

  /**
   * The base implementation of `_.sum` and `_.sumBy` without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} array The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {number} Returns the sum.
   */
  function baseSum(array, iteratee) {
    var result,
        index = -1,
        length = array.length;

    while (++index < length) {
      var current = iteratee(array[index]);
      if (current !== undefined) {
        result = result === undefined ? current : (result + current);
      }
    }
    return result;
  }

  module.exports = baseSum;


/***/ },
/* 913 */
/***/ function(module, exports, __webpack_require__) {

  var convert = __webpack_require__(813),
      func = convert('min', __webpack_require__(914), __webpack_require__(889));

  func.placeholder = __webpack_require__(816);
  module.exports = func;


/***/ },
/* 914 */
/***/ function(module, exports, __webpack_require__) {

  var baseExtremum = __webpack_require__(915),
      baseLt = __webpack_require__(916),
      identity = __webpack_require__(703);

  /**
   * Computes the minimum value of `array`. If `array` is empty or falsey,
   * `undefined` is returned.
   *
   * @static
   * @since 0.1.0
   * @memberOf _
   * @category Math
   * @param {Array} array The array to iterate over.
   * @returns {*} Returns the minimum value.
   * @example
   *
   * _.min([4, 2, 8, 6]);
   * // => 2
   *
   * _.min([]);
   * // => undefined
   */
  function min(array) {
    return (array && array.length)
      ? baseExtremum(array, identity, baseLt)
      : undefined;
  }

  module.exports = min;


/***/ },
/* 915 */
/***/ function(module, exports, __webpack_require__) {

  var isSymbol = __webpack_require__(633);

  /**
   * The base implementation of methods like `_.max` and `_.min` which accepts a
   * `comparator` to determine the extremum value.
   *
   * @private
   * @param {Array} array The array to iterate over.
   * @param {Function} iteratee The iteratee invoked per iteration.
   * @param {Function} comparator The comparator used to compare values.
   * @returns {*} Returns the extremum value.
   */
  function baseExtremum(array, iteratee, comparator) {
    var index = -1,
        length = array.length;

    while (++index < length) {
      var value = array[index],
          current = iteratee(value);

      if (current != null && (computed === undefined
            ? (current === current && !isSymbol(current))
            : comparator(current, computed)
          )) {
        var computed = current,
            result = value;
      }
    }
    return result;
  }

  module.exports = baseExtremum;


/***/ },
/* 916 */
/***/ function(module, exports) {

  /**
   * The base implementation of `_.lt` which doesn't coerce arguments.
   *
   * @private
   * @param {*} value The value to compare.
   * @param {*} other The other value to compare.
   * @returns {boolean} Returns `true` if `value` is less than `other`,
   *  else `false`.
   */
  function baseLt(value, other) {
    return value < other;
  }

  module.exports = baseLt;


/***/ },
/* 917 */
/***/ function(module, exports, __webpack_require__) {

  var convert = __webpack_require__(813),
      func = convert('map', __webpack_require__(918));

  func.placeholder = __webpack_require__(816);
  module.exports = func;


/***/ },
/* 918 */
/***/ function(module, exports, __webpack_require__) {

  var arrayMap = __webpack_require__(678),
      baseIteratee = __webpack_require__(740),
      baseMap = __webpack_require__(906),
      isArray = __webpack_require__(631);

  /**
   * Creates an array of values by running each element in `collection` thru
   * `iteratee`. The iteratee is invoked with three arguments:
   * (value, index|key, collection).
   *
   * Many lodash methods are guarded to work as iteratees for methods like
   * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.
   *
   * The guarded methods are:
   * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,
   * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,
   * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,
   * `template`, `trim`, `trimEnd`, `trimStart`, and `words`
   *
   * @static
   * @memberOf _
   * @since 0.1.0
   * @category Collection
   * @param {Array|Object} collection The collection to iterate over.
   * @param {Function} [iteratee=_.identity] The function invoked per iteration.
   * @returns {Array} Returns the new mapped array.
   * @example
   *
   * function square(n) {
   *   return n * n;
   * }
   *
   * _.map([4, 8], square);
   * // => [16, 64]
   *
   * _.map({ 'a': 4, 'b': 8 }, square);
   * // => [16, 64] (iteration order is not guaranteed)
   *
   * var users = [
   *   { 'user': 'barney' },
   *   { 'user': 'fred' }
   * ];
   *
   * // The `_.property` iteratee shorthand.
   * _.map(users, 'user');
   * // => ['barney', 'fred']
   */
  function map(collection, iteratee) {
    var func = isArray(collection) ? arrayMap : baseMap;
    return func(collection, baseIteratee(iteratee, 3));
  }

  module.exports = map;


/***/ },
/* 919 */
/***/ function(module, exports, __webpack_require__) {

  var convert = __webpack_require__(813),
      func = convert('flow', __webpack_require__(920));

  func.placeholder = __webpack_require__(816);
  module.exports = func;


/***/ },
/* 920 */
/***/ function(module, exports, __webpack_require__) {

  var createFlow = __webpack_require__(921);

  /**
   * Creates a function that returns the result of invoking the given functions
   * with the `this` binding of the created function, where each successive
   * invocation is supplied the return value of the previous.
   *
   * @static
   * @memberOf _
   * @since 3.0.0
   * @category Util
   * @param {...(Function|Function[])} [funcs] The functions to invoke.
   * @returns {Function} Returns the new composite function.
   * @see _.flowRight
   * @example
   *
   * function square(n) {
   *   return n * n;
   * }
   *
   * var addSquare = _.flow([_.add, square]);
   * addSquare(1, 2);
   * // => 9
   */
  var flow = createFlow();

  module.exports = flow;


/***/ },
/* 921 */
/***/ function(module, exports, __webpack_require__) {

  var LodashWrapper = __webpack_require__(838),
      flatRest = __webpack_require__(886),
      getData = __webpack_require__(833),
      getFuncName = __webpack_require__(835),
      isArray = __webpack_require__(631),
      isLaziable = __webpack_require__(830);

  /** Used as the size to enable large array optimizations. */
  var LARGE_ARRAY_SIZE = 200;

  /** Error message constants. */
  var FUNC_ERROR_TEXT = 'Expected a function';

  /** Used to compose bitmasks for function metadata. */
  var WRAP_CURRY_FLAG = 8,
      WRAP_PARTIAL_FLAG = 32,
      WRAP_ARY_FLAG = 128,
      WRAP_REARG_FLAG = 256;

  /**
   * Creates a `_.flow` or `_.flowRight` function.
   *
   * @private
   * @param {boolean} [fromRight] Specify iterating from right to left.
   * @returns {Function} Returns the new flow function.
   */
  function createFlow(fromRight) {
    return flatRest(function(funcs) {
      var length = funcs.length,
          index = length,
          prereq = LodashWrapper.prototype.thru;

      if (fromRight) {
        funcs.reverse();
      }
      while (index--) {
        var func = funcs[index];
        if (typeof func != 'function') {
          throw new TypeError(FUNC_ERROR_TEXT);
        }
        if (prereq && !wrapper && getFuncName(func) == 'wrapper') {
          var wrapper = new LodashWrapper([], true);
        }
      }
      index = wrapper ? index : length;
      while (++index < length) {
        func = funcs[index];

        var funcName = getFuncName(func),
            data = funcName == 'wrapper' ? getData(func) : undefined;

        if (data && isLaziable(data[0]) &&
              data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) &&
              !data[4].length && data[9] == 1
            ) {
          wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);
        } else {
          wrapper = (func.length == 1 && isLaziable(func))
            ? wrapper[funcName]()
            : wrapper.thru(func);
        }
      }
      return function() {
        var args = arguments,
            value = args[0];

        if (wrapper && args.length == 1 &&
            isArray(value) && value.length >= LARGE_ARRAY_SIZE) {
          return wrapper.plant(value).value();
        }
        var index = 0,
            result = length ? funcs[index].apply(this, args) : value;

        while (++index < length) {
          result = funcs[index].call(this, result);
        }
        return result;
      };
    });
  }

  module.exports = createFlow;


/***/ },
/* 922 */
/***/ function(module, exports, __webpack_require__) {

  var convert = __webpack_require__(813),
      func = convert('includes', __webpack_require__(923));

  func.placeholder = __webpack_require__(816);
  module.exports = func;


/***/ },
/* 923 */
/***/ function(module, exports, __webpack_require__) {

  var baseIndexOf = __webpack_require__(692),
      isArrayLike = __webpack_require__(712),
      isString = __webpack_require__(791),
      toInteger = __webpack_require__(716),
      values = __webpack_require__(924);

  /* Built-in method references for those with the same name as other `lodash` methods. */
  var nativeMax = Math.max;

  /**
   * Checks if `value` is in `collection`. If `collection` is a string, it's
   * checked for a substring of `value`, otherwise
   * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
   * is used for equality comparisons. If `fromIndex` is negative, it's used as
   * the offset from the end of `collection`.
   *
   * @static
   * @memberOf _
   * @since 0.1.0
   * @category Collection
   * @param {Array|Object|string} collection The collection to inspect.
   * @param {*} value The value to search for.
   * @param {number} [fromIndex=0] The index to search from.
   * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.
   * @returns {boolean} Returns `true` if `value` is found, else `false`.
   * @example
   *
   * _.includes([1, 2, 3], 1);
   * // => true
   *
   * _.includes([1, 2, 3], 1, 2);
   * // => false
   *
   * _.includes({ 'a': 1, 'b': 2 }, 1);
   * // => true
   *
   * _.includes('abcd', 'bc');
   * // => true
   */
  function includes(collection, value, fromIndex, guard) {
    collection = isArrayLike(collection) ? collection : values(collection);
    fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;

    var length = collection.length;
    if (fromIndex < 0) {
      fromIndex = nativeMax(length + fromIndex, 0);
    }
    return isString(collection)
      ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)
      : (!!length && baseIndexOf(collection, value, fromIndex) > -1);
  }

  module.exports = includes;


/***/ },
/* 924 */
/***/ function(module, exports, __webpack_require__) {

  var baseValues = __webpack_require__(925),
      keys = __webpack_require__(726);

  /**
   * Creates an array of the own enumerable string keyed property values of `object`.
   *
   * **Note:** Non-object values are coerced to objects.
   *
   * @static
   * @since 0.1.0
   * @memberOf _
   * @category Object
   * @param {Object} object The object to query.
   * @returns {Array} Returns the array of property values.
   * @example
   *
   * function Foo() {
   *   this.a = 1;
   *   this.b = 2;
   * }
   *
   * Foo.prototype.c = 3;
   *
   * _.values(new Foo);
   * // => [1, 2] (iteration order is not guaranteed)
   *
   * _.values('hi');
   * // => ['h', 'i']
   */
  function values(object) {
    return object == null ? [] : baseValues(object, keys(object));
  }

  module.exports = values;


/***/ },
/* 925 */
/***/ function(module, exports, __webpack_require__) {

  var arrayMap = __webpack_require__(678);

  /**
   * The base implementation of `_.values` and `_.valuesIn` which creates an
   * array of `object` property values corresponding to the property names
   * of `props`.
   *
   * @private
   * @param {Object} object The object to query.
   * @param {Array} props The property names to get values for.
   * @returns {Object} Returns the array of property values.
   */
  function baseValues(object, props) {
    return arrayMap(props, function(key) {
      return object[key];
    });
  }

  module.exports = baseValues;


/***/ },
/* 926 */
/***/ function(module, exports, __webpack_require__) {

  var convert = __webpack_require__(813),
      func = convert('isNil', __webpack_require__(927), __webpack_require__(889));

  func.placeholder = __webpack_require__(816);
  module.exports = func;


/***/ },
/* 927 */
/***/ function(module, exports) {

  /**
   * Checks if `value` is `null` or `undefined`.
   *
   * @static
   * @memberOf _
   * @since 4.0.0
   * @category Lang
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is nullish, else `false`.
   * @example
   *
   * _.isNil(null);
   * // => true
   *
   * _.isNil(void 0);
   * // => true
   *
   * _.isNil(NaN);
   * // => false
   */
  function isNil(value) {
    return value == null;
  }

  module.exports = isNil;


/***/ },
/* 928 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.isPrivate = exports.isChild = exports.isParent = exports.isModule = exports.isView = exports.isElement = exports.isCollection = exports.isAddon = exports.isType = exports.isMeta = exports.TYPES = undefined;

  var _startsWith2 = __webpack_require__(929);

  var _startsWith3 = _interopRequireDefault(_startsWith2);

  var _has2 = __webpack_require__(930);

  var _has3 = _interopRequireDefault(_has2);

  var _eq2 = __webpack_require__(931);

  var _eq3 = _interopRequireDefault(_eq2);

  var _flow2 = __webpack_require__(919);

  var _flow3 = _interopRequireDefault(_flow2);

  var _curry2 = __webpack_require__(932);

  var _curry3 = _interopRequireDefault(_curry2);

  var _get2 = __webpack_require__(933);

  var _get3 = _interopRequireDefault(_get2);

  var _includes2 = __webpack_require__(922);

  var _includes3 = _interopRequireDefault(_includes2);

  var _values2 = __webpack_require__(934);

  var _values3 = _interopRequireDefault(_values2);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  var TYPES = exports.TYPES = {
    ADDON: 'addon',
    COLLECTION: 'collection',
    ELEMENT: 'element',
    VIEW: 'view',
    MODULE: 'module'
  };

  var TYPE_VALUES = (0, _values3.default)(TYPES);

  /**
   * Determine if an object qualifies as a META object.
   * It must have the required keys and valid values.
   * @private
   * @param {Object} _meta A proposed component _meta object.
   * @returns {Boolean}
   */
  var isMeta = exports.isMeta = function isMeta(_meta) {
    return (0, _includes3.default)((0, _get3.default)('type', _meta), TYPE_VALUES);
  };

  /**
   * Extract a component's _meta object and optional key.
   * Handles literal _meta objects, classes with _meta, objects with _meta
   * @private
   * @param {function|object} metaArg A class, a component instance, or meta object..
   * @returns {object|string|undefined}
   */
  var getMeta = function getMeta(metaArg) {
    // literal
    if (isMeta(metaArg)) return metaArg;

    // from prop
    else if (isMeta((0, _get3.default)('_meta', metaArg))) return metaArg._meta;

      // from class
      else if (isMeta((0, _get3.default)('constructor._meta', metaArg))) return metaArg.constructor._meta;
  };

  var metaHasKeyValue = (0, _curry3.default)(function (key, val, metaArg) {
    return (0, _flow3.default)(getMeta, (0, _get3.default)(key), (0, _eq3.default)(val))(metaArg);
  });
  var isType = exports.isType = metaHasKeyValue('type');

  // ----------------------------------------
  // Export
  // ----------------------------------------

  // type
  var isAddon = exports.isAddon = isType(TYPES.ADDON);
  var isCollection = exports.isCollection = isType(TYPES.COLLECTION);
  var isElement = exports.isElement = isType(TYPES.ELEMENT);
  var isView = exports.isView = isType(TYPES.VIEW);
  var isModule = exports.isModule = isType(TYPES.MODULE);

  // parent
  var isParent = exports.isParent = (0, _flow3.default)(getMeta, (0, _has3.default)('parent'), (0, _eq3.default)(false));
  var isChild = exports.isChild = (0, _flow3.default)(getMeta, (0, _has3.default)('parent'));

  // other
  var isPrivate = exports.isPrivate = (0, _flow3.default)(getMeta, (0, _get3.default)('name'), (0, _startsWith3.default)('_'));

/***/ },
/* 929 */
/***/ function(module, exports, __webpack_require__) {

  var convert = __webpack_require__(813),
      func = convert('startsWith', __webpack_require__(714));

  func.placeholder = __webpack_require__(816);
  module.exports = func;


/***/ },
/* 930 */
/***/ function(module, exports, __webpack_require__) {

  var convert = __webpack_require__(813),
      func = convert('has', __webpack_require__(627));

  func.placeholder = __webpack_require__(816);
  module.exports = func;


/***/ },
/* 931 */
/***/ function(module, exports, __webpack_require__) {

  var convert = __webpack_require__(813),
      func = convert('eq', __webpack_require__(665));

  func.placeholder = __webpack_require__(816);
  module.exports = func;


/***/ },
/* 932 */
/***/ function(module, exports, __webpack_require__) {

  var convert = __webpack_require__(813),
      func = convert('curry', __webpack_require__(883));

  func.placeholder = __webpack_require__(816);
  module.exports = func;


/***/ },
/* 933 */
/***/ function(module, exports, __webpack_require__) {

  var convert = __webpack_require__(813),
      func = convert('get', __webpack_require__(767));

  func.placeholder = __webpack_require__(816);
  module.exports = func;


/***/ },
/* 934 */
/***/ function(module, exports, __webpack_require__) {

  var convert = __webpack_require__(813),
      func = convert('values', __webpack_require__(924), __webpack_require__(889));

  func.placeholder = __webpack_require__(816);
  module.exports = func;


/***/ },
/* 935 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.ICONS_AND_ALIASES = exports.ICON_ALIASES = exports.ICONS = exports.NETWORKS_AND_WEBSITE_ICONS = exports.PAYMENT_OPTIONS_ICONS = exports.CURRENCY_ICONS = exports.TEXT_EDITOR_ICONS = exports.TABLES_ICONS = exports.MAP_LOCATIONS_TRANSPORTATION_ICONS = exports.AUDIO_ICONS = exports.RATING_ICONS = exports.TECHNOLOGIES_ICONS = exports.FILE_SYSTEM_ICONS = exports.COMPUTER_ICONS = exports.MOBILE_ICONS = exports.POINTERS_ICONS = exports.MEDIA_ICONS = exports.ITEM_SELECTION_ICONS = exports.SHAPES_ICONS = exports.LITERAL_OBJECTS_ICONS = exports.VIEW_ADJUSTMENT_ICONS = exports.ACCESSIBILITY_ICONS = exports.GENDER_SEXUALITY_ICONS = exports.USERS_ICONS = exports.MESSAGES_ICONS = exports.USER_ACTIONS_ICONS = exports.WEB_CONTENT_ICONS = exports.WIDTHS = exports.VERTICAL_ALIGNMENTS = exports.TEXT_ALIGNMENTS = exports.SIZES = exports.FLOATS = exports.COLORS = undefined;

  var _values2 = __webpack_require__(924);

  var _values3 = _interopRequireDefault(_values2);

  var _keys2 = __webpack_require__(726);

  var _keys3 = _interopRequireDefault(_keys2);

  var _numberToWord = __webpack_require__(783);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

  var COLORS = exports.COLORS = ['red', 'orange', 'yellow', 'olive', 'green', 'teal', 'blue', 'violet', 'purple', 'pink', 'brown', 'grey', 'black'];
  var FLOATS = exports.FLOATS = ['left', 'right'];
  var SIZES = exports.SIZES = ['mini', 'tiny', 'small', 'medium', 'large', 'big', 'huge', 'massive'];
  var TEXT_ALIGNMENTS = exports.TEXT_ALIGNMENTS = ['left', 'center', 'right', 'justified'];
  var VERTICAL_ALIGNMENTS = exports.VERTICAL_ALIGNMENTS = ['bottom', 'middle', 'top'];

  var WIDTHS = exports.WIDTHS = [].concat(_toConsumableArray((0, _keys3.default)(_numberToWord.numberToWordMap)), _toConsumableArray((0, _keys3.default)(_numberToWord.numberToWordMap).map(Number)), _toConsumableArray((0, _values3.default)(_numberToWord.numberToWordMap)));

  // Generated from:
  // https://github.com/Semantic-Org/Semantic-UI/blob/master/dist/components/icon.css
  var WEB_CONTENT_ICONS = exports.WEB_CONTENT_ICONS = ['search', 'mail outline', 'signal', 'setting', 'home', 'inbox', 'browser', 'tag', 'tags', 'image', 'calendar', 'comment', 'shop', 'comments', 'external', 'privacy', 'settings', 'comments', 'external', 'trophy', 'payment', 'feed', 'alarm outline', 'tasks', 'cloud', 'lab', 'mail', 'dashboard', 'comment outline', 'comments outline', 'sitemap', 'idea', 'alarm', 'terminal', 'code', 'protect', 'calendar outline', 'ticket', 'external square', 'bug', 'mail square', 'history', 'options', 'text telephone', 'find', 'wifi', 'alarm mute', 'alarm mute outline', 'copyright', 'at', 'eyedropper', 'paint brush', 'heartbeat', 'mouse pointer', 'hourglass empty', 'hourglass start', 'hourglass half', 'hourglass end', 'hourglass full', 'hand pointer', 'trademark', 'registered', 'creative commons', 'add to calendar', 'remove from calendar', 'delete calendar', 'checked calendar', 'industry', 'shopping bag', 'shopping basket', 'hashtag', 'percent'];
  var USER_ACTIONS_ICONS = exports.USER_ACTIONS_ICONS = ['wait', 'download', 'repeat', 'refresh', 'lock', 'bookmark', 'print', 'write', 'adjust', 'theme', 'edit', 'external share', 'ban', 'mail forward', 'share', 'expand', 'compress', 'unhide', 'hide', 'random', 'retweet', 'sign out', 'pin', 'sign in', 'upload', 'call', 'remove bookmark', 'call square', 'unlock', 'configure', 'filter', 'wizard', 'undo', 'exchange', 'cloud download', 'cloud upload', 'reply', 'reply all', 'erase', 'unlock alternate', 'write square', 'share square', 'archive', 'translate', 'recycle', 'send', 'send outline', 'share alternate', 'share alternate square', 'add to cart', 'in cart', 'add user', 'remove user', 'object group', 'object ungroup', 'clone', 'talk', 'talk outline'];
  var MESSAGES_ICONS = exports.MESSAGES_ICONS = ['help circle', 'info circle', 'warning circle', 'warning sign', 'announcement', 'help', 'info', 'warning', 'birthday', 'help circle outline'];
  var USERS_ICONS = exports.USERS_ICONS = ['user', 'users', 'doctor', 'handicap', 'student', 'child', 'spy'];
  var GENDER_SEXUALITY_ICONS = exports.GENDER_SEXUALITY_ICONS = ['female', 'male', 'woman', 'man', 'non binary transgender', 'intergender', 'transgender', 'lesbian', 'gay', 'heterosexual', 'other gender', 'other gender vertical', 'other gender horizontal', 'neuter', 'genderless'];
  var ACCESSIBILITY_ICONS = exports.ACCESSIBILITY_ICONS = ['universal access', 'wheelchair', 'blind', 'audio description', 'volume control phone', 'braille', 'asl', 'assistive listening systems', 'deafness', 'sign language', 'low vision'];
  var VIEW_ADJUSTMENT_ICONS = exports.VIEW_ADJUSTMENT_ICONS = ['block layout', 'grid layout', 'list layout', 'zoom', 'zoom out', 'resize vertical', 'resize horizontal', 'maximize', 'crop'];
  var LITERAL_OBJECTS_ICONS = exports.LITERAL_OBJECTS_ICONS = ['cocktail', 'road', 'flag', 'book', 'gift', 'leaf', 'fire', 'plane', 'magnet', 'lemon', 'world', 'travel', 'shipping', 'money', 'legal', 'lightning', 'umbrella', 'treatment', 'suitcase', 'bar', 'flag outline', 'flag checkered', 'puzzle', 'fire extinguisher', 'rocket', 'anchor', 'bullseye', 'sun', 'moon', 'fax', 'life ring', 'bomb', 'soccer', 'calculator', 'diamond', 'sticky note', 'sticky note outline', 'law', 'hand peace', 'hand rock', 'hand paper', 'hand scissors', 'hand lizard', 'hand spock', 'tv'];
  var SHAPES_ICONS = exports.SHAPES_ICONS = ['crosshairs', 'asterisk', 'square outline', 'certificate', 'square', 'quote left', 'quote right', 'spinner', 'circle', 'ellipsis horizontal', 'ellipsis vertical', 'cube', 'cubes', 'circle notched', 'circle thin'];
  var ITEM_SELECTION_ICONS = exports.ITEM_SELECTION_ICONS = ['checkmark', 'remove', 'checkmark box', 'move', 'add circle', 'minus circle', 'remove circle', 'check circle', 'remove circle outline', 'check circle outline', 'plus', 'minus', 'add square', 'radio', 'minus square', 'minus square outline', 'check square', 'selected radio', 'plus square outline', 'toggle off', 'toggle on'];
  var MEDIA_ICONS = exports.MEDIA_ICONS = ['film', 'sound', 'photo', 'bar chart', 'camera retro', 'newspaper', 'area chart', 'pie chart', 'line chart'];
  var POINTERS_ICONS = exports.POINTERS_ICONS = ['arrow circle outline down', 'arrow circle outline up', 'chevron left', 'chevron right', 'arrow left', 'arrow right', 'arrow up', 'arrow down', 'chevron up', 'chevron down', 'pointing right', 'pointing left', 'pointing up', 'pointing down', 'arrow circle left', 'arrow circle right', 'arrow circle up', 'arrow circle down', 'caret down', 'caret up', 'caret left', 'caret right', 'angle double left', 'angle double right', 'angle double up', 'angle double down', 'angle left', 'angle right', 'angle up', 'angle down', 'chevron circle left', 'chevron circle right', 'chevron circle up', 'chevron circle down', 'toggle down', 'toggle up', 'toggle right', 'long arrow down', 'long arrow up', 'long arrow left', 'long arrow right', 'arrow circle outline right', 'arrow circle outline left', 'toggle left'];
  var MOBILE_ICONS = exports.MOBILE_ICONS = ['tablet', 'mobile', 'battery full', 'battery high', 'battery medium', 'battery low', 'battery empty'];
  var COMPUTER_ICONS = exports.COMPUTER_ICONS = ['power', 'trash outline', 'disk outline', 'desktop', 'laptop', 'game', 'keyboard', 'plug'];
  var FILE_SYSTEM_ICONS = exports.FILE_SYSTEM_ICONS = ['trash', 'file outline', 'folder', 'folder open', 'file text outline', 'folder outline', 'folder open outline', 'level up', 'level down', 'file', 'file text', 'file pdf outline', 'file word outline', 'file excel outline', 'file powerpoint outline', 'file image outline', 'file archive outline', 'file audio outline', 'file video outline', 'file code outline'];
  var TECHNOLOGIES_ICONS = exports.TECHNOLOGIES_ICONS = ['qrcode', 'barcode', 'rss', 'fork', 'html5', 'css3', 'rss square', 'openid', 'database', 'server', 'usb', 'bluetooth', 'bluetooth alternative'];
  var RATING_ICONS = exports.RATING_ICONS = ['heart', 'star', 'empty star', 'thumbs outline up', 'thumbs outline down', 'star half', 'empty heart', 'smile', 'frown', 'meh', 'star half empty', 'thumbs up', 'thumbs down'];
  var AUDIO_ICONS = exports.AUDIO_ICONS = ['music', 'video play outline', 'volume off', 'volume down', 'volume up', 'record', 'step backward', 'fast backward', 'backward', 'play', 'pause', 'stop', 'forward', 'fast forward', 'step forward', 'eject', 'unmute', 'mute', 'video play', 'closed captioning', 'pause circle', 'pause circle outline', 'stop circle', 'stop circle outline'];
  var MAP_LOCATIONS_TRANSPORTATION_ICONS = exports.MAP_LOCATIONS_TRANSPORTATION_ICONS = ['marker', 'coffee', 'food', 'building outline', 'hospital', 'emergency', 'first aid', 'military', 'h', 'location arrow', 'compass', 'space shuttle', 'university', 'building', 'paw', 'spoon', 'car', 'taxi', 'tree', 'bicycle', 'bus', 'ship', 'motorcycle', 'street view', 'hotel', 'train', 'subway', 'map pin', 'map signs', 'map outline', 'map'];
  var TABLES_ICONS = exports.TABLES_ICONS = ['table', 'columns', 'sort', 'sort descending', 'sort ascending', 'sort alphabet ascending', 'sort alphabet descending', 'sort content ascending', 'sort content descending', 'sort numeric ascending', 'sort numeric descending'];
  var TEXT_EDITOR_ICONS = exports.TEXT_EDITOR_ICONS = ['font', 'bold', 'italic', 'text height', 'text width', 'align left', 'align center', 'align right', 'align justify', 'list', 'outdent', 'indent', 'linkify', 'cut', 'copy', 'attach', 'save', 'content', 'unordered list', 'ordered list', 'strikethrough', 'underline', 'paste', 'unlinkify', 'superscript', 'subscript', 'header', 'paragraph', 'text cursor'];
  var CURRENCY_ICONS = exports.CURRENCY_ICONS = ['euro', 'pound', 'dollar', 'rupee', 'yen', 'ruble', 'won', 'bitcoin', 'lira', 'shekel'];
  var PAYMENT_OPTIONS_ICONS = exports.PAYMENT_OPTIONS_ICONS = ['paypal', 'google wallet', 'visa', 'mastercard', 'discover', 'american express', 'paypal card', 'stripe', 'japan credit bureau', 'diners club', 'credit card alternative'];
  var NETWORKS_AND_WEBSITE_ICONS = exports.NETWORKS_AND_WEBSITE_ICONS = ['twitter square', 'facebook square', 'linkedin square', 'github square', 'twitter', 'facebook f', 'github', 'pinterest', 'pinterest square', 'google plus square', 'google plus', 'linkedin', 'github alternate', 'maxcdn', 'youtube square', 'youtube', 'xing', 'xing square', 'youtube play', 'dropbox', 'stack overflow', 'instagram', 'flickr', 'adn', 'bitbucket', 'bitbucket square', 'tumblr', 'tumblr square', 'apple', 'windows', 'android', 'linux', 'dribble', 'skype', 'foursquare', 'trello', 'gittip', 'vk', 'weibo', 'renren', 'pagelines', 'stack exchange', 'vimeo square', 'slack', 'wordpress', 'yahoo', 'google', 'reddit', 'reddit square', 'stumbleupon circle', 'stumbleupon', 'delicious', 'digg', 'pied piper', 'pied piper alternate', 'drupal', 'joomla', 'behance', 'behance square', 'steam', 'steam square', 'spotify', 'deviantart', 'soundcloud', 'vine', 'codepen', 'jsfiddle', 'rebel', 'empire', 'git square', 'git', 'hacker news', 'tencent weibo', 'qq', 'wechat', 'slideshare', 'twitch', 'yelp', 'lastfm', 'lastfm square', 'ioxhost', 'angellist', 'meanpath', 'buysellads', 'connectdevelop', 'dashcube', 'forumbee', 'leanpub', 'sellsy', 'shirtsinbulk', 'simplybuilt', 'skyatlas', 'facebook', 'pinterest', 'whatsapp', 'viacoin', 'medium', 'y combinator', 'optinmonster', 'opencart', 'expeditedssl', 'gg', 'gg circle', 'tripadvisor', 'odnoklassniki', 'odnoklassniki square', 'pocket', 'wikipedia', 'safari', 'chrome', 'firefox', 'opera', 'internet explorer', 'contao', '500px', 'amazon', 'houzz', 'vimeo', 'black tie', 'fonticons', 'reddit alien', 'microsoft edge', 'codiepie', 'modx', 'fort awesome', 'product hunt', 'mixcloud', 'scribd', 'gitlab', 'wpbeginner', 'wpforms', 'envira gallery', 'glide', 'glide g', 'viadeo', 'viadeo square', 'snapchat', 'snapchat ghost', 'snapchat square', 'pied piper hat', 'first order', 'yoast', 'themeisle', 'google plus circle', 'font awesome'];
  var ICONS = exports.ICONS = [].concat(WEB_CONTENT_ICONS, USER_ACTIONS_ICONS, MESSAGES_ICONS, USERS_ICONS, GENDER_SEXUALITY_ICONS, ACCESSIBILITY_ICONS, VIEW_ADJUSTMENT_ICONS, LITERAL_OBJECTS_ICONS, SHAPES_ICONS, ITEM_SELECTION_ICONS, MEDIA_ICONS, POINTERS_ICONS, MOBILE_ICONS, COMPUTER_ICONS, FILE_SYSTEM_ICONS, TECHNOLOGIES_ICONS, RATING_ICONS, AUDIO_ICONS, MAP_LOCATIONS_TRANSPORTATION_ICONS, TABLES_ICONS, TEXT_EDITOR_ICONS, CURRENCY_ICONS, PAYMENT_OPTIONS_ICONS, NETWORKS_AND_WEBSITE_ICONS);
  var ICON_ALIASES = exports.ICON_ALIASES = ['like', 'favorite', 'video', 'check', 'close', 'cancel', 'delete', 'x', 'zoom in', 'magnify', 'shutdown', 'clock', 'time', 'play circle outline', 'headphone', 'camera', 'video camera', 'picture', 'pencil', 'compose', 'point', 'tint', 'signup', 'plus circle', 'question circle', 'dont', 'minimize', 'add', 'exclamation circle', 'attention', 'eye', 'exclamation triangle', 'shuffle', 'chat', 'cart', 'shopping cart', 'bar graph', 'key', 'cogs', 'discussions', 'like outline', 'dislike outline', 'heart outline', 'log out', 'thumb tack', 'winner', 'phone', 'bookmark outline', 'phone square', 'credit card', 'hdd outline', 'bullhorn', 'bell outline', 'hand outline right', 'hand outline left', 'hand outline up', 'hand outline down', 'globe', 'wrench', 'briefcase', 'group', 'linkify', 'chain', 'flask', 'sidebar', 'bars', 'list ul', 'list ol', 'numbered list', 'magic', 'truck', 'currency', 'triangle down', 'dropdown', 'triangle up', 'triangle left', 'triangle right', 'envelope', 'conversation', 'rain', 'clipboard', 'lightbulb', 'bell', 'ambulance', 'medkit', 'fighter jet', 'beer', 'plus square', 'computer', 'circle outline', 'gamepad', 'star half full', 'broken chain', 'question', 'exclamation', 'eraser', 'microphone', 'microphone slash', 'shield', 'target', 'play circle', 'pencil square', 'eur', 'gbp', 'usd', 'inr', 'cny', 'rmb', 'jpy', 'rouble', 'rub', 'krw', 'btc', 'gratipay', 'zip', 'dot circle outline', 'try', 'graduation', 'circle outline', 'sliders', 'weixin', 'tty', 'teletype', 'binoculars', 'power cord', 'wifi', 'visa card', 'mastercard card', 'discover card', 'amex', 'american express card', 'stripe card', 'bell slash', 'bell slash outline', 'area graph', 'pie graph', 'line graph', 'cc', 'sheqel', 'ils', 'plus cart', 'arrow down cart', 'detective', 'venus', 'mars', 'mercury', 'intersex', 'venus double', 'female homosexual', 'mars double', 'male homosexual', 'venus mars', 'mars stroke', 'mars alternate', 'mars vertical', 'mars stroke vertical', 'mars horizontal', 'mars stroke horizontal', 'asexual', 'facebook official', 'user plus', 'user times', 'user close', 'user cancel', 'user delete', 'user x', 'bed', 'yc', 'ycombinator', 'battery four', 'battery three', 'battery three quarters', 'battery two', 'battery half', 'battery one', 'battery quarter', 'battery zero', 'i cursor', 'jcb', 'japan credit bureau card', 'diners club card', 'balance', 'hourglass outline', 'hourglass zero', 'hourglass one', 'hourglass two', 'hourglass three', 'hourglass four', 'grab', 'hand victory', 'tm', 'r circle', 'television', 'five hundred pixels', 'calendar plus', 'calendar minus', 'calendar times', 'calendar check', 'factory', 'commenting', 'commenting outline', 'edge', 'ms edge', 'wordpress beginner', 'wordpress forms', 'envira', 'question circle outline', 'assistive listening devices', 'als', 'ald', 'asl interpreting', 'deaf', 'american sign language interpreting', 'hard of hearing', 'signing', 'new pied piper', 'theme isle', 'google plus official', 'fa'];
  var ICONS_AND_ALIASES = exports.ICONS_AND_ALIASES = [].concat(_toConsumableArray(ICONS), ICON_ALIASES);

/***/ },
/* 936 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _Button = __webpack_require__(937);

  var _Button2 = _interopRequireDefault(_Button);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  exports.default = _Button2.default;

/***/ },
/* 937 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _isNil2 = __webpack_require__(927);

  var _isNil3 = _interopRequireDefault(_isNil2);

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

  var _classnames = __webpack_require__(794);

  var _classnames2 = _interopRequireDefault(_classnames);

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _lib = __webpack_require__(684);

  var _Icon = __webpack_require__(938);

  var _Icon2 = _interopRequireDefault(_Icon);

  var _Label = __webpack_require__(941);

  var _Label2 = _interopRequireDefault(_Label);

  var _ButtonContent = __webpack_require__(955);

  var _ButtonContent2 = _interopRequireDefault(_ButtonContent);

  var _ButtonGroup = __webpack_require__(956);

  var _ButtonGroup2 = _interopRequireDefault(_ButtonGroup);

  var _ButtonOr = __webpack_require__(957);

  var _ButtonOr2 = _interopRequireDefault(_ButtonOr);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

  function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

  function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

  var debug = (0, _lib.makeDebugger)('button');

  var _meta = {
    name: 'Button',
    type: _lib.META.TYPES.ELEMENT,
    props: {
      animated: ['fade', 'vertical'],
      attached: ['left', 'right', 'top', 'bottom'],
      color: [].concat(_toConsumableArray(_lib.SUI.COLORS), ['facebook', 'twitter', 'google plus', 'vk', 'linkedin', 'instagram', 'youtube']),
      floated: _lib.SUI.FLOATS,
      labelPosition: ['right', 'left'],
      size: _lib.SUI.SIZES
    }
  };

  /**
   * A Button indicates a possible user action
   * @see Form
   * @see Icon
   * @see Label
   */

  var Button = function (_Component) {
    _inherits(Button, _Component);

    function Button() {
      var _ref;

      var _temp, _this, _ret;

      _classCallCheck(this, Button);

      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Button.__proto__ || Object.getPrototypeOf(Button)).call.apply(_ref, [this].concat(args))), _this), _this.handleClick = function (e) {
        var _this$props = _this.props,
            disabled = _this$props.disabled,
            onClick = _this$props.onClick;


        if (disabled) {
          e.preventDefault();
          return;
        }

        if (onClick) onClick(e, _this.props);
      }, _temp), _possibleConstructorReturn(_this, _ret);
    }

    _createClass(Button, [{
      key: 'render',
      value: function render() {
        var _props = this.props,
            active = _props.active,
            animated = _props.animated,
            attached = _props.attached,
            basic = _props.basic,
            children = _props.children,
            circular = _props.circular,
            className = _props.className,
            color = _props.color,
            compact = _props.compact,
            content = _props.content,
            disabled = _props.disabled,
            floated = _props.floated,
            fluid = _props.fluid,
            icon = _props.icon,
            inverted = _props.inverted,
            label = _props.label,
            labelPosition = _props.labelPosition,
            loading = _props.loading,
            negative = _props.negative,
            positive = _props.positive,
            primary = _props.primary,
            secondary = _props.secondary,
            size = _props.size,
            tabIndex = _props.tabIndex,
            toggle = _props.toggle;


        var labeledClasses = (0, _classnames2.default)((0, _lib.useKeyOrValueAndKey)(labelPosition || !!label, 'labeled'));

        var baseClasses = (0, _classnames2.default)(color, size, (0, _lib.useKeyOnly)(active, 'active'), (0, _lib.useKeyOrValueAndKey)(animated, 'animated'), (0, _lib.useKeyOrValueAndKey)(attached, 'attached'), (0, _lib.useKeyOnly)(basic, 'basic'), (0, _lib.useKeyOnly)(circular, 'circular'), (0, _lib.useKeyOnly)(compact, 'compact'), (0, _lib.useKeyOnly)(disabled, 'disabled'), (0, _lib.useValueAndKey)(floated, 'floated'), (0, _lib.useKeyOnly)(fluid, 'fluid'), (0, _lib.useKeyOnly)(icon === true || icon && (labelPosition || !children && !content), 'icon'), (0, _lib.useKeyOnly)(inverted, 'inverted'), (0, _lib.useKeyOnly)(loading, 'loading'), (0, _lib.useKeyOnly)(negative, 'negative'), (0, _lib.useKeyOnly)(positive, 'positive'), (0, _lib.useKeyOnly)(primary, 'primary'), (0, _lib.useKeyOnly)(secondary, 'secondary'), (0, _lib.useKeyOnly)(toggle, 'toggle'));
        var rest = (0, _lib.getUnhandledProps)(Button, this.props);
        var ElementType = (0, _lib.getElementType)(Button, this.props, function () {
          if (!(0, _isNil3.default)(label) || !(0, _isNil3.default)(attached)) return 'div';
        });

        var computedTabIndex = void 0;
        if (!(0, _isNil3.default)(tabIndex)) computedTabIndex = tabIndex;else if (disabled) computedTabIndex = -1;else if (ElementType === 'div') computedTabIndex = 0;

        if (!(0, _isNil3.default)(children)) {
          var _classes = (0, _classnames2.default)('ui', baseClasses, labeledClasses, 'button', className);
          debug('render children:', { classes: _classes });
          return _react2.default.createElement(
            ElementType,
            _extends({}, rest, { className: _classes, tabIndex: computedTabIndex, onClick: this.handleClick }),
            children
          );
        }

        var labelElement = _Label2.default.create(label, {
          basic: true,
          pointing: labelPosition === 'left' ? 'right' : 'left'
        });
        if (labelElement) {
          var _classes2 = (0, _classnames2.default)('ui', baseClasses, 'button', className);
          var containerClasses = (0, _classnames2.default)('ui', labeledClasses, 'button', className);
          debug('render label:', { classes: _classes2, containerClasses: containerClasses }, this.props);

          return _react2.default.createElement(
            ElementType,
            _extends({}, rest, { className: containerClasses, onClick: this.handleClick }),
            labelPosition === 'left' && labelElement,
            _react2.default.createElement(
              'button',
              { className: _classes2 },
              _Icon2.default.create(icon),
              ' ',
              content
            ),
            (labelPosition === 'right' || !labelPosition) && labelElement
          );
        }

        if (!(0, _isNil3.default)(icon) && (0, _isNil3.default)(label)) {
          var _classes3 = (0, _classnames2.default)('ui', labeledClasses, baseClasses, 'button', className);
          debug('render icon && !label:', { classes: _classes3 });
          return _react2.default.createElement(
            ElementType,
            _extends({}, rest, { className: _classes3, tabIndex: computedTabIndex, onClick: this.handleClick }),
            _Icon2.default.create(icon),
            ' ',
            content
          );
        }

        var classes = (0, _classnames2.default)('ui', labeledClasses, baseClasses, 'button', className);
        debug('render default:', { classes: classes });

        return _react2.default.createElement(
          ElementType,
          _extends({}, rest, { className: classes, tabIndex: computedTabIndex, onClick: this.handleClick }),
          content
        );
      }
    }]);

    return Button;
  }(_react.Component);

  Button.propTypes = {
    /** An element type to render as (string or function). */
    as: _lib.customPropTypes.as,

    /** A button can show it is currently the active user selection */
    active: _react.PropTypes.bool,

    /** A button can animate to show hidden content */
    animated: _react.PropTypes.oneOfType([_react.PropTypes.bool, _react.PropTypes.oneOf(_meta.props.animated)]),

    /** A button can be attached to the top or bottom of other content */
    attached: _react.PropTypes.oneOf(_meta.props.attached),

    /** A basic button is less pronounced */
    basic: _react.PropTypes.bool,

    /** Primary content. */
    children: _lib.customPropTypes.every([_react.PropTypes.node, _lib.customPropTypes.disallow(['label']), _lib.customPropTypes.givenProps({
      icon: _react.PropTypes.oneOfType([_react.PropTypes.string.isRequired, _react.PropTypes.object.isRequired, _react.PropTypes.element.isRequired])
    }, _lib.customPropTypes.disallow(['icon']))]),

    /** A button can be circular */
    circular: _react.PropTypes.bool,

    /** Additional classes. */
    className: _react.PropTypes.string,

    /** Shorthand for primary content. */
    content: _lib.customPropTypes.contentShorthand,

    /** A button can have different colors */
    color: _react.PropTypes.oneOf(_meta.props.color),

    /** A button can reduce its padding to fit into tighter spaces */
    compact: _react.PropTypes.bool,

    /** A button can show it is currently unable to be interacted with */
    disabled: _react.PropTypes.bool,

    /** A button can be aligned to the left or right of its container */
    floated: _react.PropTypes.oneOf(_meta.props.floated),

    /** A button can take the width of its container */
    fluid: _react.PropTypes.bool,

    /** Add an Icon by name, props object, or pass an <Icon /> */
    icon: _lib.customPropTypes.some([_react.PropTypes.bool, _react.PropTypes.string, _react.PropTypes.object, _react.PropTypes.element]),

    /** A button can be formatted to appear on dark backgrounds */
    inverted: _react.PropTypes.bool,

    /** A labeled button can format a Label or Icon to appear on the left or right */
    labelPosition: _react.PropTypes.oneOf(_meta.props.labelPosition),

    /** Add a Label by text, props object, or pass a <Label /> */
    label: _lib.customPropTypes.some([_react.PropTypes.string, _react.PropTypes.object, _react.PropTypes.element]),

    /** A button can show a loading indicator */
    loading: _react.PropTypes.bool,

    /** A button can hint towards a negative consequence */
    negative: _react.PropTypes.bool,

    /**
     * Called after user's click.
     * @param {SyntheticEvent} event - React's original SyntheticEvent.
     * @param {object} data - All props.
     */
    onClick: _react.PropTypes.func,

    /** A button can hint towards a positive consequence */
    positive: _react.PropTypes.bool,

    /** A button can be formatted to show different levels of emphasis */
    primary: _react.PropTypes.bool,

    /** A button can be formatted to show different levels of emphasis */
    secondary: _react.PropTypes.bool,

    /** A button can have different sizes */
    size: _react.PropTypes.oneOf(_meta.props.size),

    /** A button can receive focus. */
    tabIndex: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.number]),

    /** A button can be formatted to toggle on and off */
    toggle: _react.PropTypes.bool
  };
  Button.defaultProps = {
    as: 'button'
  };
  Button._meta = _meta;
  Button.Content = _ButtonContent2.default;
  Button.Group = _ButtonGroup2.default;
  Button.Or = _ButtonOr2.default;


  Button.create = (0, _lib.createShorthandFactory)(Button, function (value) {
    return { content: value };
  });

  exports.default = Button;

/***/ },
/* 938 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _without2 = __webpack_require__(939);

  var _without3 = _interopRequireDefault(_without2);

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _classnames = __webpack_require__(794);

  var _classnames2 = _interopRequireDefault(_classnames);

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _lib = __webpack_require__(684);

  var _IconGroup = __webpack_require__(940);

  var _IconGroup2 = _interopRequireDefault(_IconGroup);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  /**
   * An icon is a glyph used to represent something else
   * @see Image
   */
  function Icon(props) {
    var bordered = props.bordered,
        className = props.className,
        circular = props.circular,
        color = props.color,
        corner = props.corner,
        disabled = props.disabled,
        fitted = props.fitted,
        flipped = props.flipped,
        inverted = props.inverted,
        link = props.link,
        loading = props.loading,
        name = props.name,
        rotated = props.rotated,
        size = props.size;


    var classes = (0, _classnames2.default)(size, color, (0, _lib.useKeyOnly)(bordered, 'bordered'), (0, _lib.useKeyOnly)(circular, 'circular'), (0, _lib.useKeyOnly)(corner, 'corner'), (0, _lib.useKeyOnly)(disabled, 'disabled'), (0, _lib.useKeyOnly)(fitted, 'fitted'), (0, _lib.useValueAndKey)(flipped, 'flipped'), (0, _lib.useKeyOnly)(inverted, 'inverted'), (0, _lib.useKeyOnly)(link, 'link'), (0, _lib.useKeyOnly)(loading, 'loading'), (0, _lib.useValueAndKey)(rotated, 'rotated'), name, className, 'icon');
    var rest = (0, _lib.getUnhandledProps)(Icon, props);
    var ElementType = (0, _lib.getElementType)(Icon, props);

    return _react2.default.createElement(ElementType, _extends({}, rest, { 'aria-hidden': 'true', className: classes }));
  }

  Icon.Group = _IconGroup2.default;

  Icon._meta = {
    name: 'Icon',
    type: _lib.META.TYPES.ELEMENT,
    props: {
      color: _lib.SUI.COLORS,
      flipped: ['horizontally', 'vertically'],
      name: _lib.SUI.ICONS_AND_ALIASES,
      rotated: ['clockwise', 'counterclockwise'],
      size: (0, _without3.default)(_lib.SUI.SIZES, 'medium')
    }
  };

  Icon.propTypes = {
    /** An element type to render as (string or function). */
    as: _lib.customPropTypes.as,

    /** Formatted to appear bordered */
    bordered: _react.PropTypes.bool,

    /** Additional classes. */
    className: _react.PropTypes.string,

    /** Icon can formatted to appear circular */
    circular: _react.PropTypes.bool,

    /** Color of the icon. */
    color: _react.PropTypes.oneOf(Icon._meta.props.color),

    /** Icons can display a smaller corner icon */
    corner: _react.PropTypes.bool,

    /** Show that the icon is inactive */
    disabled: _react.PropTypes.bool,

    /** Fitted, without space to left or right of Icon. */
    fitted: _react.PropTypes.bool,

    /** Icon can flipped */
    flipped: _react.PropTypes.oneOf(Icon._meta.props.flipped),

    /** Formatted to have its colors inverted for contrast */
    inverted: _react.PropTypes.bool,

    /** Name of the icon */
    name: _lib.customPropTypes.suggest(Icon._meta.props.name),

    /** Icon can be formatted as a link */
    link: _react.PropTypes.bool,

    /** Icon can be used as a simple loader */
    loading: _react.PropTypes.bool,

    /** Icon can rotated */
    rotated: _react.PropTypes.oneOf(Icon._meta.props.rotated),

    /** Size of the icon. */
    size: _react.PropTypes.oneOf(Icon._meta.props.size)
  };

  Icon.defaultProps = {
    as: 'i'
  };

  Icon.create = (0, _lib.createShorthandFactory)(Icon, function (value) {
    return { name: value };
  });

  exports.default = Icon;

/***/ },
/* 939 */
/***/ function(module, exports, __webpack_require__) {

  var baseDifference = __webpack_require__(687),
      baseRest = __webpack_require__(702),
      isArrayLikeObject = __webpack_require__(711);

  /**
   * Creates an array excluding all given values using
   * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
   * for equality comparisons.
   *
   * **Note:** Unlike `_.pull`, this method returns a new array.
   *
   * @static
   * @memberOf _
   * @since 0.1.0
   * @category Array
   * @param {Array} array The array to inspect.
   * @param {...*} [values] The values to exclude.
   * @returns {Array} Returns the new array of filtered values.
   * @see _.difference, _.xor
   * @example
   *
   * _.without([2, 1, 2, 3], 1, 2);
   * // => [3]
   */
  var without = baseRest(function(array, values) {
    return isArrayLikeObject(array)
      ? baseDifference(array, values)
      : [];
  });

  module.exports = without;


/***/ },
/* 940 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _classnames = __webpack_require__(794);

  var _classnames2 = _interopRequireDefault(_classnames);

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _lib = __webpack_require__(684);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  /**
   * Several icons can be used together as a group
   */
  function IconGroup(props) {
    var children = props.children,
        className = props.className,
        size = props.size;


    var classes = (0, _classnames2.default)(size, 'icons', className);
    var rest = (0, _lib.getUnhandledProps)(IconGroup, props);
    var ElementType = (0, _lib.getElementType)(IconGroup, props);

    return _react2.default.createElement(
      ElementType,
      _extends({}, rest, { className: classes }),
      children
    );
  }

  IconGroup._meta = {
    name: 'IconGroup',
    parent: 'Icon',
    type: _lib.META.TYPES.ELEMENT,
    props: {
      size: _lib.SUI.SIZES
    }
  };

  IconGroup.propTypes = {
    /** An element type to render as (string or function). */
    as: _lib.customPropTypes.as,

    /** Primary content. */
    children: _react.PropTypes.node,

    /** Additional classes. */
    className: _react.PropTypes.string,

    /** Size of the icon group. */
    size: _react.PropTypes.oneOf(IconGroup._meta.props.size)
  };

  IconGroup.defaultProps = {
    as: 'i'
  };

  exports.default = IconGroup;

/***/ },
/* 941 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _isUndefined2 = __webpack_require__(713);

  var _isUndefined3 = _interopRequireDefault(_isUndefined2);

  var _isNil2 = __webpack_require__(927);

  var _isNil3 = _interopRequireDefault(_isNil2);

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

  var _classnames = __webpack_require__(794);

  var _classnames2 = _interopRequireDefault(_classnames);

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _lib = __webpack_require__(684);

  var _Icon = __webpack_require__(938);

  var _Icon2 = _interopRequireDefault(_Icon);

  var _Image = __webpack_require__(942);

  var _Image2 = _interopRequireDefault(_Image);

  var _LabelDetail = __webpack_require__(953);

  var _LabelDetail2 = _interopRequireDefault(_LabelDetail);

  var _LabelGroup = __webpack_require__(954);

  var _LabelGroup2 = _interopRequireDefault(_LabelGroup);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

  function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

  var _meta = {
    name: 'Label',
    type: _lib.META.TYPES.ELEMENT,
    props: {
      attached: ['top', 'bottom', 'top right', 'top left', 'bottom left', 'bottom right'],
      color: _lib.SUI.COLORS,
      corner: ['left', 'right'],
      pointing: ['above', 'below', 'left', 'right'],
      ribbon: ['right'],
      size: _lib.SUI.SIZES
    }
  };

  /**
   * A label displays content classification
   */

  var Label = function (_Component) {
    _inherits(Label, _Component);

    function Label() {
      var _ref;

      var _temp, _this, _ret;

      _classCallCheck(this, Label);

      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Label.__proto__ || Object.getPrototypeOf(Label)).call.apply(_ref, [this].concat(args))), _this), _this.handleClick = function (e) {
        var onClick = _this.props.onClick;


        if (onClick) onClick(e, _this.props);
      }, _this.handleRemove = function (e) {
        var onRemove = _this.props.onRemove;


        if (onRemove) onRemove(e, _this.props);
      }, _temp), _possibleConstructorReturn(_this, _ret);
    }

    _createClass(Label, [{
      key: 'render',
      value: function render() {
        var _props = this.props,
            active = _props.active,
            attached = _props.attached,
            basic = _props.basic,
            children = _props.children,
            circular = _props.circular,
            className = _props.className,
            color = _props.color,
            content = _props.content,
            corner = _props.corner,
            detail = _props.detail,
            empty = _props.empty,
            floating = _props.floating,
            horizontal = _props.horizontal,
            icon = _props.icon,
            image = _props.image,
            onRemove = _props.onRemove,
            pointing = _props.pointing,
            removeIcon = _props.removeIcon,
            ribbon = _props.ribbon,
            size = _props.size,
            tag = _props.tag;


        var pointingClass = pointing === true && 'pointing' || (pointing === 'left' || pointing === 'right') && pointing + ' pointing' || (pointing === 'above' || pointing === 'below') && 'pointing ' + pointing;

        var classes = (0, _classnames2.default)('ui', color, pointingClass, size, (0, _lib.useKeyOnly)(active, 'active'), (0, _lib.useKeyOnly)(basic, 'basic'), (0, _lib.useKeyOnly)(circular, 'circular'), (0, _lib.useKeyOnly)(empty, 'empty'), (0, _lib.useKeyOnly)(floating, 'floating'), (0, _lib.useKeyOnly)(horizontal, 'horizontal'), (0, _lib.useKeyOnly)(image === true, 'image'), (0, _lib.useKeyOnly)(tag, 'tag'), (0, _lib.useKeyOrValueAndKey)(corner, 'corner'), (0, _lib.useKeyOrValueAndKey)(ribbon, 'ribbon'), (0, _lib.useValueAndKey)(attached, 'attached'), 'label', className);
        var rest = (0, _lib.getUnhandledProps)(Label, this.props);
        var ElementType = (0, _lib.getElementType)(Label, this.props);

        if (!(0, _isNil3.default)(children)) {
          return _react2.default.createElement(
            ElementType,
            _extends({}, rest, { className: classes, onClick: this.handleClick }),
            children
          );
        }

        var removeIconShorthand = (0, _isUndefined3.default)(removeIcon) ? 'delete' : removeIcon;

        return _react2.default.createElement(
          ElementType,
          _extends({ className: classes, onClick: this.handleClick }, rest),
          _Icon2.default.create(icon),
          typeof image !== 'boolean' && _Image2.default.create(image),
          content,
          (0, _lib.createShorthand)(_LabelDetail2.default, function (val) {
            return { content: val };
          }, detail),
          onRemove && _Icon2.default.create(removeIconShorthand, { onClick: this.handleRemove })
        );
      }
    }]);

    return Label;
  }(_react.Component);

  // Label is not yet defined inside the class
  // Do not use a static property initializer


  Label.propTypes = {
    /** An element type to render as (string or function). */
    as: _lib.customPropTypes.as,

    /** A label can be active. */
    active: _react.PropTypes.bool,

    /** A label can attach to a content segment. */
    attached: _react.PropTypes.oneOf(_meta.props.attached),

    /** A label can reduce its complexity. */
    basic: _react.PropTypes.bool,

    /** Primary content. */
    children: _react.PropTypes.node,

    /** A label can be circular. */
    circular: _react.PropTypes.bool,

    /** Additional classes. */
    className: _react.PropTypes.string,

    /** Color of the label. */
    color: _react.PropTypes.oneOf(_meta.props.color),

    /** Shorthand for primary content. */
    content: _lib.customPropTypes.contentShorthand,

    /** A label can position itself in the corner of an element. */
    corner: _react.PropTypes.oneOfType([_react.PropTypes.bool, _react.PropTypes.oneOf(_meta.props.corner)]),

    /** Shorthand for LabelDetail. */
    detail: _lib.customPropTypes.itemShorthand,

    /** Formats the label as a dot. */
    empty: _lib.customPropTypes.every([_lib.customPropTypes.demand(['circular']), _react.PropTypes.bool]),

    /** Float above another element in the upper right corner. */
    floating: _react.PropTypes.bool,

    /** A horizontal label is formatted to label content along-side it horizontally. */
    horizontal: _react.PropTypes.bool,

    /** Shorthand for Icon. */
    icon: _lib.customPropTypes.itemShorthand,

    /** A label can be formatted to emphasize an image or prop can be used as shorthand for Image. */
    image: _react.PropTypes.oneOfType([_react.PropTypes.bool, _lib.customPropTypes.itemShorthand]),

    /** A label can point to content next to it. */
    pointing: _react.PropTypes.oneOfType([_react.PropTypes.bool, _react.PropTypes.oneOf(_meta.props.pointing)]),

    /**
     * Called on click.
     *
     * @param {SyntheticEvent} event - React's original SyntheticEvent.
     * @param {object} data - All props.
     */
    onClick: _react.PropTypes.func,

    /**
     * Adds an "x" icon, called when "x" is clicked.
     *
     * @param {SyntheticEvent} event - React's original SyntheticEvent.
     * @param {object} data - All props.
     */
    onRemove: _react.PropTypes.func,

    /** Shorthand for Icon to appear as the last child and trigger onRemove. */
    removeIcon: _lib.customPropTypes.itemShorthand,

    /** A label can appear as a ribbon attaching itself to an element. */
    ribbon: _react.PropTypes.oneOfType([_react.PropTypes.bool, _react.PropTypes.oneOf(_meta.props.ribbon)]),

    /** A label can have different sizes. */
    size: _react.PropTypes.oneOf(_meta.props.size),

    /** A label can appear as a tag. */
    tag: _react.PropTypes.bool
  };
  Label._meta = _meta;
  Label.Detail = _LabelDetail2.default;
  Label.Group = _LabelGroup2.default;
  exports.default = Label;
  Label.create = (0, _lib.createShorthandFactory)(Label, function (value) {
    return { content: value };
  });

/***/ },
/* 942 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _isNil2 = __webpack_require__(927);

  var _isNil3 = _interopRequireDefault(_isNil2);

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _classnames = __webpack_require__(794);

  var _classnames2 = _interopRequireDefault(_classnames);

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _lib = __webpack_require__(684);

  var _Dimmer = __webpack_require__(943);

  var _Dimmer2 = _interopRequireDefault(_Dimmer);

  var _Label = __webpack_require__(941);

  var _Label2 = _interopRequireDefault(_Label);

  var _ImageGroup = __webpack_require__(952);

  var _ImageGroup2 = _interopRequireDefault(_ImageGroup);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  /**
   * An image is a graphic representation of something.
   * @see Icon
   */
  function Image(props) {
    var alt = props.alt,
        avatar = props.avatar,
        bordered = props.bordered,
        centered = props.centered,
        children = props.children,
        className = props.className,
        dimmer = props.dimmer,
        disabled = props.disabled,
        floated = props.floated,
        fluid = props.fluid,
        height = props.height,
        hidden = props.hidden,
        href = props.href,
        inline = props.inline,
        label = props.label,
        shape = props.shape,
        size = props.size,
        spaced = props.spaced,
        src = props.src,
        verticalAlign = props.verticalAlign,
        width = props.width,
        wrapped = props.wrapped,
        ui = props.ui;


    var classes = (0, _classnames2.default)((0, _lib.useKeyOnly)(ui, 'ui'), size, shape, (0, _lib.useKeyOnly)(avatar, 'avatar'), (0, _lib.useKeyOnly)(bordered, 'bordered'), (0, _lib.useKeyOnly)(centered, 'centered'), (0, _lib.useKeyOnly)(disabled, 'disabled'), (0, _lib.useKeyOnly)(fluid, 'fluid'), (0, _lib.useKeyOnly)(hidden, 'hidden'), (0, _lib.useKeyOnly)(inline, 'inline'), (0, _lib.useKeyOrValueAndKey)(spaced, 'spaced'), (0, _lib.useValueAndKey)(floated, 'floated'), (0, _lib.useVerticalAlignProp)(verticalAlign, 'aligned'), 'image', className);
    var rest = (0, _lib.getUnhandledProps)(Image, props);
    var ElementType = (0, _lib.getElementType)(Image, props, function () {
      if (!(0, _isNil3.default)(dimmer) || !(0, _isNil3.default)(label) || !(0, _isNil3.default)(wrapped) || !(0, _isNil3.default)(children)) return 'div';
    });

    if (!(0, _isNil3.default)(children)) {
      return _react2.default.createElement(
        ElementType,
        _extends({}, rest, { className: classes }),
        children
      );
    }

    var rootProps = _extends({}, rest, { className: classes });
    var imgTagProps = { alt: alt, src: src, height: height, width: width };

    if (ElementType === 'img') return _react2.default.createElement(ElementType, _extends({}, rootProps, imgTagProps));

    return _react2.default.createElement(
      ElementType,
      _extends({}, rootProps, { href: href }),
      _Dimmer2.default.create(dimmer),
      _Label2.default.create(label),
      _react2.default.createElement('img', imgTagProps)
    );
  }

  Image.Group = _ImageGroup2.default;

  Image._meta = {
    name: 'Image',
    type: _lib.META.TYPES.ELEMENT,
    props: {
      verticalAlign: _lib.SUI.VERTICAL_ALIGNMENTS,
      floated: _lib.SUI.FLOATS,
      shape: ['rounded', 'circular'],
      size: _lib.SUI.SIZES,
      spaced: ['left', 'right']
    }
  };

  Image.propTypes = {
    /** An element type to render as (string or function). */
    as: _lib.customPropTypes.as,

    /** Alternate text for the image specified. */
    alt: _react.PropTypes.string,

    /** An image may be formatted to appear inline with text as an avatar. */
    avatar: _react.PropTypes.bool,

    /** An image may include a border to emphasize the edges of white or transparent content. */
    bordered: _react.PropTypes.bool,

    /** An image can appear centered in a content block. */
    centered: _react.PropTypes.bool,

    /** Primary content. */
    children: _react.PropTypes.node,

    /** Additional classes. */
    className: _react.PropTypes.string,

    /** An image can show that it is disabled and cannot be selected. */
    disabled: _react.PropTypes.bool,

    /** Shorthand for Dimmer. */
    dimmer: _lib.customPropTypes.itemShorthand,

    /** An image can sit to the left or right of other content. */
    floated: _react.PropTypes.oneOf(Image._meta.props.floated),

    /** An image can take up the width of its container. */
    fluid: _lib.customPropTypes.every([_react.PropTypes.bool, _lib.customPropTypes.disallow(['size'])]),

    /** The img element height attribute. */
    height: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.number]),

    /** An image can be hidden. */
    hidden: _react.PropTypes.bool,

    /** Renders the Image as an <a> tag with this href. */
    href: _react.PropTypes.string,

    /** An image may appear inline. */
    inline: _react.PropTypes.bool,

    /** Shorthand for Label. */
    label: _lib.customPropTypes.itemShorthand,

    /** An image may appear rounded or circular. */
    shape: _react.PropTypes.oneOf(Image._meta.props.shape),

    /** An image may appear at different sizes. */
    size: _react.PropTypes.oneOf(Image._meta.props.size),

    /** An image can specify that it needs an additional spacing to separate it from nearby content. */
    spaced: _react.PropTypes.oneOfType([_react.PropTypes.bool, _react.PropTypes.oneOf(Image._meta.props.spaced)]),

    /** Specifies the URL of the image. */
    src: _react.PropTypes.string,

    /** Whether or not to add the ui className. */
    ui: _react.PropTypes.bool,

    /** An image can specify its vertical alignment */
    verticalAlign: _react.PropTypes.oneOf(Image._meta.props.verticalAlign),

    /** The img element width attribute */
    width: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.number]),

    /** An image can render wrapped in a `div.ui.image` as alternative HTML markup */
    wrapped: _lib.customPropTypes.every([_react.PropTypes.bool,
    // these props wrap the image in an a tag already
    _lib.customPropTypes.disallow(['href'])])
  };

  Image.defaultProps = {
    as: 'img',
    ui: true
  };

  Image.create = (0, _lib.createShorthandFactory)(Image, function (value) {
    return { src: value };
  });

  exports.default = Image;

/***/ },
/* 943 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _Dimmer = __webpack_require__(944);

  var _Dimmer2 = _interopRequireDefault(_Dimmer);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  exports.default = _Dimmer2.default;

/***/ },
/* 944 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _isNil2 = __webpack_require__(927);

  var _isNil3 = _interopRequireDefault(_isNil2);

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

  var _classnames = __webpack_require__(794);

  var _classnames2 = _interopRequireDefault(_classnames);

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _lib = __webpack_require__(684);

  var _Portal = __webpack_require__(945);

  var _Portal2 = _interopRequireDefault(_Portal);

  var _DimmerDimmable = __webpack_require__(951);

  var _DimmerDimmable2 = _interopRequireDefault(_DimmerDimmable);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

  function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

  var _meta = {
    name: 'Dimmer',
    type: _lib.META.TYPES.MODULE
  };

  /**
   * A dimmer hides distractions to focus attention on particular content.
   */

  var Dimmer = function (_Component) {
    _inherits(Dimmer, _Component);

    function Dimmer() {
      var _ref;

      var _temp, _this, _ret;

      _classCallCheck(this, Dimmer);

      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Dimmer.__proto__ || Object.getPrototypeOf(Dimmer)).call.apply(_ref, [this].concat(args))), _this), _this.handlePortalMount = function () {
        if (_lib.isBrowser) document.body.classList.add('dimmed', 'dimmable');
      }, _this.handlePortalUnmount = function () {
        if (_lib.isBrowser) document.body.classList.remove('dimmed', 'dimmable');
      }, _this.handleClick = function (e) {
        var _this$props = _this.props,
            onClick = _this$props.onClick,
            onClickOutside = _this$props.onClickOutside;


        if (onClick) onClick(e, _this.props);
        if (_this.center && _this.center !== e.target && _this.center.contains(e.target)) return;
        if (onClickOutside) onClickOutside(e, _this.props);
      }, _temp), _possibleConstructorReturn(_this, _ret);
    }

    _createClass(Dimmer, [{
      key: 'render',
      value: function render() {
        var _this2 = this;

        var _props = this.props,
            active = _props.active,
            children = _props.children,
            className = _props.className,
            content = _props.content,
            disabled = _props.disabled,
            inverted = _props.inverted,
            page = _props.page,
            simple = _props.simple;


        var classes = (0, _classnames2.default)('ui', (0, _lib.useKeyOnly)(active, 'active transition visible'), (0, _lib.useKeyOnly)(disabled, 'disabled'), (0, _lib.useKeyOnly)(inverted, 'inverted'), (0, _lib.useKeyOnly)(page, 'page'), (0, _lib.useKeyOnly)(simple, 'simple'), 'dimmer', className);
        var rest = (0, _lib.getUnhandledProps)(Dimmer, this.props);
        var ElementType = (0, _lib.getElementType)(Dimmer, this.props);

        var childrenJSX = ((0, _isNil3.default)(children) ? content : children) && _react2.default.createElement(
          'div',
          { className: 'content' },
          _react2.default.createElement(
            'div',
            { className: 'center', ref: function ref(center) {
                return _this2.center = center;
              } },
            (0, _isNil3.default)(children) ? content : children
          )
        );

        if (page) {
          return _react2.default.createElement(
            _Portal2.default,
            {
              closeOnEscape: false,
              closeOnDocumentClick: false,
              onMount: this.handlePortalMount,
              onUnmount: this.handlePortalUnmount,
              open: active,
              openOnTriggerClick: false
            },
            _react2.default.createElement(
              ElementType,
              _extends({}, rest, { className: classes, onClick: this.handleClick }),
              childrenJSX
            )
          );
        }

        return _react2.default.createElement(
          ElementType,
          _extends({}, rest, { className: classes, onClick: this.handleClick }),
          childrenJSX
        );
      }
    }]);

    return Dimmer;
  }(_react.Component);

  // Dimmer is not yet defined inside the class
  // Do not use a static property initializer


  Dimmer.propTypes = {
    /** An element type to render as (string or function). */
    as: _lib.customPropTypes.as,

    /** An active dimmer will dim its parent container. */
    active: _react.PropTypes.bool,

    /** Primary content. */
    children: _react.PropTypes.node,

    /** Additional classes. */
    className: _react.PropTypes.string,

    /** Shorthand for primary content. */
    content: _lib.customPropTypes.contentShorthand,

    /** A disabled dimmer cannot be activated */
    disabled: _react.PropTypes.bool,

    /**
     * Called on click.
     *
     * @param {SyntheticEvent} event - React's original SyntheticEvent.
     * @param {object} data - All props.
     */
    onClick: _react.PropTypes.func,

    /**
     * Handles click outside Dimmer's content, but inside Dimmer area.
     *
     * @param {SyntheticEvent} event - React's original SyntheticEvent.
     * @param {object} data - All props.
     */
    onClickOutside: _react.PropTypes.func,

    /** A dimmer can be formatted to have its colors inverted. */
    inverted: _react.PropTypes.bool,

    /** A dimmer can be formatted to be fixed to the page. */
    page: _react.PropTypes.bool,

    /** A dimmer can be controlled with simple prop. */
    simple: _react.PropTypes.bool
  };
  Dimmer._meta = _meta;
  Dimmer.Dimmable = _DimmerDimmable2.default;
  exports.default = Dimmer;
  Dimmer.create = (0, _lib.createShorthandFactory)(Dimmer, function (value) {
    return { content: value };
  });

/***/ },
/* 945 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _Portal = __webpack_require__(946);

  var _Portal2 = _interopRequireDefault(_Portal);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  exports.default = _Portal2.default;

/***/ },
/* 946 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _invoke2 = __webpack_require__(947);

  var _invoke3 = _interopRequireDefault(_invoke2);

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _reactDom = __webpack_require__(415);

  var _reactDom2 = _interopRequireDefault(_reactDom);

  var _lib = __webpack_require__(684);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

  function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

  var debug = (0, _lib.makeDebugger)('portal');

  var _meta = {
    name: 'Portal',
    type: _lib.META.TYPES.ADDON
  };

  /**
   * A component that allows you to render children outside their parent.
   * @see Modal
   */

  var Portal = function (_Component) {
    _inherits(Portal, _Component);

    function Portal() {
      var _ref;

      var _temp, _this, _ret;

      _classCallCheck(this, Portal);

      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Portal.__proto__ || Object.getPrototypeOf(Portal)).call.apply(_ref, [this].concat(args))), _this), _this.state = {}, _this.handleDocumentClick = function (e) {
        var _this$props = _this.props,
            closeOnDocumentClick = _this$props.closeOnDocumentClick,
            closeOnRootNodeClick = _this$props.closeOnRootNodeClick;

        // If not mounted, no portal, or event happened in the portal, ignore it

        if (!_this.node || !_this.portal || _this.portal.contains(e.target)) return;

        if (closeOnDocumentClick || closeOnRootNodeClick && _this.node.contains(e.target)) {
          debug('handleDocumentClick()');

          e.stopPropagation();
          _this.close(e);
        }
      }, _this.handleEscape = function (e) {
        if (!_this.props.closeOnEscape) return;
        if (_lib.keyboardKey.getCode(e) !== _lib.keyboardKey.Escape) return;

        debug('handleEscape()');

        e.preventDefault();
        _this.close(e);
      }, _this.handlePortalMouseLeave = function (e) {
        var _this$props2 = _this.props,
            closeOnPortalMouseLeave = _this$props2.closeOnPortalMouseLeave,
            mouseLeaveDelay = _this$props2.mouseLeaveDelay;


        if (!closeOnPortalMouseLeave) return;

        debug('handlePortalMouseLeave()');
        _this.mouseLeaveTimer = _this.closeWithTimeout(e, mouseLeaveDelay);
      }, _this.handlePortalMouseEnter = function (e) {
        // In order to enable mousing from the trigger to the portal, we need to
        // clear the mouseleave timer that was set when leaving the trigger.
        var closeOnPortalMouseLeave = _this.props.closeOnPortalMouseLeave;


        if (!closeOnPortalMouseLeave) return;

        debug('handlePortalMouseEnter()');
        clearTimeout(_this.mouseLeaveTimer);
      }, _this.handleTriggerBlur = function (e) {
        var _this$props3 = _this.props,
            trigger = _this$props3.trigger,
            closeOnTriggerBlur = _this$props3.closeOnTriggerBlur;

        // Call original event handler

        (0, _invoke3.default)(trigger, 'props.onBlur', e);

        if (!closeOnTriggerBlur) return;

        debug('handleTriggerBlur()');
        _this.close(e);
      }, _this.handleTriggerClick = function (e) {
        var _this$props4 = _this.props,
            trigger = _this$props4.trigger,
            closeOnTriggerClick = _this$props4.closeOnTriggerClick,
            openOnTriggerClick = _this$props4.openOnTriggerClick;
        var open = _this.state.open;

        // Call original event handler

        (0, _invoke3.default)(trigger, 'props.onClick', e);

        if (open && closeOnTriggerClick) {
          debug('handleTriggerClick() - close');

          e.stopPropagation();
          _this.close(e);
        } else if (!open && openOnTriggerClick) {
          debug('handleTriggerClick() - open');

          e.stopPropagation();
          _this.open(e);
        }

        // Prevents handleDocumentClick from closing the portal when
        // openOnTriggerFocus is set. Focus shifts on mousedown so the portal opens
        // before the click finishes so it may actually wind up on the document.
        e.nativeEvent.stopImmediatePropagation();
      }, _this.handleTriggerFocus = function (e) {
        var _this$props5 = _this.props,
            trigger = _this$props5.trigger,
            openOnTriggerFocus = _this$props5.openOnTriggerFocus;

        // Call original event handler

        (0, _invoke3.default)(trigger, 'props.onFocus', e);

        if (!openOnTriggerFocus) return;

        debug('handleTriggerFocus()');
        _this.open(e);
      }, _this.handleTriggerMouseLeave = function (e) {
        clearTimeout(_this.mouseEnterTimer);

        var _this$props6 = _this.props,
            trigger = _this$props6.trigger,
            closeOnTriggerMouseLeave = _this$props6.closeOnTriggerMouseLeave,
            mouseLeaveDelay = _this$props6.mouseLeaveDelay;

        // Call original event handler

        (0, _invoke3.default)(trigger, 'props.onMouseLeave', e);

        if (!closeOnTriggerMouseLeave) return;

        debug('handleTriggerMouseLeave()');
        _this.mouseLeaveTimer = _this.closeWithTimeout(e, mouseLeaveDelay);
      }, _this.handleTriggerMouseEnter = function (e) {
        clearTimeout(_this.mouseLeaveTimer);

        var _this$props7 = _this.props,
            trigger = _this$props7.trigger,
            mouseEnterDelay = _this$props7.mouseEnterDelay,
            openOnTriggerMouseEnter = _this$props7.openOnTriggerMouseEnter;

        // Call original event handler

        (0, _invoke3.default)(trigger, 'props.onMouseEnter', _this.handleTriggerMouseEnter);

        if (!openOnTriggerMouseEnter) return;

        debug('handleTriggerMouseEnter()');
        _this.mouseEnterTimer = _this.openWithTimeout(e, mouseEnterDelay);
      }, _this.open = function (e) {
        debug('open()');

        var onOpen = _this.props.onOpen;

        if (onOpen) onOpen(e, _this.props);

        _this.trySetState({ open: true });
      }, _this.openWithTimeout = function (e, delay) {
        // React wipes the entire event object and suggests using e.persist() if
        // you need the event for async access. However, even with e.persist
        // certain required props (e.g. currentTarget) are null so we're forced to clone.
        var eventClone = _extends({}, e);
        return setTimeout(function () {
          return _this.open(eventClone);
        }, delay || 0);
      }, _this.close = function (e) {
        debug('close()');

        var onClose = _this.props.onClose;

        if (onClose) onClose(e, _this.props);

        _this.trySetState({ open: false });
      }, _this.closeWithTimeout = function (e, delay) {
        // React wipes the entire event object and suggests using e.persist() if
        // you need the event for async access. However, even with e.persist
        // certain required props (e.g. currentTarget) are null so we're forced to clone.
        var eventClone = _extends({}, e);
        return setTimeout(function () {
          return _this.close(eventClone);
        }, delay || 0);
      }, _this.mountPortal = function () {
        if (!_lib.isBrowser || _this.node) return;

        debug('mountPortal()');

        var _this$props8 = _this.props,
            mountNode = _this$props8.mountNode,
            prepend = _this$props8.prepend;


        _this.node = document.createElement('div');

        if (prepend) {
          mountNode.insertBefore(_this.node, mountNode.firstElementChild);
        } else {
          mountNode.appendChild(_this.node);
        }

        document.addEventListener('click', _this.handleDocumentClick);
        document.addEventListener('keydown', _this.handleEscape);

        var onMount = _this.props.onMount;

        if (onMount) onMount(null, _this.props);
      }, _this.unmountPortal = function () {
        if (!_lib.isBrowser || !_this.node) return;

        debug('unmountPortal()');

        _reactDom2.default.unmountComponentAtNode(_this.node);
        _this.node.parentNode.removeChild(_this.node);

        _this.portal.removeEventListener('mouseleave', _this.handlePortalMouseLeave);
        _this.portal.removeEventListener('mouseenter', _this.handlePortalMouseEnter);

        _this.node = null;
        _this.portal = null;

        document.removeEventListener('click', _this.handleDocumentClick);
        document.removeEventListener('keydown', _this.handleEscape);

        var onUnmount = _this.props.onUnmount;

        if (onUnmount) onUnmount(null, _this.props);
      }, _temp), _possibleConstructorReturn(_this, _ret);
    }

    _createClass(Portal, [{
      key: 'componentDidMount',
      value: function componentDidMount() {
        this.renderPortal();
      }
    }, {
      key: 'componentDidUpdate',
      value: function componentDidUpdate(prevProps, prevState) {
        // NOTE: Ideally the portal rendering would happen in the render() function
        // but React gives a warning about not being pure and suggests doing it
        // within this method.

        // If the portal is open, render (or re-render) the portal and child.
        this.renderPortal();

        if (prevState.open && !this.state.open) {
          debug('portal closed');
          this.unmountPortal();
        }
      }
    }, {
      key: 'componentWillUnmount',
      value: function componentWillUnmount() {
        this.unmountPortal();

        // Clean up timers
        clearTimeout(this.mouseEnterTimer);
        clearTimeout(this.mouseLeaveTimer);
      }

      // ----------------------------------------
      // Document Event Handlers
      // ----------------------------------------

      // ----------------------------------------
      // Component Event Handlers
      // ----------------------------------------

      // ----------------------------------------
      // Behavior
      // ----------------------------------------

    }, {
      key: 'renderPortal',
      value: function renderPortal() {
        if (!this.state.open) return;
        debug('renderPortal()');

        var _props = this.props,
            children = _props.children,
            className = _props.className;


        this.mountPortal();

        // Server side rendering
        if (!_lib.isBrowser) return null;

        this.node.className = className || '';

        // when re-rendering, first remove listeners before re-adding them to the new node
        if (this.portal) {
          this.portal.removeEventListener('mouseleave', this.handlePortalMouseLeave);
          this.portal.removeEventListener('mouseenter', this.handlePortalMouseEnter);
        }

        _reactDom2.default.unstable_renderSubtreeIntoContainer(this, _react.Children.only(children), this.node);

        this.portal = this.node.firstElementChild;

        this.portal.addEventListener('mouseleave', this.handlePortalMouseLeave);
        this.portal.addEventListener('mouseenter', this.handlePortalMouseEnter);
      }
    }, {
      key: 'render',
      value: function render() {
        var trigger = this.props.trigger;


        if (!trigger) return null;

        return _react2.default.cloneElement(trigger, {
          onBlur: this.handleTriggerBlur,
          onClick: this.handleTriggerClick,
          onFocus: this.handleTriggerFocus,
          onMouseLeave: this.handleTriggerMouseLeave,
          onMouseEnter: this.handleTriggerMouseEnter
        });
      }
    }]);

    return Portal;
  }(_lib.AutoControlledComponent);

  Portal.propTypes = {
    /** Primary content. */
    children: _react.PropTypes.node.isRequired,

    /** Additional classes. */
    className: _react.PropTypes.string,

    /**
     * Controls whether or not the portal should close on a click on the portal background.
     * NOTE: This differs from closeOnDocumentClick:
     * - DocumentClick - any click not within the portal
     * - RootNodeClick - a click not within the portal but within the portal's wrapper
     */
    closeOnRootNodeClick: _lib.customPropTypes.every([_lib.customPropTypes.disallow(['closeOnDocumentClick']), _react.PropTypes.bool]),

    /** Controls whether or not the portal should close on a click outside. */
    closeOnDocumentClick: _lib.customPropTypes.every([_lib.customPropTypes.disallow(['closeOnRootNodeClick']), _react.PropTypes.bool]),

    /** Controls whether or not the portal should close when escape is pressed is displayed. */
    closeOnEscape: _react.PropTypes.bool,

    /**
     * Controls whether or not the portal should close when mousing out of the portal.
     * NOTE: This will prevent `closeOnTriggerMouseLeave` when mousing over the
     * gap from the trigger to the portal.
     */
    closeOnPortalMouseLeave: _react.PropTypes.bool,

    /** Controls whether or not the portal should close on blur of the trigger. */
    closeOnTriggerBlur: _react.PropTypes.bool,

    /** Controls whether or not the portal should close on click of the trigger. */
    closeOnTriggerClick: _react.PropTypes.bool,

    /** Controls whether or not the portal should close when mousing out of the trigger. */
    closeOnTriggerMouseLeave: _react.PropTypes.bool,

    /** Initial value of open. */
    defaultOpen: _react.PropTypes.bool,

    /** The node where the portal should mount. */
    mountNode: _react.PropTypes.any,

    /** Milliseconds to wait before closing on mouse leave */
    mouseLeaveDelay: _react.PropTypes.number,

    /** Milliseconds to wait before opening on mouse over */
    mouseEnterDelay: _react.PropTypes.number,

    /**
     * Called when a close event happens
     *
     * @param {SyntheticEvent} event - React's original SyntheticEvent.
     * @param {object} data - All props.
     */
    onClose: _react.PropTypes.func,

    /**
     * Called when the portal is mounted on the DOM
     *
     * @param {null}
     * @param {object} data - All props.
     */
    onMount: _react.PropTypes.func,

    /**
     * Called when an open event happens
     *
     * @param {SyntheticEvent} event - React's original SyntheticEvent.
     * @param {object} data - All props.
     */
    onOpen: _react.PropTypes.func,

    /**
     * Called when the portal is unmounted from the DOM
     *
     * @param {null}
     * @param {object} data - All props.
     */
    onUnmount: _react.PropTypes.func,

    /** Controls whether or not the portal is displayed. */
    open: _react.PropTypes.bool,

    /** Controls whether or not the portal should open when the trigger is clicked. */
    openOnTriggerClick: _react.PropTypes.bool,

    /** Controls whether or not the portal should open on focus of the trigger. */
    openOnTriggerFocus: _react.PropTypes.bool,

    /** Controls whether or not the portal should open when mousing over the trigger. */
    openOnTriggerMouseEnter: _react.PropTypes.bool,

    /** Controls whether the portal should be prepended to the mountNode instead of appended. */
    prepend: _react.PropTypes.bool,

    /** Element to be rendered in-place where the portal is defined. */
    trigger: _react.PropTypes.node
  };
  Portal.defaultProps = {
    closeOnDocumentClick: true,
    closeOnEscape: true,
    openOnTriggerClick: true,
    mountNode: _lib.isBrowser ? document.body : null
  };
  Portal.autoControlledProps = ['open'];
  Portal._meta = _meta;
  exports.default = Portal;

/***/ },
/* 947 */
/***/ function(module, exports, __webpack_require__) {

  var baseInvoke = __webpack_require__(948),
      baseRest = __webpack_require__(702);

  /**
   * Invokes the method at `path` of `object`.
   *
   * @static
   * @memberOf _
   * @since 4.0.0
   * @category Object
   * @param {Object} object The object to query.
   * @param {Array|string} path The path of the method to invoke.
   * @param {...*} [args] The arguments to invoke the method with.
   * @returns {*} Returns the result of the invoked method.
   * @example
   *
   * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };
   *
   * _.invoke(object, 'a[0].b.c.slice', 1, 3);
   * // => [2, 3]
   */
  var invoke = baseRest(baseInvoke);

  module.exports = invoke;


/***/ },
/* 948 */
/***/ function(module, exports, __webpack_require__) {

  var apply = __webpack_require__(705),
      castPath = __webpack_require__(630),
      last = __webpack_require__(949),
      parent = __webpack_require__(950),
      toKey = __webpack_require__(683);

  /**
   * The base implementation of `_.invoke` without support for individual
   * method arguments.
   *
   * @private
   * @param {Object} object The object to query.
   * @param {Array|string} path The path of the method to invoke.
   * @param {Array} args The arguments to invoke the method with.
   * @returns {*} Returns the result of the invoked method.
   */
  function baseInvoke(object, path, args) {
    path = castPath(path, object);
    object = parent(object, path);
    var func = object == null ? object : object[toKey(last(path))];
    return func == null ? undefined : apply(func, object, args);
  }

  module.exports = baseInvoke;


/***/ },
/* 949 */
/***/ function(module, exports) {

  /**
   * Gets the last element of `array`.
   *
   * @static
   * @memberOf _
   * @since 0.1.0
   * @category Array
   * @param {Array} array The array to query.
   * @returns {*} Returns the last element of `array`.
   * @example
   *
   * _.last([1, 2, 3]);
   * // => 3
   */
  function last(array) {
    var length = array == null ? 0 : array.length;
    return length ? array[length - 1] : undefined;
  }

  module.exports = last;


/***/ },
/* 950 */
/***/ function(module, exports, __webpack_require__) {

  var baseGet = __webpack_require__(768),
      baseSlice = __webpack_require__(902);

  /**
   * Gets the parent value at `path` of `object`.
   *
   * @private
   * @param {Object} object The object to query.
   * @param {Array} path The path to get the parent value of.
   * @returns {*} Returns the parent value.
   */
  function parent(object, path) {
    return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));
  }

  module.exports = parent;


/***/ },
/* 951 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _classnames = __webpack_require__(794);

  var _classnames2 = _interopRequireDefault(_classnames);

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _lib = __webpack_require__(684);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  /**
   * A dimmable sub-component for Dimmer.
   */
  function DimmerDimmable(props) {
    var blurring = props.blurring,
        className = props.className,
        children = props.children,
        dimmed = props.dimmed;


    var classes = (0, _classnames2.default)((0, _lib.useKeyOnly)(blurring, 'blurring'), (0, _lib.useKeyOnly)(dimmed, 'dimmed'), 'dimmable', className);
    var rest = (0, _lib.getUnhandledProps)(DimmerDimmable, props);
    var ElementType = (0, _lib.getElementType)(DimmerDimmable, props);

    return _react2.default.createElement(
      ElementType,
      _extends({}, rest, { className: classes }),
      children
    );
  }

  DimmerDimmable._meta = {
    name: 'DimmerDimmable',
    type: _lib.META.TYPES.MODULE,
    parent: 'Dimmer'
  };

  DimmerDimmable.propTypes = {
    /** An element type to render as (string or function). */
    as: _lib.customPropTypes.as,

    /** A dimmable element can blur its contents. */
    blurring: _react.PropTypes.bool,

    /** Primary content. */
    children: _react.PropTypes.node,

    /** Additional classes. */
    className: _react.PropTypes.string,

    /** Controls whether or not the dim is displayed. */
    dimmed: _react.PropTypes.bool
  };

  exports.default = DimmerDimmable;

/***/ },
/* 952 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _classnames = __webpack_require__(794);

  var _classnames2 = _interopRequireDefault(_classnames);

  var _lib = __webpack_require__(684);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  /**
   * A group of images
   */
  function ImageGroup(props) {
    var children = props.children,
        className = props.className,
        size = props.size;

    var classes = (0, _classnames2.default)('ui', size, className, 'images');
    var rest = (0, _lib.getUnhandledProps)(ImageGroup, props);
    var ElementType = (0, _lib.getElementType)(ImageGroup, props);

    return _react2.default.createElement(
      ElementType,
      _extends({}, rest, { className: classes }),
      children
    );
  }

  ImageGroup._meta = {
    name: 'ImageGroup',
    parent: 'Image',
    type: _lib.META.TYPES.ELEMENT,
    props: {
      size: _lib.SUI.SIZES
    }
  };

  ImageGroup.propTypes = {
    /** An element type to render as (string or function). */
    as: _lib.customPropTypes.as,

    /** Primary content. */
    children: _react.PropTypes.node,

    /** Additional classes. */
    className: _react.PropTypes.string,

    /** A group of images can be formatted to have the same size. */
    size: _react.PropTypes.oneOf(ImageGroup._meta.props.size)
  };

  exports.default = ImageGroup;

/***/ },
/* 953 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _isNil2 = __webpack_require__(927);

  var _isNil3 = _interopRequireDefault(_isNil2);

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _classnames = __webpack_require__(794);

  var _classnames2 = _interopRequireDefault(_classnames);

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _lib = __webpack_require__(684);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function LabelDetail(props) {
    var children = props.children,
        className = props.className,
        content = props.content;

    var classes = (0, _classnames2.default)('detail', className);
    var rest = (0, _lib.getUnhandledProps)(LabelDetail, props);
    var ElementType = (0, _lib.getElementType)(LabelDetail, props);

    return _react2.default.createElement(
      ElementType,
      _extends({}, rest, { className: classes }),
      (0, _isNil3.default)(children) ? content : children
    );
  }

  LabelDetail._meta = {
    name: 'LabelDetail',
    parent: 'Label',
    type: _lib.META.TYPES.ELEMENT
  };

  LabelDetail.propTypes = {
    /** An element type to render as (string or function). */
    as: _lib.customPropTypes.as,

    /** Primary content. */
    children: _react.PropTypes.node,

    /** Additional classes. */
    className: _react.PropTypes.string,

    /** Shorthand for primary content. */
    content: _lib.customPropTypes.contentShorthand
  };

  exports.default = LabelDetail;

/***/ },
/* 954 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _classnames = __webpack_require__(794);

  var _classnames2 = _interopRequireDefault(_classnames);

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _lib = __webpack_require__(684);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function LabelGroup(props) {
    var children = props.children,
        circular = props.circular,
        className = props.className,
        color = props.color,
        size = props.size,
        tag = props.tag;


    var classes = (0, _classnames2.default)('ui', color, size, (0, _lib.useKeyOnly)(circular, 'circular'), (0, _lib.useKeyOnly)(tag, 'tag'), 'labels', className);
    var rest = (0, _lib.getUnhandledProps)(LabelGroup, props);
    var ElementType = (0, _lib.getElementType)(LabelGroup, props);

    return _react2.default.createElement(
      ElementType,
      _extends({}, rest, { className: classes }),
      children
    );
  }

  LabelGroup._meta = {
    name: 'LabelGroup',
    parent: 'Label',
    type: _lib.META.TYPES.ELEMENT,
    props: {
      color: _lib.SUI.COLORS,
      size: _lib.SUI.SIZES
    }
  };

  LabelGroup.propTypes = {
    /** An element type to render as (string or function). */
    as: _lib.customPropTypes.as,

    /** Primary content. */
    children: _react.PropTypes.node,

    /** Labels can share shapes. */
    circular: _react.PropTypes.bool,

    /** Additional classes. */
    className: _react.PropTypes.string,

    /** Label group can share colors together. */
    color: _react.PropTypes.oneOf(LabelGroup._meta.props.color),

    /** Label group can share sizes together. */
    size: _react.PropTypes.oneOf(LabelGroup._meta.props.size),

    /** Label group can share tag formatting. */
    tag: _react.PropTypes.bool
  };

  exports.default = LabelGroup;

/***/ },
/* 955 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _classnames = __webpack_require__(794);

  var _classnames2 = _interopRequireDefault(_classnames);

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _lib = __webpack_require__(684);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  /**
   * Used in some Button types, such as `animated`
   */
  function ButtonContent(props) {
    var children = props.children,
        className = props.className,
        hidden = props.hidden,
        visible = props.visible;

    var classes = (0, _classnames2.default)((0, _lib.useKeyOnly)(visible, 'visible'), (0, _lib.useKeyOnly)(hidden, 'hidden'), 'content', className);
    var rest = (0, _lib.getUnhandledProps)(ButtonContent, props);
    var ElementType = (0, _lib.getElementType)(ButtonContent, props);

    return _react2.default.createElement(
      ElementType,
      _extends({}, rest, { className: classes }),
      children
    );
  }

  ButtonContent._meta = {
    name: 'ButtonContent',
    parent: 'Button',
    type: _lib.META.TYPES.ELEMENT
  };

  ButtonContent.propTypes = {
    /** An element type to render as (string or function). */
    as: _lib.customPropTypes.as,

    /** Additional classes. */
    className: _react.PropTypes.string,

    /** Primary content. */
    children: _react.PropTypes.node,

    /** Initially hidden, visible on hover */
    hidden: _react.PropTypes.bool,

    /** Initially visible, hidden on hover */
    visible: _react.PropTypes.bool
  };

  exports.default = ButtonContent;

/***/ },
/* 956 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _classnames = __webpack_require__(794);

  var _classnames2 = _interopRequireDefault(_classnames);

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _lib = __webpack_require__(684);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  /**
   * Button.Group
   */
  function ButtonGroup(props) {
    var attached = props.attached,
        basic = props.basic,
        children = props.children,
        className = props.className,
        color = props.color,
        compact = props.compact,
        fluid = props.fluid,
        icon = props.icon,
        inverted = props.inverted,
        labeled = props.labeled,
        negative = props.negative,
        positive = props.positive,
        primary = props.primary,
        secondary = props.secondary,
        size = props.size,
        toggle = props.toggle,
        vertical = props.vertical,
        widths = props.widths;


    var classes = (0, _classnames2.default)('ui', size, color, (0, _lib.useValueAndKey)(attached, 'attached'), (0, _lib.useKeyOnly)(basic, 'basic'), (0, _lib.useKeyOnly)(compact, 'compact'), (0, _lib.useKeyOnly)(fluid, 'fluid'), (0, _lib.useKeyOnly)(icon, 'icon'), (0, _lib.useKeyOnly)(inverted, 'inverted'), (0, _lib.useKeyOnly)(labeled, 'labeled'), (0, _lib.useKeyOnly)(negative, 'negative'), (0, _lib.useKeyOnly)(positive, 'positive'), (0, _lib.useKeyOnly)(primary, 'primary'), (0, _lib.useKeyOnly)(secondary, 'secondary'), (0, _lib.useKeyOnly)(toggle, 'toggle'), (0, _lib.useKeyOnly)(vertical, 'vertical'), (0, _lib.useWidthProp)(widths), 'buttons', className);

    var rest = (0, _lib.getUnhandledProps)(ButtonGroup, props);
    var ElementType = (0, _lib.getElementType)(ButtonGroup, props);

    return _react2.default.createElement(
      ElementType,
      _extends({}, rest, { className: classes }),
      children
    );
  }

  ButtonGroup._meta = {
    name: 'ButtonGroup',
    parent: 'Button',
    type: _lib.META.TYPES.ELEMENT,
    props: {
      attached: ['left', 'right', 'top', 'bottom'],
      color: _lib.SUI.COLORS,
      size: _lib.SUI.SIZES,
      widths: _lib.SUI.WIDTHS
    }
  };

  ButtonGroup.propTypes = {
    /** An element type to render as (string or function). */
    as: _lib.customPropTypes.as,

    /** A button can be attached to the top or bottom of other content */
    attached: _react.PropTypes.oneOf(ButtonGroup._meta.props.attached),

    /** Groups can be less pronounced */
    basic: _react.PropTypes.bool,

    /** Additional classes. */
    className: _react.PropTypes.string,

    /** Primary content. */
    children: _react.PropTypes.node,

    /** Groups can have a shared color */
    color: _react.PropTypes.oneOf(ButtonGroup._meta.props.color),

    /** Groups can reduce their padding to fit into tighter spaces */
    compact: _react.PropTypes.bool,

    /** Groups can take the width of their container */
    fluid: _react.PropTypes.bool,

    /** Groups can be formatted as icons */
    icon: _react.PropTypes.bool,

    /** Groups can be formatted to appear on dark backgrounds */
    inverted: _react.PropTypes.bool,

    /** Groups can be formatted as labeled icon buttons */
    labeled: _react.PropTypes.bool,

    /** Groups can hint towards a negative consequence */
    negative: _react.PropTypes.bool,

    /** Groups can hint towards a positive consequence */
    positive: _react.PropTypes.bool,

    /** Groups can be formatted to show different levels of emphasis */
    primary: _react.PropTypes.bool,

    /** Groups can be formatted to show different levels of emphasis */
    secondary: _react.PropTypes.bool,

    /** Groups can have different sizes */
    size: _react.PropTypes.oneOf(ButtonGroup._meta.props.size),

    /** Groups can be formatted to toggle on and off */
    toggle: _react.PropTypes.bool,

    /** Groups can be formatted to appear vertically */
    vertical: _react.PropTypes.bool,

    /** Groups can have their widths divided evenly */
    widths: _react.PropTypes.oneOf(ButtonGroup._meta.props.widths)
  };

  exports.default = ButtonGroup;

/***/ },
/* 957 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _classnames = __webpack_require__(794);

  var _classnames2 = _interopRequireDefault(_classnames);

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _lib = __webpack_require__(684);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  /**
   * Used in some Button types, such as `animated`
   */
  function ButtonOr(props) {
    var className = props.className;

    var classes = (0, _classnames2.default)('or', className);
    var rest = (0, _lib.getUnhandledProps)(ButtonOr, props);
    var ElementType = (0, _lib.getElementType)(ButtonOr, props);

    return _react2.default.createElement(ElementType, _extends({}, rest, { className: classes }));
  }

  ButtonOr._meta = {
    name: 'ButtonOr',
    parent: 'Button',
    type: _lib.META.TYPES.ELEMENT
  };

  ButtonOr.propTypes = {
    /** An element type to render as (string or function). */
    as: _lib.customPropTypes.as,

    /** Additional classes. */
    className: _react.PropTypes.string
  };

  exports.default = ButtonOr;

/***/ },
/* 958 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _Modal = __webpack_require__(959);

  var _Modal2 = _interopRequireDefault(_Modal);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  exports.default = _Modal2.default;

/***/ },
/* 959 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _pick2 = __webpack_require__(891);

  var _pick3 = _interopRequireDefault(_pick2);

  var _omit2 = __webpack_require__(960);

  var _omit3 = _interopRequireDefault(_omit2);

  var _keys2 = __webpack_require__(726);

  var _keys3 = _interopRequireDefault(_keys2);

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _classnames = __webpack_require__(794);

  var _classnames2 = _interopRequireDefault(_classnames);

  var _ModalHeader = __webpack_require__(962);

  var _ModalHeader2 = _interopRequireDefault(_ModalHeader);

  var _ModalContent = __webpack_require__(963);

  var _ModalContent2 = _interopRequireDefault(_ModalContent);

  var _ModalActions = __webpack_require__(964);

  var _ModalActions2 = _interopRequireDefault(_ModalActions);

  var _ModalDescription = __webpack_require__(965);

  var _ModalDescription2 = _interopRequireDefault(_ModalDescription);

  var _Icon = __webpack_require__(966);

  var _Icon2 = _interopRequireDefault(_Icon);

  var _Portal = __webpack_require__(945);

  var _Portal2 = _interopRequireDefault(_Portal);

  var _lib = __webpack_require__(684);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

  function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

  var debug = (0, _lib.makeDebugger)('modal');

  var _meta = {
    name: 'Modal',
    type: _lib.META.TYPES.MODULE,
    props: {
      size: ['fullscreen', 'large', 'small'],
      dimmer: ['inverted', 'blurring']
    }
  };

  /**
   * A modal displays content that temporarily blocks interactions with the main view of a site
   * @see Confirm
   * @see Portal
   */

  var Modal = function (_Component) {
    _inherits(Modal, _Component);

    function Modal() {
      var _ref;

      var _temp, _this, _ret;

      _classCallCheck(this, Modal);

      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Modal.__proto__ || Object.getPrototypeOf(Modal)).call.apply(_ref, [this].concat(args))), _this), _this.state = {}, _this.handleClose = function (e) {
        debug('close()');

        var onClose = _this.props.onClose;

        if (onClose) onClose(e, _this.props);

        _this.trySetState({ open: false });
      }, _this.handleOpen = function (e) {
        debug('open()');

        var onOpen = _this.props.onOpen;

        if (onOpen) onOpen(e, _this.props);

        _this.trySetState({ open: true });
      }, _this.handlePortalMount = function (e) {
        debug('handlePortalMount()');
        var _this$props = _this.props,
            dimmer = _this$props.dimmer,
            mountNode = _this$props.mountNode;


        if (dimmer) {
          debug('adding dimmer');
          mountNode.classList.add('dimmable', 'dimmed');

          if (dimmer === 'blurring') {
            debug('adding blurred dimmer');
            mountNode.classList.add('blurring');
          }
        }

        _this.setPosition();

        var onMount = _this.props.onMount;

        if (onMount) onMount(e, _this.props);
      }, _this.handlePortalUnmount = function (e) {
        debug('handlePortalUnmount()');

        // Always remove all dimmer classes.
        // If the dimmer value changes while the modal is open, then removing its
        // current value could leave cruft classes previously added.
        var mountNode = _this.props.mountNode;

        mountNode.classList.remove('blurring', 'dimmable', 'dimmed', 'scrollable');

        cancelAnimationFrame(_this.animationRequestId);

        var onUnmount = _this.props.onUnmount;

        if (onUnmount) onUnmount(e, _this.props);
      }, _this.setPosition = function () {
        if (_this._modalNode) {
          var mountNode = _this.props.mountNode;

          var _this$_modalNode$getB = _this._modalNode.getBoundingClientRect(),
              height = _this$_modalNode$getB.height;

          var marginTop = -Math.round(height / 2);
          var scrolling = height >= window.innerHeight;

          var newState = {};

          if (_this.state.marginTop !== marginTop) {
            newState.marginTop = marginTop;
          }

          if (_this.state.scrolling !== scrolling) {
            newState.scrolling = scrolling;

            if (scrolling) {
              mountNode.classList.add('scrolling');
            } else {
              mountNode.classList.remove('scrolling');
            }
          }

          if (Object.keys(newState).length > 0) _this.setState(newState);
        }

        _this.animationRequestId = requestAnimationFrame(_this.setPosition);
      }, _temp), _possibleConstructorReturn(_this, _ret);
    }

    _createClass(Modal, [{
      key: 'componentWillUnmount',
      value: function componentWillUnmount() {
        debug('componentWillUnmount()');
        this.handlePortalUnmount();
      }
    }, {
      key: 'render',
      value: function render() {
        var _this2 = this;

        var open = this.state.open;
        var _props = this.props,
            basic = _props.basic,
            children = _props.children,
            className = _props.className,
            closeIcon = _props.closeIcon,
            dimmer = _props.dimmer,
            mountNode = _props.mountNode,
            size = _props.size;

        // Short circuit when server side rendering

        if (!_lib.isBrowser) return null;

        var _state = this.state,
            marginTop = _state.marginTop,
            scrolling = _state.scrolling;

        var classes = (0, _classnames2.default)('ui', size, (0, _lib.useKeyOnly)(basic, 'basic'), (0, _lib.useKeyOnly)(scrolling, 'scrolling'), 'modal transition visible active', className);
        var unhandled = (0, _lib.getUnhandledProps)(Modal, this.props);
        var portalPropNames = (0, _keys3.default)(_Portal2.default.propTypes);

        var rest = (0, _omit3.default)(unhandled, portalPropNames);
        var portalProps = (0, _pick3.default)(unhandled, portalPropNames);
        var ElementType = (0, _lib.getElementType)(Modal, this.props);

        var closeIconName = closeIcon === true ? 'close' : closeIcon;

        var modalJSX = _react2.default.createElement(
          ElementType,
          _extends({}, rest, { className: classes, style: { marginTop: marginTop }, ref: function ref(c) {
              return _this2._modalNode = c;
            } }),
          _Icon2.default.create(closeIconName, { onClick: this.handleClose }),
          children
        );

        // wrap dimmer modals
        var dimmerClasses = !dimmer ? null : (0, _classnames2.default)('ui', dimmer === 'inverted' && 'inverted', 'page modals dimmer transition visible active');

        // Heads up!
        //
        // The SUI CSS selector to prevent the modal itself from blurring requires an immediate .dimmer child:
        // .blurring.dimmed.dimmable>:not(.dimmer) { ... }
        //
        // The .blurring.dimmed.dimmable is the body, so that all body content inside is blurred.
        // We need the immediate child to be the dimmer to :not() blur the modal itself!
        // Otherwise, the portal div is also blurred, blurring the modal.
        //
        // We cannot them wrap the modalJSX in an actual <Dimmer /> instead, we apply the dimmer classes to the <Portal />.

        return _react2.default.createElement(
          _Portal2.default,
          _extends({
            closeOnRootNodeClick: true,
            closeOnDocumentClick: false
          }, portalProps, {
            className: dimmerClasses,
            mountNode: mountNode,
            onClose: this.handleClose,
            onMount: this.handlePortalMount,
            onOpen: this.handleOpen,
            onUnmount: this.handlePortalUnmount,
            open: open
          }),
          modalJSX
        );
      }
    }]);

    return Modal;
  }(_lib.AutoControlledComponent);

  Modal.propTypes = {
    /** An element type to render as (string or function). */
    as: _lib.customPropTypes.as,

    /** Primary content. */
    children: _react.PropTypes.node,

    /** Additional classes. */
    className: _react.PropTypes.string,

    /** Icon */
    closeIcon: _react.PropTypes.oneOfType([_react.PropTypes.node, _react.PropTypes.object, _react.PropTypes.bool]),

    /** A modal can reduce its complexity */
    basic: _react.PropTypes.bool,

    /** Initial value of open. */
    defaultOpen: _react.PropTypes.bool,

    /** A modal can appear in a dimmer */
    dimmer: _react.PropTypes.oneOfType([_react.PropTypes.bool, _react.PropTypes.oneOf(_meta.props.dimmer)]),

    /** The node where the modal should mount.. */
    mountNode: _react.PropTypes.any,

    /**
     * Called when a close event happens
     *
     * @param {SyntheticEvent} event - React's original SyntheticEvent.
     * @param {object} data - All props.
     */
    onClose: _react.PropTypes.func,

    /**
     * Called when the portal is mounted on the DOM
     *
     * @param {null}
     * @param {object} data - All props.
     */
    onMount: _react.PropTypes.func,

    /**
     * Called when an open event happens
     *
     * @param {SyntheticEvent} event - React's original SyntheticEvent.
     * @param {object} data - All props.
     */
    onOpen: _react.PropTypes.func,

    /**
     * Called when the portal is unmounted from the DOM
     *
     * @param {null}
     * @param {object} data - All props.
     */
    onUnmount: _react.PropTypes.func,

    /** Controls whether or not the Modal is displayed. */
    open: _react.PropTypes.bool,

    /** A modal can vary in size */
    size: _react.PropTypes.oneOf(_meta.props.size)

  };
  Modal.defaultProps = {
    dimmer: true,
    // Do not access document when server side rendering
    mountNode: _lib.isBrowser ? document.body : null
  };
  Modal.autoControlledProps = ['open'];
  Modal._meta = _meta;
  Modal.Header = _ModalHeader2.default;
  Modal.Content = _ModalContent2.default;
  Modal.Description = _ModalDescription2.default;
  Modal.Actions = _ModalActions2.default;
  exports.default = Modal;

/***/ },
/* 960 */
/***/ function(module, exports, __webpack_require__) {

  var arrayMap = __webpack_require__(678),
      baseClone = __webpack_require__(856),
      baseUnset = __webpack_require__(961),
      castPath = __webpack_require__(630),
      copyObject = __webpack_require__(852),
      flatRest = __webpack_require__(886),
      getAllKeysIn = __webpack_require__(869);

  /** Used to compose bitmasks for cloning. */
  var CLONE_DEEP_FLAG = 1,
      CLONE_FLAT_FLAG = 2,
      CLONE_SYMBOLS_FLAG = 4;

  /**
   * The opposite of `_.pick`; this method creates an object composed of the
   * own and inherited enumerable property paths of `object` that are not omitted.
   *
   * **Note:** This method is considerably slower than `_.pick`.
   *
   * @static
   * @since 0.1.0
   * @memberOf _
   * @category Object
   * @param {Object} object The source object.
   * @param {...(string|string[])} [paths] The property paths to omit.
   * @returns {Object} Returns the new object.
   * @example
   *
   * var object = { 'a': 1, 'b': '2', 'c': 3 };
   *
   * _.omit(object, ['a', 'c']);
   * // => { 'b': '2' }
   */
  var omit = flatRest(function(object, paths) {
    var result = {};
    if (object == null) {
      return result;
    }
    var isDeep = false;
    paths = arrayMap(paths, function(path) {
      path = castPath(path, object);
      isDeep || (isDeep = path.length > 1);
      return path;
    });
    copyObject(object, getAllKeysIn(object), result);
    if (isDeep) {
      result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG);
    }
    var length = paths.length;
    while (length--) {
      baseUnset(result, paths[length]);
    }
    return result;
  });

  module.exports = omit;


/***/ },
/* 961 */
/***/ function(module, exports, __webpack_require__) {

  var castPath = __webpack_require__(630),
      last = __webpack_require__(949),
      parent = __webpack_require__(950),
      toKey = __webpack_require__(683);

  /**
   * The base implementation of `_.unset`.
   *
   * @private
   * @param {Object} object The object to modify.
   * @param {Array|string} path The property path to unset.
   * @returns {boolean} Returns `true` if the property is deleted, else `false`.
   */
  function baseUnset(object, path) {
    path = castPath(path, object);
    object = parent(object, path);
    return object == null || delete object[toKey(last(path))];
  }

  module.exports = baseUnset;


/***/ },
/* 962 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _classnames = __webpack_require__(794);

  var _classnames2 = _interopRequireDefault(_classnames);

  var _lib = __webpack_require__(684);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function ModalHeader(props) {
    var children = props.children,
        className = props.className;

    var classes = (0, _classnames2.default)(className, 'header');
    var rest = (0, _lib.getUnhandledProps)(ModalHeader, props);
    var ElementType = (0, _lib.getElementType)(ModalHeader, props);

    return _react2.default.createElement(
      ElementType,
      _extends({}, rest, { className: classes }),
      children
    );
  }

  ModalHeader._meta = {
    name: 'ModalHeader',
    type: _lib.META.TYPES.MODULE,
    parent: 'Modal'
  };

  ModalHeader.propTypes = {
    /** An element type to render as (string or function). */
    as: _lib.customPropTypes.as,

    /** Primary content. */
    children: _react.PropTypes.node,

    /** Additional classes. */
    className: _react.PropTypes.string
  };

  exports.default = ModalHeader;

/***/ },
/* 963 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _classnames = __webpack_require__(794);

  var _classnames2 = _interopRequireDefault(_classnames);

  var _lib = __webpack_require__(684);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function ModalContent(props) {
    var children = props.children,
        image = props.image,
        className = props.className;

    var classes = (0, _classnames2.default)(className, (0, _lib.useKeyOnly)(image, 'image'), 'content');
    var rest = (0, _lib.getUnhandledProps)(ModalContent, props);
    var ElementType = (0, _lib.getElementType)(ModalContent, props);

    return _react2.default.createElement(
      ElementType,
      _extends({}, rest, { className: classes }),
      children
    );
  }

  ModalContent._meta = {
    name: 'ModalContent',
    type: _lib.META.TYPES.MODULE,
    parent: 'Modal'
  };

  ModalContent.propTypes = {
    /** An element type to render as (string or function). */
    as: _lib.customPropTypes.as,

    /** Primary content. */
    children: _react.PropTypes.node,

    /** Additional classes. */
    className: _react.PropTypes.string,

    /** A modal can contain image content */
    image: _react.PropTypes.bool
  };

  exports.default = ModalContent;

/***/ },
/* 964 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _classnames = __webpack_require__(794);

  var _classnames2 = _interopRequireDefault(_classnames);

  var _lib = __webpack_require__(684);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function ModalActions(props) {
    var children = props.children,
        className = props.className;

    var classes = (0, _classnames2.default)(className, 'actions');
    var rest = (0, _lib.getUnhandledProps)(ModalActions, props);
    var ElementType = (0, _lib.getElementType)(ModalActions, props);

    return _react2.default.createElement(
      ElementType,
      _extends({}, rest, { className: classes }),
      children
    );
  }

  ModalActions._meta = {
    name: 'ModalActions',
    type: _lib.META.TYPES.MODULE,
    parent: 'Modal'
  };

  ModalActions.propTypes = {
    /** An element type to render as (string or function). */
    as: _lib.customPropTypes.as,

    /** Primary content. */
    children: _react.PropTypes.node,

    /** Additional classes. */
    className: _react.PropTypes.string
  };

  exports.default = ModalActions;

/***/ },
/* 965 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _classnames = __webpack_require__(794);

  var _classnames2 = _interopRequireDefault(_classnames);

  var _lib = __webpack_require__(684);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function ModalDescription(props) {
    var children = props.children,
        className = props.className;

    var classes = (0, _classnames2.default)(className, 'description');
    var rest = (0, _lib.getUnhandledProps)(ModalDescription, props);
    var ElementType = (0, _lib.getElementType)(ModalDescription, props);

    return _react2.default.createElement(
      ElementType,
      _extends({}, rest, { className: classes }),
      children
    );
  }

  ModalDescription._meta = {
    name: 'ModalDescription',
    type: _lib.META.TYPES.MODULE,
    parent: 'Modal'
  };

  ModalDescription.propTypes = {
    /** An element type to render as (string or function). */
    as: _lib.customPropTypes.as,

    /** Primary content. */
    children: _react.PropTypes.node,

    /** Additional classes. */
    className: _react.PropTypes.string
  };

  exports.default = ModalDescription;

/***/ },
/* 966 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _Icon = __webpack_require__(938);

  var _Icon2 = _interopRequireDefault(_Icon);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  exports.default = _Icon2.default;

/***/ },
/* 967 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _Radio = __webpack_require__(968);

  var _Radio2 = _interopRequireDefault(_Radio);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  exports.default = _Radio2.default;

/***/ },
/* 968 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _lib = __webpack_require__(684);

  var _Checkbox = __webpack_require__(969);

  var _Checkbox2 = _interopRequireDefault(_Checkbox);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  /**
   * A Radio is sugar for <Checkbox radio />.
   * Useful for exclusive groups of sliders or toggles.
   * @see Checkbox
   * @see Form
   */
  function Radio(props) {
    var slider = props.slider,
        toggle = props.toggle,
        type = props.type;

    var rest = (0, _lib.getUnhandledProps)(Radio, props);
    // const ElementType = getElementType(Radio, props)
    // radio, slider, toggle are exclusive
    // use an undefined radio if slider or toggle are present
    var radio = !(slider || toggle) || undefined;

    return _react2.default.createElement(_Checkbox2.default, _extends({}, rest, { type: type, radio: radio, slider: slider, toggle: toggle }));
  }

  Radio._meta = {
    name: 'Radio',
    type: _lib.META.TYPES.ADDON,
    props: {
      type: _Checkbox2.default._meta.props.type
    }
  };

  Radio.propTypes = {
    /** Format to emphasize the current selection state */
    slider: _Checkbox2.default.propTypes.slider,

    /** Format to show an on or off choice */
    toggle: _Checkbox2.default.propTypes.toggle,

    /** HTML input type, either checkbox or radio. */
    type: _react.PropTypes.oneOf(Radio._meta.props.type)
  };

  Radio.defaultProps = {
    type: 'radio'
  };

  exports.default = Radio;

/***/ },
/* 969 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _Checkbox = __webpack_require__(970);

  var _Checkbox2 = _interopRequireDefault(_Checkbox);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  exports.default = _Checkbox2.default;

/***/ },
/* 970 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _isNil2 = __webpack_require__(926);

  var _isNil3 = _interopRequireDefault(_isNil2);

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

  var _classnames = __webpack_require__(794);

  var _classnames2 = _interopRequireDefault(_classnames);

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _lib = __webpack_require__(684);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

  function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

  var debug = (0, _lib.makeDebugger)('checkbox');

  var _meta = {
    name: 'Checkbox',
    type: _lib.META.TYPES.MODULE,
    props: {
      type: ['checkbox', 'radio']
    }
  };

  /**
   * A checkbox allows a user to select a value from a small set of options, often binary
   * @see Form
   * @see Radio
   */

  var Checkbox = function (_Component) {
    _inherits(Checkbox, _Component);

    function Checkbox() {
      var _ref;

      var _temp, _this, _ret;

      _classCallCheck(this, Checkbox);

      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Checkbox.__proto__ || Object.getPrototypeOf(Checkbox)).call.apply(_ref, [this].concat(args))), _this), _this.state = {}, _this.canToggle = function () {
        var _this$props = _this.props,
            disabled = _this$props.disabled,
            radio = _this$props.radio,
            readOnly = _this$props.readOnly;
        var checked = _this.state.checked;


        return !disabled && !readOnly && !(radio && checked);
      }, _this.handleRef = function (c) {
        _this.checkboxRef = c;
      }, _this.handleClick = function (e) {
        debug('handleClick()');
        var _this$props2 = _this.props,
            onChange = _this$props2.onChange,
            onClick = _this$props2.onClick;
        var _this$state = _this.state,
            checked = _this$state.checked,
            indeterminate = _this$state.indeterminate;


        if (_this.canToggle()) {
          if (onClick) onClick(e, _extends({}, _this.props, { checked: !!checked, indeterminate: !!indeterminate }));
          if (onChange) onChange(e, _extends({}, _this.props, { checked: !checked, indeterminate: false }));

          _this.trySetState({ checked: !checked, indeterminate: false });
        }
      }, _this.setIndeterminate = function () {
        var indeterminate = _this.state.indeterminate;

        if (_this.checkboxRef) _this.checkboxRef.indeterminate = !!indeterminate;
      }, _temp), _possibleConstructorReturn(_this, _ret);
    }

    _createClass(Checkbox, [{
      key: 'componentDidMount',
      value: function componentDidMount() {
        this.setIndeterminate();
      }
    }, {
      key: 'componentDidUpdate',
      value: function componentDidUpdate() {
        this.setIndeterminate();
      }

      // Note: You can't directly set the indeterminate prop on the input, so we
      // need to maintain a ref to the input and set it manually whenever the
      // component updates.

    }, {
      key: 'render',
      value: function render() {
        var _props = this.props,
            className = _props.className,
            disabled = _props.disabled,
            label = _props.label,
            name = _props.name,
            radio = _props.radio,
            readOnly = _props.readOnly,
            slider = _props.slider,
            tabIndex = _props.tabIndex,
            toggle = _props.toggle,
            type = _props.type,
            value = _props.value;
        var _state = this.state,
            checked = _state.checked,
            indeterminate = _state.indeterminate;


        var classes = (0, _classnames2.default)('ui', (0, _lib.useKeyOnly)(checked, 'checked'), (0, _lib.useKeyOnly)(disabled, 'disabled'), (0, _lib.useKeyOnly)(indeterminate, 'indeterminate'),
        // auto apply fitted class to compact white space when there is no label
        // http://semantic-ui.com/modules/checkbox.html#fitted
        (0, _lib.useKeyOnly)(!label, 'fitted'), (0, _lib.useKeyOnly)(radio, 'radio'), (0, _lib.useKeyOnly)(readOnly, 'read-only'), (0, _lib.useKeyOnly)(slider, 'slider'), (0, _lib.useKeyOnly)(toggle, 'toggle'), 'checkbox', className);
        var rest = (0, _lib.getUnhandledProps)(Checkbox, this.props);
        var ElementType = (0, _lib.getElementType)(Checkbox, this.props);

        var computedTabIndex = void 0;
        if (!(0, _isNil3.default)(tabIndex)) computedTabIndex = tabIndex;else computedTabIndex = disabled ? -1 : 0;

        return _react2.default.createElement(
          ElementType,
          _extends({}, rest, { className: classes, onClick: this.handleClick, onChange: this.handleClick }),
          _react2.default.createElement('input', {
            checked: checked,
            className: 'hidden',
            name: name,
            readOnly: true,
            ref: this.handleRef,
            tabIndex: computedTabIndex,
            type: type,
            value: value
          }),
          (0, _lib.createHTMLLabel)(label) || _react2.default.createElement('label', null)
        );
      }
    }]);

    return Checkbox;
  }(_lib.AutoControlledComponent);

  Checkbox.propTypes = {
    /** An element type to render as (string or function). */
    as: _lib.customPropTypes.as,

    /** Whether or not checkbox is checked. */
    checked: _react.PropTypes.bool,

    /** Additional classes. */
    className: _react.PropTypes.string,

    /** The initial value of checked. */
    defaultChecked: _react.PropTypes.bool,

    /** Whether or not checkbox is indeterminate. */
    defaultIndeterminate: _react.PropTypes.bool,

    /** A checkbox can appear disabled and be unable to change states */
    disabled: _react.PropTypes.bool,

    /** Removes padding for a label. Auto applied when there is no label. */
    fitted: _react.PropTypes.bool,

    /** Whether or not checkbox is indeterminate. */
    indeterminate: _react.PropTypes.bool,

    /** The text of the associated label element. */
    label: _lib.customPropTypes.itemShorthand,

    /** The HTML input name. */
    name: _react.PropTypes.string,

    /**
     * Called when the user attempts to change the checked state.
     *
     * @param {SyntheticEvent} event - React's original SyntheticEvent.
     * @param {object} data - All props and proposed checked/indeterminate state.
     */
    onChange: _react.PropTypes.func,

    /**
     * Called when the checkbox or label is clicked.
     *
     * @param {SyntheticEvent} event - React's original SyntheticEvent.
     * @param {object} data - All props and current checked/indeterminate state.
     */
    onClick: _react.PropTypes.func,

    /** Format as a radio element. This means it is an exclusive option.*/
    radio: _lib.customPropTypes.every([_react.PropTypes.bool, _lib.customPropTypes.disallow(['slider', 'toggle'])]),

    /** A checkbox can be read-only and unable to change states */
    readOnly: _react.PropTypes.bool,

    /** Format to emphasize the current selection state */
    slider: _lib.customPropTypes.every([_react.PropTypes.bool, _lib.customPropTypes.disallow(['radio', 'toggle'])]),

    /** Format to show an on or off choice */
    toggle: _lib.customPropTypes.every([_react.PropTypes.bool, _lib.customPropTypes.disallow(['radio', 'slider'])]),

    /** HTML input type, either checkbox or radio. */
    type: _react.PropTypes.oneOf(_meta.props.type),

    /** The HTML input value. */
    value: _react.PropTypes.string,

    /** A checkbox can receive focus. */
    tabIndex: _react.PropTypes.oneOfType([_react.PropTypes.number, _react.PropTypes.string])
  };
  Checkbox.defaultProps = {
    type: 'checkbox'
  };
  Checkbox.autoControlledProps = ['checked', 'indeterminate'];
  Checkbox._meta = _meta;
  exports.default = Checkbox;

/***/ },
/* 971 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _Select = __webpack_require__(972);

  var _Select2 = _interopRequireDefault(_Select);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  exports.default = _Select2.default;

/***/ },
/* 972 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _lib = __webpack_require__(684);

  var _Dropdown = __webpack_require__(973);

  var _Dropdown2 = _interopRequireDefault(_Dropdown);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  /**
   * A Select is sugar for <Dropdown selection />.
   * @see Dropdown
   * @see Form
   */
  function Select(props) {
    return _react2.default.createElement(_Dropdown2.default, _extends({}, props, { selection: true }));
  }

  Select._meta = {
    name: 'Select',
    type: _lib.META.TYPES.ADDON
  };

  Select.Divider = _Dropdown2.default.Divider;
  Select.Header = _Dropdown2.default.Header;
  Select.Item = _Dropdown2.default.Item;
  Select.Menu = _Dropdown2.default.Menu;

  exports.default = Select;

/***/ },
/* 973 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _Dropdown = __webpack_require__(974);

  var _Dropdown2 = _interopRequireDefault(_Dropdown);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  exports.default = _Dropdown2.default;

/***/ },
/* 974 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _compact2 = __webpack_require__(899);

  var _compact3 = _interopRequireDefault(_compact2);

  var _map2 = __webpack_require__(918);

  var _map3 = _interopRequireDefault(_map2);

  var _isNil2 = __webpack_require__(927);

  var _isNil3 = _interopRequireDefault(_isNil2);

  var _every2 = __webpack_require__(975);

  var _every3 = _interopRequireDefault(_every2);

  var _without2 = __webpack_require__(939);

  var _without3 = _interopRequireDefault(_without2);

  var _findIndex2 = __webpack_require__(807);

  var _findIndex3 = _interopRequireDefault(_findIndex2);

  var _find2 = __webpack_require__(805);

  var _find3 = _interopRequireDefault(_find2);

  var _reduce2 = __webpack_require__(978);

  var _reduce3 = _interopRequireDefault(_reduce2);

  var _some2 = __webpack_require__(808);

  var _some3 = _interopRequireDefault(_some2);

  var _escapeRegExp2 = __webpack_require__(980);

  var _escapeRegExp3 = _interopRequireDefault(_escapeRegExp2);

  var _filter2 = __webpack_require__(719);

  var _filter3 = _interopRequireDefault(_filter2);

  var _isFunction2 = __webpack_require__(651);

  var _isFunction3 = _interopRequireDefault(_isFunction2);

  var _dropRight2 = __webpack_require__(981);

  var _dropRight3 = _interopRequireDefault(_dropRight2);

  var _isEmpty2 = __webpack_require__(774);

  var _isEmpty3 = _interopRequireDefault(_isEmpty2);

  var _union2 = __webpack_require__(982);

  var _union3 = _interopRequireDefault(_union2);

  var _get3 = __webpack_require__(767);

  var _get4 = _interopRequireDefault(_get3);

  var _includes2 = __webpack_require__(923);

  var _includes3 = _interopRequireDefault(_includes2);

  var _has2 = __webpack_require__(627);

  var _has3 = _interopRequireDefault(_has2);

  var _isEqual2 = __webpack_require__(801);

  var _isEqual3 = _interopRequireDefault(_isEqual2);

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

  var _get2 = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

  var _classnames = __webpack_require__(794);

  var _classnames2 = _interopRequireDefault(_classnames);

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _lib = __webpack_require__(684);

  var _Icon = __webpack_require__(966);

  var _Icon2 = _interopRequireDefault(_Icon);

  var _Label = __webpack_require__(985);

  var _Label2 = _interopRequireDefault(_Label);

  var _DropdownDivider = __webpack_require__(986);

  var _DropdownDivider2 = _interopRequireDefault(_DropdownDivider);

  var _DropdownItem = __webpack_require__(987);

  var _DropdownItem2 = _interopRequireDefault(_DropdownItem);

  var _DropdownHeader = __webpack_require__(991);

  var _DropdownHeader2 = _interopRequireDefault(_DropdownHeader);

  var _DropdownMenu = __webpack_require__(992);

  var _DropdownMenu2 = _interopRequireDefault(_DropdownMenu);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

  function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

  var debug = (0, _lib.makeDebugger)('dropdown');

  var _meta = {
    name: 'Dropdown',
    type: _lib.META.TYPES.MODULE,
    props: {
      pointing: ['left', 'right', 'top', 'top left', 'top right', 'bottom', 'bottom left', 'bottom right'],
      additionPosition: ['top', 'bottom']
    }
  };

  /**
   * A dropdown allows a user to select a value from a series of options.
   * @see Form
   * @see Select
   */

  var Dropdown = function (_Component) {
    _inherits(Dropdown, _Component);

    function Dropdown() {
      var _ref;

      var _temp, _this, _ret;

      _classCallCheck(this, Dropdown);

      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Dropdown.__proto__ || Object.getPrototypeOf(Dropdown)).call.apply(_ref, [this].concat(args))), _this), _this.handleChange = function (e, value) {
        debug('handleChange()');
        debug(value);
        var onChange = _this.props.onChange;

        if (onChange) onChange(e, _extends({}, _this.props, { value: value }));
      }, _this.closeOnEscape = function (e) {
        if (_lib.keyboardKey.getCode(e) !== _lib.keyboardKey.Escape) return;
        e.preventDefault();
        _this.close();
      }, _this.moveSelectionOnKeyDown = function (e) {
        debug('moveSelectionOnKeyDown()');
        debug(_lib.keyboardKey.getName(e));
        switch (_lib.keyboardKey.getCode(e)) {
          case _lib.keyboardKey.ArrowDown:
            e.preventDefault();
            _this.moveSelectionBy(1);
            break;
          case _lib.keyboardKey.ArrowUp:
            e.preventDefault();
            _this.moveSelectionBy(-1);
            break;
          default:
            break;
        }
      }, _this.openOnSpace = function (e) {
        debug('openOnSpace()');

        if (_lib.keyboardKey.getCode(e) !== _lib.keyboardKey.Spacebar) return;
        if (_this.state.open) return;

        e.preventDefault();

        _this.open(e);
      }, _this.openOnArrow = function (e) {
        debug('openOnArrow()');

        var code = _lib.keyboardKey.getCode(e);
        if (!(0, _includes3.default)([_lib.keyboardKey.ArrowDown, _lib.keyboardKey.ArrowUp], code)) return;
        if (_this.state.open) return;

        e.preventDefault();

        _this.open(e);
      }, _this.selectHighlightedItem = function (e) {
        var open = _this.state.open;
        var _this$props = _this.props,
            multiple = _this$props.multiple,
            onAddItem = _this$props.onAddItem;

        var item = _this.getSelectedItem();
        var value = (0, _get4.default)(item, 'value');

        // prevent selecting null if there was no selected item value
        // prevent selecting duplicate items when the dropdown is closed
        if (!value || !open) return;

        // notify the onAddItem prop if this is a new value
        if (onAddItem && item['data-additional']) {
          onAddItem(e, _extends({}, _this.props, { value: value }));
        }
        // notify the onChange prop that the user is trying to change value
        if (multiple) {
          // state value may be undefined
          var newValue = (0, _union3.default)(_this.state.value, [value]);
          _this.setValue(newValue);
          _this.handleChange(e, newValue);
        } else {
          _this.setValue(value);
          _this.handleChange(e, value);
          _this.close();
        }
      }, _this.selectItemOnEnter = function (e) {
        debug('selectItemOnEnter()');
        debug(_lib.keyboardKey.getName(e));
        if (_lib.keyboardKey.getCode(e) !== _lib.keyboardKey.Enter) return;
        e.preventDefault();

        _this.selectHighlightedItem(e);
      }, _this.removeItemOnBackspace = function (e) {
        debug('removeItemOnBackspace()');
        debug(_lib.keyboardKey.getName(e));
        if (_lib.keyboardKey.getCode(e) !== _lib.keyboardKey.Backspace) return;

        var _this$props2 = _this.props,
            multiple = _this$props2.multiple,
            search = _this$props2.search;
        var _this$state = _this.state,
            searchQuery = _this$state.searchQuery,
            value = _this$state.value;


        if (searchQuery || !search || !multiple || (0, _isEmpty3.default)(value)) return;

        e.preventDefault();

        // remove most recent value
        var newValue = (0, _dropRight3.default)(value);

        _this.setValue(newValue);
        _this.handleChange(e, newValue);
      }, _this.closeOnDocumentClick = function (e) {
        debug('closeOnDocumentClick()');
        debug(e);

        // If event happened in the dropdown, ignore it
        if (_this._dropdown && (0, _isFunction3.default)(_this._dropdown.contains) && _this._dropdown.contains(e.target)) return;

        _this.close();
      }, _this.handleMouseDown = function (e) {
        debug('handleMouseDown()');
        var onMouseDown = _this.props.onMouseDown;

        if (onMouseDown) onMouseDown(e, _this.props);
        _this.isMouseDown = true;
        // Do not access document when server side rendering
        if (!_lib.isBrowser) return;
        document.addEventListener('mouseup', _this.handleDocumentMouseUp);
      }, _this.handleDocumentMouseUp = function () {
        debug('handleDocumentMouseUp()');
        _this.isMouseDown = false;
        // Do not access document when server side rendering
        if (!_lib.isBrowser) return;
        document.removeEventListener('mouseup', _this.handleDocumentMouseUp);
      }, _this.handleClick = function (e) {
        debug('handleClick()', e);
        var onClick = _this.props.onClick;

        if (onClick) onClick(e, _this.props);
        // prevent closeOnDocumentClick()
        e.stopPropagation();
        _this.toggle(e);
      }, _this.handleItemClick = function (e, item) {
        debug('handleItemClick()');
        debug(item);
        var _this$props3 = _this.props,
            multiple = _this$props3.multiple,
            onAddItem = _this$props3.onAddItem;
        var value = item.value;

        // prevent toggle() in handleClick()

        e.stopPropagation();
        // prevent closeOnDocumentClick() if multiple or item is disabled
        if (multiple || item.disabled) {
          e.nativeEvent.stopImmediatePropagation();
        }

        if (item.disabled) return;

        // notify the onAddItem prop if this is a new value
        if (onAddItem && item['data-additional']) {
          onAddItem(e, _extends({}, _this.props, { value: value }));
        }

        // notify the onChange prop that the user is trying to change value
        if (multiple) {
          var newValue = (0, _union3.default)(_this.state.value, [value]);
          _this.setValue(newValue);
          _this.handleChange(e, newValue);
        } else {
          _this.setValue(value);
          _this.handleChange(e, value);
          _this.close();
        }
      }, _this.handleFocus = function (e) {
        debug('handleFocus()');
        var onFocus = _this.props.onFocus;

        if (onFocus) onFocus(e, _this.props);
        _this.setState({ focus: true });
      }, _this.handleBlur = function (e) {
        debug('handleBlur()');
        var _this$props4 = _this.props,
            multiple = _this$props4.multiple,
            onBlur = _this$props4.onBlur,
            selectOnBlur = _this$props4.selectOnBlur;
        // do not "blur" when the mouse is down inside of the Dropdown

        if (_this.isMouseDown) return;
        if (onBlur) onBlur(e, _this.props);
        if (selectOnBlur && !multiple) _this.selectHighlightedItem(e);
        _this.setState({ focus: false, searchQuery: '' });
      }, _this.handleSearchChange = function (e) {
        debug('handleSearchChange()');
        debug(e.target.value);
        // prevent propagating to this.props.onChange()
        e.stopPropagation();
        var _this$props5 = _this.props,
            search = _this$props5.search,
            onSearchChange = _this$props5.onSearchChange;
        var open = _this.state.open;

        var newQuery = e.target.value;

        if (onSearchChange) onSearchChange(e, newQuery);

        // open search dropdown on search query
        if (search && newQuery && !open) _this.open();

        _this.setState({
          selectedIndex: _this.getEnabledIndices()[0],
          searchQuery: newQuery
        });
      }, _this.getMenuOptions = function () {
        var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _this.state.value;
        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _this.props.options;
        var _this$props6 = _this.props,
            multiple = _this$props6.multiple,
            search = _this$props6.search,
            allowAdditions = _this$props6.allowAdditions,
            additionPosition = _this$props6.additionPosition,
            additionLabel = _this$props6.additionLabel;
        var searchQuery = _this.state.searchQuery;


        var filteredOptions = options;

        // filter out active options
        if (multiple) {
          filteredOptions = (0, _filter3.default)(filteredOptions, function (opt) {
            return !(0, _includes3.default)(value, opt.value);
          });
        }

        // filter by search query
        if (search && searchQuery) {
          if ((0, _isFunction3.default)(search)) {
            filteredOptions = search(filteredOptions, searchQuery);
          } else {
            (function () {
              var re = new RegExp((0, _escapeRegExp3.default)(searchQuery), 'i');
              filteredOptions = (0, _filter3.default)(filteredOptions, function (opt) {
                return re.test(opt.text);
              });
            })();
          }
        }

        // insert the "add" item
        if (allowAdditions && search && searchQuery && !(0, _some3.default)(filteredOptions, { text: searchQuery })) {
          var additionLabelElement = _react2.default.isValidElement(additionLabel) ? _react2.default.cloneElement(additionLabel, { key: 'label' }) : additionLabel || '';

          var addItem = {
            // by using an array, we can pass multiple elements, but when doing so
            // we must specify a `key` for React to know which one is which
            text: [additionLabelElement, _react2.default.createElement(
              'b',
              { key: 'addition' },
              searchQuery
            )],
            value: searchQuery,
            className: 'addition',
            'data-additional': true
          };
          if (additionPosition === 'top') filteredOptions.unshift(addItem);else filteredOptions.push(addItem);
        }

        return filteredOptions;
      }, _this.getSelectedItem = function () {
        var selectedIndex = _this.state.selectedIndex;

        var options = _this.getMenuOptions();

        return (0, _get4.default)(options, '[' + selectedIndex + ']');
      }, _this.getEnabledIndices = function (givenOptions) {
        var options = givenOptions || _this.getMenuOptions();

        return (0, _reduce3.default)(options, function (memo, item, index) {
          if (!item.disabled) memo.push(index);
          return memo;
        }, []);
      }, _this.getItemByValue = function (value) {
        var options = _this.props.options;


        return (0, _find3.default)(options, { value: value });
      }, _this.getMenuItemIndexByValue = function (value, givenOptions) {
        var options = givenOptions || _this.getMenuOptions();

        return (0, _findIndex3.default)(options, ['value', value]);
      }, _this.getDropdownAriaOptions = function (ElementType) {
        var _this$props7 = _this.props,
            loading = _this$props7.loading,
            disabled = _this$props7.disabled,
            search = _this$props7.search,
            multiple = _this$props7.multiple;
        var open = _this.state.open;

        var ariaOptions = {
          role: search ? 'combobox' : 'listbox',
          'aria-busy': loading,
          'aria-disabled': disabled,
          'aria-expanded': !!open
        };
        if (ariaOptions.role === 'listbox') {
          ariaOptions['aria-multiselectable'] = multiple;
        }
        return ariaOptions;
      }, _this.setValue = function (value) {
        debug('setValue()');
        debug('value', value);
        var newState = {
          searchQuery: ''
        };

        _this.trySetState({ value: value }, newState);
        _this.setSelectedIndex(value);
      }, _this.setSelectedIndex = function () {
        var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _this.state.value;
        var optionsProps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _this.props.options;
        var multiple = _this.props.multiple;
        var selectedIndex = _this.state.selectedIndex;

        var options = _this.getMenuOptions(value, optionsProps);
        var enabledIndicies = _this.getEnabledIndices(options);

        var newSelectedIndex = void 0;

        // update the selected index
        if (!selectedIndex || selectedIndex < 0) {
          var firstIndex = enabledIndicies[0];

          // Select the currently active item, if none, use the first item.
          // Multiple selects remove active items from the list,
          // their initial selected index should be 0.
          newSelectedIndex = multiple ? firstIndex : _this.getMenuItemIndexByValue(value, options) || enabledIndicies[0];
        } else if (multiple) {
          // multiple selects remove options from the menu as they are made active
          // keep the selected index within range of the remaining items
          if (selectedIndex >= options.length - 1) {
            newSelectedIndex = enabledIndicies[enabledIndicies.length - 1];
          }
        } else {
          var activeIndex = _this.getMenuItemIndexByValue(value, options);

          // regular selects can only have one active item
          // set the selected index to the currently active item
          newSelectedIndex = (0, _includes3.default)(enabledIndicies, activeIndex) ? activeIndex : undefined;
        }

        if (!newSelectedIndex || newSelectedIndex < 0) {
          newSelectedIndex = enabledIndicies[0];
        }

        _this.setState({ selectedIndex: newSelectedIndex });
      }, _this.handleLabelClick = function (e, labelProps) {
        debug('handleLabelClick()');
        // prevent focusing search input on click
        e.stopPropagation();

        _this.setState({ selectedLabel: labelProps.value });

        var onLabelClick = _this.props.onLabelClick;

        if (onLabelClick) onLabelClick(e, labelProps);
      }, _this.handleLabelRemove = function (e, labelProps) {
        debug('handleLabelRemove()');
        // prevent focusing search input on click
        e.stopPropagation();
        var value = _this.state.value;

        var newValue = (0, _without3.default)(value, labelProps.value);
        debug('label props:', labelProps);
        debug('current value:', value);
        debug('remove value:', labelProps.value);
        debug('new value:', newValue);

        _this.setValue(newValue);
        _this.handleChange(e, newValue);
      }, _this.moveSelectionBy = function (offset) {
        var startIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _this.state.selectedIndex;

        debug('moveSelectionBy()');
        debug('offset: ' + offset);

        var options = _this.getMenuOptions();
        var lastIndex = options.length - 1;

        // Prevent infinite loop
        if ((0, _every3.default)(options, 'disabled')) return;

        // next is after last, wrap to beginning
        // next is before first, wrap to end
        var nextIndex = startIndex + offset;
        if (nextIndex > lastIndex) nextIndex = 0;else if (nextIndex < 0) nextIndex = lastIndex;

        if (options[nextIndex].disabled) return _this.moveSelectionBy(offset, nextIndex);

        _this.setState({ selectedIndex: nextIndex });
        _this.scrollSelectedItemIntoView();
      }, _this.scrollSelectedItemIntoView = function () {
        debug('scrollSelectedItemIntoView()');
        // Do not access document when server side rendering
        if (!_lib.isBrowser) return;
        var menu = document.querySelector('.ui.dropdown.active.visible .menu.visible');
        var item = menu.querySelector('.item.selected');
        debug('menu: ' + menu);
        debug('item: ' + item);
        var isOutOfUpperView = item.offsetTop < menu.scrollTop;
        var isOutOfLowerView = item.offsetTop + item.clientHeight > menu.scrollTop + menu.clientHeight;

        if (isOutOfUpperView) {
          menu.scrollTop = item.offsetTop;
        } else if (isOutOfLowerView) {
          menu.scrollTop = item.offsetTop + item.clientHeight - menu.clientHeight;
        }
      }, _this.open = function (e) {
        debug('open()');

        var _this$props8 = _this.props,
            disabled = _this$props8.disabled,
            onOpen = _this$props8.onOpen,
            search = _this$props8.search;

        if (disabled) return;
        if (search && _this._search) _this._search.focus();
        if (onOpen) onOpen(e, _this.props);

        _this.trySetState({ open: true });
      }, _this.close = function (e) {
        debug('close()');

        var onClose = _this.props.onClose;

        if (onClose) onClose(e, _this.props);

        _this.trySetState({ open: false });
      }, _this.handleClose = function () {
        debug('handleClose()');
        // https://github.com/Semantic-Org/Semantic-UI-React/issues/627
        // Blur the Dropdown on close so it is blurred after selecting an item.
        // This is to prevent it from re-opening when switching tabs after selecting an item.
        _this._dropdown.blur();

        // We need to keep the virtual model in sync with the browser focus change
        // https://github.com/Semantic-Org/Semantic-UI-React/issues/692
        _this.setState({ focus: false });
      }, _this.toggle = function (e) {
        return _this.state.open ? _this.close(e) : _this.open(e);
      }, _this.renderText = function () {
        var _this$props9 = _this.props,
            multiple = _this$props9.multiple,
            placeholder = _this$props9.placeholder,
            search = _this$props9.search,
            text = _this$props9.text;
        var _this$state2 = _this.state,
            searchQuery = _this$state2.searchQuery,
            value = _this$state2.value,
            open = _this$state2.open;

        var hasValue = multiple ? !(0, _isEmpty3.default)(value) : !(0, _isNil3.default)(value) && value !== '';

        var classes = (0, _classnames2.default)(placeholder && !hasValue && 'default', 'text', search && searchQuery && 'filtered');
        var _text = placeholder;
        if (searchQuery) {
          _text = null;
        } else if (text) {
          _text = text;
        } else if (open && !multiple) {
          _text = (0, _get4.default)(_this.getSelectedItem(), 'text');
        } else if (hasValue) {
          _text = (0, _get4.default)(_this.getItemByValue(value), 'text');
        }

        return _react2.default.createElement(
          'div',
          { className: classes },
          _text
        );
      }, _this.renderHiddenInput = function () {
        debug('renderHiddenInput()');
        var value = _this.state.value;
        var _this$props10 = _this.props,
            multiple = _this$props10.multiple,
            name = _this$props10.name,
            options = _this$props10.options,
            selection = _this$props10.selection;

        debug('name:      ' + name);
        debug('selection: ' + selection);
        debug('value:     ' + value);
        if (!selection) return null;

        // a dropdown without an active item will have an empty string value
        return _react2.default.createElement(
          'select',
          { type: 'hidden', 'aria-hidden': 'true', name: name, value: value, multiple: multiple },
          _react2.default.createElement('option', { value: '' }),
          (0, _map3.default)(options, function (option) {
            return _react2.default.createElement(
              'option',
              { key: option.value, value: option.value },
              option.text
            );
          })
        );
      }, _this.renderSearchInput = function () {
        var _this$props11 = _this.props,
            disabled = _this$props11.disabled,
            search = _this$props11.search,
            name = _this$props11.name,
            tabIndex = _this$props11.tabIndex;
        var searchQuery = _this.state.searchQuery;


        if (!search) return null;

        // tabIndex
        var computedTabIndex = void 0;
        if (!(0, _isNil3.default)(tabIndex)) computedTabIndex = tabIndex;else computedTabIndex = disabled ? -1 : 0;

        // resize the search input, temporarily show the sizer so we can measure it
        var searchWidth = void 0;
        if (_this._sizer && searchQuery) {
          _this._sizer.style.display = 'inline';
          _this._sizer.textContent = searchQuery;
          searchWidth = Math.ceil(_this._sizer.getBoundingClientRect().width);
          _this._sizer.style.removeProperty('display');
        }

        return _react2.default.createElement('input', {
          value: searchQuery,
          type: 'text',
          'aria-autocomplete': 'list',
          onChange: _this.handleSearchChange,
          className: 'search',
          name: [name, 'search'].join('-'),
          autoComplete: 'off',
          tabIndex: computedTabIndex,
          style: { width: searchWidth },
          ref: function ref(c) {
            return _this._search = c;
          }
        });
      }, _this.renderSearchSizer = function () {
        var _this$props12 = _this.props,
            search = _this$props12.search,
            multiple = _this$props12.multiple;


        if (!(search && multiple)) return null;

        return _react2.default.createElement('span', { className: 'sizer', ref: function ref(c) {
            return _this._sizer = c;
          } });
      }, _this.renderLabels = function () {
        debug('renderLabels()');
        var _this$props13 = _this.props,
            multiple = _this$props13.multiple,
            renderLabel = _this$props13.renderLabel;
        var _this$state3 = _this.state,
            selectedLabel = _this$state3.selectedLabel,
            value = _this$state3.value;

        if (!multiple || (0, _isEmpty3.default)(value)) {
          return;
        }
        var selectedItems = (0, _map3.default)(value, _this.getItemByValue);
        debug('selectedItems', selectedItems);

        // if no item could be found for a given state value the selected item will be undefined
        // compact the selectedItems so we only have actual objects left
        return (0, _map3.default)((0, _compact3.default)(selectedItems), function (item, index) {
          var defaultLabelProps = {
            active: item.value === selectedLabel,
            as: 'a',
            key: item.value,
            onClick: _this.handleLabelClick,
            onRemove: _this.handleLabelRemove,
            value: item.value
          };

          return _Label2.default.create(renderLabel(item, index, defaultLabelProps), defaultLabelProps);
        });
      }, _this.renderOptions = function () {
        var _this$props14 = _this.props,
            multiple = _this$props14.multiple,
            search = _this$props14.search,
            noResultsMessage = _this$props14.noResultsMessage;
        var _this$state4 = _this.state,
            selectedIndex = _this$state4.selectedIndex,
            value = _this$state4.value;

        var options = _this.getMenuOptions();

        if (noResultsMessage !== null && search && (0, _isEmpty3.default)(options)) {
          return _react2.default.createElement(
            'div',
            { className: 'message' },
            noResultsMessage
          );
        }

        var isActive = multiple ? function (optValue) {
          return (0, _includes3.default)(value, optValue);
        } : function (optValue) {
          return optValue === value;
        };

        return (0, _map3.default)(options, function (opt, i) {
          return _react2.default.createElement(_DropdownItem2.default, _extends({
            key: opt.value + '-' + i,
            active: isActive(opt.value),
            onClick: _this.handleItemClick,
            selected: selectedIndex === i
          }, opt, {
            // Needed for handling click events on disabled items
            style: _extends({}, opt.style, { pointerEvents: 'all' })
          }));
        });
      }, _this.renderMenu = function () {
        var _this$props15 = _this.props,
            children = _this$props15.children,
            header = _this$props15.header;
        var open = _this.state.open;

        var menuClasses = open ? 'visible' : '';
        var ariaOptions = _this.getDropdownMenuAriaOptions();

        // single menu child
        if (!(0, _isNil3.default)(children)) {
          var menuChild = _react.Children.only(children);
          var className = (0, _classnames2.default)(menuClasses, menuChild.props.className);

          return (0, _react.cloneElement)(menuChild, _extends({ className: className }, ariaOptions));
        }

        return _react2.default.createElement(
          _DropdownMenu2.default,
          _extends({}, ariaOptions, { className: menuClasses }),
          (0, _lib.createShorthand)(_DropdownHeader2.default, function (val) {
            return { content: val };
          }, header),
          _this.renderOptions()
        );
      }, _temp), _possibleConstructorReturn(_this, _ret);
    }

    _createClass(Dropdown, [{
      key: 'componentWillMount',
      value: function componentWillMount() {
        if (_get2(Dropdown.prototype.__proto__ || Object.getPrototypeOf(Dropdown.prototype), 'componentWillMount', this)) _get2(Dropdown.prototype.__proto__ || Object.getPrototypeOf(Dropdown.prototype), 'componentWillMount', this).call(this);
        debug('componentWillMount()');
        var _state = this.state,
            open = _state.open,
            value = _state.value;


        this.setValue(value);
        if (open) this.open();
      }
    }, {
      key: 'shouldComponentUpdate',
      value: function shouldComponentUpdate(nextProps, nextState) {
        return !(0, _isEqual3.default)(nextProps, this.props) || !(0, _isEqual3.default)(nextState, this.state);
      }
    }, {
      key: 'componentWillReceiveProps',
      value: function componentWillReceiveProps(nextProps) {
        _get2(Dropdown.prototype.__proto__ || Object.getPrototypeOf(Dropdown.prototype), 'componentWillReceiveProps', this).call(this, nextProps);
        debug('componentWillReceiveProps()');
        // TODO objectDiff still runs in prod, stop it
        debug('to props:', (0, _lib.objectDiff)(this.props, nextProps));

        /* eslint-disable no-console */
        if (true) {
          // in development, validate value type matches dropdown type
          var isNextValueArray = Array.isArray(nextProps.value);
          var hasValue = (0, _has3.default)(nextProps, 'value');

          if (hasValue && nextProps.multiple && !isNextValueArray) {
            console.error('Dropdown `value` must be an array when `multiple` is set.' + (' Received type: `' + Object.prototype.toString.call(nextProps.value) + '`.'));
          } else if (hasValue && !nextProps.multiple && isNextValueArray) {
            console.error('Dropdown `value` must not be an array when `multiple` is not set.' + ' Either set `multiple={true}` or use a string or number value.');
          }
        }
        /* eslint-enable no-console */

        if (!(0, _isEqual3.default)(nextProps.value, this.props.value)) {
          debug('value changed, setting', nextProps.value);
          this.setValue(nextProps.value);
        }

        if (!(0, _isEqual3.default)(nextProps.options, this.props.options)) {
          this.setSelectedIndex(undefined, nextProps.options);
        }
      }
    }, {
      key: 'componentDidUpdate',
      value: function componentDidUpdate(prevProps, prevState) {
        // eslint-disable-line complexity
        debug('componentDidUpdate()');
        // TODO objectDiff still runs in prod, stop it
        debug('to state:', (0, _lib.objectDiff)(prevState, this.state));

        // Do not access document when server side rendering
        if (!_lib.isBrowser) return;

        // focused / blurred
        if (!prevState.focus && this.state.focus) {
          debug('dropdown focused');
          if (!this.isMouseDown) {
            var openOnFocus = this.props.openOnFocus;

            debug('mouse is not down, opening');
            if (openOnFocus) this.open();
          }
          if (!this.state.open) {
            document.addEventListener('keydown', this.openOnArrow);
            document.addEventListener('keydown', this.openOnSpace);
          } else {
            document.addEventListener('keydown', this.moveSelectionOnKeyDown);
            document.addEventListener('keydown', this.selectItemOnEnter);
            document.addEventListener('keydown', this.removeItemOnBackspace);
          }
        } else if (prevState.focus && !this.state.focus) {
          debug('dropdown blurred');
          if (!this.isMouseDown) {
            var closeOnBlur = this.props.closeOnBlur;

            debug('mouse is not down, closing');
            if (closeOnBlur) this.close();
          }
          document.removeEventListener('keydown', this.openOnArrow);
          document.removeEventListener('keydown', this.openOnSpace);
          document.removeEventListener('keydown', this.moveSelectionOnKeyDown);
          document.removeEventListener('keydown', this.selectItemOnEnter);
          document.removeEventListener('keydown', this.removeItemOnBackspace);
        }

        // opened / closed
        if (!prevState.open && this.state.open) {
          debug('dropdown opened');
          document.addEventListener('keydown', this.closeOnEscape);
          document.addEventListener('keydown', this.moveSelectionOnKeyDown);
          document.addEventListener('keydown', this.selectItemOnEnter);
          document.addEventListener('keydown', this.removeItemOnBackspace);
          document.addEventListener('click', this.closeOnDocumentClick);
          document.removeEventListener('keydown', this.openOnArrow);
          document.removeEventListener('keydown', this.openOnSpace);
        } else if (prevState.open && !this.state.open) {
          debug('dropdown closed');
          this.handleClose();
          document.removeEventListener('keydown', this.closeOnEscape);
          document.removeEventListener('keydown', this.moveSelectionOnKeyDown);
          document.removeEventListener('keydown', this.selectItemOnEnter);
          document.removeEventListener('keydown', this.removeItemOnBackspace);
          document.removeEventListener('click', this.closeOnDocumentClick);
        }
      }
    }, {
      key: 'componentWillUnmount',
      value: function componentWillUnmount() {
        debug('componentWillUnmount()');

        // Do not access document when server side rendering
        if (!_lib.isBrowser) return;

        document.removeEventListener('keydown', this.openOnArrow);
        document.removeEventListener('keydown', this.openOnSpace);
        document.removeEventListener('keydown', this.moveSelectionOnKeyDown);
        document.removeEventListener('keydown', this.selectItemOnEnter);
        document.removeEventListener('keydown', this.removeItemOnBackspace);
        document.removeEventListener('keydown', this.closeOnEscape);
        document.removeEventListener('click', this.closeOnDocumentClick);
      }

      // ----------------------------------------
      // Document Event Handlers
      // ----------------------------------------

      // onChange needs to receive a value
      // can't rely on props.value if we are controlled


      // ----------------------------------------
      // Component Event Handlers
      // ----------------------------------------

      // ----------------------------------------
      // Getters
      // ----------------------------------------

      // There are times when we need to calculate the options based on a value
      // that hasn't yet been persisted to state.

    }, {
      key: 'getDropdownMenuAriaOptions',
      value: function getDropdownMenuAriaOptions() {
        var _props = this.props,
            search = _props.search,
            multiple = _props.multiple;

        var ariaOptions = {};

        if (search) {
          ariaOptions['aria-multiselectable'] = multiple;
          ariaOptions.role = 'listbox';
        }
        return ariaOptions;
      }

      // ----------------------------------------
      // Setters
      // ----------------------------------------

      // ----------------------------------------
      // Behavior
      // ----------------------------------------

      // ----------------------------------------
      // Render
      // ----------------------------------------

    }, {
      key: 'render',
      value: function render() {
        var _this2 = this;

        debug('render()');
        debug('props', this.props);
        debug('state', this.state);
        var open = this.state.open;
        var _props2 = this.props,
            basic = _props2.basic,
            button = _props2.button,
            className = _props2.className,
            compact = _props2.compact,
            fluid = _props2.fluid,
            floating = _props2.floating,
            icon = _props2.icon,
            inline = _props2.inline,
            labeled = _props2.labeled,
            multiple = _props2.multiple,
            pointing = _props2.pointing,
            search = _props2.search,
            selection = _props2.selection,
            simple = _props2.simple,
            loading = _props2.loading,
            error = _props2.error,
            disabled = _props2.disabled,
            scrolling = _props2.scrolling,
            tabIndex = _props2.tabIndex,
            trigger = _props2.trigger;

        // Classes

        var classes = (0, _classnames2.default)('ui', (0, _lib.useKeyOnly)(open, 'active visible'), (0, _lib.useKeyOnly)(disabled, 'disabled'), (0, _lib.useKeyOnly)(error, 'error'), (0, _lib.useKeyOnly)(loading, 'loading'), (0, _lib.useKeyOnly)(basic, 'basic'), (0, _lib.useKeyOnly)(button, 'button'), (0, _lib.useKeyOnly)(compact, 'compact'), (0, _lib.useKeyOnly)(fluid, 'fluid'), (0, _lib.useKeyOnly)(floating, 'floating'), (0, _lib.useKeyOnly)(inline, 'inline'),
        // TODO: consider augmentation to render Dropdowns as Button/Menu, solves icon/link item issues
        // https://github.com/Semantic-Org/Semantic-UI-React/issues/401#issuecomment-240487229
        // TODO: the icon class is only required when a dropdown is a button
        // useKeyOnly(icon, 'icon'),
        (0, _lib.useKeyOnly)(labeled, 'labeled'),
        // TODO: linkItem is required only when Menu child, add dynamically
        // useKeyOnly(linkItem, 'link item'),
        (0, _lib.useKeyOnly)(multiple, 'multiple'), (0, _lib.useKeyOnly)(search, 'search'), (0, _lib.useKeyOnly)(selection, 'selection'), (0, _lib.useKeyOnly)(simple, 'simple'), (0, _lib.useKeyOnly)(scrolling, 'scrolling'), (0, _lib.useKeyOrValueAndKey)(pointing, 'pointing'), className, 'dropdown');
        var rest = (0, _lib.getUnhandledProps)(Dropdown, this.props);
        var ElementType = (0, _lib.getElementType)(Dropdown, this.props);
        var ariaOptions = this.getDropdownAriaOptions(ElementType, this.props);

        var computedTabIndex = void 0;
        if (!(0, _isNil3.default)(tabIndex)) {
          computedTabIndex = tabIndex;
        } else if (!search) {
          // don't set a root node tabIndex as the search input has its own tabIndex
          computedTabIndex = disabled ? -1 : 0;
        }

        return _react2.default.createElement(
          ElementType,
          _extends({}, rest, ariaOptions, {
            className: classes,
            onBlur: this.handleBlur,
            onClick: this.handleClick,
            onMouseDown: this.handleMouseDown,
            onFocus: this.handleFocus,
            onChange: this.handleChange,
            tabIndex: computedTabIndex,
            ref: function ref(c) {
              return _this2._dropdown = c;
            }
          }),
          this.renderHiddenInput(),
          this.renderLabels(),
          this.renderSearchInput(),
          this.renderSearchSizer(),
          trigger || this.renderText(),
          _Icon2.default.create(icon),
          this.renderMenu()
        );
      }
    }]);

    return Dropdown;
  }(_lib.AutoControlledComponent);

  Dropdown.propTypes = {
    /**
     * Allow user additions to the list of options (boolean).
     * Requires the use of `selection`, `options` and `search`.
     */
    allowAdditions: _lib.customPropTypes.every([_lib.customPropTypes.demand(['options', 'selection', 'search']), _react.PropTypes.bool]),

    /** Position of the `Add: ...` option in the dropdown list ('top' or 'bottom'). */
    additionPosition: _react.PropTypes.oneOf(_meta.props.additionPosition),

    /** Label prefixed to an option added by a user. */
    additionLabel: _react.PropTypes.oneOfType([_react.PropTypes.element, _react.PropTypes.string]),

    /** An element type to render as (string or function). */
    as: _lib.customPropTypes.as,

    /** A Dropdown can reduce its complexity */
    basic: _react.PropTypes.bool,

    /** Format the Dropdown to appear as a button. */
    button: _react.PropTypes.bool,

    /** Primary content. */
    children: _lib.customPropTypes.every([_lib.customPropTypes.disallow(['options', 'selection']), _lib.customPropTypes.givenProps({ children: _react.PropTypes.any.isRequired }, _react2.default.PropTypes.element.isRequired)]),

    /** Additional classes. */
    className: _react.PropTypes.string,

    /** A compact dropdown has no minimum width. */
    compact: _react.PropTypes.bool,

    /** Initial value of open. */
    defaultOpen: _react.PropTypes.bool,

    /** Currently selected label in multi-select. */
    defaultSelectedLabel: _lib.customPropTypes.every([_lib.customPropTypes.demand(['multiple']), _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.number])]),

    /** Initial value or value array if multiple. */
    defaultValue: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.number, _react.PropTypes.arrayOf(_react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.number]))]),

    /** A disabled dropdown menu or item does not allow user interaction. */
    disabled: _react.PropTypes.bool,

    /** An errored dropdown can alert a user to a problem. */
    error: _react.PropTypes.bool,

    /** A dropdown menu can contain floated content. */
    floating: _react.PropTypes.bool,

    /** A dropdown can take the full width of its parent */
    fluid: _react.PropTypes.bool,

    /** A dropdown menu can contain a header. */
    header: _react.PropTypes.node,

    /** Shorthand for Icon. */
    icon: _react.PropTypes.oneOfType([_react.PropTypes.node, _react.PropTypes.object]),

    /** A dropdown can be formatted to appear inline in other content. */
    inline: _react.PropTypes.bool,

    /** A dropdown can be labeled. */
    labeled: _react.PropTypes.bool,

    // linkItem: PropTypes.bool,

    /** A dropdown can show that it is currently loading data. */
    loading: _react.PropTypes.bool,

    /** A selection dropdown can allow multiple selections. */
    multiple: _react.PropTypes.bool,

    /** Name of the hidden input which holds the value. */
    name: _react.PropTypes.string,

    /** Message to display when there are no results. */
    noResultsMessage: _react.PropTypes.string,

    /**
     * Called when a user adds a new item. Use this to update the options list.
     *
     * @param {SyntheticEvent} event - React's original SyntheticEvent.
     * @param {object} data - All props and the new item's value.
     */
    onAddItem: _react.PropTypes.func,

    /**
     * Called on blur.
     *
     * @param {SyntheticEvent} event - React's original SyntheticEvent.
     * @param {object} data - All props.
     */
    onBlur: _react.PropTypes.func,

    /**
     * Called when the user attempts to change the value.
     *
     * @param {SyntheticEvent} event - React's original SyntheticEvent.
     * @param {object} data - All props and proposed value.
     */
    onChange: _react.PropTypes.func,

    /**
     * Called when a close event happens.
     *
     * @param {SyntheticEvent} event - React's original SyntheticEvent.
     * @param {object} data - All props.
     */
    onClose: _react.PropTypes.func,

    /**
     * Called when a multi-select label is clicked.
     *
     * @param {SyntheticEvent} event - React's original SyntheticEvent.
     * @param {object} data - All label props.
     */
    onLabelClick: _react.PropTypes.func,

    /**
     * Called when an open event happens.
     *
     * @param {SyntheticEvent} event - React's original SyntheticEvent.
     * @param {object} data - All props.
     */
    onOpen: _react.PropTypes.func,

    /**
     * Called on search input change.
     *
     * @param {SyntheticEvent} event - React's original SyntheticEvent.
     * @param {string} value - Current value of search input.
     */
    onSearchChange: _react.PropTypes.func,

    /**
     * Called on click.
     *
     * @param {SyntheticEvent} event - React's original SyntheticEvent.
     * @param {object} data - All props.
     */
    onClick: _react.PropTypes.func,

    /**
     * Called on focus.
     *
     * @param {SyntheticEvent} event - React's original SyntheticEvent.
     * @param {object} data - All props.
     */
    onFocus: _react.PropTypes.func,

    /**
     * Called on mousedown.
     *
     * @param {SyntheticEvent} event - React's original SyntheticEvent.
     * @param {object} data - All props.
     */
    onMouseDown: _react.PropTypes.func,

    /** Controls whether or not the dropdown menu is displayed. */
    open: _react.PropTypes.bool,

    /** Array of Dropdown.Item props e.g. `{ text: '', value: '' }` */
    options: _lib.customPropTypes.every([_lib.customPropTypes.disallow(['children']), _react.PropTypes.arrayOf(_react.PropTypes.shape(_DropdownItem2.default.propTypes))]),

    /** Placeholder text. */
    placeholder: _react.PropTypes.string,

    /** A dropdown can be formatted so that its menu is pointing. */
    pointing: _react.PropTypes.oneOfType([_react.PropTypes.bool, _react.PropTypes.oneOf(_meta.props.pointing)]),

    /**
     * A function that takes (data, index, defaultLabelProps) and returns
     * shorthand for Label .
     */
    renderLabel: _react.PropTypes.func,

    /** A dropdown can have its menu scroll. */
    scrolling: _react.PropTypes.bool,

    /**
     * A selection dropdown can allow a user to search through a large list of choices.
     * Pass a function here to replace the default search.
     */
    search: _react.PropTypes.oneOfType([_react.PropTypes.bool, _react.PropTypes.func]),

    // TODO 'searchInMenu' or 'search='in menu' or ???  How to handle this markup and functionality?

    /** Currently selected label in multi-select. */
    selectedLabel: _lib.customPropTypes.every([_lib.customPropTypes.demand(['multiple']), _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.number])]),

    /** A dropdown can be used to select between choices in a form. */
    selection: _lib.customPropTypes.every([_lib.customPropTypes.disallow(['children']), _lib.customPropTypes.demand(['options']), _react.PropTypes.bool]),

    /** Define whether the highlighted item should be selected on blur. */
    selectOnBlur: _react.PropTypes.bool,

    /** A simple dropdown can open without Javascript. */
    simple: _react.PropTypes.bool,

    /** A dropdown can receive focus. */
    tabIndex: _react.PropTypes.oneOfType([_react.PropTypes.number, _react.PropTypes.string]),

    /** The text displayed in the dropdown, usually for the active item. */
    text: _react.PropTypes.string,

    /** Whether or not the menu should open when the dropdown is focused. */
    openOnFocus: _react.PropTypes.bool,

    /** Whether or not the menu should close when the dropdown is blurred. */
    closeOnBlur: _react.PropTypes.bool,

    /** Custom element to trigger the menu to become visible. Takes place of 'text'. */
    trigger: _lib.customPropTypes.every([_lib.customPropTypes.disallow(['selection', 'text']), _react.PropTypes.node]),

    /** Current value or value array if multiple. Creates a controlled component. */
    value: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.number, _react.PropTypes.arrayOf(_react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.number]))])
  };
  Dropdown.defaultProps = {
    additionLabel: 'Add ',
    additionPosition: 'top',
    icon: 'dropdown',
    noResultsMessage: 'No results found.',
    renderLabel: function renderLabel(_ref2) {
      var text = _ref2.text;
      return text;
    },
    selectOnBlur: true,
    openOnFocus: true,
    closeOnBlur: true
  };
  Dropdown.autoControlledProps = ['open', 'value', 'selectedLabel'];
  Dropdown._meta = _meta;
  Dropdown.Divider = _DropdownDivider2.default;
  Dropdown.Header = _DropdownHeader2.default;
  Dropdown.Item = _DropdownItem2.default;
  Dropdown.Menu = _DropdownMenu2.default;
  exports.default = Dropdown;

/***/ },
/* 975 */
/***/ function(module, exports, __webpack_require__) {

  var arrayEvery = __webpack_require__(976),
      baseEvery = __webpack_require__(977),
      baseIteratee = __webpack_require__(740),
      isArray = __webpack_require__(631),
      isIterateeCall = __webpack_require__(810);

  /**
   * Checks if `predicate` returns truthy for **all** elements of `collection`.
   * Iteration is stopped once `predicate` returns falsey. The predicate is
   * invoked with three arguments: (value, index|key, collection).
   *
   * **Note:** This method returns `true` for
   * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because
   * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of
   * elements of empty collections.
   *
   * @static
   * @memberOf _
   * @since 0.1.0
   * @category Collection
   * @param {Array|Object} collection The collection to iterate over.
   * @param {Function} [predicate=_.identity] The function invoked per iteration.
   * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
   * @returns {boolean} Returns `true` if all elements pass the predicate check,
   *  else `false`.
   * @example
   *
   * _.every([true, 1, null, 'yes'], Boolean);
   * // => false
   *
   * var users = [
   *   { 'user': 'barney', 'age': 36, 'active': false },
   *   { 'user': 'fred',   'age': 40, 'active': false }
   * ];
   *
   * // The `_.matches` iteratee shorthand.
   * _.every(users, { 'user': 'barney', 'active': false });
   * // => false
   *
   * // The `_.matchesProperty` iteratee shorthand.
   * _.every(users, ['active', false]);
   * // => true
   *
   * // The `_.property` iteratee shorthand.
   * _.every(users, 'active');
   * // => false
   */
  function every(collection, predicate, guard) {
    var func = isArray(collection) ? arrayEvery : baseEvery;
    if (guard && isIterateeCall(collection, predicate, guard)) {
      predicate = undefined;
    }
    return func(collection, baseIteratee(predicate, 3));
  }

  module.exports = every;


/***/ },
/* 976 */
/***/ function(module, exports) {

  /**
   * A specialized version of `_.every` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} predicate The function invoked per iteration.
   * @returns {boolean} Returns `true` if all elements pass the predicate check,
   *  else `false`.
   */
  function arrayEvery(array, predicate) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      if (!predicate(array[index], index, array)) {
        return false;
      }
    }
    return true;
  }

  module.exports = arrayEvery;


/***/ },
/* 977 */
/***/ function(module, exports, __webpack_require__) {

  var baseEach = __webpack_require__(722);

  /**
   * The base implementation of `_.every` without support for iteratee shorthands.
   *
   * @private
   * @param {Array|Object} collection The collection to iterate over.
   * @param {Function} predicate The function invoked per iteration.
   * @returns {boolean} Returns `true` if all elements pass the predicate check,
   *  else `false`
   */
  function baseEvery(collection, predicate) {
    var result = true;
    baseEach(collection, function(value, index, collection) {
      result = !!predicate(value, index, collection);
      return result;
    });
    return result;
  }

  module.exports = baseEvery;


/***/ },
/* 978 */
/***/ function(module, exports, __webpack_require__) {

  var arrayReduce = __webpack_require__(876),
      baseEach = __webpack_require__(722),
      baseIteratee = __webpack_require__(740),
      baseReduce = __webpack_require__(979),
      isArray = __webpack_require__(631);

  /**
   * Reduces `collection` to a value which is the accumulated result of running
   * each element in `collection` thru `iteratee`, where each successive
   * invocation is supplied the return value of the previous. If `accumulator`
   * is not given, the first element of `collection` is used as the initial
   * value. The iteratee is invoked with four arguments:
   * (accumulator, value, index|key, collection).
   *
   * Many lodash methods are guarded to work as iteratees for methods like
   * `_.reduce`, `_.reduceRight`, and `_.transform`.
   *
   * The guarded methods are:
   * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,
   * and `sortBy`
   *
   * @static
   * @memberOf _
   * @since 0.1.0
   * @category Collection
   * @param {Array|Object} collection The collection to iterate over.
   * @param {Function} [iteratee=_.identity] The function invoked per iteration.
   * @param {*} [accumulator] The initial value.
   * @returns {*} Returns the accumulated value.
   * @see _.reduceRight
   * @example
   *
   * _.reduce([1, 2], function(sum, n) {
   *   return sum + n;
   * }, 0);
   * // => 3
   *
   * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {
   *   (result[value] || (result[value] = [])).push(key);
   *   return result;
   * }, {});
   * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)
   */
  function reduce(collection, iteratee, accumulator) {
    var func = isArray(collection) ? arrayReduce : baseReduce,
        initAccum = arguments.length < 3;

    return func(collection, baseIteratee(iteratee, 4), accumulator, initAccum, baseEach);
  }

  module.exports = reduce;


/***/ },
/* 979 */
/***/ function(module, exports) {

  /**
   * The base implementation of `_.reduce` and `_.reduceRight`, without support
   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.
   *
   * @private
   * @param {Array|Object} collection The collection to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @param {*} accumulator The initial value.
   * @param {boolean} initAccum Specify using the first or last element of
   *  `collection` as the initial value.
   * @param {Function} eachFunc The function to iterate over `collection`.
   * @returns {*} Returns the accumulated value.
   */
  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {
    eachFunc(collection, function(value, index, collection) {
      accumulator = initAccum
        ? (initAccum = false, value)
        : iteratee(accumulator, value, index, collection);
    });
    return accumulator;
  }

  module.exports = baseReduce;


/***/ },
/* 980 */
/***/ function(module, exports, __webpack_require__) {

  var toString = __webpack_require__(676);

  /**
   * Used to match `RegExp`
   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
   */
  var reRegExpChar = /[\\^$.*+?()[\]{}|]/g,
      reHasRegExpChar = RegExp(reRegExpChar.source);

  /**
   * Escapes the `RegExp` special characters "^", "$", "\", ".", "*", "+",
   * "?", "(", ")", "[", "]", "{", "}", and "|" in `string`.
   *
   * @static
   * @memberOf _
   * @since 3.0.0
   * @category String
   * @param {string} [string=''] The string to escape.
   * @returns {string} Returns the escaped string.
   * @example
   *
   * _.escapeRegExp('[lodash](https://lodash.com/)');
   * // => '\[lodash\]\(https://lodash\.com/\)'
   */
  function escapeRegExp(string) {
    string = toString(string);
    return (string && reHasRegExpChar.test(string))
      ? string.replace(reRegExpChar, '\\$&')
      : string;
  }

  module.exports = escapeRegExp;


/***/ },
/* 981 */
/***/ function(module, exports, __webpack_require__) {

  var baseSlice = __webpack_require__(902),
      toInteger = __webpack_require__(716);

  /**
   * Creates a slice of `array` with `n` elements dropped from the end.
   *
   * @static
   * @memberOf _
   * @since 3.0.0
   * @category Array
   * @param {Array} array The array to query.
   * @param {number} [n=1] The number of elements to drop.
   * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
   * @returns {Array} Returns the slice of `array`.
   * @example
   *
   * _.dropRight([1, 2, 3]);
   * // => [1, 2]
   *
   * _.dropRight([1, 2, 3], 2);
   * // => [1]
   *
   * _.dropRight([1, 2, 3], 5);
   * // => []
   *
   * _.dropRight([1, 2, 3], 0);
   * // => [1, 2, 3]
   */
  function dropRight(array, n, guard) {
    var length = array == null ? 0 : array.length;
    if (!length) {
      return [];
    }
    n = (guard || n === undefined) ? 1 : toInteger(n);
    n = length - n;
    return baseSlice(array, 0, n < 0 ? 0 : n);
  }

  module.exports = dropRight;


/***/ },
/* 982 */
/***/ function(module, exports, __webpack_require__) {

  var baseFlatten = __webpack_require__(699),
      baseRest = __webpack_require__(702),
      baseUniq = __webpack_require__(983),
      isArrayLikeObject = __webpack_require__(711);

  /**
   * Creates an array of unique values, in order, from all given arrays using
   * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
   * for equality comparisons.
   *
   * @static
   * @memberOf _
   * @since 0.1.0
   * @category Array
   * @param {...Array} [arrays] The arrays to inspect.
   * @returns {Array} Returns the new array of combined values.
   * @example
   *
   * _.union([2], [1, 2]);
   * // => [2, 1]
   */
  var union = baseRest(function(arrays) {
    return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));
  });

  module.exports = union;


/***/ },
/* 983 */
/***/ function(module, exports, __webpack_require__) {

  var SetCache = __webpack_require__(688),
      arrayIncludes = __webpack_require__(691),
      arrayIncludesWith = __webpack_require__(696),
      cacheHas = __webpack_require__(698),
      createSet = __webpack_require__(984),
      setToArray = __webpack_require__(756);

  /** Used as the size to enable large array optimizations. */
  var LARGE_ARRAY_SIZE = 200;

  /**
   * The base implementation of `_.uniqBy` without support for iteratee shorthands.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {Function} [iteratee] The iteratee invoked per element.
   * @param {Function} [comparator] The comparator invoked per element.
   * @returns {Array} Returns the new duplicate free array.
   */
  function baseUniq(array, iteratee, comparator) {
    var index = -1,
        includes = arrayIncludes,
        length = array.length,
        isCommon = true,
        result = [],
        seen = result;

    if (comparator) {
      isCommon = false;
      includes = arrayIncludesWith;
    }
    else if (length >= LARGE_ARRAY_SIZE) {
      var set = iteratee ? null : createSet(array);
      if (set) {
        return setToArray(set);
      }
      isCommon = false;
      includes = cacheHas;
      seen = new SetCache;
    }
    else {
      seen = iteratee ? [] : result;
    }
    outer:
    while (++index < length) {
      var value = array[index],
          computed = iteratee ? iteratee(value) : value;

      value = (comparator || value !== 0) ? value : 0;
      if (isCommon && computed === computed) {
        var seenIndex = seen.length;
        while (seenIndex--) {
          if (seen[seenIndex] === computed) {
            continue outer;
          }
        }
        if (iteratee) {
          seen.push(computed);
        }
        result.push(value);
      }
      else if (!includes(seen, computed, comparator)) {
        if (seen !== result) {
          seen.push(computed);
        }
        result.push(value);
      }
    }
    return result;
  }

  module.exports = baseUniq;


/***/ },
/* 984 */
/***/ function(module, exports, __webpack_require__) {

  var Set = __webpack_require__(761),
      noop = __webpack_require__(834),
      setToArray = __webpack_require__(756);

  /** Used as references for various `Number` constants. */
  var INFINITY = 1 / 0;

  /**
   * Creates a set object of `values`.
   *
   * @private
   * @param {Array} values The values to add to the set.
   * @returns {Object} Returns the new set.
   */
  var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {
    return new Set(values);
  };

  module.exports = createSet;


/***/ },
/* 985 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _Label = __webpack_require__(941);

  var _Label2 = _interopRequireDefault(_Label);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  exports.default = _Label2.default;

/***/ },
/* 986 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _classnames = __webpack_require__(794);

  var _classnames2 = _interopRequireDefault(_classnames);

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _lib = __webpack_require__(684);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function DropdownDivider(props) {
    var className = props.className;

    var classes = (0, _classnames2.default)('divider', className);
    var rest = (0, _lib.getUnhandledProps)(DropdownDivider, props);
    var ElementType = (0, _lib.getElementType)(DropdownDivider, props);

    return _react2.default.createElement(ElementType, _extends({}, rest, { className: classes }));
  }

  DropdownDivider._meta = {
    name: 'DropdownDivider',
    parent: 'Dropdown',
    type: _lib.META.TYPES.MODULE
  };

  DropdownDivider.propTypes = {
    /** An element type to render as (string or function). */
    as: _lib.customPropTypes.as,

    /** Additional classes. */
    className: _react.PropTypes.string
  };

  exports.default = DropdownDivider;

/***/ },
/* 987 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _isNil2 = __webpack_require__(927);

  var _isNil3 = _interopRequireDefault(_isNil2);

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

  var _classnames = __webpack_require__(794);

  var _classnames2 = _interopRequireDefault(_classnames);

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _lib = __webpack_require__(684);

  var _Flag = __webpack_require__(988);

  var _Flag2 = _interopRequireDefault(_Flag);

  var _Icon = __webpack_require__(966);

  var _Icon2 = _interopRequireDefault(_Icon);

  var _Image = __webpack_require__(990);

  var _Image2 = _interopRequireDefault(_Image);

  var _Label = __webpack_require__(985);

  var _Label2 = _interopRequireDefault(_Label);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

  function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

  /**
   * An item sub-component for Dropdown component
   */
  var DropdownItem = function (_Component) {
    _inherits(DropdownItem, _Component);

    function DropdownItem() {
      var _ref;

      var _temp, _this, _ret;

      _classCallCheck(this, DropdownItem);

      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = DropdownItem.__proto__ || Object.getPrototypeOf(DropdownItem)).call.apply(_ref, [this].concat(args))), _this), _this.handleClick = function (e) {
        var onClick = _this.props.onClick;


        if (onClick) onClick(e, _this.props);
      }, _temp), _possibleConstructorReturn(_this, _ret);
    }

    _createClass(DropdownItem, [{
      key: 'render',
      value: function render() {
        var _props = this.props,
            active = _props.active,
            children = _props.children,
            className = _props.className,
            content = _props.content,
            disabled = _props.disabled,
            description = _props.description,
            flag = _props.flag,
            icon = _props.icon,
            image = _props.image,
            label = _props.label,
            selected = _props.selected,
            text = _props.text;


        var classes = (0, _classnames2.default)((0, _lib.useKeyOnly)(active, 'active'), (0, _lib.useKeyOnly)(disabled, 'disabled'), (0, _lib.useKeyOnly)(selected, 'selected'), 'item', className);
        // add default dropdown icon if item contains another menu
        var iconName = (0, _isNil3.default)(icon) ? _lib.childrenUtils.someByType(children, 'DropdownMenu') && 'dropdown' : icon;
        var rest = (0, _lib.getUnhandledProps)(DropdownItem, this.props);
        var ElementType = (0, _lib.getElementType)(DropdownItem, this.props);
        var ariaOptions = {
          role: 'option',
          'aria-disabled': disabled,
          'aria-checked': active,
          'aria-selected': selected
        };

        if (!(0, _isNil3.default)(children)) {
          return _react2.default.createElement(
            ElementType,
            _extends({}, rest, ariaOptions, { className: classes, onClick: this.handleClick }),
            children
          );
        }

        var flagElement = _Flag2.default.create(flag);
        var iconElement = _Icon2.default.create(iconName);
        var imageElement = _Image2.default.create(image);
        var labelElement = _Label2.default.create(label);
        var descriptionElement = (0, _lib.createShorthand)('span', function (val) {
          return { className: 'description', children: val };
        }, description);

        if (descriptionElement) {
          return _react2.default.createElement(
            ElementType,
            _extends({}, rest, ariaOptions, { className: classes, onClick: this.handleClick }),
            imageElement,
            iconElement,
            flagElement,
            labelElement,
            descriptionElement,
            (0, _lib.createShorthand)('span', function (val) {
              return { className: 'text', children: val };
            }, content || text)
          );
        }

        return _react2.default.createElement(
          ElementType,
          _extends({}, rest, ariaOptions, { className: classes, onClick: this.handleClick }),
          imageElement,
          iconElement,
          flagElement,
          labelElement,
          content || text
        );
      }
    }]);

    return DropdownItem;
  }(_react.Component);

  DropdownItem.propTypes = {
    /** An element type to render as (string or function). */
    as: _lib.customPropTypes.as,

    /** Style as the currently chosen item. */
    active: _react.PropTypes.bool,

    /** Primary content. */
    children: _react.PropTypes.node,

    /** Additional classes. */
    className: _react.PropTypes.string,

    /** Shorthand for primary content. */
    content: _lib.customPropTypes.contentShorthand,

    /** Additional text with less emphasis. */
    description: _lib.customPropTypes.itemShorthand,

    /** A dropdown item can be disabled. */
    disabled: _react.PropTypes.bool,

    /** Shorthand for Flag. */
    flag: _lib.customPropTypes.itemShorthand,

    /** Shorthand for Icon. */
    icon: _lib.customPropTypes.itemShorthand,

    /** Shorthand for Image. */
    image: _lib.customPropTypes.itemShorthand,

    /** Shorthand for Label. */
    label: _lib.customPropTypes.itemShorthand,

    /**
     * The item currently selected by keyboard shortcut.
     * This is not the active item.
     */
    selected: _react.PropTypes.bool,

    /** Display text. */
    text: _lib.customPropTypes.contentShorthand,

    /** Stored value */
    value: _react.PropTypes.oneOfType([_react.PropTypes.number, _react.PropTypes.string]),

    /**
     * Called on click.
     *
     * @param {SyntheticEvent} event - React's original SyntheticEvent.
     * @param {object} data - All props.
     */
    onClick: _react.PropTypes.func
  };
  DropdownItem._meta = {
    name: 'DropdownItem',
    parent: 'Dropdown',
    type: _lib.META.TYPES.MODULE
  };
  exports.default = DropdownItem;

/***/ },
/* 988 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _Flag = __webpack_require__(989);

  var _Flag2 = _interopRequireDefault(_Flag);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  exports.default = _Flag2.default;

/***/ },
/* 989 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _classnames = __webpack_require__(794);

  var _classnames2 = _interopRequireDefault(_classnames);

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _lib = __webpack_require__(684);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  var names = ['ad', 'andorra', 'ae', 'united arab emirates', 'uae', 'af', 'afghanistan', 'ag', 'antigua', 'ai', 'anguilla', 'al', 'albania', 'am', 'armenia', 'an', 'netherlands antilles', 'ao', 'angola', 'ar', 'argentina', 'as', 'american samoa', 'at', 'austria', 'au', 'australia', 'aw', 'aruba', 'ax', 'aland islands', 'az', 'azerbaijan', 'ba', 'bosnia', 'bb', 'barbados', 'bd', 'bangladesh', 'be', 'belgium', 'bf', 'burkina faso', 'bg', 'bulgaria', 'bh', 'bahrain', 'bi', 'burundi', 'bj', 'benin', 'bm', 'bermuda', 'bn', 'brunei', 'bo', 'bolivia', 'br', 'brazil', 'bs', 'bahamas', 'bt', 'bhutan', 'bv', 'bouvet island', 'bw', 'botswana', 'by', 'belarus', 'bz', 'belize', 'ca', 'canada', 'cc', 'cocos islands', 'cd', 'congo', 'cf', 'central african republic', 'cg', 'congo brazzaville', 'ch', 'switzerland', 'ci', 'cote divoire', 'ck', 'cook islands', 'cl', 'chile', 'cm', 'cameroon', 'cn', 'china', 'co', 'colombia', 'cr', 'costa rica', 'cs', 'cu', 'cuba', 'cv', 'cape verde', 'cx', 'christmas island', 'cy', 'cyprus', 'cz', 'czech republic', 'de', 'germany', 'dj', 'djibouti', 'dk', 'denmark', 'dm', 'dominica', 'do', 'dominican republic', 'dz', 'algeria', 'ec', 'ecuador', 'ee', 'estonia', 'eg', 'egypt', 'eh', 'western sahara', 'er', 'eritrea', 'es', 'spain', 'et', 'ethiopia', 'eu', 'european union', 'fi', 'finland', 'fj', 'fiji', 'fk', 'falkland islands', 'fm', 'micronesia', 'fo', 'faroe islands', 'fr', 'france', 'ga', 'gabon', 'gb', 'united kingdom', 'gd', 'grenada', 'ge', 'georgia', 'gf', 'french guiana', 'gh', 'ghana', 'gi', 'gibraltar', 'gl', 'greenland', 'gm', 'gambia', 'gn', 'guinea', 'gp', 'guadeloupe', 'gq', 'equatorial guinea', 'gr', 'greece', 'gs', 'sandwich islands', 'gt', 'guatemala', 'gu', 'guam', 'gw', 'guinea-bissau', 'gy', 'guyana', 'hk', 'hong kong', 'hm', 'heard island', 'hn', 'honduras', 'hr', 'croatia', 'ht', 'haiti', 'hu', 'hungary', 'id', 'indonesia', 'ie', 'ireland', 'il', 'israel', 'in', 'india', 'io', 'indian ocean territory', 'iq', 'iraq', 'ir', 'iran', 'is', 'iceland', 'it', 'italy', 'jm', 'jamaica', 'jo', 'jordan', 'jp', 'japan', 'ke', 'kenya', 'kg', 'kyrgyzstan', 'kh', 'cambodia', 'ki', 'kiribati', 'km', 'comoros', 'kn', 'saint kitts and nevis', 'kp', 'north korea', 'kr', 'south korea', 'kw', 'kuwait', 'ky', 'cayman islands', 'kz', 'kazakhstan', 'la', 'laos', 'lb', 'lebanon', 'lc', 'saint lucia', 'li', 'liechtenstein', 'lk', 'sri lanka', 'lr', 'liberia', 'ls', 'lesotho', 'lt', 'lithuania', 'lu', 'luxembourg', 'lv', 'latvia', 'ly', 'libya', 'ma', 'morocco', 'mc', 'monaco', 'md', 'moldova', 'me', 'montenegro', 'mg', 'madagascar', 'mh', 'marshall islands', 'mk', 'macedonia', 'ml', 'mali', 'mm', 'myanmar', 'burma', 'mn', 'mongolia', 'mo', 'macau', 'mp', 'northern mariana islands', 'mq', 'martinique', 'mr', 'mauritania', 'ms', 'montserrat', 'mt', 'malta', 'mu', 'mauritius', 'mv', 'maldives', 'mw', 'malawi', 'mx', 'mexico', 'my', 'malaysia', 'mz', 'mozambique', 'na', 'namibia', 'nc', 'new caledonia', 'ne', 'niger', 'nf', 'norfolk island', 'ng', 'nigeria', 'ni', 'nicaragua', 'nl', 'netherlands', 'no', 'norway', 'np', 'nepal', 'nr', 'nauru', 'nu', 'niue', 'nz', 'new zealand', 'om', 'oman', 'pa', 'panama', 'pe', 'peru', 'pf', 'french polynesia', 'pg', 'new guinea', 'ph', 'philippines', 'pk', 'pakistan', 'pl', 'poland', 'pm', 'saint pierre', 'pn', 'pitcairn islands', 'pr', 'puerto rico', 'ps', 'palestine', 'pt', 'portugal', 'pw', 'palau', 'py', 'paraguay', 'qa', 'qatar', 're', 'reunion', 'ro', 'romania', 'rs', 'serbia', 'ru', 'russia', 'rw', 'rwanda', 'sa', 'saudi arabia', 'sb', 'solomon islands', 'sc', 'seychelles', 'gb sct', 'scotland', 'sd', 'sudan', 'se', 'sweden', 'sg', 'singapore', 'sh', 'saint helena', 'si', 'slovenia', 'sj', 'svalbard', 'jan mayen', 'sk', 'slovakia', 'sl', 'sierra leone', 'sm', 'san marino', 'sn', 'senegal', 'so', 'somalia', 'sr', 'suriname', 'st', 'sao tome', 'sv', 'el salvador', 'sy', 'syria', 'sz', 'swaziland', 'tc', 'caicos islands', 'td', 'chad', 'tf', 'french territories', 'tg', 'togo', 'th', 'thailand', 'tj', 'tajikistan', 'tk', 'tokelau', 'tl', 'timorleste', 'tm', 'turkmenistan', 'tn', 'tunisia', 'to', 'tonga', 'tr', 'turkey', 'tt', 'trinidad', 'tv', 'tuvalu', 'tw', 'taiwan', 'tz', 'tanzania', 'ua', 'ukraine', 'ug', 'uganda', 'um', 'us minor islands', 'us', 'america', 'united states', 'uy', 'uruguay', 'uz', 'uzbekistan', 'va', 'vatican city', 'vc', 'saint vincent', 've', 'venezuela', 'vg', 'british virgin islands', 'vi', 'us virgin islands', 'vn', 'vietnam', 'vu', 'vanuatu', 'gb wls', 'wales', 'wf', 'wallis and futuna', 'ws', 'samoa', 'ye', 'yemen', 'yt', 'mayotte', 'za', 'south africa', 'zm', 'zambia', 'zw', 'zimbabwe'];

  function Flag(props) {
    var className = props.className,
        name = props.name;

    var classes = (0, _classnames2.default)(name, className, 'flag');
    var rest = (0, _lib.getUnhandledProps)(Flag, props);
    var ElementType = (0, _lib.getElementType)(Flag, props);

    return _react2.default.createElement(ElementType, _extends({}, rest, { className: classes }));
  }

  Flag._meta = {
    name: 'Flag',
    type: _lib.META.TYPES.ELEMENT,
    props: {
      name: names
    }
  };

  Flag.propTypes = {
    /** An element type to render as (string or function). */
    as: _lib.customPropTypes.as,

    /** Additional classes. */
    className: _react.PropTypes.string,

    /** Flag name, can use the two digit country code, the full name, or a common alias */
    name: _lib.customPropTypes.suggest(Flag._meta.props.name)
  };

  Flag.defaultProps = {
    as: 'i'
  };

  Flag.create = (0, _lib.createShorthandFactory)(Flag, function (value) {
    return { name: value };
  });

  exports.default = Flag;

/***/ },
/* 990 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _Image = __webpack_require__(942);

  var _Image2 = _interopRequireDefault(_Image);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  exports.default = _Image2.default;

/***/ },
/* 991 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _isNil2 = __webpack_require__(927);

  var _isNil3 = _interopRequireDefault(_isNil2);

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _classnames = __webpack_require__(794);

  var _classnames2 = _interopRequireDefault(_classnames);

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _lib = __webpack_require__(684);

  var _Icon = __webpack_require__(966);

  var _Icon2 = _interopRequireDefault(_Icon);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function DropdownHeader(props) {
    var children = props.children,
        className = props.className,
        content = props.content,
        icon = props.icon;

    var classes = (0, _classnames2.default)('header', className);
    var rest = (0, _lib.getUnhandledProps)(DropdownHeader, props);
    var ElementType = (0, _lib.getElementType)(DropdownHeader, props);

    if (!(0, _isNil3.default)(children)) {
      return _react2.default.createElement(
        ElementType,
        _extends({}, rest, { className: classes }),
        children
      );
    }

    return _react2.default.createElement(
      ElementType,
      _extends({}, rest, { className: classes }),
      _Icon2.default.create(icon),
      content
    );
  }

  DropdownHeader._meta = {
    name: 'DropdownHeader',
    parent: 'Dropdown',
    type: _lib.META.TYPES.MODULE
  };

  DropdownHeader.propTypes = {
    /** An element type to render as (string or function) */
    as: _lib.customPropTypes.as,

    /** Primary content. */
    children: _react.PropTypes.node,

    /** Additional classes. */
    className: _react.PropTypes.string,

    /** Shorthand for primary content. */
    content: _lib.customPropTypes.contentShorthand,

    /** Shorthand for Icon. */
    icon: _lib.customPropTypes.itemShorthand
  };

  exports.default = DropdownHeader;

/***/ },
/* 992 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _classnames = __webpack_require__(794);

  var _classnames2 = _interopRequireDefault(_classnames);

  var _lib = __webpack_require__(684);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function DropdownMenu(props) {
    var children = props.children,
        className = props.className,
        scrolling = props.scrolling;

    var classes = (0, _classnames2.default)((0, _lib.useKeyOnly)(scrolling, 'scrolling'), 'menu transition', className);
    var rest = (0, _lib.getUnhandledProps)(DropdownMenu, props);
    var ElementType = (0, _lib.getElementType)(DropdownMenu, props);

    return _react2.default.createElement(
      ElementType,
      _extends({}, rest, { className: classes }),
      children
    );
  }

  DropdownMenu._meta = {
    name: 'DropdownMenu',
    parent: 'Dropdown',
    type: _lib.META.TYPES.MODULE
  };

  DropdownMenu.propTypes = {
    /** An element type to render as (string or function). */
    as: _lib.customPropTypes.as,

    /** Primary content. */
    children: _react.PropTypes.node,

    /** Additional classes. */
    className: _react.PropTypes.string,

    /** A dropdown menu can scroll. */
    scrolling: _react.PropTypes.bool
  };

  exports.default = DropdownMenu;

/***/ },
/* 993 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _TextArea = __webpack_require__(994);

  var _TextArea2 = _interopRequireDefault(_TextArea);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  exports.default = _TextArea2.default;

/***/ },
/* 994 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _lib = __webpack_require__(684);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

  function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

  /**
   * A TextArea can be used to allow for extended user input.
   * @see Form
   */
  var TextArea = function (_Component) {
    _inherits(TextArea, _Component);

    function TextArea() {
      var _ref;

      var _temp, _this, _ret;

      _classCallCheck(this, TextArea);

      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = TextArea.__proto__ || Object.getPrototypeOf(TextArea)).call.apply(_ref, [this].concat(args))), _this), _this.handleChange = function (e) {
        var onChange = _this.props.onChange;

        if (onChange) onChange(e, _extends({}, _this.props, { value: e.target && e.target.value }));

        _this.updateHeight(e.target);
      }, _this.removeAutoHeightStyles = function () {
        _this.rootNode.removeAttribute('rows');
        _this.rootNode.style.height = null;
        _this.rootNode.style.minHeight = null;
        _this.rootNode.style.resize = null;
      }, _this.updateHeight = function () {
        if (!_this.rootNode) return;

        var autoHeight = _this.props.autoHeight;

        if (!autoHeight) return;

        var _window$getComputedSt = window.getComputedStyle(_this.rootNode),
            borderTopWidth = _window$getComputedSt.borderTopWidth,
            borderBottomWidth = _window$getComputedSt.borderBottomWidth;

        borderTopWidth = parseInt(borderTopWidth, 10);
        borderBottomWidth = parseInt(borderBottomWidth, 10);

        _this.rootNode.rows = '1';
        _this.rootNode.style.minHeight = '0';
        _this.rootNode.style.resize = 'none';
        _this.rootNode.style.height = 'auto';
        _this.rootNode.style.height = _this.rootNode.scrollHeight + borderTopWidth + borderBottomWidth + 'px';
      }, _temp), _possibleConstructorReturn(_this, _ret);
    }

    _createClass(TextArea, [{
      key: 'componentDidMount',
      value: function componentDidMount() {
        this.updateHeight();
      }
    }, {
      key: 'componentDidUpdate',
      value: function componentDidUpdate(prevProps, prevState) {
        // removed autoHeight
        if (!this.props.autoHeight && prevProps.autoHeight) {
          this.removeAutoHeightStyles();
        }
        // added autoHeight or value changed
        if (this.props.autoHeight && !prevProps.autoHeight || prevProps.value !== this.props.value) {
          this.updateHeight();
        }
      }
    }, {
      key: 'render',
      value: function render() {
        var _this2 = this;

        var value = this.props.value;

        var rest = (0, _lib.getUnhandledProps)(TextArea, this.props);
        var ElementType = (0, _lib.getElementType)(TextArea, this.props);

        return _react2.default.createElement(ElementType, _extends({}, rest, {
          value: value,
          onChange: this.handleChange,
          ref: function ref(c) {
            return _this2.rootNode = c;
          }
        }));
      }
    }]);

    return TextArea;
  }(_react.Component);

  TextArea._meta = {
    name: 'TextArea',
    type: _lib.META.TYPES.ADDON
  };
  TextArea.propTypes = {
    /** An element type to render as (string or function). */
    as: _lib.customPropTypes.as,

    /** Indicates whether height of the textarea fits the content or not */
    autoHeight: _react.PropTypes.bool,

    /**
     * Called on change.
     * @param {SyntheticEvent} event - The React SyntheticEvent object
     * @param {object} data - All props and the event value.
     */
    onChange: _react.PropTypes.func,

    /** The value of the textarea. */
    value: _react.PropTypes.string
  };
  TextArea.defaultProps = {
    as: 'textarea'
  };
  exports.default = TextArea;

/***/ },
/* 995 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _Breadcrumb = __webpack_require__(996);

  var _Breadcrumb2 = _interopRequireDefault(_Breadcrumb);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  exports.default = _Breadcrumb2.default;

/***/ },
/* 996 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _without2 = __webpack_require__(939);

  var _without3 = _interopRequireDefault(_without2);

  var _map2 = __webpack_require__(918);

  var _map3 = _interopRequireDefault(_map2);

  var _each2 = __webpack_require__(778);

  var _each3 = _interopRequireDefault(_each2);

  var _isNil2 = __webpack_require__(927);

  var _isNil3 = _interopRequireDefault(_isNil2);

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _classnames = __webpack_require__(794);

  var _classnames2 = _interopRequireDefault(_classnames);

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _lib = __webpack_require__(684);

  var _BreadcrumbDivider = __webpack_require__(997);

  var _BreadcrumbDivider2 = _interopRequireDefault(_BreadcrumbDivider);

  var _BreadcrumbSection = __webpack_require__(998);

  var _BreadcrumbSection2 = _interopRequireDefault(_BreadcrumbSection);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  /**
   * A breadcrumb is used to show hierarchy between content.
   */
  function Breadcrumb(props) {
    var children = props.children,
        className = props.className,
        divider = props.divider,
        icon = props.icon,
        size = props.size,
        sections = props.sections;

    var classes = (0, _classnames2.default)('ui', className, size, 'breadcrumb');
    var rest = (0, _lib.getUnhandledProps)(Breadcrumb, props);
    var ElementType = (0, _lib.getElementType)(Breadcrumb, props);

    if (!(0, _isNil3.default)(children)) {
      return _react2.default.createElement(
        ElementType,
        _extends({}, rest, { className: classes }),
        children
      );
    }

    var childElements = [];

    (0, _each3.default)(sections, function (section, index) {
      // section
      var breadcrumbSection = _BreadcrumbSection2.default.create(section);
      childElements.push(breadcrumbSection);

      // divider
      if (index !== sections.length - 1) {
        // TODO generate a key from breadcrumbSection.props once this is merged:
        // https://github.com/Semantic-Org/Semantic-UI-React/pull/645
        //
        // Stringify the props of the section as the divider key.
        //
        // Section:     { content: 'Home', link: true, onClick: handleClick }
        // Divider key: content=Home|link=true|onClick=handleClick
        var key = void 0;
        if (section.key) {
          key = section.key + '_divider';
        } else {
          key = (0, _map3.default)(breadcrumbSection.props, function (v, k) {
            return k + '=' + (typeof v === 'function' ? v.name || 'func' : v);
          }).join('|');
        }
        childElements.push(_BreadcrumbDivider2.default.create({ content: divider, icon: icon, key: key }));
      }
    });

    return _react2.default.createElement(
      ElementType,
      _extends({}, rest, { className: classes }),
      childElements
    );
  }

  Breadcrumb._meta = {
    name: 'Breadcrumb',
    type: _lib.META.TYPES.COLLECTION,
    props: {
      size: (0, _without3.default)(_lib.SUI.SIZES, 'medium')
    }
  };

  Breadcrumb.propTypes = {
    /** An element type to render as (string or function). */
    as: _lib.customPropTypes.as,

    /** Primary content. */
    children: _react.PropTypes.node,

    /** Additional classes. */
    className: _react.PropTypes.string,

    /** Shorthand for primary content of the Breadcrumb.Divider. */
    divider: _lib.customPropTypes.every([_lib.customPropTypes.disallow(['icon']), _lib.customPropTypes.contentShorthand]),

    /** For use with the sections prop. Render as an `Icon` component with `divider` class instead of a `div` in
     *  Breadcrumb.Divider. */
    icon: _lib.customPropTypes.every([_lib.customPropTypes.disallow(['divider']), _lib.customPropTypes.itemShorthand]),

    /** Shorthand array of props for Breadcrumb.Section. */
    sections: _lib.customPropTypes.collectionShorthand,

    /** Size of Breadcrumb */
    size: _react.PropTypes.oneOf(Breadcrumb._meta.props.size)
  };

  Breadcrumb.Divider = _BreadcrumbDivider2.default;
  Breadcrumb.Section = _BreadcrumbSection2.default;

  exports.default = Breadcrumb;

/***/ },
/* 997 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _isNil2 = __webpack_require__(927);

  var _isNil3 = _interopRequireDefault(_isNil2);

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _classnames = __webpack_require__(794);

  var _classnames2 = _interopRequireDefault(_classnames);

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _lib = __webpack_require__(684);

  var _Icon = __webpack_require__(966);

  var _Icon2 = _interopRequireDefault(_Icon);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  /**
   * A divider sub-component for Breadcrumb component.
   */
  function BreadcrumbDivider(props) {
    var children = props.children,
        content = props.content,
        icon = props.icon,
        className = props.className;

    var classes = (0, _classnames2.default)(className, 'divider');
    var rest = (0, _lib.getUnhandledProps)(BreadcrumbDivider, props);
    var ElementType = (0, _lib.getElementType)(BreadcrumbDivider, props);

    var iconElement = _Icon2.default.create(icon, _extends({}, rest, { className: classes }));
    if (iconElement) return iconElement;

    var breadcrumbContent = void 0;
    if ((0, _isNil3.default)(content)) {
      breadcrumbContent = (0, _isNil3.default)(children) ? '/' : children;
    } else {
      breadcrumbContent = content;
    }
    return _react2.default.createElement(
      ElementType,
      _extends({}, rest, { className: classes }),
      breadcrumbContent
    );
  }

  BreadcrumbDivider._meta = {
    name: 'BreadcrumbDivider',
    type: _lib.META.TYPES.COLLECTION,
    parent: 'Breadcrumb'
  };

  BreadcrumbDivider.propTypes = {
    /** An element type to render as (string or function). */
    as: _lib.customPropTypes.as,

    /** Primary content. */
    children: _react.PropTypes.node,

    /** Additional classes. */
    className: _react.PropTypes.string,

    /** Shorthand for primary content. */
    content: _lib.customPropTypes.contentShorthand,

    /** Render as an `Icon` component with `divider` class instead of a `div`. */
    icon: _lib.customPropTypes.itemShorthand
  };

  BreadcrumbDivider.create = (0, _lib.createShorthandFactory)(BreadcrumbDivider, function (icon) {
    return { icon: icon };
  });

  exports.default = BreadcrumbDivider;

/***/ },
/* 998 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _isNil2 = __webpack_require__(927);

  var _isNil3 = _interopRequireDefault(_isNil2);

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

  var _classnames = __webpack_require__(794);

  var _classnames2 = _interopRequireDefault(_classnames);

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _lib = __webpack_require__(684);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

  function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

  /**
   * A section sub-component for Breadcrumb component
   */
  var BreadcrumbSection = function (_Component) {
    _inherits(BreadcrumbSection, _Component);

    function BreadcrumbSection() {
      var _ref;

      var _temp, _this, _ret;

      _classCallCheck(this, BreadcrumbSection);

      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = BreadcrumbSection.__proto__ || Object.getPrototypeOf(BreadcrumbSection)).call.apply(_ref, [this].concat(args))), _this), _this.handleClick = function (e) {
        var onClick = _this.props.onClick;


        if (onClick) onClick(e, _this.props);
      }, _temp), _possibleConstructorReturn(_this, _ret);
    }

    _createClass(BreadcrumbSection, [{
      key: 'render',
      value: function render() {
        var _props = this.props,
            active = _props.active,
            children = _props.children,
            className = _props.className,
            content = _props.content,
            href = _props.href,
            link = _props.link,
            onClick = _props.onClick;


        var classes = (0, _classnames2.default)((0, _lib.useKeyOnly)(active, 'active'), 'section', className);
        var rest = (0, _lib.getUnhandledProps)(BreadcrumbSection, this.props);
        var ElementType = (0, _lib.getElementType)(BreadcrumbSection, this.props, function () {
          if (link || onClick) return 'a';
        });

        return _react2.default.createElement(
          ElementType,
          _extends({}, rest, { className: classes, href: href, onClick: this.handleClick }),
          (0, _isNil3.default)(children) ? content : children
        );
      }
    }]);

    return BreadcrumbSection;
  }(_react.Component);

  BreadcrumbSection.propTypes = {
    /** An element type to render as (string or function). */
    as: _lib.customPropTypes.as,

    /** Style as the currently active section. */
    active: _react.PropTypes.bool,

    /** Primary content. */
    children: _react.PropTypes.node,

    /** Additional classes. */
    className: _react.PropTypes.string,

    /** Shorthand for primary content. */
    content: _lib.customPropTypes.contentShorthand,

    /** Render as an `a` tag instead of a `div`. */
    link: _lib.customPropTypes.every([_lib.customPropTypes.disallow(['href']), _react.PropTypes.bool]),

    /** Render as an `a` tag instead of a `div` and adds the href attribute. */
    href: _lib.customPropTypes.every([_lib.customPropTypes.disallow(['link']), _react.PropTypes.string]),

    /**
     * Called on click. When passed, the component will render as an `a`
     * tag by default instead of a `div`.
     *
     * @param {SyntheticEvent} event - React's original SyntheticEvent.
     * @param {object} data - All props.
     */
    onClick: _react.PropTypes.func
  };
  BreadcrumbSection._meta = {
    name: 'BreadcrumbSection',
    type: _lib.META.TYPES.COLLECTION,
    parent: 'Breadcrumb'
  };
  exports.default = BreadcrumbSection;


  BreadcrumbSection.create = (0, _lib.createShorthandFactory)(BreadcrumbSection, function (content) {
    return { content: content, link: true };
  }, true);

/***/ },
/* 999 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _Form = __webpack_require__(1000);

  var _Form2 = _interopRequireDefault(_Form);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  exports.default = _Form2.default;

/***/ },
/* 1000 */
/***/ function(module, exports, __webpack_require__) {

  /* WEBPACK VAR INJECTION */(function(process) {'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _without2 = __webpack_require__(939);

  var _without3 = _interopRequireDefault(_without2);

  var _map2 = __webpack_require__(918);

  var _map3 = _interopRequireDefault(_map2);

  var _find2 = __webpack_require__(805);

  var _find3 = _interopRequireDefault(_find2);

  var _filter2 = __webpack_require__(719);

  var _filter3 = _interopRequireDefault(_filter2);

  var _each2 = __webpack_require__(778);

  var _each3 = _interopRequireDefault(_each2);

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

  var _classnames = __webpack_require__(794);

  var _classnames2 = _interopRequireDefault(_classnames);

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _lib = __webpack_require__(684);

  var _FormButton = __webpack_require__(1001);

  var _FormButton2 = _interopRequireDefault(_FormButton);

  var _FormCheckbox = __webpack_require__(1003);

  var _FormCheckbox2 = _interopRequireDefault(_FormCheckbox);

  var _FormDropdown = __webpack_require__(1004);

  var _FormDropdown2 = _interopRequireDefault(_FormDropdown);

  var _FormField = __webpack_require__(1002);

  var _FormField2 = _interopRequireDefault(_FormField);

  var _FormGroup = __webpack_require__(1005);

  var _FormGroup2 = _interopRequireDefault(_FormGroup);

  var _FormInput = __webpack_require__(1006);

  var _FormInput2 = _interopRequireDefault(_FormInput);

  var _FormRadio = __webpack_require__(1009);

  var _FormRadio2 = _interopRequireDefault(_FormRadio);

  var _FormSelect = __webpack_require__(1010);

  var _FormSelect2 = _interopRequireDefault(_FormSelect);

  var _FormTextArea = __webpack_require__(1011);

  var _FormTextArea2 = _interopRequireDefault(_FormTextArea);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

  function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  var debug = (0, _lib.makeDebugger)('form');

  var getNodeName = function getNodeName(_ref) {
    var name = _ref.name;
    return name;
  };
  var debugSerializedResult = function debugSerializedResult() {
    return undefined;
  };

  if (process.NODE_ENV !== 'production') {
    // debug serialized values
    debugSerializedResult = function debugSerializedResult(json, name, node) {
      debug('serialized ' + JSON.stringify(_defineProperty({}, name, json[name])) + ' from:', node);
    };

    // warn about form nodes missing a "name"
    getNodeName = function getNodeName(node) {
      var name = node.name;

      if (!name) {
        var errorMessage = ['Encountered a form control node without a name attribute.', 'Each node in a group should have a name.', 'Otherwise, the node will serialize as { "undefined": <value> }.'].join(' ');
        console.error(errorMessage, node); // eslint-disable-line no-console
      }

      return name;
    };
  }

  function formSerializer(formNode) {
    debug('formSerializer()');
    var json = {};
    // handle empty formNode ref
    if (!formNode) return json;

    // ----------------------------------------
    // Checkboxes
    // Single: { name: value|bool        }
    // Group:  { name: [value|bool, ...] }

    (0, _each3.default)(formNode.querySelectorAll('input[type="checkbox"]'), function (node, index, arr) {
      var name = getNodeName(node);
      var checkboxesByName = (0, _filter3.default)(arr, { name: name });

      // single: (value|checked)
      if (checkboxesByName.length === 1) {
        json[name] = node.checked && node.value !== 'on' ? node.value : node.checked;
        debugSerializedResult(json, name, node);
        return;
      }

      // groups (checked): [value, ...]
      if (!Array.isArray(json[name])) json[name] = [];
      if (node.checked) json[name].push(node.value);
      debugSerializedResult(json, name, node);

      // in dev, warn about multiple checkboxes with a default browser value of "on"
      if (process.NODE_ENV !== 'production' && node.value === 'on') {
        var errorMessage = ["Encountered a checkbox in a group with the default browser value 'on'.", 'Each checkbox in a group should have a unique value.', "Otherwise, the checkbox value will serialize as ['on', ...]."].join(' ');
        console.error(errorMessage, node, formNode); // eslint-disable-line no-console
      }
    });

    // ----------------------------------------
    // Radios
    // checked: { name: checked value }
    // none:    { name: null }

    (0, _each3.default)(formNode.querySelectorAll('input[type="radio"]'), function (node, index, arr) {
      var name = getNodeName(node);
      var checkedRadio = (0, _find3.default)(arr, { name: name, checked: true });

      if (checkedRadio) {
        json[name] = checkedRadio.value;
      } else {
        json[name] = null;
      }

      debugSerializedResult(json, name, node);

      // in dev, warn about radios with a default browser value of "on"
      if (process.NODE_ENV !== 'production' && node.value === 'on') {
        var errorMessage = ["Encountered a radio with the default browser value 'on'.", 'Each radio should have a unique value.', "Otherwise, the radio value will serialize as { [name]: 'on' }."].join(' ');
        console.error(errorMessage, node, formNode); // eslint-disable-line no-console
      }
    });

    // ----------------------------------------
    // Other inputs
    // { name: value }

    (0, _each3.default)(formNode.querySelectorAll('input:not([type="radio"]):not([type="checkbox"])'), function (node) {
      var name = getNodeName(node);
      json[name] = node.value;
      debugSerializedResult(json, name, node);
    });

    // ----------------------------------------
    // Other inputs and text areas
    // { name: value }

    (0, _each3.default)(formNode.querySelectorAll('textarea'), function (node) {
      var name = getNodeName(node);
      json[name] = node.value;
      debugSerializedResult(json, name, node);
    });

    // ----------------------------------------
    // Selects
    // single:   { name: value }
    // multiple: { name: [value, ...] }

    (0, _each3.default)(formNode.querySelectorAll('select'), function (node) {
      var name = getNodeName(node);

      if (node.multiple) {
        json[name] = (0, _map3.default)((0, _filter3.default)(node.querySelectorAll('option'), 'selected'), 'value');
      } else {
        json[name] = node.value;
      }

      debugSerializedResult(json, name, node);
    });

    return json;
  }

  var _meta = {
    name: 'Form',
    type: _lib.META.TYPES.COLLECTION,
    props: {
      widths: ['equal'],
      size: (0, _without3.default)(_lib.SUI.SIZES, 'medium')
    }
  };

  /**
   * A Form displays a set of related user input fields in a structured way.
   * @see Button
   * @see Checkbox
   * @see Dropdown
   * @see Input
   * @see Message
   * @see Radio
   * @see Select
   * @see TextArea
   */

  var Form = function (_Component) {
    _inherits(Form, _Component);

    function Form() {
      var _ref2;

      var _temp, _this, _ret;

      _classCallCheck(this, Form);

      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref2 = Form.__proto__ || Object.getPrototypeOf(Form)).call.apply(_ref2, [this].concat(args))), _this), _this._form = null, _this.handleRef = function (c) {
        return _this._form = _this._form || c;
      }, _this.handleSubmit = function (e) {
        var _this$props = _this.props,
            onSubmit = _this$props.onSubmit,
            serializer = _this$props.serializer;


        if (onSubmit) onSubmit(e, _extends({}, _this.props, { formData: serializer(_this._form) }));
      }, _temp), _possibleConstructorReturn(_this, _ret);
    }

    _createClass(Form, [{
      key: 'render',
      value: function render() {
        var _props = this.props,
            children = _props.children,
            className = _props.className,
            error = _props.error,
            loading = _props.loading,
            reply = _props.reply,
            size = _props.size,
            success = _props.success,
            warning = _props.warning,
            widths = _props.widths;


        var classes = (0, _classnames2.default)('ui', size, (0, _lib.useKeyOnly)(error, 'error'), (0, _lib.useKeyOnly)(loading, 'loading'), (0, _lib.useKeyOnly)(reply, 'reply'), (0, _lib.useKeyOnly)(success, 'success'), (0, _lib.useKeyOnly)(warning, 'warning'), (0, _lib.useWidthProp)(widths, null, true), 'form', className);
        var rest = (0, _lib.getUnhandledProps)(Form, this.props);
        var ElementType = (0, _lib.getElementType)(Form, this.props);

        return _react2.default.createElement(
          ElementType,
          _extends({}, rest, { className: classes, ref: this.handleRef, onSubmit: this.handleSubmit }),
          children
        );
      }
    }]);

    return Form;
  }(_react.Component);

  Form.defaultProps = {
    as: 'form',
    serializer: formSerializer
  };
  Form.propTypes = {
    /** An element type to render as (string or function). */
    as: _lib.customPropTypes.as,

    /** Primary content. */
    children: _react.PropTypes.node,

    /** Additional classes. */
    className: _react.PropTypes.string,

    /** Automatically show any error Message children */
    error: _react.PropTypes.bool,

    /** Automatically show a loading indicator */
    loading: _react.PropTypes.bool,

    /**
     * Called on submit
     *
     * @param {SyntheticEvent} event - React's original SyntheticEvent.
     * @param {object} data - All props and the form's serialized values.
     */
    onSubmit: _react.PropTypes.func,

    /** A comment can contain a form to reply to a comment. This may have arbitrary content. */
    reply: _react.PropTypes.bool,

    /** Called onSubmit with the form node that returns the serialized form object */
    serializer: _react.PropTypes.func,

    /** A form can vary in size */
    size: _react.PropTypes.oneOf(_meta.props.size),

    /** Automatically show any success Message children */
    success: _react.PropTypes.bool,

    /** Automatically show any warning Message children */
    warning: _react.PropTypes.bool,

    /** Forms can automatically divide fields to be equal width */
    widths: _react.PropTypes.oneOf(_meta.props.widths)
  };
  Form._meta = _meta;
  Form.Field = _FormField2.default;
  Form.Button = _FormButton2.default;
  Form.Checkbox = _FormCheckbox2.default;
  Form.Dropdown = _FormDropdown2.default;
  Form.Group = _FormGroup2.default;
  Form.Input = _FormInput2.default;
  Form.Radio = _FormRadio2.default;
  Form.Select = _FormSelect2.default;
  Form.TextArea = _FormTextArea2.default;
  exports.default = Form;
  /* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(72)))

/***/ },
/* 1001 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _lib = __webpack_require__(684);

  var _Button = __webpack_require__(936);

  var _Button2 = _interopRequireDefault(_Button);

  var _FormField = __webpack_require__(1002);

  var _FormField2 = _interopRequireDefault(_FormField);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  /**
   * Sugar for <Form.Field control={Button} />
   * @see Button
   * @see Form
   */
  function FormButton(props) {
    var control = props.control;

    var rest = (0, _lib.getUnhandledProps)(FormButton, props);
    var ElementType = (0, _lib.getElementType)(FormButton, props);

    return _react2.default.createElement(ElementType, _extends({}, rest, { control: control }));
  }

  FormButton._meta = {
    name: 'FormButton',
    parent: 'Form',
    type: _lib.META.TYPES.COLLECTION
  };

  FormButton.propTypes = {
    /** An element type to render as (string or function). */
    as: _lib.customPropTypes.as,

    /** A FormField control prop */
    control: _FormField2.default.propTypes.control
  };

  FormButton.defaultProps = {
    as: _FormField2.default,
    control: _Button2.default
  };

  exports.default = FormButton;

/***/ },
/* 1002 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _isNil2 = __webpack_require__(927);

  var _isNil3 = _interopRequireDefault(_isNil2);

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _classnames = __webpack_require__(794);

  var _classnames2 = _interopRequireDefault(_classnames);

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _lib = __webpack_require__(684);

  var _Checkbox = __webpack_require__(969);

  var _Checkbox2 = _interopRequireDefault(_Checkbox);

  var _Radio = __webpack_require__(967);

  var _Radio2 = _interopRequireDefault(_Radio);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  /**
   * A field is a form element containing a label and an input
   * @see Form
   * @see Button
   * @see Checkbox
   * @see Dropdown
   * @see Input
   * @see Radio
   * @see Select
   * @see TextArea
   */
  function FormField(props) {
    var children = props.children,
        className = props.className,
        control = props.control,
        disabled = props.disabled,
        error = props.error,
        inline = props.inline,
        label = props.label,
        required = props.required,
        type = props.type,
        width = props.width;


    var classes = (0, _classnames2.default)((0, _lib.useKeyOnly)(disabled, 'disabled'), (0, _lib.useKeyOnly)(error, 'error'), (0, _lib.useKeyOnly)(inline, 'inline'), (0, _lib.useKeyOnly)(required, 'required'), (0, _lib.useWidthProp)(width, 'wide'), 'field', className);
    var rest = (0, _lib.getUnhandledProps)(FormField, props);
    var ElementType = (0, _lib.getElementType)(FormField, props);

    // ----------------------------------------
    // No Control
    // ----------------------------------------

    if ((0, _isNil3.default)(control)) {
      if ((0, _isNil3.default)(label)) return _react2.default.createElement(
        ElementType,
        _extends({}, rest, { className: classes }),
        children
      );

      return _react2.default.createElement(
        ElementType,
        _extends({}, rest, { className: classes }),
        (0, _lib.createHTMLLabel)(label)
      );
    }

    // ----------------------------------------
    // Checkbox/Radio Control
    // ----------------------------------------
    var controlProps = _extends({}, rest, { children: children, required: required, type: type });

    // wrap HTML checkboxes/radios in the label
    if (control === 'input' && (type === 'checkbox' || type === 'radio')) {
      return _react2.default.createElement(
        ElementType,
        { className: classes },
        _react2.default.createElement(
          'label',
          null,
          (0, _react.createElement)(control, controlProps),
          ' ',
          label
        )
      );
    }

    // pass label prop to controls that support it
    if (control === _Checkbox2.default || control === _Radio2.default) {
      return _react2.default.createElement(
        ElementType,
        { className: classes },
        (0, _react.createElement)(control, _extends({}, controlProps, { label: label }))
      );
    }

    // ----------------------------------------
    // Other Control
    // ----------------------------------------

    return _react2.default.createElement(
      ElementType,
      { className: classes },
      (0, _lib.createHTMLLabel)(label),
      (0, _react.createElement)(control, controlProps)
    );
  }

  FormField._meta = {
    name: 'FormField',
    parent: 'Form',
    type: _lib.META.TYPES.COLLECTION,
    props: {
      width: _lib.SUI.WIDTHS,
      control: ['button', 'input', 'select', 'textarea']
    }
  };

  FormField.propTypes = {
    /** An element type to render as (string or function). */
    as: _lib.customPropTypes.as,

    /** Primary content. */
    children: _react.PropTypes.node,

    /** Additional classes. */
    className: _react.PropTypes.string,

    /**
     * A form control component (i.e. Dropdown) or HTML tagName (i.e. 'input').
     * Extra FormField props are passed to the control component.
     * Mutually exclusive with children.
     */
    control: _lib.customPropTypes.some([_react.PropTypes.func, _react.PropTypes.oneOf(FormField._meta.props.control)]),

    /** Individual fields may be disabled */
    disabled: _react.PropTypes.bool,

    /** Individual fields may display an error state */
    error: _react.PropTypes.bool,

    /** A field can have its label next to instead of above it */
    inline: _react.PropTypes.bool,

    // Heads Up!
    // Do not disallow children with `label` shorthand
    // The `control` might accept a `label` prop and `children`
    /** Mutually exclusive with children. */
    label: _react.PropTypes.oneOfType([_react.PropTypes.node, _react.PropTypes.object]),

    /** A field can show that input is mandatory.  Requires a label. */
    required: _lib.customPropTypes.every([_lib.customPropTypes.demand(['label']), _react.PropTypes.bool]),

    /** Passed to the control component (i.e. <input type='password' />) */
    type: _lib.customPropTypes.every([_lib.customPropTypes.demand(['control'])]),

    /** A field can specify its width in grid columns */
    width: _react.PropTypes.oneOf(FormField._meta.props.width)
  };

  exports.default = FormField;

/***/ },
/* 1003 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _lib = __webpack_require__(684);

  var _Checkbox = __webpack_require__(969);

  var _Checkbox2 = _interopRequireDefault(_Checkbox);

  var _FormField = __webpack_require__(1002);

  var _FormField2 = _interopRequireDefault(_FormField);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  /**
   * Sugar for <Form.Field control={Checkbox} />
   * @see Checkbox
   * @see Form
   */
  function FormCheckbox(props) {
    var control = props.control;

    var rest = (0, _lib.getUnhandledProps)(FormCheckbox, props);
    var ElementType = (0, _lib.getElementType)(FormCheckbox, props);

    return _react2.default.createElement(ElementType, _extends({}, rest, { control: control }));
  }

  FormCheckbox._meta = {
    name: 'FormCheckbox',
    parent: 'Form',
    type: _lib.META.TYPES.COLLECTION
  };

  FormCheckbox.propTypes = {
    /** An element type to render as (string or function). */
    as: _lib.customPropTypes.as,

    /** A FormField control prop */
    control: _FormField2.default.propTypes.control
  };

  FormCheckbox.defaultProps = {
    as: _FormField2.default,
    control: _Checkbox2.default
  };

  exports.default = FormCheckbox;

/***/ },
/* 1004 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _lib = __webpack_require__(684);

  var _Dropdown = __webpack_require__(973);

  var _Dropdown2 = _interopRequireDefault(_Dropdown);

  var _FormField = __webpack_require__(1002);

  var _FormField2 = _interopRequireDefault(_FormField);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  /**
   * Sugar for <Form.Field control={Dropdown} />
   * @see Dropdown
   * @see Form
   */
  function FormDropdown(props) {
    var control = props.control;

    var rest = (0, _lib.getUnhandledProps)(FormDropdown, props);
    var ElementType = (0, _lib.getElementType)(FormDropdown, props);

    return _react2.default.createElement(ElementType, _extends({}, rest, { control: control }));
  }

  FormDropdown._meta = {
    name: 'FormDropdown',
    parent: 'Form',
    type: _lib.META.TYPES.COLLECTION
  };

  FormDropdown.propTypes = {
    /** An element type to render as (string or function). */
    as: _lib.customPropTypes.as,

    /** A FormField control prop */
    control: _FormField2.default.propTypes.control
  };

  FormDropdown.defaultProps = {
    as: _FormField2.default,
    control: _Dropdown2.default
  };

  exports.default = FormDropdown;

/***/ },
/* 1005 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _classnames = __webpack_require__(794);

  var _classnames2 = _interopRequireDefault(_classnames);

  var _lib = __webpack_require__(684);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

  /**
   * A set of fields can appear grouped together
   * @see Form
   */
  function FormGroup(props) {
    var children = props.children,
        className = props.className,
        grouped = props.grouped,
        inline = props.inline,
        widths = props.widths;

    var classes = (0, _classnames2.default)((0, _lib.useWidthProp)(widths, null, true), (0, _lib.useKeyOnly)(inline, 'inline'), (0, _lib.useKeyOnly)(grouped, 'grouped'), 'fields', className);
    var rest = (0, _lib.getUnhandledProps)(FormGroup, props);
    var ElementType = (0, _lib.getElementType)(FormGroup, props);

    return _react2.default.createElement(
      ElementType,
      _extends({}, rest, { className: classes }),
      children
    );
  }

  FormGroup._meta = {
    name: 'FormGroup',
    parent: 'Form',
    type: _lib.META.TYPES.COLLECTION,
    props: {
      widths: [].concat(_toConsumableArray(_lib.SUI.WIDTHS), ['equal'])
    }
  };

  FormGroup.propTypes = {
    /** An element type to render as (string or function). */
    as: _lib.customPropTypes.as,

    /** Primary content. */
    children: _react.PropTypes.node,

    /** Additional classes. */
    className: _react.PropTypes.string,

    /** Fields can show related choices */
    grouped: _lib.customPropTypes.every([_lib.customPropTypes.disallow(['inline']), _react.PropTypes.bool]),

    /** Multiple fields may be inline in a row */
    inline: _lib.customPropTypes.every([_lib.customPropTypes.disallow(['grouped']), _react.PropTypes.bool]),

    /** Fields Groups can specify their width in grid columns or automatically divide fields to be equal width */
    widths: _react.PropTypes.oneOf(FormGroup._meta.props.widths)
  };

  FormGroup.defaultProps = {
    as: 'div'
  };

  exports.default = FormGroup;

/***/ },
/* 1006 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _lib = __webpack_require__(684);

  var _Input = __webpack_require__(1007);

  var _Input2 = _interopRequireDefault(_Input);

  var _FormField = __webpack_require__(1002);

  var _FormField2 = _interopRequireDefault(_FormField);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  /**
   * Sugar for <Form.Field control={Input} />
   * @see Form
   * @see Input
   */
  function FormInput(props) {
    var control = props.control;

    var rest = (0, _lib.getUnhandledProps)(FormInput, props);
    var ElementType = (0, _lib.getElementType)(FormInput, props);

    return _react2.default.createElement(ElementType, _extends({}, rest, { control: control }));
  }

  FormInput._meta = {
    name: 'FormInput',
    parent: 'Form',
    type: _lib.META.TYPES.COLLECTION
  };

  FormInput.propTypes = {
    /** An element type to render as (string or function). */
    as: _lib.customPropTypes.as,

    /** A FormField control prop */
    control: _FormField2.default.propTypes.control
  };

  FormInput.defaultProps = {
    as: _FormField2.default,
    control: _Input2.default
  };

  exports.default = FormInput;

/***/ },
/* 1007 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _Input = __webpack_require__(1008);

  var _Input2 = _interopRequireDefault(_Input);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  exports.default = _Input2.default;

/***/ },
/* 1008 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.htmlInputPropNames = undefined;

  var _includes2 = __webpack_require__(923);

  var _includes3 = _interopRequireDefault(_includes2);

  var _map2 = __webpack_require__(918);

  var _map3 = _interopRequireDefault(_map2);

  var _isNil2 = __webpack_require__(927);

  var _isNil3 = _interopRequireDefault(_isNil2);

  var _pick2 = __webpack_require__(891);

  var _pick3 = _interopRequireDefault(_pick2);

  var _omit2 = __webpack_require__(960);

  var _omit3 = _interopRequireDefault(_omit2);

  var _get2 = __webpack_require__(767);

  var _get3 = _interopRequireDefault(_get2);

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _classnames = __webpack_require__(794);

  var _classnames2 = _interopRequireDefault(_classnames);

  var _lib = __webpack_require__(684);

  var _Button = __webpack_require__(936);

  var _Button2 = _interopRequireDefault(_Button);

  var _Icon = __webpack_require__(966);

  var _Icon2 = _interopRequireDefault(_Icon);

  var _Label = __webpack_require__(985);

  var _Label2 = _interopRequireDefault(_Label);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

  function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

  var htmlInputPropNames = exports.htmlInputPropNames = [
  // REACT
  'selected', 'defaultValue', 'defaultChecked',

  // LIMITED HTML PROPS
  'autoComplete', 'autoFocus', 'checked', 'form', 'max', 'maxLength', 'min', 'name', 'pattern', 'placeholder', 'readOnly', 'required', 'step', 'type', 'value',

  // Heads Up!
  // Do not pass disabled, it duplicates the SUI CSS opacity rule.
  // 'disabled',

  // EVENTS
  // keyboard
  'onKeyDown', 'onKeyPress', 'onKeyUp',

  // focus
  'onFocus', 'onBlur',

  // form
  'onChange', 'onInput',

  // mouse
  'onClick', 'onContextMenu', 'onDrag', 'onDragEnd', 'onDragEnter', 'onDragExit', 'onDragLeave', 'onDragOver', 'onDragStart', 'onDrop', 'onMouseDown', 'onMouseEnter', 'onMouseLeave', 'onMouseMove', 'onMouseOut', 'onMouseOver', 'onMouseUp',

  // selection
  'onSelect',

  // touch
  'onTouchCancel', 'onTouchEnd', 'onTouchMove', 'onTouchStart'];

  var _meta = {
    name: 'Input',
    type: _lib.META.TYPES.ELEMENT,
    props: {
      actionPosition: ['left'],
      iconPosition: ['left'],
      labelPosition: ['left', 'right', 'left corner', 'right corner'],
      size: _lib.SUI.SIZES
    }
  };

  /**
   * An Input is a field used to elicit a response from a user
   * @see Button
   * @see Form
   * @see Icon
   * @see Label
   */

  var Input = function (_Component) {
    _inherits(Input, _Component);

    function Input() {
      var _ref;

      var _temp, _this, _ret;

      _classCallCheck(this, Input);

      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Input.__proto__ || Object.getPrototypeOf(Input)).call.apply(_ref, [this].concat(args))), _this), _this.handleChange = function (e) {
        var value = (0, _get3.default)(e, 'target.value');

        var onChange = _this.props.onChange;

        if (onChange) onChange(e, _extends({}, _this.props, { value: value }));
      }, _temp), _possibleConstructorReturn(_this, _ret);
    }

    _createClass(Input, [{
      key: 'render',
      value: function render() {
        var _props = this.props,
            action = _props.action,
            actionPosition = _props.actionPosition,
            children = _props.children,
            className = _props.className,
            disabled = _props.disabled,
            error = _props.error,
            focus = _props.focus,
            fluid = _props.fluid,
            icon = _props.icon,
            iconPosition = _props.iconPosition,
            inverted = _props.inverted,
            label = _props.label,
            labelPosition = _props.labelPosition,
            loading = _props.loading,
            onChange = _props.onChange,
            size = _props.size,
            tabIndex = _props.tabIndex,
            type = _props.type,
            input = _props.input,
            transparent = _props.transparent;


        var classes = (0, _classnames2.default)('ui', size, (0, _lib.useValueAndKey)(actionPosition, 'action') || (0, _lib.useKeyOnly)(action, 'action'), (0, _lib.useKeyOnly)(disabled, 'disabled'), (0, _lib.useKeyOnly)(error, 'error'), (0, _lib.useKeyOnly)(focus, 'focus'), (0, _lib.useKeyOnly)(fluid, 'fluid'), (0, _lib.useKeyOnly)(inverted, 'inverted'), (0, _lib.useValueAndKey)(labelPosition, 'labeled') || (0, _lib.useKeyOnly)(label, 'labeled'), (0, _lib.useKeyOnly)(loading, 'loading'), (0, _lib.useKeyOnly)(transparent, 'transparent'), (0, _lib.useValueAndKey)(iconPosition, 'icon') || (0, _lib.useKeyOnly)(icon, 'icon'), className, 'input');
        var unhandled = (0, _lib.getUnhandledProps)(Input, this.props);

        var rest = (0, _omit3.default)(unhandled, htmlInputPropNames);

        var htmlInputProps = (0, _pick3.default)(this.props, htmlInputPropNames);
        if (onChange) htmlInputProps.onChange = this.handleChange;

        var ElementType = (0, _lib.getElementType)(Input, this.props);

        // tabIndex
        if (!(0, _isNil3.default)(tabIndex)) htmlInputProps.tabIndex = tabIndex;else if (disabled) htmlInputProps.tabIndex = -1;

        // Render with children
        // ----------------------------------------
        if (!(0, _isNil3.default)(children)) {
          // add htmlInputProps to the `<input />` child
          var childElements = (0, _map3.default)(_react.Children.toArray(children), function (child) {
            if (child.type !== 'input') return child;

            return (0, _react.cloneElement)(child, _extends({}, htmlInputProps, child.props));
          });

          return _react2.default.createElement(
            ElementType,
            _extends({}, rest, { className: classes }),
            childElements
          );
        }

        // Render Shorthand
        // ----------------------------------------
        var actionElement = _Button2.default.create(action, function (elProps) {
          return {
            className: (0, _classnames2.default)(
            // all action components should have the button className
            !(0, _includes3.default)(elProps.className, 'button') && 'button')
          };
        });
        var iconElement = _Icon2.default.create(icon);
        var labelElement = _Label2.default.create(label, function (elProps) {
          return {
            className: (0, _classnames2.default)(
            // all label components should have the label className
            !(0, _includes3.default)(elProps.className, 'label') && 'label',
            // add 'left|right corner'
            (0, _includes3.default)(labelPosition, 'corner') && labelPosition)
          };
        });

        return _react2.default.createElement(
          ElementType,
          _extends({}, rest, { className: classes }),
          actionPosition === 'left' && actionElement,
          iconPosition === 'left' && iconElement,
          labelPosition !== 'right' && labelElement,
          (0, _lib.createHTMLInput)(input || type, htmlInputProps),
          actionPosition !== 'left' && actionElement,
          iconPosition !== 'left' && iconElement,
          labelPosition === 'right' && labelElement
        );
      }
    }]);

    return Input;
  }(_react.Component);

  Input.propTypes = {
    /** An element type to render as (string or function). */
    as: _lib.customPropTypes.as,

    /** An Input can be formatted to alert the user to an action they may perform */
    action: _react.PropTypes.oneOfType([_react.PropTypes.bool, _lib.customPropTypes.itemShorthand]),

    /** An action can appear along side an Input on the left or right */
    actionPosition: _react.PropTypes.oneOf(_meta.props.actionPosition),

    /** Primary content. */
    children: _react.PropTypes.node,

    /** Additional classes. */
    className: _react.PropTypes.string,

    /** An Input field can show that it is disabled */
    disabled: _react.PropTypes.bool,

    /** An Input field can show the data contains errors */
    error: _react.PropTypes.bool,

    /** An Input field can show a user is currently interacting with it */
    focus: _react.PropTypes.bool,

    /** Take on the size of it's container */
    fluid: _react.PropTypes.bool,

    /** Optional Icon to display inside the Input */
    icon: _react.PropTypes.oneOfType([_react.PropTypes.bool, _lib.customPropTypes.itemShorthand]),

    /** An Icon can appear inside an Input on the left or right */
    iconPosition: _react.PropTypes.oneOf(_meta.props.iconPosition),

    /** Format to appear on dark backgrounds */
    inverted: _react.PropTypes.bool,

    /** Shorthand for creating the HTML Input */
    input: _lib.customPropTypes.itemShorthand,

    /** Optional Label to display along side the Input */
    label: _lib.customPropTypes.itemShorthand,

    /** A Label can appear outside an Input on the left or right */
    labelPosition: _react.PropTypes.oneOf(_meta.props.labelPosition),

    /** An Icon Input field can show that it is currently loading data */
    loading: _react.PropTypes.bool,

    /**
     * Called on change.
     *
     * @param {SyntheticEvent} event - React's original SyntheticEvent.
     * @param {object} data - All props and proposed value.
     */
    onChange: _react.PropTypes.func,

    /** An Input can vary in size */
    size: _react.PropTypes.oneOf(_meta.props.size),

    /** An Input can receive focus. */
    tabIndex: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.number]),

    /** Transparent Input has no background */
    transparent: _react.PropTypes.bool,

    /** The HTML input type */
    type: _react.PropTypes.string
  };
  Input.defaultProps = {
    type: 'text'
  };
  Input._meta = _meta;


  Input.create = (0, _lib.createShorthandFactory)(Input, function (type) {
    return { type: type };
  });

  exports.default = Input;

/***/ },
/* 1009 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _lib = __webpack_require__(684);

  var _Radio = __webpack_require__(967);

  var _Radio2 = _interopRequireDefault(_Radio);

  var _FormField = __webpack_require__(1002);

  var _FormField2 = _interopRequireDefault(_FormField);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  /**
   * Sugar for <Form.Field control={Radio} />
   * @see Form
   * @see Radio
   */
  function FormRadio(props) {
    var control = props.control;

    var rest = (0, _lib.getUnhandledProps)(FormRadio, props);
    var ElementType = (0, _lib.getElementType)(FormRadio, props);

    return _react2.default.createElement(ElementType, _extends({}, rest, { control: control }));
  }

  FormRadio._meta = {
    name: 'FormRadio',
    parent: 'Form',
    type: _lib.META.TYPES.COLLECTION
  };

  FormRadio.propTypes = {
    /** An element type to render as (string or function). */
    as: _lib.customPropTypes.as,

    /** A FormField control prop */
    control: _FormField2.default.propTypes.control
  };

  FormRadio.defaultProps = {
    as: _FormField2.default,
    control: _Radio2.default
  };

  exports.default = FormRadio;

/***/ },
/* 1010 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _lib = __webpack_require__(684);

  var _Select = __webpack_require__(971);

  var _Select2 = _interopRequireDefault(_Select);

  var _FormField = __webpack_require__(1002);

  var _FormField2 = _interopRequireDefault(_FormField);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  /**
   * Sugar for <Form.Field control={Select} />
   * @see Form
   * @see Select
   */
  function FormSelect(props) {
    var control = props.control;

    var rest = (0, _lib.getUnhandledProps)(FormSelect, props);
    var ElementType = (0, _lib.getElementType)(FormSelect, props);

    return _react2.default.createElement(ElementType, _extends({}, rest, { control: control }));
  }

  FormSelect._meta = {
    name: 'FormSelect',
    parent: 'Form',
    type: _lib.META.TYPES.COLLECTION
  };

  FormSelect.propTypes = {
    /** An element type to render as (string or function). */
    as: _lib.customPropTypes.as,

    /** A FormField control prop */
    control: _FormField2.default.propTypes.control
  };

  FormSelect.defaultProps = {
    as: _FormField2.default,
    control: _Select2.default
  };

  exports.default = FormSelect;

/***/ },
/* 1011 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _lib = __webpack_require__(684);

  var _TextArea = __webpack_require__(993);

  var _TextArea2 = _interopRequireDefault(_TextArea);

  var _FormField = __webpack_require__(1002);

  var _FormField2 = _interopRequireDefault(_FormField);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  /**
   * Sugar for <Form.Field control={TextArea} />
   * @see Form
   * @see TextArea
   */
  function FormTextArea(props) {
    var control = props.control;

    var rest = (0, _lib.getUnhandledProps)(FormTextArea, props);
    var ElementType = (0, _lib.getElementType)(FormTextArea, props);

    return _react2.default.createElement(ElementType, _extends({}, rest, { control: control }));
  }

  FormTextArea._meta = {
    name: 'FormTextArea',
    parent: 'Form',
    type: _lib.META.TYPES.COLLECTION
  };

  FormTextArea.propTypes = {
    /** An element type to render as (string or function). */
    as: _lib.customPropTypes.as,

    /** A FormField control prop */
    control: _FormField2.default.propTypes.control
  };

  FormTextArea.defaultProps = {
    as: _FormField2.default,
    control: _TextArea2.default
  };

  exports.default = FormTextArea;

/***/ },
/* 1012 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _Grid = __webpack_require__(1013);

  var _Grid2 = _interopRequireDefault(_Grid);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  exports.default = _Grid2.default;

/***/ },
/* 1013 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _classnames = __webpack_require__(794);

  var _classnames2 = _interopRequireDefault(_classnames);

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _lib = __webpack_require__(684);

  var _GridColumn = __webpack_require__(1014);

  var _GridColumn2 = _interopRequireDefault(_GridColumn);

  var _GridRow = __webpack_require__(1015);

  var _GridRow2 = _interopRequireDefault(_GridRow);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

  /**
   * A grid is used to harmonize negative space in a layout.
   */
  function Grid(props) {
    var celled = props.celled,
        centered = props.centered,
        container = props.container,
        children = props.children,
        className = props.className,
        columns = props.columns,
        divided = props.divided,
        doubling = props.doubling,
        padded = props.padded,
        relaxed = props.relaxed,
        reversed = props.reversed,
        stackable = props.stackable,
        stretched = props.stretched,
        textAlign = props.textAlign,
        verticalAlign = props.verticalAlign;


    var classes = (0, _classnames2.default)('ui', (0, _lib.useKeyOnly)(centered, 'centered'), (0, _lib.useKeyOnly)(container, 'container'), (0, _lib.useKeyOnly)(doubling, 'doubling'), (0, _lib.useKeyOnly)(stackable, 'stackable'), (0, _lib.useKeyOnly)(stretched, 'stretched'), (0, _lib.useKeyOrValueAndKey)(celled, 'celled'), (0, _lib.useKeyOrValueAndKey)(divided, 'divided'), (0, _lib.useKeyOrValueAndKey)(padded, 'padded'), (0, _lib.useKeyOrValueAndKey)(relaxed, 'relaxed'), (0, _lib.useTextAlignProp)(textAlign), (0, _lib.useValueAndKey)(reversed, 'reversed'), (0, _lib.useVerticalAlignProp)(verticalAlign), (0, _lib.useWidthProp)(columns, 'column', true), 'grid', className);
    var rest = (0, _lib.getUnhandledProps)(Grid, props);
    var ElementType = (0, _lib.getElementType)(Grid, props);

    return _react2.default.createElement(
      ElementType,
      _extends({}, rest, { className: classes }),
      children
    );
  }

  Grid.Column = _GridColumn2.default;
  Grid.Row = _GridRow2.default;

  Grid._meta = {
    name: 'Grid',
    type: _lib.META.TYPES.COLLECTION,
    props: {
      celled: ['internally'],
      columns: [].concat(_toConsumableArray(_lib.SUI.WIDTHS), ['equal']),
      divided: ['vertically'],
      padded: ['horizontally', 'vertically'],
      relaxed: ['very'],
      reversed: ['computer', 'computer vertically', 'mobile', 'mobile vertically', 'tablet', 'tablet vertically'],
      textAlign: _lib.SUI.TEXT_ALIGNMENTS,
      verticalAlign: _lib.SUI.VERTICAL_ALIGNMENTS
    }
  };

  Grid.propTypes = {
    /** An element type to render as (string or function). */
    as: _lib.customPropTypes.as,

    /** A grid can have rows divided into cells. */
    celled: _react.PropTypes.oneOfType([_react.PropTypes.bool, _react.PropTypes.oneOf(Grid._meta.props.celled)]),

    /** A grid can have its columns centered. */
    centered: _react.PropTypes.bool,

    /** A grid can be combined with a container to use avaiable layout and alignment */
    container: _react.PropTypes.bool,

    /** Primary content. */
    children: _react.PropTypes.node,

    /** Additional classes. */
    className: _react.PropTypes.string,

    /** Represents column count per row in Grid. */
    columns: _react.PropTypes.oneOf(Grid._meta.props.columns),

    /** A grid can have dividers between its columns. */
    divided: _react.PropTypes.oneOfType([_react.PropTypes.bool, _react.PropTypes.oneOf(Grid._meta.props.divided)]),

    /** A grid can double its column width on tablet and mobile sizes. */
    doubling: _react.PropTypes.bool,

    /** A grid can preserve its vertical and horizontal gutters on first and last columns. */
    padded: _react.PropTypes.oneOfType([_react.PropTypes.bool, _react.PropTypes.oneOf(Grid._meta.props.padded)]),

    /** A grid can increase its gutters to allow for more negative space. */
    relaxed: _react.PropTypes.oneOfType([_react.PropTypes.bool, _react.PropTypes.oneOf(Grid._meta.props.relaxed)]),

    /** A grid can specify that its columns should reverse order at different device sizes. */
    reversed: _react.PropTypes.oneOf(Grid._meta.props.reversed),

    /** A grid can have its columns stack on-top of each other after reaching mobile breakpoints. */
    stackable: _react.PropTypes.bool,

    /** An can stretch its contents to take up the entire grid height. */
    stretched: _react.PropTypes.bool,

    /** A grid can specify its text alignment. */
    textAlign: _react.PropTypes.oneOf(Grid._meta.props.textAlign),

    /** A grid can specify its vertical alignment to have all its columns vertically centered. */
    verticalAlign: _react.PropTypes.oneOf(_GridColumn2.default._meta.props.verticalAlign)
  };

  exports.default = Grid;

/***/ },
/* 1014 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _classnames = __webpack_require__(794);

  var _classnames2 = _interopRequireDefault(_classnames);

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _lib = __webpack_require__(684);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  /**
   * A column sub-component for Grid.
   */
  function GridColumn(props) {
    var children = props.children,
        className = props.className,
        computer = props.computer,
        color = props.color,
        floated = props.floated,
        largeScreen = props.largeScreen,
        mobile = props.mobile,
        only = props.only,
        stretched = props.stretched,
        tablet = props.tablet,
        textAlign = props.textAlign,
        verticalAlign = props.verticalAlign,
        widescreen = props.widescreen,
        width = props.width;


    var classes = (0, _classnames2.default)(color, (0, _lib.useKeyOnly)(stretched, 'stretched'), (0, _lib.useTextAlignProp)(textAlign), (0, _lib.useValueAndKey)(floated, 'floated'), (0, _lib.useValueAndKey)(only, 'only'), (0, _lib.useVerticalAlignProp)(verticalAlign), (0, _lib.useWidthProp)(computer, 'wide computer'), (0, _lib.useWidthProp)(largeScreen, 'wide large screen'), (0, _lib.useWidthProp)(mobile, 'wide mobile'), (0, _lib.useWidthProp)(tablet, 'wide tablet'), (0, _lib.useWidthProp)(widescreen, 'wide widescreen'), (0, _lib.useWidthProp)(width, 'wide'), 'column', className);
    var rest = (0, _lib.getUnhandledProps)(GridColumn, props);
    var ElementType = (0, _lib.getElementType)(GridColumn, props);

    return _react2.default.createElement(
      ElementType,
      _extends({}, rest, { className: classes }),
      children
    );
  }

  GridColumn._meta = {
    name: 'GridColumn',
    parent: 'Grid',
    type: _lib.META.TYPES.COLLECTION,
    props: {
      color: _lib.SUI.COLORS,
      computer: _lib.SUI.WIDTHS,
      floated: _lib.SUI.FLOATS,
      largeScreen: _lib.SUI.WIDTHS,
      mobile: _lib.SUI.WIDTHS,
      only: ['computer', 'large screen', 'mobile', 'tablet mobile', 'tablet', 'widescreen'],
      tablet: _lib.SUI.WIDTHS,
      textAlign: _lib.SUI.TEXT_ALIGNMENTS,
      verticalAlign: _lib.SUI.VERTICAL_ALIGNMENTS,
      widescreen: _lib.SUI.WIDTHS,
      width: _lib.SUI.WIDTHS
    }
  };

  GridColumn.propTypes = {
    /** An element type to render as (string or function). */
    as: _lib.customPropTypes.as,

    /** Primary content. */
    children: _react.PropTypes.node,

    /** Additional classes. */
    className: _react.PropTypes.string,

    /** A column can specify a width for a computer. */
    computer: _react.PropTypes.oneOf(GridColumn._meta.props.width),

    /** A grid column can be colored. */
    color: _react.PropTypes.oneOf(GridColumn._meta.props.color),

    /** A column can sit flush against the left or right edge of a row. */
    floated: _react.PropTypes.oneOf(GridColumn._meta.props.floated),

    /** A column can specify a width for a large screen device. */
    largeScreen: _react.PropTypes.oneOf(GridColumn._meta.props.width),

    /** A column can specify a width for a mobile device. */
    mobile: _react.PropTypes.oneOf(GridColumn._meta.props.width),

    /** A column can appear only for a specific device, or screen sizes. */
    only: _react.PropTypes.oneOf(GridColumn._meta.props.only),

    /** An can stretch its contents to take up the entire grid or row height. */
    stretched: _react.PropTypes.bool,

    /** A column can specify a width for a tablet device. */
    tablet: _react.PropTypes.oneOf(GridColumn._meta.props.width),

    /** A row can specify its text alignment. */
    textAlign: _react.PropTypes.oneOf(GridColumn._meta.props.textAlign),

    /** A column can specify its vertical alignment to have all its columns vertically centered. */
    verticalAlign: _react.PropTypes.oneOf(GridColumn._meta.props.verticalAlign),

    /** A column can specify a width for a wide screen device. */
    widescreen: _react.PropTypes.oneOf(GridColumn._meta.props.width),

    /** Represents width of column. */
    width: _react.PropTypes.oneOf(GridColumn._meta.props.width)
  };

  exports.default = GridColumn;

/***/ },
/* 1015 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _classnames = __webpack_require__(794);

  var _classnames2 = _interopRequireDefault(_classnames);

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _lib = __webpack_require__(684);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

  /**
   * A row sub-component for Grid.
   */
  function GridRow(props) {
    var centered = props.centered,
        children = props.children,
        className = props.className,
        color = props.color,
        columns = props.columns,
        divided = props.divided,
        only = props.only,
        reversed = props.reversed,
        stretched = props.stretched,
        textAlign = props.textAlign,
        verticalAlign = props.verticalAlign;


    var classes = (0, _classnames2.default)(color, (0, _lib.useKeyOnly)(centered, 'centered'), (0, _lib.useKeyOnly)(divided, 'divided'), (0, _lib.useKeyOnly)(stretched, 'stretched'), (0, _lib.useTextAlignProp)(textAlign), (0, _lib.useValueAndKey)(only, 'only'), (0, _lib.useValueAndKey)(reversed, 'reversed'), (0, _lib.useVerticalAlignProp)(verticalAlign), (0, _lib.useWidthProp)(columns, 'column', true), 'row', className);
    var rest = (0, _lib.getUnhandledProps)(GridRow, props);
    var ElementType = (0, _lib.getElementType)(GridRow, props);

    return _react2.default.createElement(
      ElementType,
      _extends({}, rest, { className: classes }),
      children
    );
  }

  GridRow._meta = {
    name: 'GridRow',
    parent: 'Grid',
    type: _lib.META.TYPES.COLLECTION,
    props: {
      color: _lib.SUI.COLORS,
      columns: [].concat(_toConsumableArray(_lib.SUI.WIDTHS), ['equal']),
      only: ['computer', 'large screen', 'mobile', 'tablet mobile', 'tablet', 'widescreen'],
      reversed: ['computer', 'computer vertically', 'mobile', 'mobile vertically', 'tablet', 'tablet vertically'],
      textAlign: _lib.SUI.TEXT_ALIGNMENTS,
      verticalAlign: _lib.SUI.VERTICAL_ALIGNMENTS
    }
  };

  GridRow.propTypes = {
    /** An element type to render as (string or function). */
    as: _lib.customPropTypes.as,

    /** A row can have its columns centered. */
    centered: _react.PropTypes.bool,

    /** Primary content. */
    children: _react.PropTypes.node,

    /** Additional classes. */
    className: _react.PropTypes.string,

    /** A grid row can be colored. */
    color: _react.PropTypes.oneOf(GridRow._meta.props.color),

    /** Represents column count per line in Row. */
    columns: _react.PropTypes.oneOf(GridRow._meta.props.columns),

    /** A row can have dividers between its columns. */
    divided: _react.PropTypes.bool,

    /** A row can appear only for a specific device, or screen sizes. */
    only: _react.PropTypes.oneOf(GridRow._meta.props.only),

    /** A  row can specify that its columns should reverse order at different device sizes. */
    reversed: _react.PropTypes.oneOf(GridRow._meta.props.reversed),

    /** An can stretch its contents to take up the entire column height. */
    stretched: _react.PropTypes.bool,

    /** A row can specify its text alignment. */
    textAlign: _react.PropTypes.oneOf(GridRow._meta.props.textAlign),

    /** A row can specify its vertical alignment to have all its columns vertically centered. */
    verticalAlign: _react.PropTypes.oneOf(GridRow._meta.props.verticalAlign)
  };

  exports.default = GridRow;

/***/ },
/* 1016 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _Menu = __webpack_require__(1017);

  var _Menu2 = _interopRequireDefault(_Menu);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  exports.default = _Menu2.default;

/***/ },
/* 1017 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _isNil2 = __webpack_require__(927);

  var _isNil3 = _interopRequireDefault(_isNil2);

  var _map2 = __webpack_require__(918);

  var _map3 = _interopRequireDefault(_map2);

  var _get2 = __webpack_require__(767);

  var _get3 = _interopRequireDefault(_get2);

  var _without2 = __webpack_require__(939);

  var _without3 = _interopRequireDefault(_without2);

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

  var _classnames = __webpack_require__(794);

  var _classnames2 = _interopRequireDefault(_classnames);

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _lib = __webpack_require__(684);

  var _MenuHeader = __webpack_require__(1018);

  var _MenuHeader2 = _interopRequireDefault(_MenuHeader);

  var _MenuItem = __webpack_require__(1019);

  var _MenuItem2 = _interopRequireDefault(_MenuItem);

  var _MenuMenu = __webpack_require__(1036);

  var _MenuMenu2 = _interopRequireDefault(_MenuMenu);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

  function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

  var _meta = {
    name: 'Menu',
    type: _lib.META.TYPES.COLLECTION,
    props: {
      attached: ['top', 'bottom'],
      color: _lib.SUI.COLORS,
      floated: ['right'],
      icon: ['labeled'],
      fixed: ['left', 'right', 'bottom', 'top'],
      size: (0, _without3.default)(_lib.SUI.SIZES, 'medium', 'big'),
      tabular: ['right'],
      widths: _lib.SUI.WIDTHS
    }
  };

  /**
   * A menu displays grouped navigation actions.
   **/

  var Menu = function (_Component) {
    _inherits(Menu, _Component);

    function Menu() {
      var _ref;

      var _temp, _this, _ret;

      _classCallCheck(this, Menu);

      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Menu.__proto__ || Object.getPrototypeOf(Menu)).call.apply(_ref, [this].concat(args))), _this), _this.handleItemClick = function (e, itemProps) {
        var index = itemProps.index;


        _this.trySetState({ activeIndex: index });
        var _this$props = _this.props,
            items = _this$props.items,
            onItemClick = _this$props.onItemClick;


        if ((0, _get3.default)(items[index], 'onClick')) items[index].onClick(e, itemProps);
        if (onItemClick) onItemClick(e, itemProps);
      }, _temp), _possibleConstructorReturn(_this, _ret);
    }

    _createClass(Menu, [{
      key: 'renderItems',
      value: function renderItems() {
        var _this2 = this;

        var items = this.props.items;
        var activeIndex = this.state.activeIndex;


        return (0, _map3.default)(items, function (item, index) {
          return _MenuItem2.default.create(item, {
            active: activeIndex === index,
            index: index,
            onClick: _this2.handleItemClick
          });
        });
      }
    }, {
      key: 'render',
      value: function render() {
        var _props = this.props,
            attached = _props.attached,
            borderless = _props.borderless,
            children = _props.children,
            className = _props.className,
            color = _props.color,
            compact = _props.compact,
            fixed = _props.fixed,
            floated = _props.floated,
            fluid = _props.fluid,
            icon = _props.icon,
            inverted = _props.inverted,
            pagination = _props.pagination,
            pointing = _props.pointing,
            secondary = _props.secondary,
            stackable = _props.stackable,
            tabular = _props.tabular,
            text = _props.text,
            vertical = _props.vertical,
            size = _props.size,
            widths = _props.widths;

        var classes = (0, _classnames2.default)('ui', color, size, (0, _lib.useWidthProp)(widths, 'item'), (0, _lib.useKeyOrValueAndKey)(attached, 'attached'), (0, _lib.useKeyOnly)(borderless, 'borderless'), (0, _lib.useKeyOnly)(compact, 'compact'), (0, _lib.useValueAndKey)(fixed, 'fixed'), (0, _lib.useKeyOrValueAndKey)(floated, 'floated'), (0, _lib.useKeyOnly)(fluid, 'fluid'), (0, _lib.useKeyOrValueAndKey)(icon, 'icon'), (0, _lib.useKeyOnly)(inverted, 'inverted'), (0, _lib.useKeyOnly)(pagination, 'pagination'), (0, _lib.useKeyOnly)(pointing, 'pointing'), (0, _lib.useKeyOnly)(secondary, 'secondary'), (0, _lib.useKeyOnly)(stackable, 'stackable'), (0, _lib.useKeyOrValueAndKey)(tabular, 'tabular'), (0, _lib.useKeyOnly)(text, 'text'), (0, _lib.useKeyOnly)(vertical, 'vertical'), className, 'menu');
        var rest = (0, _lib.getUnhandledProps)(Menu, this.props);
        var ElementType = (0, _lib.getElementType)(Menu, this.props);

        return _react2.default.createElement(
          ElementType,
          _extends({}, rest, { className: classes }),
          (0, _isNil3.default)(children) ? this.renderItems() : children
        );
      }
    }]);

    return Menu;
  }(_lib.AutoControlledComponent);

  Menu.propTypes = {
    /** An element type to render as (string or function). */
    as: _lib.customPropTypes.as,

    /** Index of the currently active item. */
    activeIndex: _react.PropTypes.number,

    /** A menu may be attached to other content segments. */
    attached: _react.PropTypes.oneOfType([_react.PropTypes.bool, _react.PropTypes.oneOf(_meta.props.attached)]),

    /** A menu item or menu can have no borders. */
    borderless: _react.PropTypes.bool,

    /** Primary content. */
    children: _react.PropTypes.node,

    /** Additional classes. */
    className: _react.PropTypes.string,

    /** Additional colors can be specified. */
    color: _react.PropTypes.oneOf(_meta.props.color),

    /** A menu can take up only the space necessary to fit its content. */
    compact: _react.PropTypes.bool,

    /** Initial activeIndex value. */
    defaultActiveIndex: _react.PropTypes.number,

    /** A menu can be fixed to a side of its context. */
    fixed: _react.PropTypes.oneOf(_meta.props.fixed),

    /** A menu can be floated. */
    floated: _react.PropTypes.oneOfType([_react.PropTypes.bool, _react.PropTypes.oneOf(_meta.props.floated)]),

    /** A vertical menu may take the size of its container. */
    fluid: _react.PropTypes.bool,

    /** A menu may have labeled icons. */
    icon: _react.PropTypes.oneOfType([_react.PropTypes.bool, _react.PropTypes.oneOf(_meta.props.icon)]),

    /** A menu may have its colors inverted to show greater contrast. */
    inverted: _react.PropTypes.bool,

    /** Shorthand array of props for Menu. */
    items: _lib.customPropTypes.collectionShorthand,

    /**
     * onClick handler for MenuItem. Mutually exclusive with children.
     *
     * @param {SyntheticEvent} event - React's original SyntheticEvent.
     * @param {object} data - All item props.
     */
    onItemClick: _lib.customPropTypes.every([_lib.customPropTypes.disallow(['children']), _react.PropTypes.func]),

    /** A pagination menu is specially formatted to present links to pages of content. */
    pagination: _react.PropTypes.bool,

    /** A menu can point to show its relationship to nearby content. */
    pointing: _react.PropTypes.bool,

    /** A menu can adjust its appearance to de-emphasize its contents. */
    secondary: _react.PropTypes.bool,

    /** A menu can stack at mobile resolutions. */
    stackable: _react.PropTypes.bool,

    /** A menu can be formatted to show tabs of information. */
    tabular: _react.PropTypes.oneOfType([_react.PropTypes.bool, _react.PropTypes.oneOf(_meta.props.tabular)]),

    /** A menu can be formatted for text content. */
    text: _react.PropTypes.bool,

    /** A vertical menu displays elements vertically. */
    vertical: _react.PropTypes.bool,

    /** A menu can vary in size. */
    size: _react.PropTypes.oneOf(_meta.props.size),

    /** A menu can have its items divided evenly. */
    widths: _react.PropTypes.oneOf(_meta.props.widths)
  };
  Menu._meta = _meta;
  Menu.autoControlledProps = ['activeIndex'];
  Menu.Header = _MenuHeader2.default;
  Menu.Item = _MenuItem2.default;
  Menu.Menu = _MenuMenu2.default;
  exports.default = Menu;

/***/ },
/* 1018 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _isNil2 = __webpack_require__(927);

  var _isNil3 = _interopRequireDefault(_isNil2);

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _classnames = __webpack_require__(794);

  var _classnames2 = _interopRequireDefault(_classnames);

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _lib = __webpack_require__(684);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function MenuHeader(props) {
    var children = props.children,
        className = props.className,
        content = props.content;

    var classes = (0, _classnames2.default)(className, 'header');
    var rest = (0, _lib.getUnhandledProps)(MenuHeader, props);
    var ElementType = (0, _lib.getElementType)(MenuHeader, props);

    return _react2.default.createElement(
      ElementType,
      _extends({}, rest, { className: classes }),
      (0, _isNil3.default)(children) ? content : children
    );
  }

  MenuHeader._meta = {
    name: 'MenuHeader',
    type: _lib.META.TYPES.COLLECTION,
    parent: 'Menu'
  };

  MenuHeader.propTypes = {
    /** An element type to render as (string or function). */
    as: _lib.customPropTypes.as,

    /** Primary content. */
    children: _react.PropTypes.node,

    /** Additional classes. */
    className: _react.PropTypes.string,

    /** Shorthand for primary content. */
    content: _lib.customPropTypes.contentShorthand
  };

  exports.default = MenuHeader;

/***/ },
/* 1019 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _startCase2 = __webpack_require__(1020);

  var _startCase3 = _interopRequireDefault(_startCase2);

  var _isNil2 = __webpack_require__(927);

  var _isNil3 = _interopRequireDefault(_isNil2);

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

  var _classnames = __webpack_require__(794);

  var _classnames2 = _interopRequireDefault(_classnames);

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _lib = __webpack_require__(684);

  var _Icon = __webpack_require__(966);

  var _Icon2 = _interopRequireDefault(_Icon);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

  function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

  var _meta = {
    name: 'MenuItem',
    type: _lib.META.TYPES.COLLECTION,
    parent: 'Menu',
    props: {
      color: _lib.SUI.COLORS,
      fitted: ['horizontally', 'vertically'],
      position: ['right']
    }
  };

  var MenuItem = function (_Component) {
    _inherits(MenuItem, _Component);

    function MenuItem() {
      var _ref;

      var _temp, _this, _ret;

      _classCallCheck(this, MenuItem);

      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = MenuItem.__proto__ || Object.getPrototypeOf(MenuItem)).call.apply(_ref, [this].concat(args))), _this), _this.handleClick = function (e) {
        var onClick = _this.props.onClick;


        if (onClick) onClick(e, _this.props);
      }, _temp), _possibleConstructorReturn(_this, _ret);
    }

    _createClass(MenuItem, [{
      key: 'render',
      value: function render() {
        var _props = this.props,
            active = _props.active,
            children = _props.children,
            className = _props.className,
            color = _props.color,
            content = _props.content,
            fitted = _props.fitted,
            header = _props.header,
            icon = _props.icon,
            link = _props.link,
            name = _props.name,
            onClick = _props.onClick,
            position = _props.position;


        var classes = (0, _classnames2.default)(color, position, (0, _lib.useKeyOnly)(active, 'active'), (0, _lib.useKeyOnly)(icon === true || icon && !(name || content), 'icon'), (0, _lib.useKeyOnly)(header, 'header'), (0, _lib.useKeyOnly)(link, 'link'), (0, _lib.useKeyOrValueAndKey)(fitted, 'fitted'), 'item', className);
        var ElementType = (0, _lib.getElementType)(MenuItem, this.props, function () {
          if (onClick) return 'a';
        });
        var rest = (0, _lib.getUnhandledProps)(MenuItem, this.props);

        if (!(0, _isNil3.default)(children)) {
          return _react2.default.createElement(
            ElementType,
            _extends({}, rest, { className: classes, onClick: this.handleClick }),
            children
          );
        }

        return _react2.default.createElement(
          ElementType,
          _extends({}, rest, { className: classes, onClick: this.handleClick }),
          _Icon2.default.create(icon),
          content || (0, _startCase3.default)(name)
        );
      }
    }]);

    return MenuItem;
  }(_react.Component);

  MenuItem.propTypes = {
    /** An element type to render as (string or function). */
    as: _lib.customPropTypes.as,

    /** A menu item can be active. */
    active: _react.PropTypes.bool,

    /** Primary content. */
    children: _react.PropTypes.node,

    /** Additional classes. */
    className: _react.PropTypes.string,

    /** Additional colors can be specified. */
    color: _react.PropTypes.oneOf(_meta.props.color),

    /** Shorthand for primary content. */
    content: _lib.customPropTypes.contentShorthand,

    /** A menu item or menu can remove element padding, vertically or horizontally. */
    fitted: _react.PropTypes.oneOfType([_react.PropTypes.bool, _react.PropTypes.oneOf(_meta.props.fitted)]),

    /** A menu item may include a header or may itself be a header. */
    header: _react.PropTypes.bool,

    /** MenuItem can be only icon. */
    icon: _react.PropTypes.oneOfType([_react.PropTypes.bool, _lib.customPropTypes.itemShorthand]),

    /** MenuItem index inside Menu. */
    index: _react.PropTypes.number,

    /** A menu item can be link. */
    link: _react.PropTypes.bool,

    /** Internal name of the MenuItem. */
    name: _react.PropTypes.string,

    /**
     * Called on click. When passed, the component will render as an `a`
     * tag by default instead of a `div`.
     *
     * @param {SyntheticEvent} event - React's original SyntheticEvent.
     * @param {object} data - All props.
     */
    onClick: _react.PropTypes.func,

    /** A menu item can take right position. */
    position: _react.PropTypes.oneOf(_meta.props.position)
  };
  MenuItem._meta = _meta;
  exports.default = MenuItem;


  MenuItem.create = (0, _lib.createShorthandFactory)(MenuItem, function (val) {
    return { content: val, name: val };
  }, true);

/***/ },
/* 1020 */
/***/ function(module, exports, __webpack_require__) {

  var createCompounder = __webpack_require__(1021),
      upperFirst = __webpack_require__(1029);

  /**
   * Converts `string` to
   * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).
   *
   * @static
   * @memberOf _
   * @since 3.1.0
   * @category String
   * @param {string} [string=''] The string to convert.
   * @returns {string} Returns the start cased string.
   * @example
   *
   * _.startCase('--foo-bar--');
   * // => 'Foo Bar'
   *
   * _.startCase('fooBar');
   * // => 'Foo Bar'
   *
   * _.startCase('__FOO_BAR__');
   * // => 'FOO BAR'
   */
  var startCase = createCompounder(function(result, word, index) {
    return result + (index ? ' ' : '') + upperFirst(word);
  });

  module.exports = startCase;


/***/ },
/* 1021 */
/***/ function(module, exports, __webpack_require__) {

  var arrayReduce = __webpack_require__(876),
      deburr = __webpack_require__(1022),
      words = __webpack_require__(1025);

  /** Used to compose unicode capture groups. */
  var rsApos = "['\u2019]";

  /** Used to match apostrophes. */
  var reApos = RegExp(rsApos, 'g');

  /**
   * Creates a function like `_.camelCase`.
   *
   * @private
   * @param {Function} callback The function to combine each word.
   * @returns {Function} Returns the new compounder function.
   */
  function createCompounder(callback) {
    return function(string) {
      return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');
    };
  }

  module.exports = createCompounder;


/***/ },
/* 1022 */
/***/ function(module, exports, __webpack_require__) {

  var deburrLetter = __webpack_require__(1023),
      toString = __webpack_require__(676);

  /** Used to match Latin Unicode letters (excluding mathematical operators). */
  var reLatin = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g;

  /** Used to compose unicode character classes. */
  var rsComboMarksRange = '\\u0300-\\u036f',
      reComboHalfMarksRange = '\\ufe20-\\ufe2f',
      rsComboSymbolsRange = '\\u20d0-\\u20ff',
      rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange;

  /** Used to compose unicode capture groups. */
  var rsCombo = '[' + rsComboRange + ']';

  /**
   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and
   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).
   */
  var reComboMark = RegExp(rsCombo, 'g');

  /**
   * Deburrs `string` by converting
   * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)
   * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)
   * letters to basic Latin letters and removing
   * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).
   *
   * @static
   * @memberOf _
   * @since 3.0.0
   * @category String
   * @param {string} [string=''] The string to deburr.
   * @returns {string} Returns the deburred string.
   * @example
   *
   * _.deburr('déjà vu');
   * // => 'deja vu'
   */
  function deburr(string) {
    string = toString(string);
    return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');
  }

  module.exports = deburr;


/***/ },
/* 1023 */
/***/ function(module, exports, __webpack_require__) {

  var basePropertyOf = __webpack_require__(1024);

  /** Used to map Latin Unicode letters to basic Latin letters. */
  var deburredLetters = {
    // Latin-1 Supplement block.
    '\xc0': 'A',  '\xc1': 'A', '\xc2': 'A', '\xc3': 'A', '\xc4': 'A', '\xc5': 'A',
    '\xe0': 'a',  '\xe1': 'a', '\xe2': 'a', '\xe3': 'a', '\xe4': 'a', '\xe5': 'a',
    '\xc7': 'C',  '\xe7': 'c',
    '\xd0': 'D',  '\xf0': 'd',
    '\xc8': 'E',  '\xc9': 'E', '\xca': 'E', '\xcb': 'E',
    '\xe8': 'e',  '\xe9': 'e', '\xea': 'e', '\xeb': 'e',
    '\xcc': 'I',  '\xcd': 'I', '\xce': 'I', '\xcf': 'I',
    '\xec': 'i',  '\xed': 'i', '\xee': 'i', '\xef': 'i',
    '\xd1': 'N',  '\xf1': 'n',
    '\xd2': 'O',  '\xd3': 'O', '\xd4': 'O', '\xd5': 'O', '\xd6': 'O', '\xd8': 'O',
    '\xf2': 'o',  '\xf3': 'o', '\xf4': 'o', '\xf5': 'o', '\xf6': 'o', '\xf8': 'o',
    '\xd9': 'U',  '\xda': 'U', '\xdb': 'U', '\xdc': 'U',
    '\xf9': 'u',  '\xfa': 'u', '\xfb': 'u', '\xfc': 'u',
    '\xdd': 'Y',  '\xfd': 'y', '\xff': 'y',
    '\xc6': 'Ae', '\xe6': 'ae',
    '\xde': 'Th', '\xfe': 'th',
    '\xdf': 'ss',
    // Latin Extended-A block.
    '\u0100': 'A',  '\u0102': 'A', '\u0104': 'A',
    '\u0101': 'a',  '\u0103': 'a', '\u0105': 'a',
    '\u0106': 'C',  '\u0108': 'C', '\u010a': 'C', '\u010c': 'C',
    '\u0107': 'c',  '\u0109': 'c', '\u010b': 'c', '\u010d': 'c',
    '\u010e': 'D',  '\u0110': 'D', '\u010f': 'd', '\u0111': 'd',
    '\u0112': 'E',  '\u0114': 'E', '\u0116': 'E', '\u0118': 'E', '\u011a': 'E',
    '\u0113': 'e',  '\u0115': 'e', '\u0117': 'e', '\u0119': 'e', '\u011b': 'e',
    '\u011c': 'G',  '\u011e': 'G', '\u0120': 'G', '\u0122': 'G',
    '\u011d': 'g',  '\u011f': 'g', '\u0121': 'g', '\u0123': 'g',
    '\u0124': 'H',  '\u0126': 'H', '\u0125': 'h', '\u0127': 'h',
    '\u0128': 'I',  '\u012a': 'I', '\u012c': 'I', '\u012e': 'I', '\u0130': 'I',
    '\u0129': 'i',  '\u012b': 'i', '\u012d': 'i', '\u012f': 'i', '\u0131': 'i',
    '\u0134': 'J',  '\u0135': 'j',
    '\u0136': 'K',  '\u0137': 'k', '\u0138': 'k',
    '\u0139': 'L',  '\u013b': 'L', '\u013d': 'L', '\u013f': 'L', '\u0141': 'L',
    '\u013a': 'l',  '\u013c': 'l', '\u013e': 'l', '\u0140': 'l', '\u0142': 'l',
    '\u0143': 'N',  '\u0145': 'N', '\u0147': 'N', '\u014a': 'N',
    '\u0144': 'n',  '\u0146': 'n', '\u0148': 'n', '\u014b': 'n',
    '\u014c': 'O',  '\u014e': 'O', '\u0150': 'O',
    '\u014d': 'o',  '\u014f': 'o', '\u0151': 'o',
    '\u0154': 'R',  '\u0156': 'R', '\u0158': 'R',
    '\u0155': 'r',  '\u0157': 'r', '\u0159': 'r',
    '\u015a': 'S',  '\u015c': 'S', '\u015e': 'S', '\u0160': 'S',
    '\u015b': 's',  '\u015d': 's', '\u015f': 's', '\u0161': 's',
    '\u0162': 'T',  '\u0164': 'T', '\u0166': 'T',
    '\u0163': 't',  '\u0165': 't', '\u0167': 't',
    '\u0168': 'U',  '\u016a': 'U', '\u016c': 'U', '\u016e': 'U', '\u0170': 'U', '\u0172': 'U',
    '\u0169': 'u',  '\u016b': 'u', '\u016d': 'u', '\u016f': 'u', '\u0171': 'u', '\u0173': 'u',
    '\u0174': 'W',  '\u0175': 'w',
    '\u0176': 'Y',  '\u0177': 'y', '\u0178': 'Y',
    '\u0179': 'Z',  '\u017b': 'Z', '\u017d': 'Z',
    '\u017a': 'z',  '\u017c': 'z', '\u017e': 'z',
    '\u0132': 'IJ', '\u0133': 'ij',
    '\u0152': 'Oe', '\u0153': 'oe',
    '\u0149': "'n", '\u017f': 's'
  };

  /**
   * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A
   * letters to basic Latin letters.
   *
   * @private
   * @param {string} letter The matched letter to deburr.
   * @returns {string} Returns the deburred letter.
   */
  var deburrLetter = basePropertyOf(deburredLetters);

  module.exports = deburrLetter;


/***/ },
/* 1024 */
/***/ function(module, exports) {

  /**
   * The base implementation of `_.propertyOf` without support for deep paths.
   *
   * @private
   * @param {Object} object The object to query.
   * @returns {Function} Returns the new accessor function.
   */
  function basePropertyOf(object) {
    return function(key) {
      return object == null ? undefined : object[key];
    };
  }

  module.exports = basePropertyOf;


/***/ },
/* 1025 */
/***/ function(module, exports, __webpack_require__) {

  var asciiWords = __webpack_require__(1026),
      hasUnicodeWord = __webpack_require__(1027),
      toString = __webpack_require__(676),
      unicodeWords = __webpack_require__(1028);

  /**
   * Splits `string` into an array of its words.
   *
   * @static
   * @memberOf _
   * @since 3.0.0
   * @category String
   * @param {string} [string=''] The string to inspect.
   * @param {RegExp|string} [pattern] The pattern to match words.
   * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
   * @returns {Array} Returns the words of `string`.
   * @example
   *
   * _.words('fred, barney, & pebbles');
   * // => ['fred', 'barney', 'pebbles']
   *
   * _.words('fred, barney, & pebbles', /[^, ]+/g);
   * // => ['fred', 'barney', '&', 'pebbles']
   */
  function words(string, pattern, guard) {
    string = toString(string);
    pattern = guard ? undefined : pattern;

    if (pattern === undefined) {
      return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);
    }
    return string.match(pattern) || [];
  }

  module.exports = words;


/***/ },
/* 1026 */
/***/ function(module, exports) {

  /** Used to match words composed of alphanumeric characters. */
  var reAsciiWord = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g;

  /**
   * Splits an ASCII `string` into an array of its words.
   *
   * @private
   * @param {string} The string to inspect.
   * @returns {Array} Returns the words of `string`.
   */
  function asciiWords(string) {
    return string.match(reAsciiWord) || [];
  }

  module.exports = asciiWords;


/***/ },
/* 1027 */
/***/ function(module, exports) {

  /** Used to detect strings that need a more robust regexp to match words. */
  var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;

  /**
   * Checks if `string` contains a word composed of Unicode symbols.
   *
   * @private
   * @param {string} string The string to inspect.
   * @returns {boolean} Returns `true` if a word is found, else `false`.
   */
  function hasUnicodeWord(string) {
    return reHasUnicodeWord.test(string);
  }

  module.exports = hasUnicodeWord;


/***/ },
/* 1028 */
/***/ function(module, exports) {

  /** Used to compose unicode character classes. */
  var rsAstralRange = '\\ud800-\\udfff',
      rsComboMarksRange = '\\u0300-\\u036f',
      reComboHalfMarksRange = '\\ufe20-\\ufe2f',
      rsComboSymbolsRange = '\\u20d0-\\u20ff',
      rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,
      rsDingbatRange = '\\u2700-\\u27bf',
      rsLowerRange = 'a-z\\xdf-\\xf6\\xf8-\\xff',
      rsMathOpRange = '\\xac\\xb1\\xd7\\xf7',
      rsNonCharRange = '\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf',
      rsPunctuationRange = '\\u2000-\\u206f',
      rsSpaceRange = ' \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000',
      rsUpperRange = 'A-Z\\xc0-\\xd6\\xd8-\\xde',
      rsVarRange = '\\ufe0e\\ufe0f',
      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;

  /** Used to compose unicode capture groups. */
  var rsApos = "['\u2019]",
      rsBreak = '[' + rsBreakRange + ']',
      rsCombo = '[' + rsComboRange + ']',
      rsDigits = '\\d+',
      rsDingbat = '[' + rsDingbatRange + ']',
      rsLower = '[' + rsLowerRange + ']',
      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',
      rsFitz = '\\ud83c[\\udffb-\\udfff]',
      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',
      rsNonAstral = '[^' + rsAstralRange + ']',
      rsRegional = '(?:\\ud83c[\\udde6-\\uddff]){2}',
      rsSurrPair = '[\\ud800-\\udbff][\\udc00-\\udfff]',
      rsUpper = '[' + rsUpperRange + ']',
      rsZWJ = '\\u200d';

  /** Used to compose unicode regexes. */
  var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',
      rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',
      rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',
      rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',
      reOptMod = rsModifier + '?',
      rsOptVar = '[' + rsVarRange + ']?',
      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',
      rsOrdLower = '\\d*(?:(?:1st|2nd|3rd|(?![123])\\dth)\\b)',
      rsOrdUpper = '\\d*(?:(?:1ST|2ND|3RD|(?![123])\\dTH)\\b)',
      rsSeq = rsOptVar + reOptMod + rsOptJoin,
      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq;

  /** Used to match complex or compound words. */
  var reUnicodeWord = RegExp([
    rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',
    rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',
    rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,
    rsUpper + '+' + rsOptContrUpper,
    rsOrdUpper,
    rsOrdLower,
    rsDigits,
    rsEmoji
  ].join('|'), 'g');

  /**
   * Splits a Unicode `string` into an array of its words.
   *
   * @private
   * @param {string} The string to inspect.
   * @returns {Array} Returns the words of `string`.
   */
  function unicodeWords(string) {
    return string.match(reUnicodeWord) || [];
  }

  module.exports = unicodeWords;


/***/ },
/* 1029 */
/***/ function(module, exports, __webpack_require__) {

  var createCaseFirst = __webpack_require__(1030);

  /**
   * Converts the first character of `string` to upper case.
   *
   * @static
   * @memberOf _
   * @since 4.0.0
   * @category String
   * @param {string} [string=''] The string to convert.
   * @returns {string} Returns the converted string.
   * @example
   *
   * _.upperFirst('fred');
   * // => 'Fred'
   *
   * _.upperFirst('FRED');
   * // => 'FRED'
   */
  var upperFirst = createCaseFirst('toUpperCase');

  module.exports = upperFirst;


/***/ },
/* 1030 */
/***/ function(module, exports, __webpack_require__) {

  var castSlice = __webpack_require__(1031),
      hasUnicode = __webpack_require__(1032),
      stringToArray = __webpack_require__(1033),
      toString = __webpack_require__(676);

  /**
   * Creates a function like `_.lowerFirst`.
   *
   * @private
   * @param {string} methodName The name of the `String` case method to use.
   * @returns {Function} Returns the new case function.
   */
  function createCaseFirst(methodName) {
    return function(string) {
      string = toString(string);

      var strSymbols = hasUnicode(string)
        ? stringToArray(string)
        : undefined;

      var chr = strSymbols
        ? strSymbols[0]
        : string.charAt(0);

      var trailing = strSymbols
        ? castSlice(strSymbols, 1).join('')
        : string.slice(1);

      return chr[methodName]() + trailing;
    };
  }

  module.exports = createCaseFirst;


/***/ },
/* 1031 */
/***/ function(module, exports, __webpack_require__) {

  var baseSlice = __webpack_require__(902);

  /**
   * Casts `array` to a slice if it's needed.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {number} start The start position.
   * @param {number} [end=array.length] The end position.
   * @returns {Array} Returns the cast slice.
   */
  function castSlice(array, start, end) {
    var length = array.length;
    end = end === undefined ? length : end;
    return (!start && end >= length) ? array : baseSlice(array, start, end);
  }

  module.exports = castSlice;


/***/ },
/* 1032 */
/***/ function(module, exports) {

  /** Used to compose unicode character classes. */
  var rsAstralRange = '\\ud800-\\udfff',
      rsComboMarksRange = '\\u0300-\\u036f',
      reComboHalfMarksRange = '\\ufe20-\\ufe2f',
      rsComboSymbolsRange = '\\u20d0-\\u20ff',
      rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,
      rsVarRange = '\\ufe0e\\ufe0f';

  /** Used to compose unicode capture groups. */
  var rsZWJ = '\\u200d';

  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */
  var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');

  /**
   * Checks if `string` contains Unicode symbols.
   *
   * @private
   * @param {string} string The string to inspect.
   * @returns {boolean} Returns `true` if a symbol is found, else `false`.
   */
  function hasUnicode(string) {
    return reHasUnicode.test(string);
  }

  module.exports = hasUnicode;


/***/ },
/* 1033 */
/***/ function(module, exports, __webpack_require__) {

  var asciiToArray = __webpack_require__(1034),
      hasUnicode = __webpack_require__(1032),
      unicodeToArray = __webpack_require__(1035);

  /**
   * Converts `string` to an array.
   *
   * @private
   * @param {string} string The string to convert.
   * @returns {Array} Returns the converted array.
   */
  function stringToArray(string) {
    return hasUnicode(string)
      ? unicodeToArray(string)
      : asciiToArray(string);
  }

  module.exports = stringToArray;


/***/ },
/* 1034 */
/***/ function(module, exports) {

  /**
   * Converts an ASCII `string` to an array.
   *
   * @private
   * @param {string} string The string to convert.
   * @returns {Array} Returns the converted array.
   */
  function asciiToArray(string) {
    return string.split('');
  }

  module.exports = asciiToArray;


/***/ },
/* 1035 */
/***/ function(module, exports) {

  /** Used to compose unicode character classes. */
  var rsAstralRange = '\\ud800-\\udfff',
      rsComboMarksRange = '\\u0300-\\u036f',
      reComboHalfMarksRange = '\\ufe20-\\ufe2f',
      rsComboSymbolsRange = '\\u20d0-\\u20ff',
      rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,
      rsVarRange = '\\ufe0e\\ufe0f';

  /** Used to compose unicode capture groups. */
  var rsAstral = '[' + rsAstralRange + ']',
      rsCombo = '[' + rsComboRange + ']',
      rsFitz = '\\ud83c[\\udffb-\\udfff]',
      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',
      rsNonAstral = '[^' + rsAstralRange + ']',
      rsRegional = '(?:\\ud83c[\\udde6-\\uddff]){2}',
      rsSurrPair = '[\\ud800-\\udbff][\\udc00-\\udfff]',
      rsZWJ = '\\u200d';

  /** Used to compose unicode regexes. */
  var reOptMod = rsModifier + '?',
      rsOptVar = '[' + rsVarRange + ']?',
      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',
      rsSeq = rsOptVar + reOptMod + rsOptJoin,
      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';

  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */
  var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');

  /**
   * Converts a Unicode `string` to an array.
   *
   * @private
   * @param {string} string The string to convert.
   * @returns {Array} Returns the converted array.
   */
  function unicodeToArray(string) {
    return string.match(reUnicode) || [];
  }

  module.exports = unicodeToArray;


/***/ },
/* 1036 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _classnames = __webpack_require__(794);

  var _classnames2 = _interopRequireDefault(_classnames);

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _lib = __webpack_require__(684);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function MenuMenu(props) {
    var children = props.children,
        className = props.className,
        position = props.position;

    var classes = (0, _classnames2.default)(className, position, 'menu');
    var rest = (0, _lib.getUnhandledProps)(MenuMenu, props);
    var ElementType = (0, _lib.getElementType)(MenuMenu, props);

    return _react2.default.createElement(
      ElementType,
      _extends({}, rest, { className: classes }),
      children
    );
  }

  MenuMenu._meta = {
    name: 'MenuMenu',
    type: _lib.META.TYPES.COLLECTION,
    parent: 'Menu',
    props: {
      position: ['right']
    }
  };

  MenuMenu.propTypes = {
    /** An element type to render as (string or function). */
    as: _lib.customPropTypes.as,

    /** Primary content. */
    children: _react.PropTypes.node,

    /** Additional classes. */
    className: _react.PropTypes.string,

    /** A sub menu can take right position. */
    position: _react.PropTypes.oneOf(MenuMenu._meta.props.position)
  };

  exports.default = MenuMenu;

/***/ },
/* 1037 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _Message = __webpack_require__(1038);

  var _Message2 = _interopRequireDefault(_Message);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  exports.default = _Message2.default;

/***/ },
/* 1038 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _without2 = __webpack_require__(939);

  var _without3 = _interopRequireDefault(_without2);

  var _isNil2 = __webpack_require__(927);

  var _isNil3 = _interopRequireDefault(_isNil2);

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _classnames = __webpack_require__(794);

  var _classnames2 = _interopRequireDefault(_classnames);

  var _lib = __webpack_require__(684);

  var _Icon = __webpack_require__(966);

  var _Icon2 = _interopRequireDefault(_Icon);

  var _MessageContent = __webpack_require__(1039);

  var _MessageContent2 = _interopRequireDefault(_MessageContent);

  var _MessageHeader = __webpack_require__(1040);

  var _MessageHeader2 = _interopRequireDefault(_MessageHeader);

  var _MessageList = __webpack_require__(1041);

  var _MessageList2 = _interopRequireDefault(_MessageList);

  var _MessageItem = __webpack_require__(1042);

  var _MessageItem2 = _interopRequireDefault(_MessageItem);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  /**
   * A message displays information that explains nearby content
   * @see Form
   */
  function Message(props) {
    var children = props.children,
        className = props.className,
        content = props.content,
        header = props.header,
        icon = props.icon,
        list = props.list,
        onDismiss = props.onDismiss,
        hidden = props.hidden,
        visible = props.visible,
        floating = props.floating,
        compact = props.compact,
        attached = props.attached,
        warning = props.warning,
        info = props.info,
        positive = props.positive,
        success = props.success,
        negative = props.negative,
        error = props.error,
        color = props.color,
        size = props.size;


    var classes = (0, _classnames2.default)('ui', size, color, (0, _lib.useKeyOnly)(icon, 'icon'), (0, _lib.useKeyOnly)(hidden, 'hidden'), (0, _lib.useKeyOnly)(visible, 'visible'), (0, _lib.useKeyOnly)(floating, 'floating'), (0, _lib.useKeyOnly)(compact, 'compact'), (0, _lib.useKeyOrValueAndKey)(attached, 'attached'), (0, _lib.useKeyOnly)(warning, 'warning'), (0, _lib.useKeyOnly)(info, 'info'), (0, _lib.useKeyOnly)(positive, 'positive'), (0, _lib.useKeyOnly)(success, 'success'), (0, _lib.useKeyOnly)(negative, 'negative'), (0, _lib.useKeyOnly)(error, 'error'), 'message', className);

    var dismissIcon = onDismiss && _react2.default.createElement(_Icon2.default, { name: 'close', onClick: onDismiss });
    var rest = (0, _lib.getUnhandledProps)(Message, props);
    var ElementType = (0, _lib.getElementType)(Message, props);

    if (!(0, _isNil3.default)(children)) {
      return _react2.default.createElement(
        ElementType,
        _extends({}, rest, { className: classes }),
        dismissIcon,
        children
      );
    }

    return _react2.default.createElement(
      ElementType,
      _extends({}, rest, { className: classes }),
      dismissIcon,
      _Icon2.default.create(icon),
      (!(0, _isNil3.default)(header) || !(0, _isNil3.default)(content) || !(0, _isNil3.default)(list)) && _react2.default.createElement(
        _MessageContent2.default,
        null,
        _MessageHeader2.default.create(header),
        _MessageList2.default.create(list),
        (0, _lib.createShorthand)('p', function (val) {
          return { children: val };
        }, content)
      )
    );
  }

  Message._meta = {
    name: 'Message',
    type: _lib.META.TYPES.COLLECTION,
    props: {
      attached: ['bottom'],
      color: _lib.SUI.COLORS,
      size: (0, _without3.default)(_lib.SUI.SIZES, 'medium')
    }
  };

  Message.propTypes = {
    /** An element type to render as (string or function). */
    as: _lib.customPropTypes.as,

    /** Primary content. */
    children: _react.PropTypes.node,

    /** Additional classes. */
    className: _react.PropTypes.string,

    /** Shorthand for primary content. */
    content: _lib.customPropTypes.contentShorthand,

    /** Shorthand for MessageHeader. */
    header: _lib.customPropTypes.itemShorthand,

    /** A message can contain an icon. */
    icon: _react.PropTypes.oneOfType([_react.PropTypes.bool, _lib.customPropTypes.itemShorthand]),

    /** Array shorthand items for the MessageList. Mutually exclusive with children. */
    list: _lib.customPropTypes.collectionShorthand,

    /**
     * A message that the user can choose to hide.
     * Called when the user clicks the "x" icon. This also adds the "x" icon.
     */
    onDismiss: _react.PropTypes.func,

    /** A message can be hidden. */
    hidden: _react.PropTypes.bool,

    /** A message can be set to visible to force itself to be shown. */
    visible: _react.PropTypes.bool,

    /** A message can float above content that it is related to. */
    floating: _react.PropTypes.bool,

    /** A message can only take up the width of its content. */
    compact: _react.PropTypes.bool,

    /** A message can be formatted to attach itself to other content. */
    attached: _react.PropTypes.oneOfType([_react.PropTypes.bool, _react.PropTypes.oneOf(Message._meta.props.attached)]),

    /** A message may be formatted to display warning messages. */
    warning: _react.PropTypes.bool,

    /** A message may be formatted to display information. */
    info: _react.PropTypes.bool,

    /** A message may be formatted to display a positive message.  Same as `success`. */
    positive: _react.PropTypes.bool,

    /** A message may be formatted to display a positive message.  Same as `positive`. */
    success: _react.PropTypes.bool,

    /** A message may be formatted to display a negative message. Same as `error`. */
    negative: _react.PropTypes.bool,

    /** A message may be formatted to display a negative message. Same as `negative`. */
    error: _react.PropTypes.bool,

    /** A message can be formatted to be different colors. */
    color: _react.PropTypes.oneOf(Message._meta.props.color),

    /** A message can have different sizes. */
    size: _react.PropTypes.oneOf(Message._meta.props.size)
  };

  Message.Content = _MessageContent2.default;
  Message.Header = _MessageHeader2.default;
  Message.List = _MessageList2.default;
  Message.Item = _MessageItem2.default;

  exports.default = Message;

/***/ },
/* 1039 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _classnames = __webpack_require__(794);

  var _classnames2 = _interopRequireDefault(_classnames);

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _lib = __webpack_require__(684);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function MessageContent(props) {
    var children = props.children,
        className = props.className;

    var classes = (0, _classnames2.default)('content', className);
    var rest = (0, _lib.getUnhandledProps)(MessageContent, props);
    var ElementType = (0, _lib.getElementType)(MessageContent, props);

    return _react2.default.createElement(
      ElementType,
      _extends({}, rest, { className: classes }),
      children
    );
  }

  MessageContent._meta = {
    name: 'MessageContent',
    parent: 'Message',
    type: _lib.META.TYPES.COLLECTION
  };

  MessageContent.propTypes = {
    /** An element type to render as (string or function). */
    as: _lib.customPropTypes.as,

    /** Primary content. */
    children: _react.PropTypes.node,

    /** Additional classes. */
    className: _react.PropTypes.string
  };

  exports.default = MessageContent;

/***/ },
/* 1040 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _isNil2 = __webpack_require__(927);

  var _isNil3 = _interopRequireDefault(_isNil2);

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _classnames = __webpack_require__(794);

  var _classnames2 = _interopRequireDefault(_classnames);

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _lib = __webpack_require__(684);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function MessageHeader(props) {
    var children = props.children,
        className = props.className,
        content = props.content;

    var classes = (0, _classnames2.default)('header', className);
    var rest = (0, _lib.getUnhandledProps)(MessageHeader, props);
    var ElementType = (0, _lib.getElementType)(MessageHeader, props);

    return _react2.default.createElement(
      ElementType,
      _extends({}, rest, { className: classes }),
      (0, _isNil3.default)(children) ? content : children
    );
  }

  MessageHeader._meta = {
    name: 'MessageHeader',
    parent: 'Message',
    type: _lib.META.TYPES.COLLECTION
  };

  MessageHeader.propTypes = {
    /** An element type to render as (string or function). */
    as: _lib.customPropTypes.as,

    /** Primary content. */
    children: _react.PropTypes.node,

    /** Shorthand for primary content. */
    content: _lib.customPropTypes.itemShorthand,

    /** Additional classes. */
    className: _react.PropTypes.string
  };

  MessageHeader.create = (0, _lib.createShorthandFactory)(MessageHeader, function (val) {
    return { content: val };
  });

  exports.default = MessageHeader;

/***/ },
/* 1041 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _map2 = __webpack_require__(917);

  var _map3 = _interopRequireDefault(_map2);

  var _isNil2 = __webpack_require__(926);

  var _isNil3 = _interopRequireDefault(_isNil2);

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _classnames = __webpack_require__(794);

  var _classnames2 = _interopRequireDefault(_classnames);

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _lib = __webpack_require__(684);

  var _MessageItem = __webpack_require__(1042);

  var _MessageItem2 = _interopRequireDefault(_MessageItem);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function MessageList(props) {
    var children = props.children,
        className = props.className,
        items = props.items;

    var classes = (0, _classnames2.default)('list', className);
    var rest = (0, _lib.getUnhandledProps)(MessageList, props);
    var ElementType = (0, _lib.getElementType)(MessageList, props);

    return _react2.default.createElement(
      ElementType,
      _extends({}, rest, { className: classes }),
      (0, _isNil3.default)(children) ? (0, _map3.default)(_MessageItem2.default.create, items) : children
    );
  }

  MessageList._meta = {
    name: 'MessageList',
    parent: 'Message',
    type: _lib.META.TYPES.COLLECTION
  };

  MessageList.propTypes = {
    /** An element type to render as (string or function). */
    as: _lib.customPropTypes.as,

    /** Primary content. */
    children: _react.PropTypes.node,

    /** Additional classes. */
    className: _react.PropTypes.string,

    /** Shorthand Message.Items. */
    items: _lib.customPropTypes.collectionShorthand
  };

  MessageList.defaultProps = {
    as: 'ul'
  };

  MessageList.create = (0, _lib.createShorthandFactory)(MessageList, function (val) {
    return { items: val };
  });

  exports.default = MessageList;

/***/ },
/* 1042 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _classnames = __webpack_require__(794);

  var _classnames2 = _interopRequireDefault(_classnames);

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _lib = __webpack_require__(684);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function MessageItem(props) {
    var children = props.children,
        className = props.className,
        content = props.content;

    var classes = (0, _classnames2.default)('content', className);
    var rest = (0, _lib.getUnhandledProps)(MessageItem, props);
    var ElementType = (0, _lib.getElementType)(MessageItem, props);

    return _react2.default.createElement(
      ElementType,
      _extends({}, rest, { className: classes }),
      content || children
    );
  }

  MessageItem._meta = {
    name: 'MessageItem',
    parent: 'Message',
    type: _lib.META.TYPES.COLLECTION
  };

  MessageItem.propTypes = {
    /** An element type to render as (string or function). */
    as: _lib.customPropTypes.as,

    /** Primary content. */
    children: _react.PropTypes.node,

    /** Shorthand for primary content. */
    content: _lib.customPropTypes.itemShorthand,

    /** Additional classes. */
    className: _react.PropTypes.string
  };

  MessageItem.defaultProps = {
    as: 'li'
  };

  MessageItem.create = (0, _lib.createShorthandFactory)(MessageItem, function (content) {
    return { content: content };
  }, true);

  exports.default = MessageItem;

/***/ },
/* 1043 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _Table = __webpack_require__(1044);

  var _Table2 = _interopRequireDefault(_Table);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  exports.default = _Table2.default;

/***/ },
/* 1044 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _without2 = __webpack_require__(939);

  var _without3 = _interopRequireDefault(_without2);

  var _map2 = __webpack_require__(918);

  var _map3 = _interopRequireDefault(_map2);

  var _isNil2 = __webpack_require__(927);

  var _isNil3 = _interopRequireDefault(_isNil2);

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _classnames = __webpack_require__(794);

  var _classnames2 = _interopRequireDefault(_classnames);

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _lib = __webpack_require__(684);

  var _TableBody = __webpack_require__(1045);

  var _TableBody2 = _interopRequireDefault(_TableBody);

  var _TableCell = __webpack_require__(1046);

  var _TableCell2 = _interopRequireDefault(_TableCell);

  var _TableFooter = __webpack_require__(1047);

  var _TableFooter2 = _interopRequireDefault(_TableFooter);

  var _TableHeader = __webpack_require__(1048);

  var _TableHeader2 = _interopRequireDefault(_TableHeader);

  var _TableHeaderCell = __webpack_require__(1049);

  var _TableHeaderCell2 = _interopRequireDefault(_TableHeaderCell);

  var _TableRow = __webpack_require__(1050);

  var _TableRow2 = _interopRequireDefault(_TableRow);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  /**
   * A table displays a collections of data grouped into rows
   */
  function Table(props) {
    var basic = props.basic,
        attached = props.attached,
        renderBodyRow = props.renderBodyRow,
        celled = props.celled,
        children = props.children,
        className = props.className,
        collapsing = props.collapsing,
        color = props.color,
        columns = props.columns,
        compact = props.compact,
        definition = props.definition,
        fixed = props.fixed,
        footerRow = props.footerRow,
        headerRow = props.headerRow,
        inverted = props.inverted,
        padded = props.padded,
        selectable = props.selectable,
        singleLine = props.singleLine,
        size = props.size,
        stackable = props.stackable,
        striped = props.striped,
        structured = props.structured,
        tableData = props.tableData,
        unstackable = props.unstackable;


    var classes = (0, _classnames2.default)('ui', color, size, (0, _lib.useKeyOrValueAndKey)(attached, 'attached'), (0, _lib.useKeyOrValueAndKey)(basic, 'basic'), (0, _lib.useKeyOnly)(celled, 'celled'), (0, _lib.useKeyOnly)(collapsing, 'collapsing'), (0, _lib.useKeyOrValueAndKey)(compact, 'compact'), (0, _lib.useKeyOnly)(definition, 'definition'), (0, _lib.useKeyOnly)(fixed, 'fixed'), (0, _lib.useKeyOnly)(inverted, 'inverted'), (0, _lib.useKeyOrValueAndKey)(padded, 'padded'), (0, _lib.useKeyOnly)(selectable, 'selectable'), (0, _lib.useKeyOnly)(singleLine, 'single line'), (0, _lib.useKeyOnly)(stackable, 'stackable'), (0, _lib.useKeyOnly)(striped, 'striped'), (0, _lib.useKeyOnly)(structured, 'structured'), (0, _lib.useKeyOnly)(unstackable, 'unstackable'), (0, _lib.useWidthProp)(columns, 'column'), className, 'table');
    var rest = (0, _lib.getUnhandledProps)(Table, props);
    var ElementType = (0, _lib.getElementType)(Table, props);

    if (!(0, _isNil3.default)(children)) {
      return _react2.default.createElement(
        ElementType,
        _extends({}, rest, { className: classes }),
        children
      );
    }

    return _react2.default.createElement(
      ElementType,
      _extends({}, rest, { className: classes }),
      headerRow && _react2.default.createElement(
        _TableHeader2.default,
        null,
        _TableRow2.default.create(headerRow, { cellAs: 'th' })
      ),
      _react2.default.createElement(
        _TableBody2.default,
        null,
        renderBodyRow && (0, _map3.default)(tableData, function (data, index) {
          return _TableRow2.default.create(renderBodyRow(data, index));
        })
      ),
      footerRow && _react2.default.createElement(
        _TableFooter2.default,
        null,
        _TableRow2.default.create(footerRow)
      )
    );
  }

  Table._meta = {
    name: 'Table',
    type: _lib.META.TYPES.COLLECTION,
    props: {
      attached: ['top', 'bottom'],
      basic: ['very'],
      color: _lib.SUI.COLORS,
      columns: _lib.SUI.WIDTHS,
      compact: ['very'],
      padded: ['very'],
      size: (0, _without3.default)(_lib.SUI.SIZES, 'mini', 'tiny', 'medium', 'big', 'huge', 'massive')
    }
  };

  Table.defaultProps = {
    as: 'table'
  };

  Table.propTypes = {
    /** An element type to render as (string or function). */
    as: _lib.customPropTypes.as,

    /** Attach table to other content */
    attached: _react.PropTypes.oneOfType([_react.PropTypes.oneOf(Table._meta.props.attached), _react.PropTypes.bool]),

    /** A table can reduce its complexity to increase readability. */
    basic: _react.PropTypes.oneOfType([_react.PropTypes.bool, _react.PropTypes.oneOf(Table._meta.props.basic)]),

    /** A table may be divided each row into separate cells. */
    celled: _react.PropTypes.bool,

    /** Primary content. */
    children: _react.PropTypes.node,

    /** Additional classes. */
    className: _react.PropTypes.string,

    /** A table can be collapsing, taking up only as much space as its rows. */
    collapsing: _react.PropTypes.bool,

    /** A table can be given a color to distinguish it from other tables. */
    color: _react.PropTypes.oneOf(Table._meta.props.color),

    /** A table can specify its column count to divide its content evenly. */
    columns: _react.PropTypes.oneOf(Table._meta.props.columns),

    /** A table may sometimes need to be more compact to make more rows visible at a time. */
    compact: _react.PropTypes.oneOfType([_react.PropTypes.bool, _react.PropTypes.oneOf(Table._meta.props.compact)]),

    /** A table may be formatted to emphasize a first column that defines a rows content. */
    definition: _react.PropTypes.bool,

    /**
     * A table can use fixed a special faster form of table rendering that does not resize table cells based on content
     */
    fixed: _react.PropTypes.bool,

    /** Shorthand for a TableRow to be placed within Table.Footer. */
    footerRow: _lib.customPropTypes.itemShorthand,

    /** Shorthand for a TableRow to be placed within Table.Header. */
    headerRow: _lib.customPropTypes.itemShorthand,

    /** A table's colors can be inverted. */
    inverted: _react.PropTypes.bool,

    /** A table may sometimes need to be more padded for legibility. */
    padded: _react.PropTypes.oneOfType([_react.PropTypes.bool, _react.PropTypes.oneOf(Table._meta.props.padded)]),

    /**
     * A function that takes (data, index) and returns shorthand for a TableRow
     * to be placed within Table.Body.
     */
    renderBodyRow: _lib.customPropTypes.every([_lib.customPropTypes.disallow(['children']), _lib.customPropTypes.demand(['tableData']), _react.PropTypes.func]),

    /** A table can have its rows appear selectable. */
    selectable: _react.PropTypes.bool,

    /** A table can specify that its cell contents should remain on a single line and not wrap. */
    singleLine: _react.PropTypes.bool,

    /** A table can also be small or large. */
    size: _react.PropTypes.oneOf(Table._meta.props.size),

    /** A table can specify how it stacks table content responsively. */
    stackable: _react.PropTypes.bool,

    /** A table can stripe alternate rows of content with a darker color to increase contrast. */
    striped: _react.PropTypes.bool,

    /** A table can be formatted to display complex structured data. */
    structured: _react.PropTypes.bool,

    /** Data to be passed to the renderBodyRow function. */
    tableData: _lib.customPropTypes.every([_lib.customPropTypes.disallow(['children']), _lib.customPropTypes.demand(['renderBodyRow']), _react.PropTypes.array]),

    /** A table can specify how it stacks table content responsively. */
    unstackable: _react.PropTypes.bool
  };

  Table.Body = _TableBody2.default;
  Table.Cell = _TableCell2.default;
  Table.Footer = _TableFooter2.default;
  Table.Header = _TableHeader2.default;
  Table.HeaderCell = _TableHeaderCell2.default;
  Table.Row = _TableRow2.default;

  exports.default = Table;

/***/ },
/* 1045 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _classnames = __webpack_require__(794);

  var _classnames2 = _interopRequireDefault(_classnames);

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _lib = __webpack_require__(684);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function TableBody(props) {
    var children = props.children,
        className = props.className;

    var classes = (0, _classnames2.default)(className);
    var rest = (0, _lib.getUnhandledProps)(TableBody, props);
    var ElementType = (0, _lib.getElementType)(TableBody, props);

    return _react2.default.createElement(
      ElementType,
      _extends({}, rest, { className: classes }),
      children
    );
  }

  TableBody._meta = {
    name: 'TableBody',
    type: _lib.META.TYPES.COLLECTION,
    parent: 'Table'
  };

  TableBody.defaultProps = {
    as: 'tbody'
  };

  TableBody.propTypes = {
    /** An element type to render as (string or function). */
    as: _lib.customPropTypes.as,

    /** Primary content. */
    children: _react.PropTypes.node,

    /** Additional classes. */
    className: _react.PropTypes.string
  };

  exports.default = TableBody;

/***/ },
/* 1046 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _isNil2 = __webpack_require__(927);

  var _isNil3 = _interopRequireDefault(_isNil2);

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _classnames = __webpack_require__(794);

  var _classnames2 = _interopRequireDefault(_classnames);

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _lib = __webpack_require__(684);

  var _Icon = __webpack_require__(966);

  var _Icon2 = _interopRequireDefault(_Icon);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function TableCell(props) {
    var active = props.active,
        children = props.children,
        className = props.className,
        collapsing = props.collapsing,
        content = props.content,
        disabled = props.disabled,
        error = props.error,
        icon = props.icon,
        negative = props.negative,
        positive = props.positive,
        selectable = props.selectable,
        singleLine = props.singleLine,
        textAlign = props.textAlign,
        verticalAlign = props.verticalAlign,
        warning = props.warning,
        width = props.width;


    var classes = (0, _classnames2.default)((0, _lib.useKeyOnly)(active, 'active'), (0, _lib.useKeyOnly)(collapsing, 'collapsing'), (0, _lib.useKeyOnly)(disabled, 'disabled'), (0, _lib.useKeyOnly)(error, 'error'), (0, _lib.useKeyOnly)(negative, 'negative'), (0, _lib.useKeyOnly)(positive, 'positive'), (0, _lib.useKeyOnly)(selectable, 'selectable'), (0, _lib.useKeyOnly)(singleLine, 'single line'), (0, _lib.useKeyOnly)(warning, 'warning'), (0, _lib.useTextAlignProp)(textAlign), (0, _lib.useVerticalAlignProp)(verticalAlign), (0, _lib.useWidthProp)(width, 'wide'), className);
    var rest = (0, _lib.getUnhandledProps)(TableCell, props);
    var ElementType = (0, _lib.getElementType)(TableCell, props);

    if (!(0, _isNil3.default)(children)) {
      return _react2.default.createElement(
        ElementType,
        _extends({}, rest, { className: classes }),
        children
      );
    }

    return _react2.default.createElement(
      ElementType,
      _extends({}, rest, { className: classes }),
      _Icon2.default.create(icon),
      content
    );
  }

  TableCell._meta = {
    name: 'TableCell',
    type: _lib.META.TYPES.COLLECTION,
    parent: 'Table',
    props: {
      textAlign: _lib.SUI.TEXT_ALIGNMENTS,
      verticalAlign: _lib.SUI.VERTICAL_ALIGNMENTS,
      width: _lib.SUI.WIDTHS
    }
  };

  TableCell.defaultProps = {
    as: 'td'
  };

  TableCell.propTypes = {
    /** An element type to render as (string or function). */
    as: _lib.customPropTypes.as,

    /** A cell can be active or selected by a user. */
    active: _react.PropTypes.bool,

    /** Primary content. */
    children: _react.PropTypes.node,

    /** Additional classes. */
    className: _react.PropTypes.string,

    /** A cell can be collapsing so that it only uses as much space as required. */
    collapsing: _react.PropTypes.bool,

    /** Shorthand for primary content. */
    content: _lib.customPropTypes.contentShorthand,

    /** A cell can be disabled. */
    disabled: _react.PropTypes.bool,

    /** A cell may call attention to an error or a negative value. */
    error: _react.PropTypes.bool,

    /** Add an Icon by name, props object, or pass an <Icon /> */
    icon: _lib.customPropTypes.itemShorthand,

    /** A cell may let a user know whether a value is bad. */
    negative: _react.PropTypes.bool,

    /** A cell may let a user know whether a value is good. */
    positive: _react.PropTypes.bool,

    /** A cell can be selectable. */
    selectable: _react.PropTypes.bool,

    /** A cell can specify that its contents should remain on a single line and not wrap. */
    singleLine: _react.PropTypes.bool,

    /** A table cell can adjust its text alignment. */
    textAlign: _react.PropTypes.oneOf(TableCell._meta.props.textAlign),

    /** A table cell can adjust its text alignment. */
    verticalAlign: _react.PropTypes.oneOf(TableCell._meta.props.verticalAlign),

    /** A cell may warn a user. */
    warning: _react.PropTypes.bool,

    /** A table can specify the width of individual columns independently. */
    width: _react.PropTypes.oneOf(TableCell._meta.props.width)
  };

  TableCell.create = (0, _lib.createShorthandFactory)(TableCell, function (content) {
    return { content: content };
  }, true);

  exports.default = TableCell;

/***/ },
/* 1047 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _lib = __webpack_require__(684);

  var _TableHeader = __webpack_require__(1048);

  var _TableHeader2 = _interopRequireDefault(_TableHeader);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function TableFooter(props) {
    return _react2.default.createElement(_TableHeader2.default, props);
  }

  TableFooter._meta = {
    name: 'TableFooter',
    type: _lib.META.TYPES.COLLECTION,
    parent: 'Table'
  };

  TableFooter.defaultProps = {
    as: 'tfoot'
  };

  exports.default = TableFooter;

/***/ },
/* 1048 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _classnames = __webpack_require__(794);

  var _classnames2 = _interopRequireDefault(_classnames);

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _lib = __webpack_require__(684);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function TableHeader(props) {
    var children = props.children,
        className = props.className,
        fullWidth = props.fullWidth;

    var classes = (0, _classnames2.default)((0, _lib.useKeyOnly)(fullWidth, 'full-width'), className);
    var rest = (0, _lib.getUnhandledProps)(TableHeader, props);
    var ElementType = (0, _lib.getElementType)(TableHeader, props);

    return _react2.default.createElement(
      ElementType,
      _extends({}, rest, { className: classes }),
      children
    );
  }

  TableHeader._meta = {
    name: 'TableHeader',
    type: _lib.META.TYPES.COLLECTION,
    parent: 'Table'
  };

  TableHeader.defaultProps = {
    as: 'thead'
  };

  TableHeader.propTypes = {
    /** An element type to render as (string or function). */
    as: _lib.customPropTypes.as,

    /** Primary content. */
    children: _react.PropTypes.node,

    /** Additional classes. */
    className: _react.PropTypes.string,

    /** A definition table can have a full width header or footer, filling in the gap left by the first column. */
    fullWidth: _react.PropTypes.bool
  };

  exports.default = TableHeader;

/***/ },
/* 1049 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _lib = __webpack_require__(684);

  var _TableCell = __webpack_require__(1046);

  var _TableCell2 = _interopRequireDefault(_TableCell);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function TableHeaderCell(props) {
    return _react2.default.createElement(_TableCell2.default, props);
  }

  TableHeaderCell._meta = {
    name: 'TableHeaderCell',
    type: _lib.META.TYPES.COLLECTION,
    parent: 'Table'
  };

  TableHeaderCell.defaultProps = {
    as: 'th'
  };

  exports.default = TableHeaderCell;

/***/ },
/* 1050 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _map2 = __webpack_require__(918);

  var _map3 = _interopRequireDefault(_map2);

  var _isNil2 = __webpack_require__(927);

  var _isNil3 = _interopRequireDefault(_isNil2);

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _classnames = __webpack_require__(794);

  var _classnames2 = _interopRequireDefault(_classnames);

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _lib = __webpack_require__(684);

  var _TableCell = __webpack_require__(1046);

  var _TableCell2 = _interopRequireDefault(_TableCell);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function TableRow(props) {
    var active = props.active,
        cellAs = props.cellAs,
        cells = props.cells,
        children = props.children,
        className = props.className,
        disabled = props.disabled,
        error = props.error,
        negative = props.negative,
        positive = props.positive,
        textAlign = props.textAlign,
        verticalAlign = props.verticalAlign,
        warning = props.warning;


    var classes = (0, _classnames2.default)((0, _lib.useKeyOnly)(active, 'active'), (0, _lib.useKeyOnly)(disabled, 'disabled'), (0, _lib.useKeyOnly)(error, 'error'), (0, _lib.useKeyOnly)(negative, 'negative'), (0, _lib.useKeyOnly)(positive, 'positive'), (0, _lib.useKeyOnly)(warning, 'warning'), (0, _lib.useTextAlignProp)(textAlign), (0, _lib.useVerticalAlignProp)(verticalAlign), className);
    var rest = (0, _lib.getUnhandledProps)(TableRow, props);
    var ElementType = (0, _lib.getElementType)(TableRow, props);

    if (!(0, _isNil3.default)(children)) {
      return _react2.default.createElement(
        ElementType,
        _extends({}, rest, { className: classes }),
        children
      );
    }

    return _react2.default.createElement(
      ElementType,
      _extends({}, rest, { className: classes }),
      (0, _map3.default)(cells, function (cell) {
        return _TableCell2.default.create(cell, { as: cellAs });
      })
    );
  }

  TableRow._meta = {
    name: 'TableRow',
    type: _lib.META.TYPES.COLLECTION,
    parent: 'Table',
    props: {
      textAlign: _lib.SUI.TEXT_ALIGNMENTS,
      verticalAlign: _lib.SUI.VERTICAL_ALIGNMENTS
    }
  };

  TableRow.defaultProps = {
    as: 'tr',
    cellAs: 'td'
  };

  TableRow.propTypes = {
    /** An element type to render as (string or function). */
    as: _lib.customPropTypes.as,

    /** A row can be active or selected by a user. */
    active: _react.PropTypes.bool,

    /** An element type to render as (string or function). */
    cellAs: _lib.customPropTypes.as,

    /** Shorthand array of props for TableCell. */
    cells: _lib.customPropTypes.collectionShorthand,

    /** Primary content. */
    children: _react.PropTypes.node,

    /** Additional classes. */
    className: _react.PropTypes.string,

    /** A row can be disabled. */
    disabled: _react.PropTypes.bool,

    /** A row may call attention to an error or a negative value. */
    error: _react.PropTypes.bool,

    /** A row may let a user know whether a value is bad. */
    negative: _react.PropTypes.bool,

    /** A row may let a user know whether a value is good. */
    positive: _react.PropTypes.bool,

    /** A table row can adjust its text alignment. */
    textAlign: _react.PropTypes.oneOf(TableRow._meta.props.textAlign),

    /** A table row can adjust its vertical alignment. */
    verticalAlign: _react.PropTypes.oneOf(TableRow._meta.props.verticalAlign),

    /** A row may warn a user. */
    warning: _react.PropTypes.bool
  };

  TableRow.create = (0, _lib.createShorthandFactory)(TableRow, function (cells) {
    return { cells: cells };
  }, true);

  exports.default = TableRow;

/***/ },
/* 1051 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _Container = __webpack_require__(1052);

  var _Container2 = _interopRequireDefault(_Container);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  exports.default = _Container2.default;

/***/ },
/* 1052 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _classnames = __webpack_require__(794);

  var _classnames2 = _interopRequireDefault(_classnames);

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _lib = __webpack_require__(684);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  /**
   * A container limits content to a maximum width
   */
  function Container(props) {
    var text = props.text,
        textAlign = props.textAlign,
        fluid = props.fluid,
        children = props.children,
        className = props.className;

    var classes = (0, _classnames2.default)('ui', (0, _lib.useKeyOnly)(text, 'text'), (0, _lib.useKeyOnly)(fluid, 'fluid'), (0, _lib.useTextAlignProp)(textAlign), 'container', className);
    var rest = (0, _lib.getUnhandledProps)(Container, props);
    var ElementType = (0, _lib.getElementType)(Container, props);

    return _react2.default.createElement(
      ElementType,
      _extends({}, rest, { className: classes }),
      children
    );
  }

  Container._meta = {
    name: 'Container',
    type: _lib.META.TYPES.ELEMENT,
    props: {
      textAlign: _lib.SUI.TEXT_ALIGNMENTS
    }
  };

  Container.propTypes = {
    /** An element type to render as (string or function). */
    as: _lib.customPropTypes.as,

    /** Primary content. */
    children: _react.PropTypes.node,

    /** Additional classes. */
    className: _react.PropTypes.string,

    /** Reduce maximum width to more naturally accommodate text */
    text: _react.PropTypes.bool,

    /** Container has no maximum with */
    fluid: _react.PropTypes.bool,

    /** Align container text */
    textAlign: _react.PropTypes.oneOf(Container._meta.props.textAlign)
  };

  exports.default = Container;

/***/ },
/* 1053 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _Divider = __webpack_require__(1054);

  var _Divider2 = _interopRequireDefault(_Divider);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  exports.default = _Divider2.default;

/***/ },
/* 1054 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _classnames = __webpack_require__(794);

  var _classnames2 = _interopRequireDefault(_classnames);

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _lib = __webpack_require__(684);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  /**
   * A divider visually segments content into groups
   */
  function Divider(props) {
    var horizontal = props.horizontal,
        vertical = props.vertical,
        inverted = props.inverted,
        fitted = props.fitted,
        hidden = props.hidden,
        section = props.section,
        clearing = props.clearing,
        children = props.children,
        className = props.className;


    var classes = (0, _classnames2.default)('ui', (0, _lib.useKeyOnly)(horizontal, 'horizontal'), (0, _lib.useKeyOnly)(vertical, 'vertical'), (0, _lib.useKeyOnly)(inverted, 'inverted'), (0, _lib.useKeyOnly)(fitted, 'fitted'), (0, _lib.useKeyOnly)(hidden, 'hidden'), (0, _lib.useKeyOnly)(section, 'section'), (0, _lib.useKeyOnly)(clearing, 'clearing'), 'divider', className);
    var rest = (0, _lib.getUnhandledProps)(Divider, props);
    var ElementType = (0, _lib.getElementType)(Divider, props);

    return _react2.default.createElement(
      ElementType,
      _extends({}, rest, { className: classes }),
      children
    );
  }

  Divider._meta = {
    name: 'Divider',
    type: _lib.META.TYPES.ELEMENT
  };

  Divider.propTypes = {
    /** An element type to render as (string or function). */
    as: _lib.customPropTypes.as,

    /** Primary content. */
    children: _react.PropTypes.node,

    /** Additional classes. */
    className: _react.PropTypes.string,

    /** Divider can segment content horizontally */
    horizontal: _react.PropTypes.bool,

    /** Divider can segment content vertically */
    vertical: _react.PropTypes.bool,

    /** Divider can have it's colours inverted */
    inverted: _react.PropTypes.bool,

    /** Divider can be fitted without any space above or below it */
    fitted: _react.PropTypes.bool,

    /** Divider can divide content without creating a dividing line */
    hidden: _react.PropTypes.bool,

    /** Divider can provide greater margins to divide sections of content */
    section: _react.PropTypes.bool,

    /** Divider can clear the content above it */
    clearing: _react.PropTypes.bool
  };

  exports.default = Divider;

/***/ },
/* 1055 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _Header = __webpack_require__(1056);

  var _Header2 = _interopRequireDefault(_Header);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  exports.default = _Header2.default;

/***/ },
/* 1056 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _without2 = __webpack_require__(939);

  var _without3 = _interopRequireDefault(_without2);

  var _isNil2 = __webpack_require__(927);

  var _isNil3 = _interopRequireDefault(_isNil2);

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _classnames = __webpack_require__(794);

  var _classnames2 = _interopRequireDefault(_classnames);

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _lib = __webpack_require__(684);

  var _Icon = __webpack_require__(966);

  var _Icon2 = _interopRequireDefault(_Icon);

  var _Image = __webpack_require__(990);

  var _Image2 = _interopRequireDefault(_Image);

  var _HeaderSubheader = __webpack_require__(1057);

  var _HeaderSubheader2 = _interopRequireDefault(_HeaderSubheader);

  var _HeaderContent = __webpack_require__(1058);

  var _HeaderContent2 = _interopRequireDefault(_HeaderContent);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  /**
   * A header provides a short summary of content
   */
  function Header(props) {
    var color = props.color,
        content = props.content,
        dividing = props.dividing,
        block = props.block,
        attached = props.attached,
        floated = props.floated,
        inverted = props.inverted,
        disabled = props.disabled,
        sub = props.sub,
        size = props.size,
        textAlign = props.textAlign,
        icon = props.icon,
        image = props.image,
        children = props.children,
        className = props.className,
        subheader = props.subheader;


    var classes = (0, _classnames2.default)('ui', size, color, (0, _lib.useKeyOrValueAndKey)(attached, 'attached'), (0, _lib.useKeyOnly)(block, 'block'), (0, _lib.useKeyOnly)(disabled, 'disabled'), (0, _lib.useKeyOnly)(dividing, 'dividing'), (0, _lib.useValueAndKey)(floated, 'floated'), (0, _lib.useKeyOnly)(icon === true, 'icon'), (0, _lib.useKeyOnly)(image === true, 'image'), (0, _lib.useKeyOnly)(inverted, 'inverted'), (0, _lib.useKeyOnly)(sub, 'sub'), (0, _lib.useTextAlignProp)(textAlign), className, 'header');
    var rest = (0, _lib.getUnhandledProps)(Header, props);
    var ElementType = (0, _lib.getElementType)(Header, props);

    if (!(0, _isNil3.default)(children)) {
      return _react2.default.createElement(
        ElementType,
        _extends({}, rest, { className: classes }),
        children
      );
    }

    var iconElement = _Icon2.default.create(icon);
    var imageElement = _Image2.default.create(image);
    var subheaderElement = _HeaderSubheader2.default.create(subheader);

    if (iconElement || imageElement) {
      return _react2.default.createElement(
        ElementType,
        _extends({}, rest, { className: classes }),
        iconElement || imageElement,
        (content || subheaderElement) && _react2.default.createElement(
          _HeaderContent2.default,
          null,
          content,
          subheaderElement
        )
      );
    }

    return _react2.default.createElement(
      ElementType,
      _extends({}, rest, { className: classes }),
      content,
      subheaderElement
    );
  }

  Header._meta = {
    name: 'Header',
    type: _lib.META.TYPES.ELEMENT,
    props: {
      attached: ['top', 'bottom'],
      color: _lib.SUI.COLORS,
      size: (0, _without3.default)(_lib.SUI.SIZES, 'big', 'massive'),
      floated: _lib.SUI.FLOATS,
      textAlign: _lib.SUI.TEXT_ALIGNMENTS
    }
  };

  Header.propTypes = {
    /** An element type to render as (string or function). */
    as: _lib.customPropTypes.as,

    /** Additional classes. */
    className: _react.PropTypes.string,

    /** Primary content. */
    children: _react.PropTypes.node,

    /** Shorthand for primary content. */
    content: _lib.customPropTypes.contentShorthand,

    /** Add an icon by icon name or pass an <Icon /.> */
    icon: _lib.customPropTypes.every([_lib.customPropTypes.disallow(['image']), _react.PropTypes.oneOfType([_react.PropTypes.bool, _lib.customPropTypes.itemShorthand])]),

    /** Add an image by img src or pass an <Image />. */
    image: _lib.customPropTypes.every([_lib.customPropTypes.disallow(['icon']), _react.PropTypes.oneOfType([_react.PropTypes.bool, _lib.customPropTypes.itemShorthand])]),

    /** Color of the header. */
    color: _react.PropTypes.oneOf(Header._meta.props.color),

    /** Divide header from the content below it */
    dividing: _react.PropTypes.bool,

    /** Format header to appear inside a content block */
    block: _react.PropTypes.bool,

    /** Attach header  to other content, like a segment */
    attached: _react.PropTypes.oneOfType([_react.PropTypes.oneOf(Header._meta.props.attached), _react.PropTypes.bool]),

    /** Header can sit to the left or right of other content */
    floated: _react.PropTypes.oneOf(Header._meta.props.floated),

    /** Inverts the color of the header for dark backgrounds */
    inverted: _react.PropTypes.bool,

    /** Show that the header is inactive */
    disabled: _react.PropTypes.bool,

    /** Headers may be formatted to label smaller or de-emphasized content */
    sub: _react.PropTypes.bool,

    /** Content headings are sized with em and are based on the font-size of their container. */
    size: _react.PropTypes.oneOf(Header._meta.props.size),

    /** Shorthand for Header.Subheader. */
    subheader: _lib.customPropTypes.itemShorthand,

    /** Align header content */
    textAlign: _react.PropTypes.oneOf(Header._meta.props.textAlign)
  };

  Header.Content = _HeaderContent2.default;
  Header.Subheader = _HeaderSubheader2.default;

  exports.default = Header;

/***/ },
/* 1057 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _isNil2 = __webpack_require__(927);

  var _isNil3 = _interopRequireDefault(_isNil2);

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _classnames = __webpack_require__(794);

  var _classnames2 = _interopRequireDefault(_classnames);

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _lib = __webpack_require__(684);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function HeaderSubheader(props) {
    var children = props.children,
        className = props.className,
        content = props.content;

    var classes = (0, _classnames2.default)('sub header', className);
    var rest = (0, _lib.getUnhandledProps)(HeaderSubheader, props);
    var ElementType = (0, _lib.getElementType)(HeaderSubheader, props);

    return _react2.default.createElement(
      ElementType,
      _extends({}, rest, { className: classes }),
      (0, _isNil3.default)(children) ? content : children
    );
  }

  HeaderSubheader._meta = {
    name: 'HeaderSubheader',
    parent: 'Header',
    type: _lib.META.TYPES.ELEMENT
  };

  HeaderSubheader.propTypes = {
    /** An element type to render as (string or function). */
    as: _lib.customPropTypes.as,

    /** Primary content. */
    children: _react.PropTypes.node,

    /** Additional classes. */
    className: _react.PropTypes.string,

    /** Shorthand for primary content. */
    content: _lib.customPropTypes.contentShorthand
  };

  HeaderSubheader.create = (0, _lib.createShorthandFactory)(HeaderSubheader, function (content) {
    return { content: content };
  });

  exports.default = HeaderSubheader;

/***/ },
/* 1058 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _classnames = __webpack_require__(794);

  var _classnames2 = _interopRequireDefault(_classnames);

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _lib = __webpack_require__(684);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  /**
   * Header content wraps the main content when there is an adjacent Icon or Image.
   */
  function HeaderContent(props) {
    var children = props.children,
        className = props.className;

    var classes = (0, _classnames2.default)(className, 'content');
    var rest = (0, _lib.getUnhandledProps)(HeaderContent, props);
    var ElementType = (0, _lib.getElementType)(HeaderContent, props);

    return _react2.default.createElement(
      ElementType,
      _extends({}, rest, { className: classes }),
      children
    );
  }

  HeaderContent._meta = {
    name: 'HeaderContent',
    parent: 'Header',
    type: _lib.META.TYPES.VIEW
  };

  HeaderContent.propTypes = {
    /** An element type to render as (string or function). */
    as: _lib.customPropTypes.as,

    /** Primary content. */
    children: _react.PropTypes.node,

    /** Additional classes. */
    className: _react.PropTypes.string
  };

  exports.default = HeaderContent;

/***/ },
/* 1059 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _List = __webpack_require__(1060);

  var _List2 = _interopRequireDefault(_List);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  exports.default = _List2.default;

/***/ },
/* 1060 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _map2 = __webpack_require__(918);

  var _map3 = _interopRequireDefault(_map2);

  var _isNil2 = __webpack_require__(927);

  var _isNil3 = _interopRequireDefault(_isNil2);

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _classnames = __webpack_require__(794);

  var _classnames2 = _interopRequireDefault(_classnames);

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _lib = __webpack_require__(684);

  var _ListContent = __webpack_require__(1061);

  var _ListContent2 = _interopRequireDefault(_ListContent);

  var _ListDescription = __webpack_require__(1062);

  var _ListDescription2 = _interopRequireDefault(_ListDescription);

  var _ListHeader = __webpack_require__(1063);

  var _ListHeader2 = _interopRequireDefault(_ListHeader);

  var _ListIcon = __webpack_require__(1064);

  var _ListIcon2 = _interopRequireDefault(_ListIcon);

  var _ListItem = __webpack_require__(1065);

  var _ListItem2 = _interopRequireDefault(_ListItem);

  var _ListList = __webpack_require__(1066);

  var _ListList2 = _interopRequireDefault(_ListList);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  /**
   * A list groups related content
   **/
  function List(props) {
    var animated = props.animated,
        bulleted = props.bulleted,
        celled = props.celled,
        children = props.children,
        className = props.className,
        divided = props.divided,
        floated = props.floated,
        horizontal = props.horizontal,
        inverted = props.inverted,
        items = props.items,
        link = props.link,
        ordered = props.ordered,
        relaxed = props.relaxed,
        size = props.size,
        selection = props.selection,
        verticalAlign = props.verticalAlign;


    var classes = (0, _classnames2.default)('ui', size, (0, _lib.useKeyOnly)(animated, 'animated'), (0, _lib.useKeyOnly)(bulleted, 'bulleted'), (0, _lib.useKeyOnly)(celled, 'celled'), (0, _lib.useKeyOnly)(divided, 'divided'), (0, _lib.useKeyOnly)(horizontal, 'horizontal'), (0, _lib.useKeyOnly)(inverted, 'inverted'), (0, _lib.useKeyOnly)(link, 'link'), (0, _lib.useKeyOnly)(ordered, 'ordered'), (0, _lib.useKeyOnly)(selection, 'selection'), (0, _lib.useKeyOrValueAndKey)(relaxed, 'relaxed'), (0, _lib.useValueAndKey)(floated, 'floated'), (0, _lib.useVerticalAlignProp)(verticalAlign), 'list', className);
    var rest = (0, _lib.getUnhandledProps)(List, props);
    var ElementType = (0, _lib.getElementType)(List, props);

    if (!(0, _isNil3.default)(children)) {
      return _react2.default.createElement(
        ElementType,
        _extends({}, rest, { role: 'list', className: classes }),
        children
      );
    }

    return _react2.default.createElement(
      ElementType,
      _extends({}, rest, { role: 'list', className: classes }),
      (0, _map3.default)(items, function (item) {
        return _ListItem2.default.create(item);
      })
    );
  }

  List._meta = {
    name: 'List',
    type: _lib.META.TYPES.ELEMENT,
    props: {
      floated: _lib.SUI.FLOATS,
      relaxed: ['very'],
      size: _lib.SUI.SIZES,
      verticalAlign: _lib.SUI.VERTICAL_ALIGNMENTS
    }
  };

  List.propTypes = {
    /** An element type to render as (string or function). */
    as: _lib.customPropTypes.as,

    /** A list can animate to set the current item apart from the list. */
    animated: _react.PropTypes.bool,

    /** A list can mark items with a bullet. */
    bulleted: _react.PropTypes.bool,

    /** A list can divide its items into cells. */
    celled: _react.PropTypes.bool,

    /** Primary content. */
    children: _react.PropTypes.node,

    /** Additional classes. */
    className: _react.PropTypes.string,

    /** A list can show divisions between content. */
    divided: _react.PropTypes.bool,

    /** An list can be floated left or right. */
    floated: _react.PropTypes.oneOf(List._meta.props.floated),

    /** A list can be formatted to have items appear horizontally. */
    horizontal: _react.PropTypes.bool,

    /** A list can be inverted to appear on a dark background. */
    inverted: _react.PropTypes.bool,

    /** Shorthand array of props for ListItem. */
    items: _lib.customPropTypes.collectionShorthand,

    /** A list can be specially formatted for navigation links. */
    link: _react.PropTypes.bool,

    /** A list can be ordered numerically. */
    ordered: _react.PropTypes.bool,

    /** A list can relax its padding to provide more negative space. */
    relaxed: _react.PropTypes.oneOfType([_react.PropTypes.bool, _react.PropTypes.oneOf(List._meta.props.relaxed)]),

    /** A selection list formats list items as possible choices. */
    selection: _react.PropTypes.bool,

    /** A list can vary in size. */
    size: _react.PropTypes.oneOf(List._meta.props.size),

    /** An element inside a list can be vertically aligned. */
    verticalAlign: _react.PropTypes.oneOf(List._meta.props.verticalAlign)
  };

  List.Content = _ListContent2.default;
  List.Description = _ListDescription2.default;
  List.Header = _ListHeader2.default;
  List.Icon = _ListIcon2.default;
  List.Item = _ListItem2.default;
  List.List = _ListList2.default;

  exports.default = List;

/***/ },
/* 1061 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _isNil2 = __webpack_require__(927);

  var _isNil3 = _interopRequireDefault(_isNil2);

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _classnames = __webpack_require__(794);

  var _classnames2 = _interopRequireDefault(_classnames);

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _lib = __webpack_require__(684);

  var _ListDescription = __webpack_require__(1062);

  var _ListDescription2 = _interopRequireDefault(_ListDescription);

  var _ListHeader = __webpack_require__(1063);

  var _ListHeader2 = _interopRequireDefault(_ListHeader);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function ListContent(props) {
    var children = props.children,
        className = props.className,
        content = props.content,
        description = props.description,
        floated = props.floated,
        header = props.header,
        verticalAlign = props.verticalAlign;


    var classes = (0, _classnames2.default)((0, _lib.useValueAndKey)(floated, 'floated'), (0, _lib.useVerticalAlignProp)(verticalAlign), 'content', className);
    var rest = (0, _lib.getUnhandledProps)(ListContent, props);
    var ElementType = (0, _lib.getElementType)(ListContent, props);

    if (!(0, _isNil3.default)(children)) {
      return _react2.default.createElement(
        ElementType,
        _extends({}, rest, { className: classes }),
        children
      );
    }

    return _react2.default.createElement(
      ElementType,
      _extends({}, rest, { className: classes }),
      _ListHeader2.default.create(header),
      _ListDescription2.default.create(description),
      content
    );
  }

  ListContent._meta = {
    name: 'ListContent',
    parent: 'List',
    type: _lib.META.TYPES.ELEMENT,
    props: {
      floated: _lib.SUI.FLOATS,
      verticalAlign: _lib.SUI.VERTICAL_ALIGNMENTS
    }
  };

  ListContent.propTypes = {
    /** An element type to render as (string or function). */
    as: _lib.customPropTypes.as,

    /** Primary content. */
    children: _react.PropTypes.node,

    /** Additional classes. */
    className: _react.PropTypes.string,

    /** Shorthand for primary content. */
    content: _lib.customPropTypes.contentShorthand,

    /** Shorthand for ListDescription. */
    description: _lib.customPropTypes.itemShorthand,

    /** An list content can be floated left or right. */
    floated: _react.PropTypes.oneOf(ListContent._meta.props.floated),

    /** Shorthand for ListHeader. */
    header: _lib.customPropTypes.itemShorthand,

    /** An element inside a list can be vertically aligned. */
    verticalAlign: _react.PropTypes.oneOf(ListContent._meta.props.verticalAlign)
  };

  ListContent.create = (0, _lib.createShorthandFactory)(ListContent, function (content) {
    return { content: content };
  });

  exports.default = ListContent;

/***/ },
/* 1062 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _isNil2 = __webpack_require__(927);

  var _isNil3 = _interopRequireDefault(_isNil2);

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _classnames = __webpack_require__(794);

  var _classnames2 = _interopRequireDefault(_classnames);

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _lib = __webpack_require__(684);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function ListDescription(props) {
    var children = props.children,
        className = props.className,
        content = props.content;

    var classes = (0, _classnames2.default)(className, 'description');
    var rest = (0, _lib.getUnhandledProps)(ListDescription, props);
    var ElementType = (0, _lib.getElementType)(ListDescription, props);

    return _react2.default.createElement(
      ElementType,
      _extends({}, rest, { className: classes }),
      (0, _isNil3.default)(children) ? content : children
    );
  }

  ListDescription._meta = {
    name: 'ListDescription',
    parent: 'List',
    type: _lib.META.TYPES.ELEMENT
  };

  ListDescription.propTypes = {
    /** An element type to render as (string or function). */
    as: _lib.customPropTypes.as,

    /** Primary content. */
    children: _react.PropTypes.node,

    /** Additional classes. */
    className: _react.PropTypes.string,

    /** Shorthand for primary content. */
    content: _lib.customPropTypes.contentShorthand
  };

  ListDescription.create = (0, _lib.createShorthandFactory)(ListDescription, function (content) {
    return { content: content };
  });

  exports.default = ListDescription;

/***/ },
/* 1063 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _isNil2 = __webpack_require__(927);

  var _isNil3 = _interopRequireDefault(_isNil2);

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _classnames = __webpack_require__(794);

  var _classnames2 = _interopRequireDefault(_classnames);

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _lib = __webpack_require__(684);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function ListHeader(props) {
    var children = props.children,
        className = props.className,
        content = props.content;

    var classes = (0, _classnames2.default)(className, 'header');
    var rest = (0, _lib.getUnhandledProps)(ListHeader, props);
    var ElementType = (0, _lib.getElementType)(ListHeader, props);

    return _react2.default.createElement(
      ElementType,
      _extends({}, rest, { className: classes }),
      (0, _isNil3.default)(children) ? content : children
    );
  }

  ListHeader._meta = {
    name: 'ListHeader',
    parent: 'List',
    type: _lib.META.TYPES.ELEMENT
  };

  ListHeader.propTypes = {
    /** An element type to render as (string or function). */
    as: _lib.customPropTypes.as,

    /** Primary content. */
    children: _react.PropTypes.node,

    /** Additional classes. */
    className: _react.PropTypes.string,

    /** Shorthand for primary content. */
    content: _lib.customPropTypes.contentShorthand
  };

  ListHeader.create = (0, _lib.createShorthandFactory)(ListHeader, function (content) {
    return { content: content };
  });

  exports.default = ListHeader;

/***/ },
/* 1064 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _classnames = __webpack_require__(794);

  var _classnames2 = _interopRequireDefault(_classnames);

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _lib = __webpack_require__(684);

  var _Icon = __webpack_require__(938);

  var _Icon2 = _interopRequireDefault(_Icon);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function ListIcon(props) {
    var className = props.className,
        verticalAlign = props.verticalAlign;

    var classes = (0, _classnames2.default)((0, _lib.useVerticalAlignProp)(verticalAlign), className);
    var rest = (0, _lib.getUnhandledProps)(ListIcon, props);

    return _react2.default.createElement(_Icon2.default, _extends({}, rest, { className: classes }));
  }

  ListIcon._meta = {
    name: 'ListIcon',
    parent: 'List',
    type: _lib.META.TYPES.ELEMENT,
    props: {
      verticalAlign: _lib.SUI.VERTICAL_ALIGNMENTS
    }
  };

  ListIcon.propTypes = {
    /** Additional classes. */
    className: _react.PropTypes.string,

    /** An element inside a list can be vertically aligned. */
    verticalAlign: _react.PropTypes.oneOf(ListIcon._meta.props.verticalAlign)
  };

  ListIcon.create = (0, _lib.createShorthandFactory)(ListIcon, function (name) {
    return { name: name };
  });

  exports.default = ListIcon;

/***/ },
/* 1065 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _isPlainObject2 = __webpack_require__(792);

  var _isPlainObject3 = _interopRequireDefault(_isPlainObject2);

  var _isNil2 = __webpack_require__(927);

  var _isNil3 = _interopRequireDefault(_isNil2);

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _classnames = __webpack_require__(794);

  var _classnames2 = _interopRequireDefault(_classnames);

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _lib = __webpack_require__(684);

  var _Image = __webpack_require__(990);

  var _Image2 = _interopRequireDefault(_Image);

  var _ListContent = __webpack_require__(1061);

  var _ListContent2 = _interopRequireDefault(_ListContent);

  var _ListDescription = __webpack_require__(1062);

  var _ListDescription2 = _interopRequireDefault(_ListDescription);

  var _ListHeader = __webpack_require__(1063);

  var _ListHeader2 = _interopRequireDefault(_ListHeader);

  var _ListIcon = __webpack_require__(1064);

  var _ListIcon2 = _interopRequireDefault(_ListIcon);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function ListItem(props) {
    var active = props.active,
        children = props.children,
        className = props.className,
        content = props.content,
        description = props.description,
        disabled = props.disabled,
        header = props.header,
        icon = props.icon,
        image = props.image,
        value = props.value;


    var ElementType = (0, _lib.getElementType)(ListItem, props);
    var classes = (0, _classnames2.default)((0, _lib.useKeyOnly)(active, 'active'), (0, _lib.useKeyOnly)(disabled, 'disabled'), (0, _lib.useKeyOnly)(ElementType !== 'li', 'item'), className);
    var rest = (0, _lib.getUnhandledProps)(ListItem, props);
    var valueProp = ElementType === 'li' ? { value: value } : { 'data-value': value };

    if (!(0, _isNil3.default)(children)) {
      return _react2.default.createElement(
        ElementType,
        _extends({}, rest, { role: 'listitem', className: classes }, valueProp),
        children
      );
    }

    var iconElement = _ListIcon2.default.create(icon);
    var imageElement = _Image2.default.create(image);

    // See description of `content` prop for explanation about why this is necessary.
    if (!(0, _react.isValidElement)(content) && (0, _isPlainObject3.default)(content)) {
      return _react2.default.createElement(
        ElementType,
        _extends({}, rest, { role: 'listitem', className: classes }, valueProp),
        iconElement || imageElement,
        _ListContent2.default.create(content, { header: header, description: description })
      );
    }

    var headerElement = _ListHeader2.default.create(header);
    var descriptionElement = _ListDescription2.default.create(description);

    if (iconElement || imageElement) {
      return _react2.default.createElement(
        ElementType,
        _extends({}, rest, { role: 'listitem', className: classes }, valueProp),
        iconElement || imageElement,
        (content || headerElement || descriptionElement) && _react2.default.createElement(
          _ListContent2.default,
          null,
          headerElement,
          descriptionElement,
          content
        )
      );
    }

    return _react2.default.createElement(
      ElementType,
      _extends({}, rest, { role: 'listitem', className: classes }, valueProp),
      headerElement,
      descriptionElement,
      content
    );
  }

  ListItem._meta = {
    name: 'ListItem',
    parent: 'List',
    type: _lib.META.TYPES.ELEMENT
  };

  ListItem.propTypes = {
    /** An element type to render as (string or function). */
    as: _lib.customPropTypes.as,

    /** A list item can active. */
    active: _react.PropTypes.bool,

    /** Primary content. */
    children: _react.PropTypes.node,

    /** Additional classes. */
    className: _react.PropTypes.string,

    /**
     * Shorthand for primary content.
     *
     * Heads up!
     *
     * This is handled slightly differently than the typical `content` prop since
     * the wrapping ListContent is not used when there's no icon or image.
     *
     * If you pass content as:
     * - an element/literal, it's treated as the sibling node to
     * header/description (whether wrapped in Item.Content or not).
     * - a props object, it forces the presence of Item.Content and passes those
     * props to it. If you pass a content prop within that props object, it
     * will be treated as the sibling node to header/description.
     */
    content: _lib.customPropTypes.itemShorthand,

    /** Shorthand for ListDescription. */
    description: _lib.customPropTypes.itemShorthand,

    /** A list item can disabled. */
    disabled: _react.PropTypes.bool,

    /** Shorthand for ListHeader. */
    header: _lib.customPropTypes.itemShorthand,

    /** Shorthand for ListIcon. */
    icon: _lib.customPropTypes.every([_lib.customPropTypes.disallow(['image']), _lib.customPropTypes.itemShorthand]),

    /** Shorthand for Image. */
    image: _lib.customPropTypes.every([_lib.customPropTypes.disallow(['icon']), _lib.customPropTypes.itemShorthand]),

    /** A value for an ordered list. */
    value: _react.PropTypes.string
  };

  ListItem.create = (0, _lib.createShorthandFactory)(ListItem, function (content) {
    return { content: content };
  }, true);

  exports.default = ListItem;

/***/ },
/* 1066 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _classnames = __webpack_require__(794);

  var _classnames2 = _interopRequireDefault(_classnames);

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _lib = __webpack_require__(684);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function ListList(props) {
    var children = props.children,
        className = props.className;


    var rest = (0, _lib.getUnhandledProps)(ListList, props);
    var ElementType = (0, _lib.getElementType)(ListList, props);
    var classes = (0, _classnames2.default)((0, _lib.useKeyOnly)(ElementType !== 'ul' && ElementType !== 'ol', 'list'), className);

    return _react2.default.createElement(
      ElementType,
      _extends({}, rest, { className: classes }),
      children
    );
  }

  ListList._meta = {
    name: 'ListList',
    parent: 'List',
    type: _lib.META.TYPES.ELEMENT
  };

  ListList.propTypes = {
    /** An element type to render as (string or function). */
    as: _lib.customPropTypes.as,

    /** Primary content. */
    children: _react.PropTypes.node,

    /** Additional classes. */
    className: _react.PropTypes.string
  };

  exports.default = ListList;

/***/ },
/* 1067 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _Loader = __webpack_require__(1068);

  var _Loader2 = _interopRequireDefault(_Loader);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  exports.default = _Loader2.default;

/***/ },
/* 1068 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _isNil2 = __webpack_require__(927);

  var _isNil3 = _interopRequireDefault(_isNil2);

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _classnames = __webpack_require__(794);

  var _classnames2 = _interopRequireDefault(_classnames);

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _lib = __webpack_require__(684);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  /**
   * A loader alerts a user to wait for an activity to complete.
   * @see Dimmer
   */
  function Loader(props) {
    var active = props.active,
        children = props.children,
        className = props.className,
        content = props.content,
        disabled = props.disabled,
        indeterminate = props.indeterminate,
        inline = props.inline,
        inverted = props.inverted,
        size = props.size;


    var classes = (0, _classnames2.default)('ui', size, (0, _lib.useKeyOnly)(active, 'active'), (0, _lib.useKeyOnly)(disabled, 'disabled'), (0, _lib.useKeyOnly)(indeterminate, 'indeterminate'), (0, _lib.useKeyOnly)(inverted, 'inverted'), (0, _lib.useKeyOnly)(children || content, 'text'), (0, _lib.useKeyOrValueAndKey)(inline, 'inline'), 'loader', className);
    var rest = (0, _lib.getUnhandledProps)(Loader, props);
    var ElementType = (0, _lib.getElementType)(Loader, props);

    return _react2.default.createElement(
      ElementType,
      _extends({}, rest, { className: classes }),
      (0, _isNil3.default)(children) ? content : children
    );
  }

  Loader._meta = {
    name: 'Loader',
    type: _lib.META.TYPES.ELEMENT,
    props: {
      inline: ['centered'],
      size: _lib.SUI.SIZES
    }
  };

  Loader.propTypes = {
    /** An element type to render as (string or function). */
    as: _lib.customPropTypes.as,

    /** A loader can be active or visible. */
    active: _react.PropTypes.bool,

    /** Primary content. */
    children: _react.PropTypes.node,

    /** Additional classes. */
    className: _react.PropTypes.string,

    /** Shorthand for primary content. */
    content: _lib.customPropTypes.contentShorthand,

    /** A loader can be disabled or hidden. */
    disabled: _react.PropTypes.bool,

    /** A loader can show it's unsure of how long a task will take. */
    indeterminate: _react.PropTypes.bool,

    /** Loaders can appear inline with content. */
    inline: _react.PropTypes.oneOfType([_react.PropTypes.bool, _react.PropTypes.oneOf(Loader._meta.props.inline)]),

    /** Loaders can have their colors inverted. */
    inverted: _react.PropTypes.bool,

    /** Loaders can have different sizes. */
    size: _react.PropTypes.oneOf(Loader._meta.props.size)
  };

  exports.default = Loader;

/***/ },
/* 1069 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _Rail = __webpack_require__(1070);

  var _Rail2 = _interopRequireDefault(_Rail);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  exports.default = _Rail2.default;

/***/ },
/* 1070 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _without2 = __webpack_require__(939);

  var _without3 = _interopRequireDefault(_without2);

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _classnames = __webpack_require__(794);

  var _classnames2 = _interopRequireDefault(_classnames);

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _lib = __webpack_require__(684);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  /**
   * A rail is used to show accompanying content outside the boundaries of the main view of a site.
   */
  function Rail(props) {
    var attached = props.attached,
        children = props.children,
        className = props.className,
        close = props.close,
        dividing = props.dividing,
        internal = props.internal,
        position = props.position,
        size = props.size;


    var classes = (0, _classnames2.default)('ui', position, size, (0, _lib.useKeyOnly)(attached, 'attached'), (0, _lib.useKeyOnly)(dividing, 'dividing'), (0, _lib.useKeyOnly)(internal, 'internal'), (0, _lib.useKeyOrValueAndKey)(close, 'close'), 'rail', className);
    var rest = (0, _lib.getUnhandledProps)(Rail, props);
    var ElementType = (0, _lib.getElementType)(Rail, props);

    return _react2.default.createElement(
      ElementType,
      _extends({}, rest, { className: classes }),
      children
    );
  }

  Rail._meta = {
    name: 'Rail',
    type: _lib.META.TYPES.ELEMENT,
    props: {
      close: ['very'],
      position: _lib.SUI.FLOATS,
      size: (0, _without3.default)(_lib.SUI.SIZES, 'medium')
    }
  };

  Rail.propTypes = {
    /** An element type to render as (string or function). */
    as: _lib.customPropTypes.as,

    /** A rail can appear attached to the main viewport. */
    attached: _react.PropTypes.bool,

    /** Primary content. */
    children: _react.PropTypes.node,

    /** Additional classes. */
    className: _react.PropTypes.string,

    /** A rail can appear closer to the main viewport. */
    close: _react.PropTypes.oneOfType([_react.PropTypes.bool, _react.PropTypes.oneOf(Rail._meta.props.close)]),

    /** A rail can create a division between itself and a container. */
    dividing: _react.PropTypes.bool,

    /** A rail can attach itself to the inside of a container. */
    internal: _react.PropTypes.bool,

    /** A rail can be presented on the left or right side of a container. */
    position: _react.PropTypes.oneOf(Rail._meta.props.position).isRequired,

    /** A rail can have different sizes. */
    size: _react.PropTypes.oneOf(Rail._meta.props.size)
  };

  exports.default = Rail;

/***/ },
/* 1071 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _Reveal = __webpack_require__(1072);

  var _Reveal2 = _interopRequireDefault(_Reveal);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  exports.default = _Reveal2.default;

/***/ },
/* 1072 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _classnames = __webpack_require__(794);

  var _classnames2 = _interopRequireDefault(_classnames);

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _lib = __webpack_require__(684);

  var _RevealContent = __webpack_require__(1073);

  var _RevealContent2 = _interopRequireDefault(_RevealContent);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  /**
   * A reveal displays additional content in place of previous content when activated.
   */
  function Reveal(props) {
    var active = props.active,
        animated = props.animated,
        children = props.children,
        className = props.className,
        disabled = props.disabled,
        instant = props.instant;


    var classes = (0, _classnames2.default)('ui', animated, (0, _lib.useKeyOnly)(active, 'active'), (0, _lib.useKeyOnly)(disabled, 'disabled'), (0, _lib.useKeyOnly)(instant, 'instant'), 'reveal', className);
    var rest = (0, _lib.getUnhandledProps)(Reveal, props);
    var ElementType = (0, _lib.getElementType)(Reveal, props);

    return _react2.default.createElement(
      ElementType,
      _extends({}, rest, { className: classes }),
      children
    );
  }

  Reveal._meta = {
    name: 'Reveal',
    type: _lib.META.TYPES.ELEMENT,
    props: {
      animated: ['fade', 'small fade', 'move', 'move right', 'move up', 'move down', 'rotate', 'rotate left']
    }
  };

  Reveal.propTypes = {
    /** An element type to render as (string or function). */
    as: _lib.customPropTypes.as,

    /** An active reveal displays its hidden content. */
    active: _react.PropTypes.bool,

    /** Primary content. */
    children: _react.PropTypes.node,

    /** Additional classes. */
    className: _react.PropTypes.string,

    /** A disabled reveal will not animate when hovered. */
    disabled: _react.PropTypes.bool,

    /** An animation name that will be applied to Reveal. */
    animated: _react.PropTypes.oneOf(Reveal._meta.props.animated),

    /** An element can show its content without delay. */
    instant: _react.PropTypes.bool
  };

  Reveal.Content = _RevealContent2.default;

  exports.default = Reveal;

/***/ },
/* 1073 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _classnames = __webpack_require__(794);

  var _classnames2 = _interopRequireDefault(_classnames);

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _lib = __webpack_require__(684);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  /**
   * A content sub-component for the Reveal.
   */
  function RevealContent(props) {
    var children = props.children,
        className = props.className,
        hidden = props.hidden,
        visible = props.visible;


    var classes = (0, _classnames2.default)('ui', (0, _lib.useKeyOnly)(hidden, 'hidden'), (0, _lib.useKeyOnly)(visible, 'visible'), 'content', className);
    var rest = (0, _lib.getUnhandledProps)(RevealContent, props);
    var ElementType = (0, _lib.getElementType)(RevealContent, props);

    return _react2.default.createElement(
      ElementType,
      _extends({}, rest, { className: classes }),
      children
    );
  }

  RevealContent._meta = {
    name: 'RevealContent',
    parent: 'Reveal',
    type: _lib.META.TYPES.ELEMENT
  };

  RevealContent.propTypes = {
    /** An element type to render as (string or function). */
    as: _lib.customPropTypes.as,

    /** Primary content. */
    children: _react.PropTypes.node,

    /** Additional classes. */
    className: _react.PropTypes.string,

    /** A reveal may contain content that is visible before interaction. */
    hidden: _react.PropTypes.bool,

    /** A reveal may contain content that is hidden before user interaction. */
    visible: _react.PropTypes.bool
  };

  exports.default = RevealContent;

/***/ },
/* 1074 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _Segment = __webpack_require__(1075);

  var _Segment2 = _interopRequireDefault(_Segment);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  exports.default = _Segment2.default;

/***/ },
/* 1075 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _without2 = __webpack_require__(939);

  var _without3 = _interopRequireDefault(_without2);

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _classnames = __webpack_require__(794);

  var _classnames2 = _interopRequireDefault(_classnames);

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _lib = __webpack_require__(684);

  var _SegmentGroup = __webpack_require__(1076);

  var _SegmentGroup2 = _interopRequireDefault(_SegmentGroup);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  /**
   * A segment is used to create a grouping of related content.
   */
  function Segment(props) {
    var attached = props.attached,
        basic = props.basic,
        children = props.children,
        circular = props.circular,
        className = props.className,
        clearing = props.clearing,
        color = props.color,
        compact = props.compact,
        disabled = props.disabled,
        floated = props.floated,
        inverted = props.inverted,
        loading = props.loading,
        padded = props.padded,
        piled = props.piled,
        raised = props.raised,
        secondary = props.secondary,
        size = props.size,
        stacked = props.stacked,
        tertiary = props.tertiary,
        textAlign = props.textAlign,
        vertical = props.vertical;


    var classes = (0, _classnames2.default)('ui', color, size, (0, _lib.useKeyOrValueAndKey)(attached, 'attached'), (0, _lib.useKeyOnly)(basic, 'basic'), (0, _lib.useKeyOnly)(circular, 'circular'), (0, _lib.useKeyOnly)(clearing, 'clearing'), (0, _lib.useKeyOnly)(compact, 'compact'), (0, _lib.useKeyOnly)(disabled, 'disabled'), (0, _lib.useValueAndKey)(floated, 'floated'), (0, _lib.useKeyOnly)(inverted, 'inverted'), (0, _lib.useKeyOnly)(loading, 'loading'), (0, _lib.useKeyOrValueAndKey)(padded, 'padded'), (0, _lib.useKeyOnly)(piled, 'piled'), (0, _lib.useKeyOnly)(raised, 'raised'), (0, _lib.useKeyOnly)(secondary, 'secondary'), (0, _lib.useKeyOnly)(stacked, 'stacked'), (0, _lib.useKeyOnly)(tertiary, 'tertiary'), (0, _lib.useTextAlignProp)(textAlign), (0, _lib.useKeyOnly)(vertical, 'vertical'), className, 'segment');
    var rest = (0, _lib.getUnhandledProps)(Segment, props);
    var ElementType = (0, _lib.getElementType)(Segment, props);

    return _react2.default.createElement(
      ElementType,
      _extends({}, rest, { className: classes }),
      children
    );
  }

  Segment.Group = _SegmentGroup2.default;

  Segment._meta = {
    name: 'Segment',
    type: _lib.META.TYPES.ELEMENT,
    props: {
      attached: ['top', 'bottom'],
      color: _lib.SUI.COLORS,
      floated: _lib.SUI.FLOATS,
      padded: ['very'],
      size: (0, _without3.default)(_lib.SUI.SIZES, 'medium'),
      textAlign: _lib.SUI.TEXT_ALIGNMENTS
    }
  };

  Segment.propTypes = {
    /** An element type to render as (string or function). */
    as: _lib.customPropTypes.as,

    /** Attach segment to other content, like a header */
    attached: _react.PropTypes.oneOfType([_react.PropTypes.oneOf(Segment._meta.props.attached), _react.PropTypes.bool]),

    /** A basic segment has no special formatting */
    basic: _react.PropTypes.bool,

    /** Primary content. */
    children: _react.PropTypes.node,

    /** A segment can be circular */
    circular: _react.PropTypes.bool,

    /** Additional classes. */
    className: _react.PropTypes.string,

    /** A segment can clear floated content */
    clearing: _react.PropTypes.bool,

    /** Segment can be colored */
    color: _react.PropTypes.oneOf(Segment._meta.props.color),

    /** A segment may take up only as much space as is necessary */
    compact: _react.PropTypes.bool,

    /** A segment may show its content is disabled */
    disabled: _react.PropTypes.bool,

    /** Segment content can be floated to the left or right */
    floated: _react.PropTypes.oneOf(Segment._meta.props.floated),

    /** A segment can have its colors inverted for contrast */
    inverted: _react.PropTypes.bool,

    /** A segment may show its content is being loaded */
    loading: _react.PropTypes.bool,

    /** A segment can increase its padding */
    padded: _react.PropTypes.oneOfType([_react.PropTypes.bool, _react.PropTypes.oneOf(Segment._meta.props.padded)]),

    /** Formatted to look like a pile of pages. */
    piled: _react.PropTypes.bool,

    /** A segment may be formatted to raise above the page. */
    raised: _react.PropTypes.bool,

    /** A segment can be formatted to appear less noticeable */
    secondary: _react.PropTypes.bool,

    /** A segment can have different sizes. */
    size: _react.PropTypes.oneOf(Segment._meta.props.size),

    /** Formatted to show it contains multiple pages. */
    stacked: _react.PropTypes.bool,

    /** A segment can be formatted to appear even less noticeable */
    tertiary: _react.PropTypes.bool,

    /** Formats content to be aligned as part of a vertical group. */
    textAlign: _react.PropTypes.oneOf(Segment._meta.props.textAlign),

    /** Formats content to be aligned vertically */
    vertical: _react.PropTypes.bool
  };

  exports.default = Segment;

/***/ },
/* 1076 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _without2 = __webpack_require__(939);

  var _without3 = _interopRequireDefault(_without2);

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _classnames = __webpack_require__(794);

  var _classnames2 = _interopRequireDefault(_classnames);

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _lib = __webpack_require__(684);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  /**
   * A group of segments can be formatted to appear together.
   */
  function SegmentGroup(props) {
    var children = props.children,
        className = props.className,
        compact = props.compact,
        horizontal = props.horizontal,
        piled = props.piled,
        raised = props.raised,
        size = props.size,
        stacked = props.stacked;

    var classes = (0, _classnames2.default)('ui', size, (0, _lib.useKeyOnly)(horizontal, 'horizontal'), (0, _lib.useKeyOnly)(compact, 'compact'), (0, _lib.useKeyOnly)(piled, 'piled'), (0, _lib.useKeyOnly)(raised, 'raised'), (0, _lib.useKeyOnly)(stacked, 'stacked'), className, 'segments');
    var rest = (0, _lib.getUnhandledProps)(SegmentGroup, props);
    var ElementType = (0, _lib.getElementType)(SegmentGroup, props);

    return _react2.default.createElement(
      ElementType,
      _extends({}, rest, { className: classes }),
      children
    );
  }

  SegmentGroup._meta = {
    name: 'SegmentGroup',
    parent: 'Segment',
    type: _lib.META.TYPES.ELEMENT,
    props: {
      size: (0, _without3.default)(_lib.SUI.SIZES, 'medium')
    }
  };

  SegmentGroup.propTypes = {
    /** An element type to render as (string or function). */
    as: _lib.customPropTypes.as,

    /** Additional classes. */
    className: _react.PropTypes.string,

    /** Primary content. */
    children: _react.PropTypes.node,

    /** A segment may take up only as much space as is necessary */
    compact: _react.PropTypes.bool,

    /** Formats content to be aligned horizontally */
    horizontal: _react.PropTypes.bool,

    /** Formatted to look like a pile of pages. */
    piled: _react.PropTypes.bool,

    /** A segment group may be formatted to raise above the page. */
    raised: _react.PropTypes.bool,

    /** A segment group can have different sizes. */
    size: _react.PropTypes.oneOf(SegmentGroup._meta.props.size),

    /** Formatted to show it contains multiple pages. */
    stacked: _react.PropTypes.bool
  };

  exports.default = SegmentGroup;

/***/ },
/* 1077 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _Step = __webpack_require__(1078);

  var _Step2 = _interopRequireDefault(_Step);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  exports.default = _Step2.default;

/***/ },
/* 1078 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _isNil2 = __webpack_require__(927);

  var _isNil3 = _interopRequireDefault(_isNil2);

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

  var _classnames = __webpack_require__(794);

  var _classnames2 = _interopRequireDefault(_classnames);

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _lib = __webpack_require__(684);

  var _Icon = __webpack_require__(966);

  var _Icon2 = _interopRequireDefault(_Icon);

  var _StepContent = __webpack_require__(1079);

  var _StepContent2 = _interopRequireDefault(_StepContent);

  var _StepDescription = __webpack_require__(1080);

  var _StepDescription2 = _interopRequireDefault(_StepDescription);

  var _StepGroup = __webpack_require__(1082);

  var _StepGroup2 = _interopRequireDefault(_StepGroup);

  var _StepTitle = __webpack_require__(1081);

  var _StepTitle2 = _interopRequireDefault(_StepTitle);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

  function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

  /**
   * A step shows the completion status of an activity in a series of activities
   */
  var Step = function (_Component) {
    _inherits(Step, _Component);

    function Step() {
      var _ref;

      var _temp, _this, _ret;

      _classCallCheck(this, Step);

      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Step.__proto__ || Object.getPrototypeOf(Step)).call.apply(_ref, [this].concat(args))), _this), _this.handleClick = function (e) {
        var onClick = _this.props.onClick;


        if (onClick) onClick(e, _this.props);
      }, _temp), _possibleConstructorReturn(_this, _ret);
    }

    _createClass(Step, [{
      key: 'render',
      value: function render() {
        var _props = this.props,
            active = _props.active,
            children = _props.children,
            className = _props.className,
            completed = _props.completed,
            description = _props.description,
            disabled = _props.disabled,
            href = _props.href,
            icon = _props.icon,
            link = _props.link,
            onClick = _props.onClick,
            title = _props.title;


        var classes = (0, _classnames2.default)((0, _lib.useKeyOnly)(active, 'active'), (0, _lib.useKeyOnly)(completed, 'completed'), (0, _lib.useKeyOnly)(disabled, 'disabled'), (0, _lib.useKeyOnly)(link, 'link'), 'step', className);
        var rest = (0, _lib.getUnhandledProps)(Step, this.props);
        var ElementType = (0, _lib.getElementType)(Step, this.props, function () {
          if (onClick) return 'a';
        });

        if (!(0, _isNil3.default)(children)) {
          return _react2.default.createElement(
            ElementType,
            _extends({}, rest, { className: classes, href: href, onClick: this.handleClick }),
            children
          );
        }

        return _react2.default.createElement(
          ElementType,
          _extends({}, rest, { className: classes, href: href, onClick: this.handleClick }),
          _Icon2.default.create(icon),
          _react2.default.createElement(_StepContent2.default, { description: description, title: title })
        );
      }
    }]);

    return Step;
  }(_react.Component);

  Step.propTypes = {
    /** An element type to render as (string or function). */
    as: _lib.customPropTypes.as,

    /** A step can be highlighted as active. */
    active: _react.PropTypes.bool,

    /** Additional classes. */
    className: _react.PropTypes.string,

    /** Primary content. */
    children: _react.PropTypes.node,

    /** A step can show that a user has completed it. */
    completed: _react.PropTypes.bool,

    /** Shorthand for StepDescription. */
    description: _lib.customPropTypes.itemShorthand,

    /** Show that the Loader is inactive. */
    disabled: _react.PropTypes.bool,

    /** Shorthand for Icon. */
    icon: _lib.customPropTypes.itemShorthand,

    /** A step can be link. */
    link: _react.PropTypes.bool,

    /** Render as an `a` tag instead of a `div` and adds the href attribute. */
    href: _react.PropTypes.string,

    /**
     * Called on click. When passed, the component will render as an `a`
     * tag by default instead of a `div`.
     *
     * @param {SyntheticEvent} event - React's original SyntheticEvent.
     * @param {object} data - All props.
     */
    onClick: _react.PropTypes.func,

    /** A step can show a ordered sequence of steps. Passed from StepGroup. */
    ordered: _react.PropTypes.bool,

    /** Shorthand for StepTitle. */
    title: _lib.customPropTypes.itemShorthand
  };
  Step._meta = {
    name: 'Step',
    type: _lib.META.TYPES.ELEMENT
  };
  Step.Content = _StepContent2.default;
  Step.Description = _StepDescription2.default;
  Step.Group = _StepGroup2.default;
  Step.Title = _StepTitle2.default;
  exports.default = Step;

/***/ },
/* 1079 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _isNil2 = __webpack_require__(927);

  var _isNil3 = _interopRequireDefault(_isNil2);

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _classnames = __webpack_require__(794);

  var _classnames2 = _interopRequireDefault(_classnames);

  var _lib = __webpack_require__(684);

  var _StepDescription = __webpack_require__(1080);

  var _StepDescription2 = _interopRequireDefault(_StepDescription);

  var _StepTitle = __webpack_require__(1081);

  var _StepTitle2 = _interopRequireDefault(_StepTitle);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function StepContent(props) {
    var children = props.children,
        className = props.className,
        description = props.description,
        title = props.title;

    var classes = (0, _classnames2.default)(className, 'content');
    var rest = (0, _lib.getUnhandledProps)(StepContent, props);
    var ElementType = (0, _lib.getElementType)(StepContent, props);

    if (!(0, _isNil3.default)(children)) {
      return _react2.default.createElement(
        ElementType,
        _extends({}, rest, { className: classes }),
        children
      );
    }

    return _react2.default.createElement(
      ElementType,
      _extends({}, rest, { className: classes }),
      (0, _lib.createShorthand)(_StepTitle2.default, function (val) {
        return { title: val };
      }, title),
      (0, _lib.createShorthand)(_StepDescription2.default, function (val) {
        return { description: val };
      }, description)
    );
  }

  StepContent._meta = {
    name: 'StepContent',
    parent: 'Step',
    type: _lib.META.TYPES.ELEMENT
  };

  StepContent.propTypes = {
    /** An element type to render as (string or function). */
    as: _lib.customPropTypes.as,

    /** Additional classes. */
    className: _react.PropTypes.string,

    /** Primary content. */
    children: _react.PropTypes.node,

    /** Shorthand for StepDescription. */
    description: _lib.customPropTypes.itemShorthand,

    /** Shorthand for StepTitle. */
    title: _lib.customPropTypes.itemShorthand
  };

  exports.default = StepContent;

/***/ },
/* 1080 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _isNil2 = __webpack_require__(927);

  var _isNil3 = _interopRequireDefault(_isNil2);

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _classnames = __webpack_require__(794);

  var _classnames2 = _interopRequireDefault(_classnames);

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _lib = __webpack_require__(684);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function StepDescription(props) {
    var children = props.children,
        className = props.className,
        description = props.description;

    var classes = (0, _classnames2.default)(className, 'description');
    var rest = (0, _lib.getUnhandledProps)(StepDescription, props);
    var ElementType = (0, _lib.getElementType)(StepDescription, props);

    return _react2.default.createElement(
      ElementType,
      _extends({}, rest, { className: classes }),
      (0, _isNil3.default)(children) ? description : children
    );
  }

  StepDescription._meta = {
    name: 'StepDescription',
    parent: 'Step',
    type: _lib.META.TYPES.ELEMENT
  };

  StepDescription.propTypes = {
    /** An element type to render as (string or function). */
    as: _lib.customPropTypes.as,

    /** Additional classes. */
    className: _react.PropTypes.string,

    /** Primary content. */
    children: _react.PropTypes.node,

    /** Shorthand for primary content. */
    description: _lib.customPropTypes.contentShorthand
  };

  exports.default = StepDescription;

/***/ },
/* 1081 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _isNil2 = __webpack_require__(927);

  var _isNil3 = _interopRequireDefault(_isNil2);

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _classnames = __webpack_require__(794);

  var _classnames2 = _interopRequireDefault(_classnames);

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _lib = __webpack_require__(684);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function StepTitle(props) {
    var children = props.children,
        className = props.className,
        title = props.title;

    var classes = (0, _classnames2.default)(className, 'title');
    var rest = (0, _lib.getUnhandledProps)(StepTitle, props);
    var ElementType = (0, _lib.getElementType)(StepTitle, props);

    return _react2.default.createElement(
      ElementType,
      _extends({}, rest, { className: classes }),
      (0, _isNil3.default)(children) ? title : children
    );
  }

  StepTitle._meta = {
    name: 'StepTitle',
    parent: 'Step',
    type: _lib.META.TYPES.ELEMENT
  };

  StepTitle.propTypes = {
    /** An element type to render as (string or function). */
    as: _lib.customPropTypes.as,

    /** Additional classes. */
    className: _react.PropTypes.string,

    /** Primary content. */
    children: _react.PropTypes.node,

    /** Shorthand for primary content. */
    title: _lib.customPropTypes.contentShorthand
  };

  exports.default = StepTitle;

/***/ },
/* 1082 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _without2 = __webpack_require__(939);

  var _without3 = _interopRequireDefault(_without2);

  var _map2 = __webpack_require__(918);

  var _map3 = _interopRequireDefault(_map2);

  var _isNil2 = __webpack_require__(927);

  var _isNil3 = _interopRequireDefault(_isNil2);

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _classnames = __webpack_require__(794);

  var _classnames2 = _interopRequireDefault(_classnames);

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _lib = __webpack_require__(684);

  var _Step = __webpack_require__(1078);

  var _Step2 = _interopRequireDefault(_Step);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function StepGroup(props) {
    var children = props.children,
        className = props.className,
        fluid = props.fluid,
        items = props.items,
        ordered = props.ordered,
        size = props.size,
        stackable = props.stackable,
        vertical = props.vertical;

    var classes = (0, _classnames2.default)('ui', (0, _lib.useKeyOnly)(fluid, 'fluid'), (0, _lib.useKeyOnly)(ordered, 'ordered'), (0, _lib.useValueAndKey)(stackable, 'stackable'), (0, _lib.useKeyOnly)(vertical, 'vertical'), size, className, 'steps');
    var rest = (0, _lib.getUnhandledProps)(StepGroup, props);
    var ElementType = (0, _lib.getElementType)(StepGroup, props);

    if (!(0, _isNil3.default)(children)) {
      return _react2.default.createElement(
        ElementType,
        _extends({}, rest, { className: classes }),
        children
      );
    }

    var content = (0, _map3.default)(items, function (item) {
      var key = item.key || [item.title, item.description].join('-');
      return _react2.default.createElement(_Step2.default, _extends({ key: key }, item));
    });

    return _react2.default.createElement(
      ElementType,
      _extends({}, rest, { className: classes }),
      content
    );
  }

  StepGroup._meta = {
    name: 'StepGroup',
    parent: 'Step',
    props: {
      sizes: (0, _without3.default)(_lib.SUI.SIZES, 'medium'),
      stackable: ['tablet']
    },
    type: _lib.META.TYPES.ELEMENT
  };

  StepGroup.propTypes = {
    /** An element type to render as (string or function). */
    as: _lib.customPropTypes.as,

    /** Additional classes. */
    className: _react.PropTypes.string,

    /** Primary content. */
    children: _react.PropTypes.node,

    /** A fluid step takes up the width of its container. */
    fluid: _react.PropTypes.bool,

    /** Shorthand array of props for Step. */
    items: _lib.customPropTypes.collectionShorthand,

    /** A step can show a ordered sequence of steps. */
    ordered: _react.PropTypes.bool,

    /** Steps can have different sizes. */
    size: _react.PropTypes.oneOf(StepGroup._meta.props.sizes),

    /** A step can stack vertically only on smaller screens. */
    stackable: _react.PropTypes.oneOf(StepGroup._meta.props.stackable),

    /** A step can be displayed stacked vertically. */
    vertical: _react.PropTypes.bool
  };

  exports.default = StepGroup;

/***/ },
/* 1083 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _keys2 = __webpack_require__(726);

  var _keys3 = _interopRequireDefault(_keys2);

  var _omit2 = __webpack_require__(960);

  var _omit3 = _interopRequireDefault(_omit2);

  var _each2 = __webpack_require__(778);

  var _each3 = _interopRequireDefault(_each2);

  var _has2 = __webpack_require__(627);

  var _has3 = _interopRequireDefault(_has2);

  var _without2 = __webpack_require__(939);

  var _without3 = _interopRequireDefault(_without2);

  var _includes2 = __webpack_require__(923);

  var _includes3 = _interopRequireDefault(_includes2);

  var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

  var _classnames = __webpack_require__(794);

  var _classnames2 = _interopRequireDefault(_classnames);

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _lib = __webpack_require__(684);

  var _Icon = __webpack_require__(966);

  var _Icon2 = _interopRequireDefault(_Icon);

  var _AccordionContent = __webpack_require__(1084);

  var _AccordionContent2 = _interopRequireDefault(_AccordionContent);

  var _AccordionTitle = __webpack_require__(1085);

  var _AccordionTitle2 = _interopRequireDefault(_AccordionTitle);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

  function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

  /**
   * An accordion allows users to toggle the display of sections of content
   */
  var Accordion = function (_Component) {
    _inherits(Accordion, _Component);

    function Accordion() {
      var _ref;

      _classCallCheck(this, Accordion);

      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      var _this = _possibleConstructorReturn(this, (_ref = Accordion.__proto__ || Object.getPrototypeOf(Accordion)).call.apply(_ref, [this].concat(args)));

      _this.state = {};

      _this.handleTitleClick = function (e, index) {
        var _this$props = _this.props,
            onTitleClick = _this$props.onTitleClick,
            exclusive = _this$props.exclusive;
        var activeIndex = _this.state.activeIndex;


        var newIndex = void 0;
        if (exclusive) {
          newIndex = index === activeIndex ? -1 : index;
        } else {
          // check to see if index is in array, and remove it, if not then add it
          newIndex = (0, _includes3.default)(activeIndex, index) ? (0, _without3.default)(activeIndex, index) : [].concat(_toConsumableArray(activeIndex), [index]);
        }
        _this.trySetState({ activeIndex: newIndex });
        if (onTitleClick) onTitleClick(e, index);
      };

      _this.isIndexActive = function (index) {
        var exclusive = _this.props.exclusive;
        var activeIndex = _this.state.activeIndex;

        return exclusive ? activeIndex === index : (0, _includes3.default)(activeIndex, index);
      };

      _this.renderChildren = function () {
        var children = _this.props.children;

        var titleIndex = 0;
        var contentIndex = 0;

        return _react.Children.map(children, function (child) {
          var isTitle = child.type === _AccordionTitle2.default;
          var isContent = child.type === _AccordionContent2.default;

          if (isTitle) {
            var _ret = function () {
              var currentIndex = titleIndex;
              var isActive = (0, _has3.default)(child, 'props.active') ? child.props.active : _this.isIndexActive(titleIndex);
              var onClick = function onClick(e) {
                _this.handleTitleClick(e, currentIndex);
                if (child.props.onClick) child.props.onClick(e, currentIndex);
              };
              titleIndex++;
              return {
                v: (0, _react.cloneElement)(child, _extends({}, child.props, { active: isActive, onClick: onClick }))
              };
            }();

            if ((typeof _ret === 'undefined' ? 'undefined' : _typeof(_ret)) === "object") return _ret.v;
          }

          if (isContent) {
            var _isActive = (0, _has3.default)(child, 'props.active') ? child.props.active : _this.isIndexActive(contentIndex);
            contentIndex++;
            return (0, _react.cloneElement)(child, _extends({}, child.props, { active: _isActive }));
          }

          return child;
        });
      };

      _this.renderPanels = function () {
        var panels = _this.props.panels;

        var children = [];

        (0, _each3.default)(panels, function (panel, i) {
          var isActive = (0, _has3.default)(panel, 'active') ? panel.active : _this.isIndexActive(i);
          var onClick = function onClick(e) {
            _this.handleTitleClick(e, i);
            if (panel.onClick) panel.onClick(e, i);
          };

          children.push(_react2.default.createElement(
            _AccordionTitle2.default,
            { key: panel.title + '-title', active: isActive, onClick: onClick },
            _react2.default.createElement(_Icon2.default, { name: 'dropdown' }),
            panel.title
          ));
          children.push(_react2.default.createElement(
            _AccordionContent2.default,
            { key: panel.title + '-content', active: isActive },
            panel.content
          ));
        });

        return children;
      };

      _this.state = {
        activeIndex: _this.props.exclusive ? -1 : [-1]
      };
      return _this;
    }

    _createClass(Accordion, [{
      key: 'render',
      value: function render() {
        var _props = this.props,
            className = _props.className,
            fluid = _props.fluid,
            inverted = _props.inverted,
            panels = _props.panels,
            styled = _props.styled;


        var classes = (0, _classnames2.default)('ui', (0, _lib.useKeyOnly)(fluid, 'fluid'), (0, _lib.useKeyOnly)(inverted, 'inverted'), (0, _lib.useKeyOnly)(styled, 'styled'), 'accordion', className);
        var rest = (0, _omit3.default)(this.props, (0, _keys3.default)(Accordion.propTypes));
        var ElementType = (0, _lib.getElementType)(Accordion, this.props);

        return _react2.default.createElement(
          ElementType,
          _extends({}, rest, { className: classes }),
          panels ? this.renderPanels() : this.renderChildren()
        );
      }
    }]);

    return Accordion;
  }(_lib.AutoControlledComponent);

  Accordion.defaultProps = {
    exclusive: true
  };
  Accordion.autoControlledProps = ['activeIndex'];
  Accordion.propTypes = {
    /** An element type to render as (string or function). */
    as: _lib.customPropTypes.as,

    /** Index of the currently active panel. */
    activeIndex: _react.PropTypes.oneOfType([_react.PropTypes.number, _react.PropTypes.arrayOf(_react.PropTypes.number)]),

    /** Primary content. */
    children: _react.PropTypes.node,

    /** Additional classes. */
    className: _react.PropTypes.string,

    /** Initial activeIndex value. */
    defaultActiveIndex: _react.PropTypes.oneOfType([_react.PropTypes.number, _react.PropTypes.arrayOf(_react.PropTypes.number)]),

    /** Only allow one panel open at a time */
    exclusive: _react.PropTypes.bool,

    /** Format to take up the width of it's container. */
    fluid: _react.PropTypes.bool,

    /** Format for dark backgrounds. */
    inverted: _react.PropTypes.bool,

    /** Called with (event, index) when a panel title is clicked. */
    onTitleClick: _react.PropTypes.func,

    /**
     * Create simple accordion panels from an array of { text: <string>, content: <custom> } objects.
     * Object can optionally define an `active` key to open/close the panel.
     * Mutually exclusive with children.
     * TODO: AccordionPanel should be a sub-component
     */
    panels: _lib.customPropTypes.every([_lib.customPropTypes.disallow(['children']), _react.PropTypes.arrayOf(_react.PropTypes.shape({
      active: _react.PropTypes.bool,
      title: _react.PropTypes.string,
      content: _lib.customPropTypes.contentShorthand,
      onClick: _react.PropTypes.func
    }))]),

    /** Adds some basic styling to accordion panels. */
    styled: _react.PropTypes.bool
  };
  Accordion._meta = {
    name: 'Accordion',
    type: _lib.META.TYPES.MODULE
  };
  Accordion.Content = _AccordionContent2.default;
  Accordion.Title = _AccordionTitle2.default;
  exports.default = Accordion;

/***/ },
/* 1084 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _classnames = __webpack_require__(794);

  var _classnames2 = _interopRequireDefault(_classnames);

  var _lib = __webpack_require__(684);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function AccordionContent(props) {
    var active = props.active,
        children = props.children,
        className = props.className;

    var classes = (0, _classnames2.default)('content', (0, _lib.useKeyOnly)(active, 'active'), className);
    var rest = (0, _lib.getUnhandledProps)(AccordionContent, props);
    var ElementType = (0, _lib.getElementType)(AccordionContent, props);

    return _react2.default.createElement(
      ElementType,
      _extends({}, rest, { className: classes }),
      children
    );
  }

  AccordionContent.displayName = 'AccordionContent';

  AccordionContent.propTypes = {
    /** An element type to render as (string or function). */
    as: _lib.customPropTypes.as,

    /** Whether or not the content is visible. */
    active: _react.PropTypes.bool,

    /** Primary content. */
    children: _react.PropTypes.node,

    /** Additional classes. */
    className: _react.PropTypes.string
  };

  AccordionContent._meta = {
    name: 'AccordionContent',
    type: _lib.META.TYPES.MODULE,
    parent: 'Accordion'
  };

  exports.default = AccordionContent;

/***/ },
/* 1085 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

  var _classnames = __webpack_require__(794);

  var _classnames2 = _interopRequireDefault(_classnames);

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _lib = __webpack_require__(684);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

  function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

  /**
   * A title sub-component for Accordion component
   */
  var AccordionTitle = function (_Component) {
    _inherits(AccordionTitle, _Component);

    function AccordionTitle() {
      var _ref;

      var _temp, _this, _ret;

      _classCallCheck(this, AccordionTitle);

      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = AccordionTitle.__proto__ || Object.getPrototypeOf(AccordionTitle)).call.apply(_ref, [this].concat(args))), _this), _this.handleClick = function (e) {
        var onClick = _this.props.onClick;


        if (onClick) onClick(e, _this.props);
      }, _temp), _possibleConstructorReturn(_this, _ret);
    }

    _createClass(AccordionTitle, [{
      key: 'render',
      value: function render() {
        var _props = this.props,
            active = _props.active,
            children = _props.children,
            className = _props.className;


        var classes = (0, _classnames2.default)((0, _lib.useKeyOnly)(active, 'active'), 'title', className);
        var rest = (0, _lib.getUnhandledProps)(AccordionTitle, this.props);
        var ElementType = (0, _lib.getElementType)(AccordionTitle, this.props);

        return _react2.default.createElement(
          ElementType,
          _extends({}, rest, { className: classes, onClick: this.handleClick }),
          children
        );
      }
    }]);

    return AccordionTitle;
  }(_react.Component);

  AccordionTitle.displayName = 'AccordionTitle';
  AccordionTitle.propTypes = {
    /** An element type to render as (string or function). */
    as: _lib.customPropTypes.as,

    /** Whether or not the title is in the open state. */
    active: _react.PropTypes.bool,

    /** Primary content. */
    children: _react.PropTypes.node,

    /** Additional classes. */
    className: _react.PropTypes.string,

    /**
     * Called on blur.
     *
     * @param {SyntheticEvent} event - React's original SyntheticEvent.
     * @param {object} data - All props.
     */
    onClick: _react.PropTypes.func
  };
  AccordionTitle._meta = {
    name: 'AccordionTitle',
    type: _lib.META.TYPES.MODULE,
    parent: 'Accordion'
  };
  exports.default = AccordionTitle;

/***/ },
/* 1086 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _Embed = __webpack_require__(1087);

  var _Embed2 = _interopRequireDefault(_Embed);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  exports.default = _Embed2.default;

/***/ },
/* 1087 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _isNil2 = __webpack_require__(927);

  var _isNil3 = _interopRequireDefault(_isNil2);

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

  var _classnames = __webpack_require__(794);

  var _classnames2 = _interopRequireDefault(_classnames);

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _lib = __webpack_require__(684);

  var _Icon = __webpack_require__(966);

  var _Icon2 = _interopRequireDefault(_Icon);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

  function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

  var _meta = {
    name: 'Embed',
    type: _lib.META.TYPES.MODULE,
    props: {
      aspectRatio: ['4:3', '16:9', '21:9'],
      source: ['youtube', 'vimeo']
    }
  };

  /**
   * An embed displays content from other websites like YouTube videos or Google Maps.
   */

  var Embed = function (_Component) {
    _inherits(Embed, _Component);

    function Embed() {
      var _ref;

      var _temp, _this, _ret;

      _classCallCheck(this, Embed);

      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Embed.__proto__ || Object.getPrototypeOf(Embed)).call.apply(_ref, [this].concat(args))), _this), _this.state = {}, _this.handleClick = function (e) {
        var onClick = _this.props.onClick;
        var active = _this.state.active;


        if (onClick) onClick(e, _extends({}, _this.props, { active: true }));
        if (!active) _this.trySetState({ active: true });
      }, _temp), _possibleConstructorReturn(_this, _ret);
    }

    _createClass(Embed, [{
      key: 'getSrc',
      value: function getSrc() {
        var _props = this.props,
            _props$autoplay = _props.autoplay,
            autoplay = _props$autoplay === undefined ? true : _props$autoplay,
            _props$brandedUI = _props.brandedUI,
            brandedUI = _props$brandedUI === undefined ? false : _props$brandedUI,
            _props$color = _props.color,
            color = _props$color === undefined ? '#444444' : _props$color,
            _props$hd = _props.hd,
            hd = _props$hd === undefined ? true : _props$hd,
            id = _props.id,
            source = _props.source,
            url = _props.url;


        if (source === 'youtube') {
          return ['//www.youtube.com/embed/' + id, '?autohide=true', '&amp;autoplay=' + autoplay, '&amp;color=' + encodeURIComponent(color), '&amp;hq=' + hd, '&amp;jsapi=false', '&amp;modestbranding=' + brandedUI].join('');
        }

        if (source === 'vimeo') {
          return ['//player.vimeo.com/video/' + id, '?api=false', '&amp;autoplay=' + autoplay, '&amp;byline=false', '&amp;color=' + encodeURIComponent(color), '&amp;portrait=false', '&amp;title=false'].join('');
        }

        return url;
      }
    }, {
      key: 'render',
      value: function render() {
        var _props2 = this.props,
            aspectRatio = _props2.aspectRatio,
            className = _props2.className,
            icon = _props2.icon,
            placeholder = _props2.placeholder;
        var active = this.state.active;


        var classes = (0, _classnames2.default)('ui', aspectRatio, (0, _lib.useKeyOnly)(active, 'active'), 'embed', className);
        var rest = (0, _lib.getUnhandledProps)(Embed, this.props);
        var ElementType = (0, _lib.getElementType)(Embed, this.props);

        return _react2.default.createElement(
          ElementType,
          _extends({}, rest, { className: classes, onClick: this.handleClick }),
          _Icon2.default.create(icon),
          placeholder && _react2.default.createElement('img', { className: 'placeholder', src: placeholder }),
          this.renderEmbed()
        );
      }
    }, {
      key: 'renderEmbed',
      value: function renderEmbed() {
        var children = this.props.children;
        var active = this.state.active;


        if (!active) return null;
        if (!(0, _isNil3.default)(children)) return _react2.default.createElement(
          'div',
          { className: 'embed' },
          children
        );

        return _react2.default.createElement(
          'div',
          { className: 'embed' },
          _react2.default.createElement('iframe', {
            allowFullScreen: '',
            frameBorder: '0',
            height: '100%',
            scrolling: 'no',
            src: this.getSrc(),
            width: '100%'
          })
        );
      }
    }]);

    return Embed;
  }(_lib.AutoControlledComponent);

  Embed.autoControlledProps = ['active'];
  Embed.defaultProps = {
    icon: 'video play'
  };
  Embed._meta = _meta;
  Embed.propTypes = {
    /** An element type to render as (string or function). */
    as: _lib.customPropTypes.as,

    /** An embed can be active. */
    active: _react.PropTypes.bool,

    /** Setting to true or false will force autoplay. */
    autoplay: _lib.customPropTypes.every([_lib.customPropTypes.demand(['source']), _react.PropTypes.bool]),

    /** An embed can specify an alternative aspect ratio. */
    aspectRatio: _react.PropTypes.oneOf(_meta.props.aspectRatio),

    /** Whether to show networks branded UI like title cards, or after video calls to action. */
    brandedUI: _lib.customPropTypes.every([_lib.customPropTypes.demand(['source']), _react.PropTypes.bool]),

    /** Primary content. */
    children: _react.PropTypes.node,

    /** Additional classes. */
    className: _react.PropTypes.string,

    /** Specifies a default chrome color with Vimeo or YouTube. */
    color: _lib.customPropTypes.every([_lib.customPropTypes.demand(['source']), _react.PropTypes.string]),

    /** Initial value of active. */
    defaultActive: _react.PropTypes.bool,

    /** Whether to show networks branded UI like title cards, or after video calls to action. */
    hd: _lib.customPropTypes.every([_lib.customPropTypes.demand(['source']), _react.PropTypes.bool]),

    /** Specifies an id for source. */
    id: _lib.customPropTypes.every([_lib.customPropTypes.demand(['source']), _react.PropTypes.string]),

    /** Specifies an icon to use with placeholder content. */
    icon: _lib.customPropTypes.itemShorthand,

    /**
     * Сalled on click.
     *
     * @param {SyntheticEvent} event - React's original SyntheticEvent.
     * @param {object} data - All props and proposed value.
     */
    onClick: _react.PropTypes.func,

    /** A placeholder image for embed. */
    placeholder: _react.PropTypes.string,

    /** Specifies a source to use. */
    source: _lib.customPropTypes.every([_lib.customPropTypes.disallow(['sourceUrl']), _react.PropTypes.oneOf(_meta.props.source)]),

    /** Specifies a url to use for embed. */
    url: _lib.customPropTypes.every([_lib.customPropTypes.disallow(['source']), _react.PropTypes.string])
  };
  exports.default = Embed;

/***/ },
/* 1088 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _Popup = __webpack_require__(1089);

  var _Popup2 = _interopRequireDefault(_Popup);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  exports.default = _Popup2.default;

/***/ },
/* 1089 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _pick2 = __webpack_require__(891);

  var _pick3 = _interopRequireDefault(_pick2);

  var _omit2 = __webpack_require__(960);

  var _omit3 = _interopRequireDefault(_omit2);

  var _keys2 = __webpack_require__(726);

  var _keys3 = _interopRequireDefault(_keys2);

  var _assign2 = __webpack_require__(1090);

  var _assign3 = _interopRequireDefault(_assign2);

  var _mapValues2 = __webpack_require__(1092);

  var _mapValues3 = _interopRequireDefault(_mapValues2);

  var _isNumber2 = __webpack_require__(790);

  var _isNumber3 = _interopRequireDefault(_isNumber2);

  var _includes2 = __webpack_require__(923);

  var _includes3 = _interopRequireDefault(_includes2);

  var _without2 = __webpack_require__(939);

  var _without3 = _interopRequireDefault(_without2);

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _classnames = __webpack_require__(794);

  var _classnames2 = _interopRequireDefault(_classnames);

  var _lib = __webpack_require__(684);

  var _Portal = __webpack_require__(945);

  var _Portal2 = _interopRequireDefault(_Portal);

  var _PopupContent = __webpack_require__(1093);

  var _PopupContent2 = _interopRequireDefault(_PopupContent);

  var _PopupHeader = __webpack_require__(1094);

  var _PopupHeader2 = _interopRequireDefault(_PopupHeader);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

  function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

  var debug = (0, _lib.makeDebugger)('popup');

  var _meta = {
    name: 'Popup',
    type: _lib.META.TYPES.MODULE,
    props: {
      on: ['hover', 'click', 'focus'],
      positioning: ['top left', 'top right', 'bottom right', 'bottom left', 'right center', 'left center', 'top center', 'bottom center'],
      size: (0, _without3.default)(_lib.SUI.SIZES, 'medium', 'big', 'massive'),
      wide: [true, false, 'very']
    }
  };

  /**
   * A Popup displays additional information on top of a page.
   */

  var Popup = function (_Component) {
    _inherits(Popup, _Component);

    function Popup() {
      var _ref;

      var _temp, _this, _ret;

      _classCallCheck(this, Popup);

      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Popup.__proto__ || Object.getPrototypeOf(Popup)).call.apply(_ref, [this].concat(args))), _this), _this.state = {}, _this.hideOnScroll = function (e) {
        _this.setState({ closed: true });
        window.removeEventListener('scroll', _this.hideOnScroll);
        setTimeout(function () {
          return _this.setState({ closed: false });
        }, 50);
      }, _this.handleClose = function (e) {
        debug('handleClose()');
        var onClose = _this.props.onClose;

        if (onClose) onClose(e, _this.props);
      }, _this.handleOpen = function (e) {
        debug('handleOpen()');
        _this.coords = e.currentTarget.getBoundingClientRect();

        var onOpen = _this.props.onOpen;

        if (onOpen) onOpen(e, _this.props);
      }, _this.handlePortalMount = function (e) {
        debug('handlePortalMount()');
        if (_this.props.hideOnScroll) {
          window.addEventListener('scroll', _this.hideOnScroll);
        }

        var onMount = _this.props.onMount;

        if (onMount) onMount(e, _this.props);
      }, _this.handlePortalUnmount = function (e) {
        debug('handlePortalUnmount()');
        var onUnmount = _this.props.onUnmount;

        if (onUnmount) onUnmount(e, _this.props);
      }, _this.popupMounted = function (ref) {
        debug('popupMounted()');
        _this.popupCoords = ref ? ref.getBoundingClientRect() : null;
        _this.setPopupStyle();
      }, _temp), _possibleConstructorReturn(_this, _ret);
    }

    _createClass(Popup, [{
      key: 'computePopupStyle',
      value: function computePopupStyle(positions) {
        var style = { position: 'absolute' };

        // Do not access window/document when server side rendering
        if (!_lib.isBrowser) return style;

        var offset = this.props.offset;
        var _window = window,
            pageYOffset = _window.pageYOffset,
            pageXOffset = _window.pageXOffset;
        var _document$documentEle = document.documentElement,
            clientWidth = _document$documentEle.clientWidth,
            clientHeight = _document$documentEle.clientHeight;


        if ((0, _includes3.default)(positions, 'right')) {
          style.right = Math.round(clientWidth - (this.coords.right + pageXOffset));
          style.left = 'auto';
        } else if ((0, _includes3.default)(positions, 'left')) {
          style.left = Math.round(this.coords.left + pageXOffset);
          style.right = 'auto';
        } else {
          // if not left nor right, we are horizontally centering the element
          var xOffset = (this.coords.width - this.popupCoords.width) / 2;
          style.left = Math.round(this.coords.left + xOffset + pageXOffset);
          style.right = 'auto';
        }

        if ((0, _includes3.default)(positions, 'top')) {
          style.bottom = Math.round(clientHeight - (this.coords.top + pageYOffset));
          style.top = 'auto';
        } else if ((0, _includes3.default)(positions, 'bottom')) {
          style.top = Math.round(this.coords.bottom + pageYOffset);
          style.bottom = 'auto';
        } else {
          // if not top nor bottom, we are vertically centering the element
          var yOffset = (this.coords.height + this.popupCoords.height) / 2;
          style.top = Math.round(this.coords.bottom + pageYOffset - yOffset);
          style.bottom = 'auto';

          var _xOffset = this.popupCoords.width + 8;
          if ((0, _includes3.default)(positions, 'right')) {
            style.right -= _xOffset;
          } else {
            style.left -= _xOffset;
          }
        }

        if (offset) {
          if ((0, _isNumber3.default)(style.right)) {
            style.right -= offset;
          } else {
            style.left -= offset;
          }
        }

        return style;
      }

      // check if the style would display
      // the popup outside of the view port

    }, {
      key: 'isStyleInViewport',
      value: function isStyleInViewport(style) {
        var _window2 = window,
            pageYOffset = _window2.pageYOffset,
            pageXOffset = _window2.pageXOffset;
        var _document$documentEle2 = document.documentElement,
            clientWidth = _document$documentEle2.clientWidth,
            clientHeight = _document$documentEle2.clientHeight;


        var element = {
          top: style.top,
          left: style.left,
          width: this.popupCoords.width,
          height: this.popupCoords.height
        };
        if ((0, _isNumber3.default)(style.right)) {
          element.left = clientWidth - style.right - element.width;
        }
        if ((0, _isNumber3.default)(style.bottom)) {
          element.top = clientHeight - style.bottom - element.height;
        }

        // hidden on top
        if (element.top < pageYOffset) return false;
        // hidden on the bottom
        if (element.top + element.height > pageYOffset + clientHeight) return false;
        // hidden the left
        if (element.left < pageXOffset) return false;
        // hidden on the right
        if (element.left + element.width > pageXOffset + clientWidth) return false;

        return true;
      }
    }, {
      key: 'setPopupStyle',
      value: function setPopupStyle() {
        if (!this.coords || !this.popupCoords) return;
        var positioning = this.props.positioning;
        var style = this.computePopupStyle(positioning);

        // Lets detect if the popup is out of the viewport and adjust
        // the position accordingly
        var positions = (0, _without3.default)(_meta.props.positioning, positioning);
        for (var i = 0; !this.isStyleInViewport(style) && i < positions.length; i++) {
          style = this.computePopupStyle(positions[i]);
          positioning = positions[i];
        }

        // Append 'px' to every numerical values in the style
        style = (0, _mapValues3.default)(style, function (value) {
          return (0, _isNumber3.default)(value) ? value + 'px' : value;
        });
        this.setState({ style: style, positioning: positioning });
      }
    }, {
      key: 'getPortalProps',
      value: function getPortalProps() {
        var portalProps = {};

        var _props = this.props,
            on = _props.on,
            hoverable = _props.hoverable;


        if (hoverable) {
          portalProps.closeOnPortalMouseLeave = true;
          portalProps.mouseLeaveDelay = 300;
        }

        if (on === 'click') {
          portalProps.openOnTriggerClick = true;
          portalProps.closeOnTriggerClick = true;
          portalProps.closeOnDocumentClick = true;
        } else if (on === 'focus') {
          portalProps.openOnTriggerFocus = true;
          portalProps.closeOnTriggerBlur = true;
        } else if (on === 'hover') {
          portalProps.openOnTriggerMouseEnter = true;
          portalProps.closeOnTriggerMouseLeave = true;
          // Taken from SUI: https://git.io/vPmCm
          portalProps.mouseLeaveDelay = 70;
          portalProps.mouseEnterDelay = 50;
        }

        return portalProps;
      }
    }, {
      key: 'render',
      value: function render() {
        var _props2 = this.props,
            basic = _props2.basic,
            children = _props2.children,
            className = _props2.className,
            content = _props2.content,
            flowing = _props2.flowing,
            header = _props2.header,
            inverted = _props2.inverted,
            size = _props2.size,
            trigger = _props2.trigger,
            wide = _props2.wide;
        var _state = this.state,
            positioning = _state.positioning,
            closed = _state.closed;

        var style = (0, _assign3.default)({}, this.state.style, this.props.style);
        var classes = (0, _classnames2.default)('ui', positioning, size, (0, _lib.useKeyOrValueAndKey)(wide, 'wide'), (0, _lib.useKeyOnly)(basic, 'basic'), (0, _lib.useKeyOnly)(flowing, 'flowing'), (0, _lib.useKeyOnly)(inverted, 'inverted'), 'popup transition visible', className);

        if (closed) return trigger;

        var unhandled = (0, _lib.getUnhandledProps)(Popup, this.props);
        var portalPropNames = (0, _keys3.default)(_Portal2.default.propTypes);

        var rest = (0, _omit3.default)(unhandled, portalPropNames);
        var portalProps = (0, _pick3.default)(unhandled, portalPropNames);
        var ElementType = (0, _lib.getElementType)(Popup, this.props);

        var popupJSX = _react2.default.createElement(
          ElementType,
          _extends({}, rest, { className: classes, style: style, ref: this.popupMounted }),
          children,
          !children && _PopupHeader2.default.create(header),
          !children && _PopupContent2.default.create(content)
        );

        var mergedPortalProps = _extends({}, this.getPortalProps(), portalProps);
        debug('portal props:', mergedPortalProps);

        return _react2.default.createElement(
          _Portal2.default,
          _extends({}, mergedPortalProps, {
            trigger: trigger,
            onClose: this.handleClose,
            onMount: this.handlePortalMount,
            onOpen: this.handleOpen,
            onUnmount: this.handlePortalUnmount
          }),
          popupJSX
        );
      }
    }]);

    return Popup;
  }(_react.Component);

  Popup.propTypes = {
    /** Display the popup without the pointing arrow */
    basic: _react.PropTypes.bool,

    /** You may pass a content as children of the Popup */
    children: _react.PropTypes.node,

    /** Classes to add to the Popup className. */
    className: _react.PropTypes.string,

    /** Simple text content for the popover */
    content: _react.PropTypes.node,

    /** A Flowing popup have no maximum width and continue to flow to fit its content */
    flowing: _react.PropTypes.bool,

    /** Takes up the entire width of its offset container */
    // TODO: implement the Popup fluid layout
    // fluid: PropTypes.bool,

    /** Header displayed above the content in bold */
    header: _react.PropTypes.string,

    /** Whether the popup should not close on hover */
    hoverable: _react.PropTypes.bool,

    /** Invert the colors of the popup */
    inverted: _react.PropTypes.bool,

    /** The node where the popup should mount.. */
    hideOnScroll: _react.PropTypes.bool,

    /** Horizontal offset in pixels to be applied to the popup */
    offset: _react.PropTypes.number,

    /** Event triggering the popup */
    on: _react.PropTypes.oneOf(_meta.props.on),

    /**
     * Called when a close event happens
     *
     * @param {SyntheticEvent} event - React's original SyntheticEvent.
     * @param {object} data - All props.
     */
    onClose: _react.PropTypes.func,

    /**
     * Called when the portal is mounted on the DOM
     *
     * @param {null}
     * @param {object} data - All props.
     */
    onMount: _react.PropTypes.func,

    /**
     * Called when an open event happens
     *
     * @param {SyntheticEvent} event - React's original SyntheticEvent.
     * @param {object} data - All props.
     */
    onOpen: _react.PropTypes.func,

    /**
     * Called when the portal is unmounted from the DOM
     *
     * @param {null}
     * @param {object} data - All props.
     */
    onUnmount: _react.PropTypes.func,

    /** Positioning for the popover */
    positioning: _react.PropTypes.oneOf(_meta.props.positioning),

    /** Popup size */
    size: _react.PropTypes.oneOf(_meta.props.size),

    /** custom popup style */
    style: _react.PropTypes.object,

    /** Element to be rendered in-place where the popup is defined. */
    trigger: _react.PropTypes.node,

    /** Popup width */
    wide: _react.PropTypes.oneOf(_meta.props.wide)
  };
  Popup.defaultProps = {
    positioning: 'top left',
    on: 'hover'
  };
  Popup._meta = _meta;
  Popup.Content = _PopupContent2.default;
  Popup.Header = _PopupHeader2.default;
  exports.default = Popup;

/***/ },
/* 1090 */
/***/ function(module, exports, __webpack_require__) {

  var assignValue = __webpack_require__(853),
      copyObject = __webpack_require__(852),
      createAssigner = __webpack_require__(1091),
      isArrayLike = __webpack_require__(712),
      isPrototype = __webpack_require__(736),
      keys = __webpack_require__(726);

  /** Used for built-in method references. */
  var objectProto = Object.prototype;

  /** Used to check objects for own properties. */
  var hasOwnProperty = objectProto.hasOwnProperty;

  /**
   * Assigns own enumerable string keyed properties of source objects to the
   * destination object. Source objects are applied from left to right.
   * Subsequent sources overwrite property assignments of previous sources.
   *
   * **Note:** This method mutates `object` and is loosely based on
   * [`Object.assign`](https://mdn.io/Object/assign).
   *
   * @static
   * @memberOf _
   * @since 0.10.0
   * @category Object
   * @param {Object} object The destination object.
   * @param {...Object} [sources] The source objects.
   * @returns {Object} Returns `object`.
   * @see _.assignIn
   * @example
   *
   * function Foo() {
   *   this.a = 1;
   * }
   *
   * function Bar() {
   *   this.c = 3;
   * }
   *
   * Foo.prototype.b = 2;
   * Bar.prototype.d = 4;
   *
   * _.assign({ 'a': 0 }, new Foo, new Bar);
   * // => { 'a': 1, 'c': 3 }
   */
  var assign = createAssigner(function(object, source) {
    if (isPrototype(source) || isArrayLike(source)) {
      copyObject(source, keys(source), object);
      return;
    }
    for (var key in source) {
      if (hasOwnProperty.call(source, key)) {
        assignValue(object, key, source[key]);
      }
    }
  });

  module.exports = assign;


/***/ },
/* 1091 */
/***/ function(module, exports, __webpack_require__) {

  var baseRest = __webpack_require__(702),
      isIterateeCall = __webpack_require__(810);

  /**
   * Creates a function like `_.assign`.
   *
   * @private
   * @param {Function} assigner The function to assign values.
   * @returns {Function} Returns the new assigner function.
   */
  function createAssigner(assigner) {
    return baseRest(function(object, sources) {
      var index = -1,
          length = sources.length,
          customizer = length > 1 ? sources[length - 1] : undefined,
          guard = length > 2 ? sources[2] : undefined;

      customizer = (assigner.length > 3 && typeof customizer == 'function')
        ? (length--, customizer)
        : undefined;

      if (guard && isIterateeCall(sources[0], sources[1], guard)) {
        customizer = length < 3 ? undefined : customizer;
        length = 1;
      }
      object = Object(object);
      while (++index < length) {
        var source = sources[index];
        if (source) {
          assigner(object, source, index, customizer);
        }
      }
      return object;
    });
  }

  module.exports = createAssigner;


/***/ },
/* 1092 */
/***/ function(module, exports, __webpack_require__) {

  var baseAssignValue = __webpack_require__(854),
      baseForOwn = __webpack_require__(723),
      baseIteratee = __webpack_require__(740);

  /**
   * Creates an object with the same keys as `object` and values generated
   * by running each own enumerable string keyed property of `object` thru
   * `iteratee`. The iteratee is invoked with three arguments:
   * (value, key, object).
   *
   * @static
   * @memberOf _
   * @since 2.4.0
   * @category Object
   * @param {Object} object The object to iterate over.
   * @param {Function} [iteratee=_.identity] The function invoked per iteration.
   * @returns {Object} Returns the new mapped object.
   * @see _.mapKeys
   * @example
   *
   * var users = {
   *   'fred':    { 'user': 'fred',    'age': 40 },
   *   'pebbles': { 'user': 'pebbles', 'age': 1 }
   * };
   *
   * _.mapValues(users, function(o) { return o.age; });
   * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
   *
   * // The `_.property` iteratee shorthand.
   * _.mapValues(users, 'age');
   * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
   */
  function mapValues(object, iteratee) {
    var result = {};
    iteratee = baseIteratee(iteratee, 3);

    baseForOwn(object, function(value, key, object) {
      baseAssignValue(result, key, iteratee(value, key, object));
    });
    return result;
  }

  module.exports = mapValues;


/***/ },
/* 1093 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  exports.default = PopupContent;

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _classnames = __webpack_require__(794);

  var _classnames2 = _interopRequireDefault(_classnames);

  var _lib = __webpack_require__(684);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  /**
   * A PopupContent displays the content body of a Popover.
   */
  function PopupContent(props) {
    var children = props.children,
        className = props.className;

    var classes = (0, _classnames2.default)('content', className);
    var rest = (0, _lib.getUnhandledProps)(PopupContent, props);
    var ElementType = (0, _lib.getElementType)(PopupContent, props);

    return _react2.default.createElement(
      ElementType,
      _extends({}, rest, { className: classes }),
      children
    );
  }

  PopupContent.create = (0, _lib.createShorthandFactory)(PopupContent, function (value) {
    return { children: value };
  });

  PopupContent.propTypes = {
    /** The content of the Popup */
    children: _react.PropTypes.node,

    /** Classes to add to the Popup content className. */
    className: _react.PropTypes.string
  };

  PopupContent._meta = {
    name: 'PopupContent',
    type: _lib.META.TYPES.MODULE,
    parent: 'Popup'
  };

/***/ },
/* 1094 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  exports.default = PopupHeader;

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _classnames = __webpack_require__(794);

  var _classnames2 = _interopRequireDefault(_classnames);

  var _lib = __webpack_require__(684);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  /**
   * A PopupHeader displays a header in a Popover.
   */
  function PopupHeader(props) {
    var children = props.children,
        className = props.className;

    var classes = (0, _classnames2.default)('header', className);
    var rest = (0, _lib.getUnhandledProps)(PopupHeader, props);
    var ElementType = (0, _lib.getElementType)(PopupHeader, props);

    return _react2.default.createElement(
      ElementType,
      _extends({}, rest, { className: classes }),
      children
    );
  }

  PopupHeader.create = (0, _lib.createShorthandFactory)(PopupHeader, function (value) {
    return { children: value };
  });

  PopupHeader.propTypes = {
    /** The header of the Popup */
    children: _react.PropTypes.node,

    /** Classes to add to the Popup header className. */
    className: _react.PropTypes.string
  };

  PopupHeader._meta = {
    name: 'PopupHeader',
    type: _lib.META.TYPES.MODULE,
    parent: 'Popup'
  };

/***/ },
/* 1095 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _Progress = __webpack_require__(1096);

  var _Progress2 = _interopRequireDefault(_Progress);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  exports.default = _Progress2.default;

/***/ },
/* 1096 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _without2 = __webpack_require__(939);

  var _without3 = _interopRequireDefault(_without2);

  var _round2 = __webpack_require__(1097);

  var _round3 = _interopRequireDefault(_round2);

  var _clamp2 = __webpack_require__(1099);

  var _clamp3 = _interopRequireDefault(_clamp2);

  var _every2 = __webpack_require__(975);

  var _every3 = _interopRequireDefault(_every2);

  var _isUndefined2 = __webpack_require__(713);

  var _isUndefined3 = _interopRequireDefault(_isUndefined2);

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _classnames = __webpack_require__(794);

  var _classnames2 = _interopRequireDefault(_classnames);

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _lib = __webpack_require__(684);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function Progress(props) {
    var active = props.active,
        attached = props.attached,
        autoSuccess = props.autoSuccess,
        color = props.color,
        children = props.children,
        className = props.className,
        disabled = props.disabled,
        error = props.error,
        indicating = props.indicating,
        inverted = props.inverted,
        label = props.label,
        percent = props.percent,
        precision = props.precision,
        progress = props.progress,
        size = props.size,
        success = props.success,
        total = props.total,
        value = props.value,
        warning = props.warning;


    var isAutoSuccess = autoSuccess && (percent >= 100 || value >= total);

    var showProgress = progress || label || !(0, _isUndefined3.default)(precision) || !(0, _every3.default)([total, value], _isUndefined3.default);

    var _percent = void 0;
    if (!(0, _isUndefined3.default)(percent)) {
      _percent = percent;
    } else if (!(0, _isUndefined3.default)(total) && !(0, _isUndefined3.default)(value)) {
      _percent = value / total * 100;
    }

    _percent = (0, _clamp3.default)(_percent, 0, 100);

    if (!(0, _isUndefined3.default)(precision)) {
      _percent = (0, _round3.default)(_percent, precision);
    }

    var progressText = void 0;
    if (label === 'percent' || label === true || (0, _isUndefined3.default)(label)) {
      progressText = _percent + '%';
    } else if (label === 'ratio') {
      progressText = value + '/' + total;
    }

    var classes = (0, _classnames2.default)('ui', size, color, (0, _lib.useKeyOnly)(active || indicating, 'active'), (0, _lib.useKeyOnly)(isAutoSuccess || success, 'success'), (0, _lib.useKeyOnly)(warning, 'warning'), (0, _lib.useKeyOnly)(error, 'error'), (0, _lib.useKeyOnly)(disabled, 'disabled'), (0, _lib.useKeyOnly)(indicating, 'indicating'), (0, _lib.useKeyOnly)(inverted, 'inverted'), (0, _lib.useValueAndKey)(attached, 'attached'), className, 'progress');
    var rest = (0, _lib.getUnhandledProps)(Progress, props);
    var ElementType = (0, _lib.getElementType)(Progress, props);

    return _react2.default.createElement(
      ElementType,
      _extends({}, rest, { className: classes }),
      _react2.default.createElement(
        'div',
        { className: 'bar', style: { width: _percent + '%' } },
        showProgress && _react2.default.createElement(
          'div',
          { className: 'progress' },
          progressText
        )
      ),
      children && _react2.default.createElement(
        'div',
        { className: 'label' },
        children
      )
    );
  }

  Progress._meta = {
    name: 'Progress',
    type: _lib.META.TYPES.MODULE,
    props: {
      attached: ['top', 'bottom'],
      color: _lib.SUI.COLORS,
      label: ['ratio', 'percent'],
      size: (0, _without3.default)(_lib.SUI.SIZES, 'mini', 'huge', 'massive')
    }
  };

  Progress.propTypes = {
    /** An element type to render as (string or function). */
    as: _lib.customPropTypes.as,

    /** A progress bar can show activity. */
    active: _react.PropTypes.bool,

    /** A progress bar can attach to and show the progress of an element (i.e. Card or Segment). */
    attached: _react.PropTypes.oneOf(Progress._meta.props.attached),

    /** Whether success state should automatically trigger when progress completes. */
    autoSuccess: _react.PropTypes.bool,

    /** A progress bar can have different colors. */
    color: _react.PropTypes.oneOf(Progress._meta.props.color),

    /** Primary content. */
    children: _react.PropTypes.node,

    /** Additional classes. */
    className: _react.PropTypes.string,

    /** A progress bar be disabled. */
    disabled: _react.PropTypes.bool,

    /** A progress bar can show a error state. */
    error: _react.PropTypes.bool,

    /** An indicating progress bar visually indicates the current level of progress of a task. */
    indicating: _react.PropTypes.bool,

    /** A progress bar can have its colors inverted. */
    inverted: _react.PropTypes.bool,

    /** Can be set to either to display progress as percent or ratio. */
    label: _lib.customPropTypes.every([_lib.customPropTypes.some([_lib.customPropTypes.demand(['percent']), _lib.customPropTypes.demand(['total', 'value'])]), _react.PropTypes.oneOfType([_react.PropTypes.bool, _react.PropTypes.oneOf(Progress._meta.props.label)])]),

    /** Current percent complete. */
    percent: _lib.customPropTypes.every([_lib.customPropTypes.disallow(['total', 'value']), _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.number])]),

    /** A progress bar can contain a text value indicating current progress. */
    progress: _react.PropTypes.bool,

    /** Decimal point precision for calculated progress. */
    precision: _react.PropTypes.number,

    /** A progress bar can vary in size. */
    size: _react.PropTypes.oneOf(Progress._meta.props.size),

    /** A progress bar can show a success state. */
    success: _react.PropTypes.bool,

    /**
     * For use with value.
     * Together, these will calculate the percent.
     * Mutually excludes percent.
     */
    total: _lib.customPropTypes.every([_lib.customPropTypes.demand(['value']), _lib.customPropTypes.disallow(['percent']), _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.number])]),

    /**
     * For use with total. Together, these will calculate the percent. Mutually excludes percent.
     */
    value: _lib.customPropTypes.every([_lib.customPropTypes.demand(['total']), _lib.customPropTypes.disallow(['percent']), _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.number])]),

    /** A progress bar can show a warning state. */
    warning: _react.PropTypes.bool
  };

  exports.default = Progress;

/***/ },
/* 1097 */
/***/ function(module, exports, __webpack_require__) {

  var createRound = __webpack_require__(1098);

  /**
   * Computes `number` rounded to `precision`.
   *
   * @static
   * @memberOf _
   * @since 3.10.0
   * @category Math
   * @param {number} number The number to round.
   * @param {number} [precision=0] The precision to round to.
   * @returns {number} Returns the rounded number.
   * @example
   *
   * _.round(4.006);
   * // => 4
   *
   * _.round(4.006, 2);
   * // => 4.01
   *
   * _.round(4060, -2);
   * // => 4100
   */
  var round = createRound('round');

  module.exports = round;


/***/ },
/* 1098 */
/***/ function(module, exports, __webpack_require__) {

  var toInteger = __webpack_require__(716),
      toNumber = __webpack_require__(718),
      toString = __webpack_require__(676);

  /* Built-in method references for those with the same name as other `lodash` methods. */
  var nativeMin = Math.min;

  /**
   * Creates a function like `_.round`.
   *
   * @private
   * @param {string} methodName The name of the `Math` method to use when rounding.
   * @returns {Function} Returns the new round function.
   */
  function createRound(methodName) {
    var func = Math[methodName];
    return function(number, precision) {
      number = toNumber(number);
      precision = nativeMin(toInteger(precision), 292);
      if (precision) {
        // Shift with exponential notation to avoid floating-point issues.
        // See [MDN](https://mdn.io/round#Examples) for more details.
        var pair = (toString(number) + 'e').split('e'),
            value = func(pair[0] + 'e' + (+pair[1] + precision));

        pair = (toString(value) + 'e').split('e');
        return +(pair[0] + 'e' + (+pair[1] - precision));
      }
      return func(number);
    };
  }

  module.exports = createRound;


/***/ },
/* 1099 */
/***/ function(module, exports, __webpack_require__) {

  var baseClamp = __webpack_require__(715),
      toNumber = __webpack_require__(718);

  /**
   * Clamps `number` within the inclusive `lower` and `upper` bounds.
   *
   * @static
   * @memberOf _
   * @since 4.0.0
   * @category Number
   * @param {number} number The number to clamp.
   * @param {number} [lower] The lower bound.
   * @param {number} upper The upper bound.
   * @returns {number} Returns the clamped number.
   * @example
   *
   * _.clamp(-10, -5, 5);
   * // => -5
   *
   * _.clamp(10, -5, 5);
   * // => 5
   */
  function clamp(number, lower, upper) {
    if (upper === undefined) {
      upper = lower;
      lower = undefined;
    }
    if (upper !== undefined) {
      upper = toNumber(upper);
      upper = upper === upper ? upper : 0;
    }
    if (lower !== undefined) {
      lower = toNumber(lower);
      lower = lower === lower ? lower : 0;
    }
    return baseClamp(toNumber(number), lower, upper);
  }

  module.exports = clamp;


/***/ },
/* 1100 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _Rating = __webpack_require__(1101);

  var _Rating2 = _interopRequireDefault(_Rating);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  exports.default = _Rating2.default;

/***/ },
/* 1101 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _times2 = __webpack_require__(799);

  var _times3 = _interopRequireDefault(_times2);

  var _invoke2 = __webpack_require__(947);

  var _invoke3 = _interopRequireDefault(_invoke2);

  var _without2 = __webpack_require__(939);

  var _without3 = _interopRequireDefault(_without2);

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

  var _classnames = __webpack_require__(794);

  var _classnames2 = _interopRequireDefault(_classnames);

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _lib = __webpack_require__(684);

  var _RatingIcon = __webpack_require__(1102);

  var _RatingIcon2 = _interopRequireDefault(_RatingIcon);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

  function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

  var _meta = {
    name: 'Rating',
    type: _lib.META.TYPES.MODULE,
    props: {
      clearable: ['auto'],
      icon: ['star', 'heart'],
      size: (0, _without3.default)(_lib.SUI.SIZES, 'medium', 'big')
    }
  };

  /**
   * A rating indicates user interest in content
   */

  var Rating = function (_Component) {
    _inherits(Rating, _Component);

    function Rating() {
      var _ref;

      var _temp, _this, _ret;

      _classCallCheck(this, Rating);

      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Rating.__proto__ || Object.getPrototypeOf(Rating)).call.apply(_ref, [this].concat(args))), _this), _initialiseProps.call(_this), _temp), _possibleConstructorReturn(_this, _ret);
    }

    _createClass(Rating, [{
      key: 'render',
      value: function render() {
        var _this2 = this;

        var _props = this.props,
            className = _props.className,
            disabled = _props.disabled,
            icon = _props.icon,
            maxRating = _props.maxRating,
            size = _props.size;
        var _state = this.state,
            rating = _state.rating,
            selectedIndex = _state.selectedIndex,
            isSelecting = _state.isSelecting;


        var classes = (0, _classnames2.default)('ui', icon, size, (0, _lib.useKeyOnly)(disabled, 'disabled'), (0, _lib.useKeyOnly)(isSelecting && !disabled && selectedIndex >= 0, 'selected'), 'rating', className);
        var rest = (0, _lib.getUnhandledProps)(Rating, this.props);
        var ElementType = (0, _lib.getElementType)(Rating, this.props);

        return _react2.default.createElement(
          ElementType,
          _extends({}, rest, { className: classes, role: 'radiogroup', onMouseLeave: this.handleMouseLeave }),
          (0, _times3.default)(maxRating, function (i) {
            return _react2.default.createElement(_RatingIcon2.default, {
              active: rating >= i + 1,
              index: i,
              key: i,
              'aria-checked': rating === i + 1,
              'aria-posinset': i + 1,
              'aria-setsize': maxRating,
              onClick: _this2.handleIconClick,
              onMouseEnter: _this2.handleIconMouseEnter,
              selected: selectedIndex >= i && isSelecting
            });
          })
        );
      }
    }]);

    return Rating;
  }(_lib.AutoControlledComponent);

  Rating.autoControlledProps = ['rating'];
  Rating.defaultProps = {
    clearable: 'auto',
    maxRating: 1
  };
  Rating.propTypes = {
    /** An element type to render as (string or function). */
    as: _lib.customPropTypes.as,

    /** Additional classes. */
    className: _react.PropTypes.string,

    /**
     * You can clear the rating by clicking on the current start rating.
     * By default a rating will be only clearable if there is 1 icon.
     * Setting to `true`/`false` will allow or disallow a user to clear their rating.
     */
    clearable: _react.PropTypes.oneOfType([_react.PropTypes.oneOf(_meta.props.clearable), _react.PropTypes.bool]),

    /** The initial rating value. */
    defaultRating: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.number]),

    /** You can disable or enable interactive rating.  Makes a read-only rating. */
    disabled: _react.PropTypes.bool,

    /** A rating can use a set of star or heart icons. */
    icon: _react.PropTypes.oneOf(_meta.props.icon),

    /** The total number of icons. */
    maxRating: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.number]),

    /**
     * Called after user selects a new rating.
     *
     * @param {SyntheticEvent} event - React's original SyntheticEvent.
     * @param {object} data - All props and proposed rating.
     */
    onRate: _react.PropTypes.func,

    /** The current number of active icons. */
    rating: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.number]),

    /** A progress bar can vary in size. */
    size: _react.PropTypes.oneOf(_meta.props.size)
  };
  Rating._meta = _meta;
  Rating.Icon = _RatingIcon2.default;

  var _initialiseProps = function _initialiseProps() {
    var _this3 = this;

    this.handleIconClick = function (e, _ref2) {
      var index = _ref2.index;
      var _props2 = _this3.props,
          clearable = _props2.clearable,
          disabled = _props2.disabled,
          maxRating = _props2.maxRating,
          onRate = _props2.onRate;
      var rating = _this3.state.rating;

      if (disabled) return;

      // default newRating is the clicked icon
      // allow toggling a binary rating
      // allow clearing ratings
      var newRating = index + 1;
      if (clearable === 'auto' && maxRating === 1) {
        newRating = +!rating;
      } else if (clearable === true && newRating === rating) {
        newRating = 0;
      }

      // set rating
      _this3.trySetState({ rating: newRating }, { isSelecting: false });
      if (onRate) onRate(e, _extends({}, _this3.props, { rating: newRating }));
    };

    this.handleIconMouseEnter = function (e, _ref3) {
      var index = _ref3.index;

      if (_this3.props.disabled) return;

      _this3.setState({ selectedIndex: index, isSelecting: true });
    };

    this.handleMouseLeave = function () {
      for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        args[_key2] = arguments[_key2];
      }

      _invoke3.default.apply(undefined, [_this3.props, 'onMouseLeave'].concat(args));

      if (_this3.props.disabled) return;

      _this3.setState({ selectedIndex: -1, isSelecting: false });
    };
  };

  exports.default = Rating;

/***/ },
/* 1102 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

  var _classnames = __webpack_require__(794);

  var _classnames2 = _interopRequireDefault(_classnames);

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _lib = __webpack_require__(684);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

  function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

  /**
   * An internal icon sub-component for Rating component
   */
  var RatingIcon = function (_Component) {
    _inherits(RatingIcon, _Component);

    function RatingIcon() {
      var _ref;

      var _temp, _this, _ret;

      _classCallCheck(this, RatingIcon);

      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = RatingIcon.__proto__ || Object.getPrototypeOf(RatingIcon)).call.apply(_ref, [this].concat(args))), _this), _this.defaultProps = {
        as: 'i'
      }, _this.handleClick = function (e) {
        var onClick = _this.props.onClick;


        if (onClick) onClick(e, _this.props);
      }, _this.handleKeyUp = function (e) {
        var _this$props = _this.props,
            onClick = _this$props.onClick,
            onKeyUp = _this$props.onKeyUp;


        if (onKeyUp) onKeyUp(e, _this.props);

        if (onClick) {
          switch (_lib.keyboardKey.getCode(e)) {
            case _lib.keyboardKey.Enter:
            case _lib.keyboardKey.Spacebar:
              e.preventDefault();
              onClick(e, _this.props);
              break;
            default:
              return;
          }
        }
      }, _this.handleMouseEnter = function (e) {
        var onMouseEnter = _this.props.onMouseEnter;


        if (onMouseEnter) onMouseEnter(e, _this.props);
      }, _temp), _possibleConstructorReturn(_this, _ret);
    }

    _createClass(RatingIcon, [{
      key: 'render',
      value: function render() {
        var _props = this.props,
            active = _props.active,
            className = _props.className,
            selected = _props.selected;

        var classes = (0, _classnames2.default)((0, _lib.useKeyOnly)(active, 'active'), (0, _lib.useKeyOnly)(selected, 'selected'), 'icon', className);
        var rest = (0, _lib.getUnhandledProps)(RatingIcon, this.props);
        var ElementType = (0, _lib.getElementType)(RatingIcon, this.props);

        return _react2.default.createElement(ElementType, _extends({
          role: 'radio',
          tabIndex: 0
        }, rest, {
          className: classes,
          onKeyUp: this.handleKeyUp,
          onClick: this.handleClick,
          onMouseEnter: this.handleMouseEnter
        }));
      }
    }]);

    return RatingIcon;
  }(_react.Component);

  RatingIcon.propTypes = {
    /** Indicates activity of an icon. */
    active: _react.PropTypes.bool,

    /** An element type to render as (string or function). */
    as: _lib.customPropTypes.as,

    /** Additional classes. */
    className: _react.PropTypes.string,

    /** An index of icon inside Rating. */
    index: _react.PropTypes.number,

    /**
     * Called on click.
     *
     * @param {SyntheticEvent} event - React's original SyntheticEvent.
     * @param {object} data - All props.
     */
    onClick: _react.PropTypes.func,

    /**
     * Called on keyup.
     *
     * @param {SyntheticEvent} event - React's original SyntheticEvent.
     * @param {object} data - All props.
     */
    onKeyUp: _react.PropTypes.func,

    /**
     * Called on mouseenter.
     *
     * @param {SyntheticEvent} event - React's original SyntheticEvent.
     * @param {object} data - All props.
     */
    onMouseEnter: _react.PropTypes.func,

    /** Indicates selection of an icon. */
    selected: _react.PropTypes.bool
  };
  RatingIcon._meta = {
    name: 'RatingIcon',
    parent: 'Rating',
    type: _lib.META.TYPES.MODULE
  };
  exports.default = RatingIcon;

/***/ },
/* 1103 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _Search = __webpack_require__(1104);

  var _Search2 = _interopRequireDefault(_Search);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  exports.default = _Search2.default;

/***/ },
/* 1104 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _isEmpty2 = __webpack_require__(774);

  var _isEmpty3 = _interopRequireDefault(_isEmpty2);

  var _partialRight2 = __webpack_require__(1105);

  var _partialRight3 = _interopRequireDefault(_partialRight2);

  var _inRange2 = __webpack_require__(1106);

  var _inRange3 = _interopRequireDefault(_inRange2);

  var _map2 = __webpack_require__(918);

  var _map3 = _interopRequireDefault(_map2);

  var _get3 = __webpack_require__(767);

  var _get4 = _interopRequireDefault(_get3);

  var _reduce2 = __webpack_require__(978);

  var _reduce3 = _interopRequireDefault(_reduce2);

  var _isEqual2 = __webpack_require__(801);

  var _isEqual3 = _interopRequireDefault(_isEqual2);

  var _without2 = __webpack_require__(939);

  var _without3 = _interopRequireDefault(_without2);

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

  var _get2 = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

  var _classnames = __webpack_require__(794);

  var _classnames2 = _interopRequireDefault(_classnames);

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _lib = __webpack_require__(684);

  var _Input = __webpack_require__(1007);

  var _Input2 = _interopRequireDefault(_Input);

  var _SearchCategory = __webpack_require__(1108);

  var _SearchCategory2 = _interopRequireDefault(_SearchCategory);

  var _SearchResult = __webpack_require__(1109);

  var _SearchResult2 = _interopRequireDefault(_SearchResult);

  var _SearchResults = __webpack_require__(1110);

  var _SearchResults2 = _interopRequireDefault(_SearchResults);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

  function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

  var debug = (0, _lib.makeDebugger)('search');

  var _meta = {
    name: 'Search',
    type: _lib.META.TYPES.MODULE,
    props: {
      size: (0, _without3.default)(_lib.SUI.SIZES, 'medium')
    }
  };

  /**
   * A search module allows a user to query for results from a selection of data
   */

  var Search = function (_Component) {
    _inherits(Search, _Component);

    function Search() {
      var _ref;

      var _temp, _this, _ret;

      _classCallCheck(this, Search);

      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Search.__proto__ || Object.getPrototypeOf(Search)).call.apply(_ref, [this].concat(args))), _this), _this.handleResultSelect = function (e, result) {
        debug('handleResultSelect()');
        debug(result);
        var onResultSelect = _this.props.onResultSelect;

        if (onResultSelect) onResultSelect(e, result);
      }, _this.closeOnEscape = function (e) {
        if (_lib.keyboardKey.getCode(e) !== _lib.keyboardKey.Escape) return;
        e.preventDefault();
        _this.close();
      }, _this.moveSelectionOnKeyDown = function (e) {
        debug('moveSelectionOnKeyDown()');
        debug(_lib.keyboardKey.getName(e));
        switch (_lib.keyboardKey.getCode(e)) {
          case _lib.keyboardKey.ArrowDown:
            e.preventDefault();
            _this.moveSelectionBy(1);
            break;
          case _lib.keyboardKey.ArrowUp:
            e.preventDefault();
            _this.moveSelectionBy(-1);
            break;
          default:
            break;
        }
      }, _this.selectItemOnEnter = function (e) {
        debug('selectItemOnEnter()');
        debug(_lib.keyboardKey.getName(e));
        if (_lib.keyboardKey.getCode(e) !== _lib.keyboardKey.Enter) return;
        e.preventDefault();

        var result = _this.getSelectedResult();

        // prevent selecting null if there was no selected item value
        if (!result) return;

        // notify the onResultSelect prop that the user is trying to change value
        _this.setValue(result.title);
        _this.handleResultSelect(e, result);
        _this.close();
      }, _this.closeOnDocumentClick = function (e) {
        debug('closeOnDocumentClick()');
        debug(e);
        _this.close();
      }, _this.handleMouseDown = function (e) {
        debug('handleMouseDown()');
        var onMouseDown = _this.props.onMouseDown;

        if (onMouseDown) onMouseDown(e, _this.props);
        _this.isMouseDown = true;
        // Do not access document when server side rendering
        if (!_lib.isBrowser) return;
        document.addEventListener('mouseup', _this.handleDocumentMouseUp);
      }, _this.handleDocumentMouseUp = function () {
        debug('handleDocumentMouseUp()');
        _this.isMouseDown = false;
        // Do not access document when server side rendering
        if (!_lib.isBrowser) return;
        document.removeEventListener('mouseup', _this.handleDocumentMouseUp);
      }, _this.handleInputClick = function (e) {
        debug('handleInputClick()', e);

        // prevent closeOnDocumentClick()
        e.nativeEvent.stopImmediatePropagation();

        _this.tryOpen();
      }, _this.handleItemClick = function (e, _ref2) {
        var id = _ref2.id;

        debug('handleItemClick()');
        debug(id);
        var result = _this.getSelectedResult(id);

        // prevent closeOnDocumentClick()
        e.nativeEvent.stopImmediatePropagation();

        // notify the onResultSelect prop that the user is trying to change value
        _this.setValue(result.title);
        _this.handleResultSelect(e, result);
        _this.close();
      }, _this.handleFocus = function (e) {
        debug('handleFocus()');
        var onFocus = _this.props.onFocus;

        if (onFocus) onFocus(e, _this.props);
        _this.setState({ focus: true });
      }, _this.handleBlur = function (e) {
        debug('handleBlur()');
        var onBlur = _this.props.onBlur;

        if (onBlur) onBlur(e, _this.props);
        _this.setState({ focus: false });
      }, _this.handleSearchChange = function (e) {
        debug('handleSearchChange()');
        debug(e.target.value);
        // prevent propagating to this.props.onChange()
        e.stopPropagation();
        var _this$props = _this.props,
            onSearchChange = _this$props.onSearchChange,
            minCharacters = _this$props.minCharacters;
        var open = _this.state.open;

        var newQuery = e.target.value;

        if (onSearchChange) onSearchChange(e, newQuery);

        // open search dropdown on search query
        if (newQuery.length < minCharacters) {
          _this.close();
        } else if (!open) {
          _this.tryOpen(newQuery);
        }

        _this.setValue(newQuery);
      }, _this.getFlattenedResults = function () {
        var _this$props2 = _this.props,
            category = _this$props2.category,
            results = _this$props2.results;


        return !category ? results : (0, _reduce3.default)(results, function (memo, categoryData) {
          return memo.concat(categoryData.results);
        }, []);
      }, _this.getSelectedResult = function () {
        var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _this.state.selectedIndex;

        var results = _this.getFlattenedResults();
        return (0, _get4.default)(results, index);
      }, _this.setValue = function (value) {
        debug('setValue()');
        debug('value', value);

        var selectFirstResult = _this.props.selectFirstResult;


        _this.trySetState({ value: value }, { selectedIndex: selectFirstResult ? 0 : -1 });
      }, _this.moveSelectionBy = function (offset) {
        debug('moveSelectionBy()');
        debug('offset: ' + offset);
        var selectedIndex = _this.state.selectedIndex;


        var results = _this.getFlattenedResults();
        var lastIndex = results.length - 1;

        // next is after last, wrap to beginning
        // next is before first, wrap to end
        var nextIndex = selectedIndex + offset;
        if (nextIndex > lastIndex) nextIndex = 0;else if (nextIndex < 0) nextIndex = lastIndex;

        _this.setState({ selectedIndex: nextIndex });
        _this.scrollSelectedItemIntoView();
      }, _this.scrollSelectedItemIntoView = function () {
        debug('scrollSelectedItemIntoView()');
        // Do not access document when server side rendering
        if (!_lib.isBrowser) return;
        var menu = document.querySelector('.ui.search.active.visible .results.visible');
        var item = menu.querySelector('.result.active');
        debug('menu (results): ' + menu);
        debug('item (result): ' + item);
        var isOutOfUpperView = item.offsetTop < menu.scrollTop;
        var isOutOfLowerView = item.offsetTop + item.clientHeight > menu.scrollTop + menu.clientHeight;

        if (isOutOfUpperView) {
          menu.scrollTop = item.offsetTop;
        } else if (isOutOfLowerView) {
          menu.scrollTop = item.offsetTop + item.clientHeight - menu.clientHeight;
        }
      }, _this.tryOpen = function () {
        var currentValue = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _this.state.value;

        debug('open()');

        var minCharacters = _this.props.minCharacters;

        if (currentValue.length < minCharacters) return;

        _this.open();
      }, _this.open = function () {
        debug('open()');
        _this.trySetState({ open: true });
      }, _this.close = function () {
        debug('close()');
        _this.trySetState({ open: false });
      }, _this.renderSearchInput = function () {
        var _this$props3 = _this.props,
            icon = _this$props3.icon,
            placeholder = _this$props3.placeholder,
            input = _this$props3.input;
        var value = _this.state.value;


        return _Input2.default.create(input, {
          value: value,
          placeholder: placeholder,
          onBlur: _this.handleBlur,
          onChange: _this.handleSearchChange,
          onFocus: _this.handleFocus,
          onClick: _this.handleInputClick,
          input: { className: 'prompt', tabIndex: '0', autoComplete: 'off' },
          icon: icon
        });
      }, _this.renderNoResults = function () {
        var _this$props4 = _this.props,
            noResultsMessage = _this$props4.noResultsMessage,
            noResultsDescription = _this$props4.noResultsDescription;


        return _react2.default.createElement(
          'div',
          { className: 'message empty' },
          _react2.default.createElement(
            'div',
            { className: 'header' },
            noResultsMessage
          ),
          noResultsDescription && _react2.default.createElement(
            'div',
            { className: 'description' },
            noResultsDescription
          )
        );
      }, _this.renderResult = function (_ref3, index, _array) {
        var offset = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;

        var childKey = _ref3.childKey,
            result = _objectWithoutProperties(_ref3, ['childKey']);

        var resultRenderer = _this.props.resultRenderer;
        var selectedIndex = _this.state.selectedIndex;

        var offsetIndex = index + offset;

        return _react2.default.createElement(_SearchResult2.default, _extends({
          key: childKey || result.title,
          active: selectedIndex === offsetIndex,
          onClick: _this.handleItemClick,
          renderer: resultRenderer
        }, result, {
          id: offsetIndex // Used to lookup the result on item click
        }));
      }, _this.renderResults = function () {
        var results = _this.props.results;


        return (0, _map3.default)(results, _this.renderResult);
      }, _this.renderCategories = function () {
        var _this$props5 = _this.props,
            categoryRenderer = _this$props5.categoryRenderer,
            categories = _this$props5.results;
        var selectedIndex = _this.state.selectedIndex;


        var count = 0;

        return (0, _map3.default)(categories, function (_ref4, name, index) {
          var childKey = _ref4.childKey,
              category = _objectWithoutProperties(_ref4, ['childKey']);

          var categoryProps = _extends({
            key: childKey || category.name,
            active: (0, _inRange3.default)(selectedIndex, count, count + category.results.length),
            renderer: categoryRenderer
          }, category);
          var renderFn = (0, _partialRight3.default)(_this.renderResult, count);

          count = count + category.results.length;

          return _react2.default.createElement(
            _SearchCategory2.default,
            categoryProps,
            category.results.map(renderFn)
          );
        });
      }, _this.renderMenuContent = function () {
        var _this$props6 = _this.props,
            category = _this$props6.category,
            showNoResults = _this$props6.showNoResults,
            results = _this$props6.results;


        if ((0, _isEmpty3.default)(results)) {
          return showNoResults ? _this.renderNoResults() : null;
        }

        return category ? _this.renderCategories() : _this.renderResults();
      }, _this.renderResultsMenu = function () {
        var open = _this.state.open;

        var resultsClasses = open ? 'visible' : '';
        var menuContent = _this.renderMenuContent();

        if (!menuContent) return;

        return _react2.default.createElement(
          _SearchResults2.default,
          { className: resultsClasses },
          menuContent
        );
      }, _temp), _possibleConstructorReturn(_this, _ret);
    }

    _createClass(Search, [{
      key: 'componentWillMount',
      value: function componentWillMount() {
        if (_get2(Search.prototype.__proto__ || Object.getPrototypeOf(Search.prototype), 'componentWillMount', this)) _get2(Search.prototype.__proto__ || Object.getPrototypeOf(Search.prototype), 'componentWillMount', this).call(this);
        debug('componentWillMount()');
        var _state = this.state,
            open = _state.open,
            value = _state.value;


        this.setValue(value);
        if (open) this.open();
      }
    }, {
      key: 'shouldComponentUpdate',
      value: function shouldComponentUpdate(nextProps, nextState) {
        return !(0, _isEqual3.default)(nextProps, this.props) || !(0, _isEqual3.default)(nextState, this.state);
      }
    }, {
      key: 'componentWillReceiveProps',
      value: function componentWillReceiveProps(nextProps) {
        _get2(Search.prototype.__proto__ || Object.getPrototypeOf(Search.prototype), 'componentWillReceiveProps', this).call(this, nextProps);
        debug('componentWillReceiveProps()');
        // TODO objectDiff still runs in prod, stop it
        debug('changed props:', (0, _lib.objectDiff)(nextProps, this.props));

        if (!(0, _isEqual3.default)(nextProps.value, this.props.value)) {
          debug('value changed, setting', nextProps.value);
          this.setValue(nextProps.value);
        }
      }
    }, {
      key: 'componentDidUpdate',
      value: function componentDidUpdate(prevProps, prevState) {
        // eslint-disable-line complexity
        debug('componentDidUpdate()');
        // TODO objectDiff still runs in prod, stop it
        debug('to state:', (0, _lib.objectDiff)(prevState, this.state));

        // Do not access document when server side rendering
        if (!_lib.isBrowser) return;

        // focused / blurred
        if (!prevState.focus && this.state.focus) {
          debug('search focused');
          if (!this.isMouseDown) {
            debug('mouse is not down, opening');
            this.tryOpen();
          }
          if (this.state.open) {
            document.addEventListener('keydown', this.moveSelectionOnKeyDown);
            document.addEventListener('keydown', this.selectItemOnEnter);
          }
        } else if (prevState.focus && !this.state.focus) {
          debug('search blurred');
          if (!this.isMouseDown) {
            debug('mouse is not down, closing');
            this.close();
          }
          document.removeEventListener('keydown', this.moveSelectionOnKeyDown);
          document.removeEventListener('keydown', this.selectItemOnEnter);
        }

        // opened / closed
        if (!prevState.open && this.state.open) {
          debug('search opened');
          this.open();
          document.addEventListener('keydown', this.closeOnEscape);
          document.addEventListener('keydown', this.moveSelectionOnKeyDown);
          document.addEventListener('keydown', this.selectItemOnEnter);
          document.addEventListener('click', this.closeOnDocumentClick);
        } else if (prevState.open && !this.state.open) {
          debug('search closed');
          this.close();
          document.removeEventListener('keydown', this.closeOnEscape);
          document.removeEventListener('keydown', this.moveSelectionOnKeyDown);
          document.removeEventListener('keydown', this.selectItemOnEnter);
          document.removeEventListener('click', this.closeOnDocumentClick);
        }
      }
    }, {
      key: 'componentWillUnmount',
      value: function componentWillUnmount() {
        debug('componentWillUnmount()');

        // Do not access document when server side rendering
        if (!_lib.isBrowser) return;

        document.removeEventListener('keydown', this.moveSelectionOnKeyDown);
        document.removeEventListener('keydown', this.selectItemOnEnter);
        document.removeEventListener('keydown', this.closeOnEscape);
        document.removeEventListener('click', this.closeOnDocumentClick);
      }

      // ----------------------------------------
      // Document Event Handlers
      // ----------------------------------------

      // ----------------------------------------
      // Component Event Handlers
      // ----------------------------------------

      // ----------------------------------------
      // Getters
      // ----------------------------------------

      // ----------------------------------------
      // Setters
      // ----------------------------------------

      // ----------------------------------------
      // Behavior
      // ----------------------------------------

      // Open if the current value is greater than the minCharacters prop


      // ----------------------------------------
      // Render
      // ----------------------------------------

      /**
       * Offset is needed for determining the active item for results within a
       * category. Since the index is reset to 0 for each new category, an offset
       * must be passed in.
       */

    }, {
      key: 'render',
      value: function render() {
        debug('render()');
        debug('props', this.props);
        debug('state', this.state);
        var _state2 = this.state,
            searchClasses = _state2.searchClasses,
            focus = _state2.focus,
            open = _state2.open;
        var _props = this.props,
            aligned = _props.aligned,
            category = _props.category,
            className = _props.className,
            fluid = _props.fluid,
            loading = _props.loading,
            size = _props.size;

        // Classes

        var classes = (0, _classnames2.default)('ui', open && 'active visible', size, searchClasses, (0, _lib.useKeyOnly)(loading, 'loading'), (0, _lib.useValueAndKey)(aligned, 'aligned'), (0, _lib.useKeyOnly)(category, 'category'), (0, _lib.useKeyOnly)(focus, 'focus'), (0, _lib.useKeyOnly)(fluid, 'fluid'), className, 'search');
        var rest = (0, _lib.getUnhandledProps)(Search, this.props);
        var ElementType = (0, _lib.getElementType)(Search, this.props);

        return _react2.default.createElement(
          ElementType,
          _extends({}, rest, {
            className: classes,
            onBlur: this.handleBlur,
            onFocus: this.handleFocus,
            onMouseDown: this.handleMouseDown
          }),
          this.renderSearchInput(),
          this.renderResultsMenu()
        );
      }
    }]);

    return Search;
  }(_lib.AutoControlledComponent);

  Search.propTypes = {
    /** An element type to render as (string or function). */
    as: _lib.customPropTypes.as,

    // ------------------------------------
    // Behavior
    // ------------------------------------

    /** Shorthand for Icon. */
    icon: _react.PropTypes.oneOfType([_react.PropTypes.node, _react.PropTypes.object]),

    /**
     * One of:
     * - array of Search.Result props e.g. `{ title: '', description: '' }` or
     * - object of categories e.g. `{ name: '', results: [{ title: '', description: '' }]`
     */
    results: _react.PropTypes.oneOfType([_react.PropTypes.arrayOf(_react.PropTypes.shape(_SearchResult2.default.propTypes)), _react.PropTypes.object]),

    /** Controls whether or not the results menu is displayed. */
    open: _react.PropTypes.bool,

    /** Initial value of open. */
    defaultOpen: _react.PropTypes.bool,

    /** Current value of the search input. Creates a controlled component. */
    value: _react.PropTypes.string,

    /** Initial value. */
    defaultValue: _react.PropTypes.string,

    /** Placeholder of the search input. */
    placeholder: _react.PropTypes.string,

    /** Minimum characters to query for results */
    minCharacters: _react.PropTypes.number,

    /** Message to display when there are no results. */
    noResultsMessage: _react.PropTypes.string,

    /** Additional text for "No Results" message with less emphasis. */
    noResultsDescription: _react.PropTypes.string,

    /** Whether the search should automatically select the first result after searching */
    selectFirstResult: _react.PropTypes.bool,

    /** Whether a "no results" message should be shown if no results are found. */
    showNoResults: _react.PropTypes.bool,

    // ------------------------------------
    // Rendering
    // ------------------------------------

    /**
     * A function that returns the category contents.
     * Receives all SearchCategory props.
     */
    categoryRenderer: _react.PropTypes.func,

    /**
     * A function that returns the result contents.
     * Receives all SearchResult props.
     */
    resultRenderer: _react.PropTypes.func,

    // ------------------------------------
    // Callbacks
    // ------------------------------------

    /**
     * Called on blur.
     *
     * @param {SyntheticEvent} event - React's original SyntheticEvent.
     * @param {object} data - All props.
     */
    onBlur: _react.PropTypes.func,

    /**
     * Called when a result is selected.
     *
     * @param {SyntheticEvent} event - React's original SyntheticEvent.
     * @param {object} data - All props.
     */
    onResultSelect: _react.PropTypes.func,

    /**
     * Called on search input change.
     *
     * @param {SyntheticEvent} event - React's original SyntheticEvent.
     * @param {string} value - Current value of search input.
     */
    onSearchChange: _react.PropTypes.func,

    /**
     * Called on focus.
     *
     * @param {SyntheticEvent} event - React's original SyntheticEvent.
     * @param {object} data - All props.
     */
    onFocus: _react.PropTypes.func,

    /**
     * Called on mousedown.
     *
     * @param {SyntheticEvent} event - React's original SyntheticEvent.
     * @param {object} data - All props.
     */
    onMouseDown: _react.PropTypes.func,

    // ------------------------------------
    // Style
    // ------------------------------------

    /** A search can have its results aligned to its left or right container edge. */
    aligned: _react.PropTypes.string,

    /** A search can display results from remote content ordered by categories. */
    category: _react.PropTypes.bool,

    /** Additional classes. */
    className: _react.PropTypes.string,

    /** A search can have its results take up the width of its container. */
    fluid: _react.PropTypes.bool,

    /** A search input can take up the width of its container. */
    input: _lib.customPropTypes.itemShorthand,

    size: _react.PropTypes.oneOf(_meta.props.size),

    loading: _react.PropTypes.bool
  };
  Search.defaultProps = {
    icon: 'search',
    minCharacters: 1,
    noResultsMessage: 'No results found.',
    showNoResults: true,
    input: 'text'
  };
  Search.autoControlledProps = ['open', 'value'];
  Search._meta = _meta;
  Search.Result = _SearchResult2.default;
  Search.Results = _SearchResults2.default;
  Search.Category = _SearchCategory2.default;
  exports.default = Search;

/***/ },
/* 1105 */
/***/ function(module, exports, __webpack_require__) {

  var baseRest = __webpack_require__(702),
      createWrap = __webpack_require__(819),
      getHolder = __webpack_require__(846),
      replaceHolders = __webpack_require__(848);

  /** Used to compose bitmasks for function metadata. */
  var WRAP_PARTIAL_RIGHT_FLAG = 64;

  /**
   * This method is like `_.partial` except that partially applied arguments
   * are appended to the arguments it receives.
   *
   * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic
   * builds, may be used as a placeholder for partially applied arguments.
   *
   * **Note:** This method doesn't set the "length" property of partially
   * applied functions.
   *
   * @static
   * @memberOf _
   * @since 1.0.0
   * @category Function
   * @param {Function} func The function to partially apply arguments to.
   * @param {...*} [partials] The arguments to be partially applied.
   * @returns {Function} Returns the new partially applied function.
   * @example
   *
   * function greet(greeting, name) {
   *   return greeting + ' ' + name;
   * }
   *
   * var greetFred = _.partialRight(greet, 'fred');
   * greetFred('hi');
   * // => 'hi fred'
   *
   * // Partially applied with placeholders.
   * var sayHelloTo = _.partialRight(greet, 'hello', _);
   * sayHelloTo('fred');
   * // => 'hello fred'
   */
  var partialRight = baseRest(function(func, partials) {
    var holders = replaceHolders(partials, getHolder(partialRight));
    return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);
  });

  // Assign default placeholders.
  partialRight.placeholder = {};

  module.exports = partialRight;


/***/ },
/* 1106 */
/***/ function(module, exports, __webpack_require__) {

  var baseInRange = __webpack_require__(1107),
      toFinite = __webpack_require__(717),
      toNumber = __webpack_require__(718);

  /**
   * Checks if `n` is between `start` and up to, but not including, `end`. If
   * `end` is not specified, it's set to `start` with `start` then set to `0`.
   * If `start` is greater than `end` the params are swapped to support
   * negative ranges.
   *
   * @static
   * @memberOf _
   * @since 3.3.0
   * @category Number
   * @param {number} number The number to check.
   * @param {number} [start=0] The start of the range.
   * @param {number} end The end of the range.
   * @returns {boolean} Returns `true` if `number` is in the range, else `false`.
   * @see _.range, _.rangeRight
   * @example
   *
   * _.inRange(3, 2, 4);
   * // => true
   *
   * _.inRange(4, 8);
   * // => true
   *
   * _.inRange(4, 2);
   * // => false
   *
   * _.inRange(2, 2);
   * // => false
   *
   * _.inRange(1.2, 2);
   * // => true
   *
   * _.inRange(5.2, 4);
   * // => false
   *
   * _.inRange(-3, -2, -6);
   * // => true
   */
  function inRange(number, start, end) {
    start = toFinite(start);
    if (end === undefined) {
      end = start;
      start = 0;
    } else {
      end = toFinite(end);
    }
    number = toNumber(number);
    return baseInRange(number, start, end);
  }

  module.exports = inRange;


/***/ },
/* 1107 */
/***/ function(module, exports) {

  /* Built-in method references for those with the same name as other `lodash` methods. */
  var nativeMax = Math.max,
      nativeMin = Math.min;

  /**
   * The base implementation of `_.inRange` which doesn't coerce arguments.
   *
   * @private
   * @param {number} number The number to check.
   * @param {number} start The start of the range.
   * @param {number} end The end of the range.
   * @returns {boolean} Returns `true` if `number` is in the range, else `false`.
   */
  function baseInRange(number, start, end) {
    return number >= nativeMin(start, end) && number < nativeMax(start, end);
  }

  module.exports = baseInRange;


/***/ },
/* 1108 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _classnames = __webpack_require__(794);

  var _classnames2 = _interopRequireDefault(_classnames);

  var _lib = __webpack_require__(684);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  var defaultRenderer = function defaultRenderer(_ref) {
    var name = _ref.name;
    return name;
  };

  function SearchCategory(props) {
    var active = props.active,
        children = props.children,
        className = props.className,
        renderer = props.renderer;

    var classes = (0, _classnames2.default)((0, _lib.useKeyOnly)(active, 'active'), 'category', className);
    var rest = (0, _lib.getUnhandledProps)(SearchCategory, props);
    var ElementType = (0, _lib.getElementType)(SearchCategory, props);

    return _react2.default.createElement(
      ElementType,
      _extends({}, rest, { className: classes }),
      _react2.default.createElement(
        'div',
        { className: 'name' },
        renderer ? renderer(props) : defaultRenderer(props)
      ),
      children
    );
  }

  SearchCategory._meta = {
    name: 'SearchCategory',
    parent: 'Search',
    type: _lib.META.TYPES.MODULE
  };

  SearchCategory.propTypes = {
    /** An element type to render as (string or function). */
    as: _lib.customPropTypes.as,

    /** The item currently selected by keyboard shortcut. */
    active: _react.PropTypes.bool,

    /** Primary content. */
    children: _react.PropTypes.node,

    /** Additional classes. */
    className: _react.PropTypes.string,

    /** Display name. */
    name: _react.PropTypes.string,

    /**
     * A function that returns the category contents.
     * Receives all SearchCategory props.
     */
    renderer: _react.PropTypes.func,

    /** Array of Search.Result props */
    results: _react.PropTypes.array
  };

  exports.default = SearchCategory;

/***/ },
/* 1109 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _classnames = __webpack_require__(794);

  var _classnames2 = _interopRequireDefault(_classnames);

  var _lib = __webpack_require__(684);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

  function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

  // Note: You technically only need the 'content' wrapper when there's an
  // image. However, optionally wrapping it makes this function a lot more
  // complicated and harder to read. Since always wrapping it doesn't affect
  // the style in any way let's just do that.
  //
  // Note: To avoid requiring a wrapping div, we return an array here so to
  // prevent rendering issues each node needs a unique key.
  var defaultRenderer = function defaultRenderer(_ref) {
    var image = _ref.image,
        price = _ref.price,
        title = _ref.title,
        description = _ref.description;
    return [image && _react2.default.createElement(
      'div',
      { key: 'image', className: 'image' },
      (0, _lib.createHTMLImage)(image)
    ), _react2.default.createElement(
      'div',
      { key: 'content', className: 'content' },
      price && _react2.default.createElement(
        'div',
        { className: 'price' },
        price
      ),
      title && _react2.default.createElement(
        'div',
        { className: 'title' },
        title
      ),
      description && _react2.default.createElement(
        'div',
        { className: 'description' },
        description
      )
    )];
  };

  var SearchResult = function (_Component) {
    _inherits(SearchResult, _Component);

    function SearchResult() {
      var _ref2;

      var _temp, _this, _ret;

      _classCallCheck(this, SearchResult);

      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref2 = SearchResult.__proto__ || Object.getPrototypeOf(SearchResult)).call.apply(_ref2, [this].concat(args))), _this), _this.handleClick = function (e) {
        var onClick = _this.props.onClick;


        if (onClick) onClick(e, _this.props);
      }, _temp), _possibleConstructorReturn(_this, _ret);
    }

    _createClass(SearchResult, [{
      key: 'render',
      value: function render() {
        var _props = this.props,
            active = _props.active,
            className = _props.className,
            renderer = _props.renderer;


        var classes = (0, _classnames2.default)((0, _lib.useKeyOnly)(active, 'active'), 'result', className);
        var rest = (0, _lib.getUnhandledProps)(SearchResult, this.props);
        var ElementType = (0, _lib.getElementType)(SearchResult, this.props);

        // Note: You technically only need the 'content' wrapper when there's an
        // image. However, optionally wrapping it makes this function a lot more
        // complicated and harder to read. Since always wrapping it doesn't affect
        // the style in any way let's just do that.
        return _react2.default.createElement(
          ElementType,
          _extends({}, rest, { className: classes, onClick: this.handleClick }),
          renderer ? renderer(this.props) : defaultRenderer(this.props)
        );
      }
    }]);

    return SearchResult;
  }(_react.Component);

  SearchResult.propTypes = {
    /** An element type to render as (string or function). */
    as: _lib.customPropTypes.as,

    /** The item currently selected by keyboard shortcut. */
    active: _react.PropTypes.bool,

    /** Additional classes. */
    className: _react.PropTypes.string,

    /** Additional text with less emphasis. */
    description: _react.PropTypes.string,

    /** A unique identifier. */
    id: _react.PropTypes.number,

    /** Add an image to the item. */
    image: _react.PropTypes.string,

    /**
     * Called on click.
     *
     * @param {SyntheticEvent} event - React's original SyntheticEvent.
     * @param {object} data - All props.
     */
    onClick: _react.PropTypes.func,

    /** Customized text for price. */
    price: _react.PropTypes.string,

    /**
     * A function that returns the result contents.
     * Receives all SearchResult props.
     */
    renderer: _react.PropTypes.func,

    /** Display title. */
    title: _react.PropTypes.string
  };
  SearchResult._meta = {
    name: 'SearchResult',
    parent: 'Search',
    type: _lib.META.TYPES.MODULE
  };
  exports.default = SearchResult;

/***/ },
/* 1110 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _classnames = __webpack_require__(794);

  var _classnames2 = _interopRequireDefault(_classnames);

  var _lib = __webpack_require__(684);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function SearchResults(props) {
    var children = props.children,
        className = props.className;

    var classes = (0, _classnames2.default)('results transition', className);
    var rest = (0, _lib.getUnhandledProps)(SearchResults, props);
    var ElementType = (0, _lib.getElementType)(SearchResults, props);

    return _react2.default.createElement(
      ElementType,
      _extends({}, rest, { className: classes }),
      children
    );
  }

  SearchResults._meta = {
    name: 'SearchResults',
    parent: 'Search',
    type: _lib.META.TYPES.MODULE
  };

  SearchResults.propTypes = {
    /** An element type to render as (string or function). */
    as: _lib.customPropTypes.as,

    /** Primary content. */
    children: _react.PropTypes.node,

    /** Additional classes. */
    className: _react.PropTypes.string
  };

  exports.default = SearchResults;

/***/ },
/* 1111 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _Sidebar = __webpack_require__(1112);

  var _Sidebar2 = _interopRequireDefault(_Sidebar);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  exports.default = _Sidebar2.default;

/***/ },
/* 1112 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

  var _classnames = __webpack_require__(794);

  var _classnames2 = _interopRequireDefault(_classnames);

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _lib = __webpack_require__(684);

  var _SidebarPushable = __webpack_require__(1113);

  var _SidebarPushable2 = _interopRequireDefault(_SidebarPushable);

  var _SidebarPusher = __webpack_require__(1114);

  var _SidebarPusher2 = _interopRequireDefault(_SidebarPusher);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

  function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

  var _meta = {
    name: 'Sidebar',
    type: _lib.META.TYPES.MODULE,
    props: {
      animation: ['overlay', 'push', 'scale down', 'uncover', 'slide out', 'slide along'],
      direction: ['top', 'right', 'bottom', 'left'],
      width: ['very thin', 'thin', 'wide', 'very wide']
    }
  };

  /**
   * A sidebar hides additional content beside a page.
   */

  var Sidebar = function (_Component) {
    _inherits(Sidebar, _Component);

    function Sidebar() {
      var _ref;

      var _temp, _this, _ret;

      _classCallCheck(this, Sidebar);

      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Sidebar.__proto__ || Object.getPrototypeOf(Sidebar)).call.apply(_ref, [this].concat(args))), _this), _this.state = {}, _this.startAnimating = function () {
        var duration = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 500;

        clearTimeout(_this.stopAnimatingTimer);

        _this.setState({ animating: true });

        _this.stopAnimatingTimer = setTimeout(function () {
          return _this.setState({ animating: false });
        }, duration);
      }, _temp), _possibleConstructorReturn(_this, _ret);
    }

    _createClass(Sidebar, [{
      key: 'componentWillReceiveProps',
      value: function componentWillReceiveProps(nextProps) {
        if (nextProps.visible !== this.props.visible) {
          this.startAnimating();
        }
      }
    }, {
      key: 'render',
      value: function render() {
        var animating = this.state.animating;
        var _props = this.props,
            animation = _props.animation,
            className = _props.className,
            children = _props.children,
            direction = _props.direction,
            visible = _props.visible,
            width = _props.width;


        var classes = (0, _classnames2.default)('ui', 'sidebar', (0, _lib.useKeyOnly)(animating, 'animating'), direction, width, animation, (0, _lib.useKeyOnly)(visible, 'visible'), className);

        var rest = (0, _lib.getUnhandledProps)(Sidebar, this.props);
        var ElementType = (0, _lib.getElementType)(Sidebar, this.props);

        return _react2.default.createElement(
          ElementType,
          _extends({}, rest, { className: classes }),
          children
        );
      }
    }]);

    return Sidebar;
  }(_lib.AutoControlledComponent);

  Sidebar._meta = _meta;
  Sidebar.propTypes = {
    /** An element type to render as (string or function). */
    as: _lib.customPropTypes.as,

    /** Animation style. */
    animation: _react.PropTypes.oneOf(Sidebar._meta.props.animation),

    /** Primary content. */
    children: _react.PropTypes.node,

    /** Additional classes. */
    className: _react.PropTypes.string,

    /** Initial value of visible. */
    defaultVisible: _react.PropTypes.bool,

    /** Direction the sidebar should appear on */
    direction: _react.PropTypes.oneOf(Sidebar._meta.props.direction),

    /** Controls whether or not the sidebar is visible on the page. */
    visible: _react.PropTypes.bool,

    /** Sidebar width */
    width: _react.PropTypes.oneOf(Sidebar._meta.props.width)
  };
  Sidebar.Pushable = _SidebarPushable2.default;
  Sidebar.Pusher = _SidebarPusher2.default;
  Sidebar.defaultProps = {
    direction: 'left'
  };
  Sidebar.autoControlledProps = ['visible'];
  exports.default = Sidebar;

/***/ },
/* 1113 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _classnames = __webpack_require__(794);

  var _classnames2 = _interopRequireDefault(_classnames);

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _lib = __webpack_require__(684);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  /**
   * A pushable sub-component for Sidebar.
   */
  function SidebarPushable(props) {
    var className = props.className,
        children = props.children;


    var classes = (0, _classnames2.default)('pushable', className);
    var rest = (0, _lib.getUnhandledProps)(SidebarPushable, props);
    var ElementType = (0, _lib.getElementType)(SidebarPushable, props);

    return _react2.default.createElement(
      ElementType,
      _extends({}, rest, { className: classes }),
      children
    );
  }

  SidebarPushable._meta = {
    name: 'SidebarPushable',
    type: _lib.META.TYPES.MODULE,
    parent: 'Sidebar'
  };

  SidebarPushable.propTypes = {
    /** An element type to render as (string or function). */
    as: _lib.customPropTypes.as,

    /** Primary content. */
    children: _react.PropTypes.node,

    /** Additional classes. */
    className: _react.PropTypes.string
  };

  exports.default = SidebarPushable;

/***/ },
/* 1114 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _classnames = __webpack_require__(794);

  var _classnames2 = _interopRequireDefault(_classnames);

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _lib = __webpack_require__(684);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  /**
   * A pushable sub-component for Sidebar.
   */
  function SidebarPusher(props) {
    var className = props.className,
        dimmed = props.dimmed,
        children = props.children;


    var classes = (0, _classnames2.default)('pusher', (0, _lib.useKeyOnly)(dimmed, 'dimmed'), className);
    var rest = (0, _lib.getUnhandledProps)(SidebarPusher, props);
    var ElementType = (0, _lib.getElementType)(SidebarPusher, props);

    return _react2.default.createElement(
      ElementType,
      _extends({}, rest, { className: classes }),
      children
    );
  }

  SidebarPusher._meta = {
    name: 'SidebarPusher',
    type: _lib.META.TYPES.MODULE,
    parent: 'Sidebar'
  };

  SidebarPusher.propTypes = {
    /** An element type to render as (string or function). */
    as: _lib.customPropTypes.as,

    /** Primary content. */
    children: _react.PropTypes.node,

    /** Additional classes. */
    className: _react.PropTypes.string,

    /** Controls whether or not the dim is displayed. */
    dimmed: _react.PropTypes.bool
  };

  exports.default = SidebarPusher;

/***/ },
/* 1115 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _isNil2 = __webpack_require__(927);

  var _isNil3 = _interopRequireDefault(_isNil2);

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

  var _classnames = __webpack_require__(794);

  var _classnames2 = _interopRequireDefault(_classnames);

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _lib = __webpack_require__(684);

  var _Image = __webpack_require__(990);

  var _Image2 = _interopRequireDefault(_Image);

  var _CardContent = __webpack_require__(1116);

  var _CardContent2 = _interopRequireDefault(_CardContent);

  var _CardDescription = __webpack_require__(1117);

  var _CardDescription2 = _interopRequireDefault(_CardDescription);

  var _CardGroup = __webpack_require__(1120);

  var _CardGroup2 = _interopRequireDefault(_CardGroup);

  var _CardHeader = __webpack_require__(1118);

  var _CardHeader2 = _interopRequireDefault(_CardHeader);

  var _CardMeta = __webpack_require__(1119);

  var _CardMeta2 = _interopRequireDefault(_CardMeta);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

  function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

  var _meta = {
    name: 'Card',
    type: _lib.META.TYPES.VIEW,
    props: {
      color: _lib.SUI.COLORS
    }
  };

  /**
   * A card displays site content in a manner similar to a playing card
   */

  var Card = function (_Component) {
    _inherits(Card, _Component);

    function Card() {
      var _ref;

      var _temp, _this, _ret;

      _classCallCheck(this, Card);

      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Card.__proto__ || Object.getPrototypeOf(Card)).call.apply(_ref, [this].concat(args))), _this), _this.handleClick = function (e) {
        var onClick = _this.props.onClick;


        if (onClick) onClick(e, _this.props);
      }, _temp), _possibleConstructorReturn(_this, _ret);
    }

    _createClass(Card, [{
      key: 'render',
      value: function render() {
        var _props = this.props,
            centered = _props.centered,
            children = _props.children,
            className = _props.className,
            color = _props.color,
            description = _props.description,
            extra = _props.extra,
            fluid = _props.fluid,
            header = _props.header,
            href = _props.href,
            image = _props.image,
            meta = _props.meta,
            onClick = _props.onClick,
            raised = _props.raised;


        var classes = (0, _classnames2.default)('ui', color, (0, _lib.useKeyOnly)(centered, 'centered'), (0, _lib.useKeyOnly)(fluid, 'fluid'), (0, _lib.useKeyOnly)(raised, 'raised'), 'card', className);
        var rest = (0, _lib.getUnhandledProps)(Card, this.props);
        var ElementType = (0, _lib.getElementType)(Card, this.props, function () {
          if (onClick) return 'a';
        });

        if (!(0, _isNil3.default)(children)) {
          return _react2.default.createElement(
            ElementType,
            _extends({}, rest, { className: classes, href: href, onClick: this.handleClick }),
            children
          );
        }

        return _react2.default.createElement(
          ElementType,
          _extends({}, rest, { className: classes, href: href, onClick: this.handleClick }),
          _Image2.default.create(image),
          (description || header || meta) && _react2.default.createElement(_CardContent2.default, { description: description, header: header, meta: meta }),
          extra && _react2.default.createElement(
            _CardContent2.default,
            { extra: true },
            extra
          )
        );
      }
    }]);

    return Card;
  }(_react.Component);

  Card.propTypes = {
    /** An element type to render as (string or function). */
    as: _lib.customPropTypes.as,

    /** A Card can center itself inside its container. */
    centered: _react.PropTypes.bool,

    /** Primary content. */
    children: _react.PropTypes.node,

    /** Additional classes. */
    className: _react.PropTypes.string,

    /** A Card can be formatted to display different colors. */
    color: _react.PropTypes.oneOf(_meta.props.color),

    /** Shorthand for CardDescription. */
    description: _lib.customPropTypes.itemShorthand,

    /** Shorthand for primary content of CardContent. */
    extra: _lib.customPropTypes.contentShorthand,

    /** A Card can be formatted to take up the width of its container. */
    fluid: _react.PropTypes.bool,

    /** Shorthand for CardHeader. */
    header: _lib.customPropTypes.itemShorthand,

    /** Render as an `a` tag instead of a `div` and adds the href attribute. */
    href: _react.PropTypes.string,

    /** A card can contain an Image component. */
    image: _lib.customPropTypes.itemShorthand,

    /** Shorthand for CardMeta. */
    meta: _lib.customPropTypes.itemShorthand,

    /**
     * Called on click. When passed, the component renders as an `a`
     * tag by default instead of a `div`.
     *
     * @param {SyntheticEvent} event - React's original SyntheticEvent.
     * @param {object} data - All props.
     */
    onClick: _react.PropTypes.func,

    /** A Card can be formatted to raise above the page. */
    raised: _react.PropTypes.bool
  };
  Card._meta = _meta;
  Card.Content = _CardContent2.default;
  Card.Description = _CardDescription2.default;
  Card.Group = _CardGroup2.default;
  Card.Header = _CardHeader2.default;
  Card.Meta = _CardMeta2.default;
  exports.default = Card;

/***/ },
/* 1116 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _isNil2 = __webpack_require__(927);

  var _isNil3 = _interopRequireDefault(_isNil2);

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _classnames = __webpack_require__(794);

  var _classnames2 = _interopRequireDefault(_classnames);

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _lib = __webpack_require__(684);

  var _CardDescription = __webpack_require__(1117);

  var _CardDescription2 = _interopRequireDefault(_CardDescription);

  var _CardHeader = __webpack_require__(1118);

  var _CardHeader2 = _interopRequireDefault(_CardHeader);

  var _CardMeta = __webpack_require__(1119);

  var _CardMeta2 = _interopRequireDefault(_CardMeta);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  /**
   * A card can contain blocks of content or extra content meant to be formatted separately from the main content
   */
  function CardContent(props) {
    var children = props.children,
        className = props.className,
        description = props.description,
        extra = props.extra,
        header = props.header,
        meta = props.meta;

    var classes = (0, _classnames2.default)(className, (0, _lib.useKeyOnly)(extra, 'extra'), 'content');
    var rest = (0, _lib.getUnhandledProps)(CardContent, props);
    var ElementType = (0, _lib.getElementType)(CardContent, props);

    if (!(0, _isNil3.default)(children)) {
      return _react2.default.createElement(
        ElementType,
        _extends({}, rest, { className: classes }),
        children
      );
    }

    return _react2.default.createElement(
      ElementType,
      _extends({}, rest, { className: classes }),
      (0, _lib.createShorthand)(_CardHeader2.default, function (val) {
        return { content: val };
      }, header),
      (0, _lib.createShorthand)(_CardMeta2.default, function (val) {
        return { content: val };
      }, meta),
      (0, _lib.createShorthand)(_CardDescription2.default, function (val) {
        return { content: val };
      }, description)
    );
  }

  CardContent._meta = {
    name: 'CardContent',
    parent: 'Card',
    type: _lib.META.TYPES.VIEW
  };

  CardContent.propTypes = {
    /** An element type to render as (string or function). */
    as: _lib.customPropTypes.as,

    /** Primary content. */
    children: _react.PropTypes.node,

    /** Additional classes. */
    className: _react.PropTypes.string,

    /** Shorthand for CardDescription. */
    description: _lib.customPropTypes.itemShorthand,

    /** A card can contain extra content meant to be formatted separately from the main content */
    extra: _react.PropTypes.bool,

    /** Shorthand for CardHeader. */
    header: _lib.customPropTypes.itemShorthand,

    /** Shorthand for CardMeta. */
    meta: _lib.customPropTypes.itemShorthand
  };

  exports.default = CardContent;

/***/ },
/* 1117 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _isNil2 = __webpack_require__(927);

  var _isNil3 = _interopRequireDefault(_isNil2);

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _classnames = __webpack_require__(794);

  var _classnames2 = _interopRequireDefault(_classnames);

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _lib = __webpack_require__(684);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  /**
   * A card can contain a description with one or more paragraphs
   */
  function CardDescription(props) {
    var children = props.children,
        className = props.className,
        content = props.content;

    var classes = (0, _classnames2.default)(className, 'description');
    var rest = (0, _lib.getUnhandledProps)(CardDescription, props);
    var ElementType = (0, _lib.getElementType)(CardDescription, props);

    return _react2.default.createElement(
      ElementType,
      _extends({}, rest, { className: classes }),
      (0, _isNil3.default)(children) ? content : children
    );
  }

  CardDescription._meta = {
    name: 'CardDescription',
    parent: 'Card',
    type: _lib.META.TYPES.VIEW
  };

  CardDescription.propTypes = {
    /** An element type to render as (string or function). */
    as: _lib.customPropTypes.as,

    /** Primary content. */
    children: _react.PropTypes.node,

    /** Additional classes. */
    className: _react.PropTypes.string,

    /** Shorthand for primary content. */
    content: _lib.customPropTypes.contentShorthand
  };

  exports.default = CardDescription;

/***/ },
/* 1118 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _isNil2 = __webpack_require__(927);

  var _isNil3 = _interopRequireDefault(_isNil2);

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _classnames = __webpack_require__(794);

  var _classnames2 = _interopRequireDefault(_classnames);

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _lib = __webpack_require__(684);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  /**
   * A card can contain a header
   */
  function CardHeader(props) {
    var children = props.children,
        className = props.className,
        content = props.content;

    var classes = (0, _classnames2.default)(className, 'header');
    var rest = (0, _lib.getUnhandledProps)(CardHeader, props);
    var ElementType = (0, _lib.getElementType)(CardHeader, props);

    return _react2.default.createElement(
      ElementType,
      _extends({}, rest, { className: classes }),
      (0, _isNil3.default)(children) ? content : children
    );
  }

  CardHeader._meta = {
    name: 'CardHeader',
    parent: 'Card',
    type: _lib.META.TYPES.VIEW
  };

  CardHeader.propTypes = {
    /** An element type to render as (string or function). */
    as: _lib.customPropTypes.as,

    /** Primary content. */
    children: _react.PropTypes.node,

    /** Additional classes. */
    className: _react.PropTypes.string,

    /** Shorthand for primary content. */
    content: _lib.customPropTypes.contentShorthand
  };

  exports.default = CardHeader;

/***/ },
/* 1119 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _isNil2 = __webpack_require__(927);

  var _isNil3 = _interopRequireDefault(_isNil2);

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _classnames = __webpack_require__(794);

  var _classnames2 = _interopRequireDefault(_classnames);

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _lib = __webpack_require__(684);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  /**
   * A card can contain content metadata
   */
  function CardMeta(props) {
    var children = props.children,
        className = props.className,
        content = props.content;

    var classes = (0, _classnames2.default)(className, 'meta');
    var rest = (0, _lib.getUnhandledProps)(CardMeta, props);
    var ElementType = (0, _lib.getElementType)(CardMeta, props);

    return _react2.default.createElement(
      ElementType,
      _extends({}, rest, { className: classes }),
      (0, _isNil3.default)(children) ? content : children
    );
  }

  CardMeta._meta = {
    name: 'CardMeta',
    parent: 'Card',
    type: _lib.META.TYPES.VIEW
  };

  CardMeta.propTypes = {
    /** An element type to render as (string or function). */
    as: _lib.customPropTypes.as,

    /** Primary content. */
    children: _react.PropTypes.node,

    /** Additional classes. */
    className: _react.PropTypes.string,

    /** Shorthand for primary content. */
    content: _lib.customPropTypes.contentShorthand
  };

  exports.default = CardMeta;

/***/ },
/* 1120 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _map2 = __webpack_require__(918);

  var _map3 = _interopRequireDefault(_map2);

  var _isNil2 = __webpack_require__(927);

  var _isNil3 = _interopRequireDefault(_isNil2);

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _classnames = __webpack_require__(794);

  var _classnames2 = _interopRequireDefault(_classnames);

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _lib = __webpack_require__(684);

  var _Card = __webpack_require__(1115);

  var _Card2 = _interopRequireDefault(_Card);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  /**
   * A group of cards.
   */
  function CardGroup(props) {
    var children = props.children,
        className = props.className,
        doubling = props.doubling,
        items = props.items,
        itemsPerRow = props.itemsPerRow,
        stackable = props.stackable;

    var classes = (0, _classnames2.default)('ui', (0, _lib.useWidthProp)(itemsPerRow), (0, _lib.useKeyOnly)(doubling, 'doubling'), (0, _lib.useKeyOnly)(stackable, 'stackable'), className, 'cards');
    var rest = (0, _lib.getUnhandledProps)(CardGroup, props);
    var ElementType = (0, _lib.getElementType)(CardGroup, props);

    if (!(0, _isNil3.default)(children)) {
      return _react2.default.createElement(
        ElementType,
        _extends({}, rest, { className: classes }),
        children
      );
    }

    var content = (0, _map3.default)(items, function (item) {
      var key = item.key || [item.header, item.description].join('-');
      return _react2.default.createElement(_Card2.default, _extends({ key: key }, item));
    });

    return _react2.default.createElement(
      ElementType,
      _extends({}, rest, { className: classes }),
      content
    );
  }

  CardGroup._meta = {
    name: 'CardGroup',
    parent: 'Card',
    props: {
      itemsPerRow: _lib.SUI.WIDTHS
    },
    type: _lib.META.TYPES.VIEW
  };

  CardGroup.propTypes = {
    /** An element type to render as (string or function). */
    as: _lib.customPropTypes.as,

    /** Primary content. */
    children: _react.PropTypes.node,

    /** Additional classes. */
    className: _react.PropTypes.string,

    /** A group of cards can double its column width for mobile */
    doubling: _react.PropTypes.bool,

    /** Shorthand array of props for Card. */
    items: _lib.customPropTypes.collectionShorthand,

    /** A group of cards can set how many cards should exist in a row */
    itemsPerRow: _react.PropTypes.oneOf(CardGroup._meta.props.itemsPerRow),

    /** A group of cards can automatically stack rows to a single columns on mobile devices */
    stackable: _react.PropTypes.bool
  };

  exports.default = CardGroup;

/***/ },
/* 1121 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _Comment = __webpack_require__(1122);

  var _Comment2 = _interopRequireDefault(_Comment);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  exports.default = _Comment2.default;

/***/ },
/* 1122 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _classnames = __webpack_require__(794);

  var _classnames2 = _interopRequireDefault(_classnames);

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _lib = __webpack_require__(684);

  var _CommentAction = __webpack_require__(1123);

  var _CommentAction2 = _interopRequireDefault(_CommentAction);

  var _CommentActions = __webpack_require__(1124);

  var _CommentActions2 = _interopRequireDefault(_CommentActions);

  var _CommentAuthor = __webpack_require__(1125);

  var _CommentAuthor2 = _interopRequireDefault(_CommentAuthor);

  var _CommentAvatar = __webpack_require__(1126);

  var _CommentAvatar2 = _interopRequireDefault(_CommentAvatar);

  var _CommentContent = __webpack_require__(1127);

  var _CommentContent2 = _interopRequireDefault(_CommentContent);

  var _CommentGroup = __webpack_require__(1128);

  var _CommentGroup2 = _interopRequireDefault(_CommentGroup);

  var _CommentMetadata = __webpack_require__(1129);

  var _CommentMetadata2 = _interopRequireDefault(_CommentMetadata);

  var _CommentText = __webpack_require__(1130);

  var _CommentText2 = _interopRequireDefault(_CommentText);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  /**
   * A comment displays user feedback to site content
   * */
  function Comment(props) {
    var className = props.className,
        children = props.children,
        collapsed = props.collapsed;


    var classes = (0, _classnames2.default)((0, _lib.useKeyOnly)(collapsed, 'collapsed'), 'comment', className);
    var rest = (0, _lib.getUnhandledProps)(Comment, props);
    var ElementType = (0, _lib.getElementType)(Comment, props);

    return _react2.default.createElement(
      ElementType,
      _extends({}, rest, { className: classes }),
      children
    );
  }

  Comment._meta = {
    name: 'Comment',
    type: _lib.META.TYPES.VIEW
  };

  Comment.propTypes = {
    /** An element type to render as (string or function). */
    as: _lib.customPropTypes.as,

    /** Primary content. */
    children: _react.PropTypes.node,

    /** Additional classes. */
    className: _react.PropTypes.string,

    /** Comment can be collapsed, or hidden from view. */
    collapsed: _react.PropTypes.bool
  };

  Comment.Author = _CommentAuthor2.default;
  Comment.Action = _CommentAction2.default;
  Comment.Actions = _CommentActions2.default;
  Comment.Avatar = _CommentAvatar2.default;
  Comment.Content = _CommentContent2.default;
  Comment.Group = _CommentGroup2.default;
  Comment.Metadata = _CommentMetadata2.default;
  Comment.Text = _CommentText2.default;

  exports.default = Comment;

/***/ },
/* 1123 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _classnames = __webpack_require__(794);

  var _classnames2 = _interopRequireDefault(_classnames);

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _lib = __webpack_require__(684);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function CommentAction(props) {
    var active = props.active,
        className = props.className,
        children = props.children;


    var classes = (0, _classnames2.default)((0, _lib.useKeyOnly)(active, 'active'), className);
    var rest = (0, _lib.getUnhandledProps)(CommentAction, props);
    var ElementType = (0, _lib.getElementType)(CommentAction, props);

    return _react2.default.createElement(
      ElementType,
      _extends({}, rest, { className: classes }),
      children
    );
  }

  CommentAction._meta = {
    name: 'CommentAction',
    parent: 'Comment',
    type: _lib.META.TYPES.VIEW
  };

  CommentAction.defaultProps = {
    as: 'a'
  };

  CommentAction.propTypes = {
    /** An element type to render as (string or function). */
    as: _lib.customPropTypes.as,

    /** Style as the currently active action. */
    active: _react.PropTypes.bool,

    /** Primary content. */
    children: _react.PropTypes.node,

    /** Additional classes. */
    className: _react.PropTypes.string
  };

  exports.default = CommentAction;

/***/ },
/* 1124 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _classnames = __webpack_require__(794);

  var _classnames2 = _interopRequireDefault(_classnames);

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _lib = __webpack_require__(684);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function CommentActions(props) {
    var className = props.className,
        children = props.children;

    var classes = (0, _classnames2.default)('actions', className);
    var rest = (0, _lib.getUnhandledProps)(CommentActions, props);
    var ElementType = (0, _lib.getElementType)(CommentActions, props);

    return _react2.default.createElement(
      ElementType,
      _extends({}, rest, { className: classes }),
      children
    );
  }

  CommentActions._meta = {
    name: 'CommentActions',
    parent: 'Comment',
    type: _lib.META.TYPES.VIEW
  };

  CommentActions.propTypes = {
    /** An element type to render as (string or function). */
    as: _lib.customPropTypes.as,

    /** Primary content. */
    children: _react.PropTypes.node,

    /** Additional classes. */
    className: _react.PropTypes.string
  };

  exports.default = CommentActions;

/***/ },
/* 1125 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _classnames = __webpack_require__(794);

  var _classnames2 = _interopRequireDefault(_classnames);

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _lib = __webpack_require__(684);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function CommentAuthor(props) {
    var className = props.className,
        children = props.children;

    var classes = (0, _classnames2.default)('author', className);
    var rest = (0, _lib.getUnhandledProps)(CommentAuthor, props);
    var ElementType = (0, _lib.getElementType)(CommentAuthor, props);

    return _react2.default.createElement(
      ElementType,
      _extends({}, rest, { className: classes }),
      children
    );
  }

  CommentAuthor._meta = {
    name: 'CommentAuthor',
    parent: 'Comment',
    type: _lib.META.TYPES.VIEW
  };

  CommentAuthor.propTypes = {
    /** An element type to render as (string or function). */
    as: _lib.customPropTypes.as,

    /** Primary content. */
    children: _react.PropTypes.node,

    /** Additional classes. */
    className: _react.PropTypes.string
  };

  exports.default = CommentAuthor;

/***/ },
/* 1126 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _classnames = __webpack_require__(794);

  var _classnames2 = _interopRequireDefault(_classnames);

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _lib = __webpack_require__(684);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function CommentAvatar(props) {
    var className = props.className,
        src = props.src;

    var classes = (0, _classnames2.default)('avatar', className);
    var rest = (0, _lib.getUnhandledProps)(CommentAvatar, props);
    var ElementType = (0, _lib.getElementType)(CommentAvatar, props);

    return _react2.default.createElement(
      ElementType,
      _extends({}, rest, { className: classes }),
      (0, _lib.createHTMLImage)(src)
    );
  }

  CommentAvatar._meta = {
    name: 'CommentAvatar',
    parent: 'Comment',
    type: _lib.META.TYPES.VIEW
  };

  CommentAvatar.propTypes = {
    /** An element type to render as (string or function). */
    as: _lib.customPropTypes.as,

    /** Additional classes. */
    className: _react.PropTypes.string,

    /** Specifies the URL of the image. */
    src: _react.PropTypes.string
  };

  exports.default = CommentAvatar;

/***/ },
/* 1127 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _classnames = __webpack_require__(794);

  var _classnames2 = _interopRequireDefault(_classnames);

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _lib = __webpack_require__(684);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function CommentContent(props) {
    var className = props.className,
        children = props.children;

    var classes = (0, _classnames2.default)('content', className);
    var rest = (0, _lib.getUnhandledProps)(CommentContent, props);
    var ElementType = (0, _lib.getElementType)(CommentContent, props);

    return _react2.default.createElement(
      ElementType,
      _extends({}, rest, { className: classes }),
      children
    );
  }

  CommentContent._meta = {
    name: 'CommentContent',
    parent: 'Comment',
    type: _lib.META.TYPES.VIEW
  };

  CommentContent.propTypes = {
    /** An element type to render as (string or function). */
    as: _lib.customPropTypes.as,

    /** Primary content. */
    children: _react.PropTypes.node,

    /** Additional classes. */
    className: _react.PropTypes.string
  };

  exports.default = CommentContent;

/***/ },
/* 1128 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _classnames = __webpack_require__(794);

  var _classnames2 = _interopRequireDefault(_classnames);

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _lib = __webpack_require__(684);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function CommentGroup(props) {
    var className = props.className,
        children = props.children,
        collapsed = props.collapsed,
        minimal = props.minimal,
        threaded = props.threaded;


    var classes = (0, _classnames2.default)('ui', (0, _lib.useKeyOnly)(collapsed, 'collapsed'), (0, _lib.useKeyOnly)(minimal, 'minimal'), (0, _lib.useKeyOnly)(threaded, 'threaded'), 'comments', className);
    var rest = (0, _lib.getUnhandledProps)(CommentGroup, props);
    var ElementType = (0, _lib.getElementType)(CommentGroup, props);

    return _react2.default.createElement(
      ElementType,
      _extends({}, rest, { className: classes }),
      children
    );
  }

  CommentGroup._meta = {
    name: 'CommentGroup',
    parent: 'Comment',
    type: _lib.META.TYPES.VIEW
  };

  CommentGroup.propTypes = {
    /** An element type to render as (string or function). */
    as: _lib.customPropTypes.as,

    /** Primary content. */
    children: _react.PropTypes.node,

    /** Additional classes. */
    className: _react.PropTypes.string,

    /** Comments can be collapsed, or hidden from view. */
    collapsed: _react.PropTypes.bool,

    /** Comments can hide extra information unless a user shows intent to interact with a comment */
    minimal: _react.PropTypes.bool,

    /** A comment list can be threaded to showing the relationship between conversations */
    threaded: _react.PropTypes.bool
  };

  exports.default = CommentGroup;

/***/ },
/* 1129 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _classnames = __webpack_require__(794);

  var _classnames2 = _interopRequireDefault(_classnames);

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _lib = __webpack_require__(684);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function CommentMetadata(props) {
    var className = props.className,
        children = props.children;

    var classes = (0, _classnames2.default)('metadata', className);
    var rest = (0, _lib.getUnhandledProps)(CommentMetadata, props);
    var ElementType = (0, _lib.getElementType)(CommentMetadata, props);

    return _react2.default.createElement(
      ElementType,
      _extends({}, rest, { className: classes }),
      children
    );
  }

  CommentMetadata._meta = {
    name: 'CommentMetadata',
    parent: 'Comment',
    type: _lib.META.TYPES.VIEW
  };

  CommentMetadata.propTypes = {
    /** An element type to render as (string or function). */
    as: _lib.customPropTypes.as,

    /** Primary content. */
    children: _react.PropTypes.node,

    /** Additional classes. */
    className: _react.PropTypes.string
  };

  exports.default = CommentMetadata;

/***/ },
/* 1130 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _classnames = __webpack_require__(794);

  var _classnames2 = _interopRequireDefault(_classnames);

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _lib = __webpack_require__(684);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function CommentText(props) {
    var className = props.className,
        children = props.children;

    var classes = (0, _classnames2.default)('text', className);
    var rest = (0, _lib.getUnhandledProps)(CommentText, props);
    var ElementType = (0, _lib.getElementType)(CommentText, props);

    return _react2.default.createElement(
      ElementType,
      _extends({}, rest, { className: classes }),
      children
    );
  }

  CommentText._meta = {
    name: 'CommentText',
    parent: 'Comment',
    type: _lib.META.TYPES.VIEW
  };

  CommentText.propTypes = {
    /** An element type to render as (string or function). */
    as: _lib.customPropTypes.as,

    /** Primary content. */
    children: _react.PropTypes.node,

    /** Additional classes. */
    className: _react.PropTypes.string
  };

  exports.default = CommentText;

/***/ },
/* 1131 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _Feed = __webpack_require__(1132);

  var _Feed2 = _interopRequireDefault(_Feed);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  exports.default = _Feed2.default;

/***/ },
/* 1132 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _without2 = __webpack_require__(939);

  var _without3 = _interopRequireDefault(_without2);

  var _map2 = __webpack_require__(918);

  var _map3 = _interopRequireDefault(_map2);

  var _isNil2 = __webpack_require__(927);

  var _isNil3 = _interopRequireDefault(_isNil2);

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _classnames = __webpack_require__(794);

  var _classnames2 = _interopRequireDefault(_classnames);

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _lib = __webpack_require__(684);

  var _FeedContent = __webpack_require__(1133);

  var _FeedContent2 = _interopRequireDefault(_FeedContent);

  var _FeedDate = __webpack_require__(1134);

  var _FeedDate2 = _interopRequireDefault(_FeedDate);

  var _FeedEvent = __webpack_require__(1140);

  var _FeedEvent2 = _interopRequireDefault(_FeedEvent);

  var _FeedExtra = __webpack_require__(1135);

  var _FeedExtra2 = _interopRequireDefault(_FeedExtra);

  var _FeedLabel = __webpack_require__(1141);

  var _FeedLabel2 = _interopRequireDefault(_FeedLabel);

  var _FeedLike = __webpack_require__(1137);

  var _FeedLike2 = _interopRequireDefault(_FeedLike);

  var _FeedMeta = __webpack_require__(1136);

  var _FeedMeta2 = _interopRequireDefault(_FeedMeta);

  var _FeedSummary = __webpack_require__(1138);

  var _FeedSummary2 = _interopRequireDefault(_FeedSummary);

  var _FeedUser = __webpack_require__(1139);

  var _FeedUser2 = _interopRequireDefault(_FeedUser);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

  function Feed(props) {
    var children = props.children,
        className = props.className,
        events = props.events,
        size = props.size;

    var classes = (0, _classnames2.default)('ui', className, size, 'feed');
    var rest = (0, _lib.getUnhandledProps)(Feed, props);
    var ElementType = (0, _lib.getElementType)(Feed, props);

    if (!(0, _isNil3.default)(children)) {
      return _react2.default.createElement(
        ElementType,
        _extends({}, rest, { className: classes }),
        children
      );
    }

    var eventElements = (0, _map3.default)(events, function (eventProps) {
      var childKey = eventProps.childKey,
          date = eventProps.date,
          meta = eventProps.meta,
          summary = eventProps.summary,
          eventData = _objectWithoutProperties(eventProps, ['childKey', 'date', 'meta', 'summary']);

      var finalKey = childKey || [date, meta, summary].join('-');

      return _react2.default.createElement(_FeedEvent2.default, _extends({
        date: date,
        key: finalKey,
        meta: meta,
        summary: summary
      }, eventData));
    });

    return _react2.default.createElement(
      ElementType,
      _extends({}, rest, { className: classes }),
      eventElements
    );
  }

  Feed._meta = {
    name: 'Feed',
    type: _lib.META.TYPES.VIEW,
    props: {
      size: (0, _without3.default)(_lib.SUI.SIZES, 'mini', 'tiny', 'medium', 'big', 'huge', 'massive')
    }
  };

  Feed.propTypes = {
    /** An element type to render as (string or function). */
    as: _lib.customPropTypes.as,

    /** Primary content. */
    children: _react.PropTypes.node,

    /** Additional classes. */
    className: _react.PropTypes.string,

    /** Shorthand array of props for FeedEvent. */
    events: _lib.customPropTypes.collectionShorthand,

    /** A feed can have different sizes. */
    size: _react.PropTypes.oneOf(Feed._meta.props.size)
  };

  Feed.Content = _FeedContent2.default;
  Feed.Date = _FeedDate2.default;
  Feed.Event = _FeedEvent2.default;
  Feed.Extra = _FeedExtra2.default;
  Feed.Label = _FeedLabel2.default;
  Feed.Like = _FeedLike2.default;
  Feed.Meta = _FeedMeta2.default;
  Feed.Summary = _FeedSummary2.default;
  Feed.User = _FeedUser2.default;

  exports.default = Feed;

/***/ },
/* 1133 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _isNil2 = __webpack_require__(927);

  var _isNil3 = _interopRequireDefault(_isNil2);

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _classnames = __webpack_require__(794);

  var _classnames2 = _interopRequireDefault(_classnames);

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _lib = __webpack_require__(684);

  var _FeedDate = __webpack_require__(1134);

  var _FeedDate2 = _interopRequireDefault(_FeedDate);

  var _FeedExtra = __webpack_require__(1135);

  var _FeedExtra2 = _interopRequireDefault(_FeedExtra);

  var _FeedMeta = __webpack_require__(1136);

  var _FeedMeta2 = _interopRequireDefault(_FeedMeta);

  var _FeedSummary = __webpack_require__(1138);

  var _FeedSummary2 = _interopRequireDefault(_FeedSummary);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function FeedContent(props) {
    var children = props.children,
        className = props.className,
        content = props.content,
        extraImages = props.extraImages,
        extraText = props.extraText,
        date = props.date,
        meta = props.meta,
        summary = props.summary;

    var classes = (0, _classnames2.default)(className, 'content');
    var rest = (0, _lib.getUnhandledProps)(FeedContent, props);
    var ElementType = (0, _lib.getElementType)(FeedContent, props);

    if (!(0, _isNil3.default)(children)) {
      return _react2.default.createElement(
        ElementType,
        _extends({}, rest, { className: classes }),
        children
      );
    }

    return _react2.default.createElement(
      ElementType,
      _extends({}, rest, { className: classes }),
      (0, _lib.createShorthand)(_FeedDate2.default, function (val) {
        return { content: val };
      }, date),
      (0, _lib.createShorthand)(_FeedSummary2.default, function (val) {
        return { content: val };
      }, summary),
      content,
      (0, _lib.createShorthand)(_FeedExtra2.default, function (val) {
        return { text: true, content: val };
      }, extraText),
      (0, _lib.createShorthand)(_FeedExtra2.default, function (val) {
        return { images: val };
      }, extraImages),
      (0, _lib.createShorthand)(_FeedMeta2.default, function (val) {
        return { content: val };
      }, meta)
    );
  }

  FeedContent._meta = {
    name: 'FeedContent',
    parent: 'Feed',
    type: _lib.META.TYPES.VIEW
  };

  FeedContent.propTypes = {
    /** An element type to render as (string or function). */
    as: _lib.customPropTypes.as,

    /** Primary content. */
    children: _react.PropTypes.node,

    /** Additional classes. */
    className: _react.PropTypes.string,

    /** Shorthand for primary content. */
    content: _lib.customPropTypes.contentShorthand,

    /** An event can contain a date. */
    date: _lib.customPropTypes.itemShorthand,

    /** Shorthand for FeedExtra with images. */
    extraImages: _FeedExtra2.default.propTypes.images,

    /** Shorthand for FeedExtra with text. */
    extraText: _lib.customPropTypes.itemShorthand,

    /** Shorthand for FeedMeta. */
    meta: _lib.customPropTypes.itemShorthand,

    /** Shorthand for FeedSummary. */
    summary: _lib.customPropTypes.itemShorthand
  };

  exports.default = FeedContent;

/***/ },
/* 1134 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _isNil2 = __webpack_require__(927);

  var _isNil3 = _interopRequireDefault(_isNil2);

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _classnames = __webpack_require__(794);

  var _classnames2 = _interopRequireDefault(_classnames);

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _lib = __webpack_require__(684);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  /**
   * Show a feed date
   */
  function FeedDate(props) {
    var children = props.children,
        className = props.className,
        content = props.content;

    var classes = (0, _classnames2.default)(className, 'date');
    var rest = (0, _lib.getUnhandledProps)(FeedDate, props);
    var ElementType = (0, _lib.getElementType)(FeedDate, props);

    return _react2.default.createElement(
      ElementType,
      _extends({}, rest, { className: classes }),
      (0, _isNil3.default)(children) ? content : children
    );
  }

  FeedDate._meta = {
    name: 'FeedDate',
    parent: 'Feed',
    type: _lib.META.TYPES.VIEW
  };

  FeedDate.propTypes = {
    /** An element type to render as (string or function). */
    as: _lib.customPropTypes.as,

    /** Primary content. */
    children: _react.PropTypes.node,

    /** Additional classes. */
    className: _react.PropTypes.string,

    /** Shorthand for primary content. */
    content: _lib.customPropTypes.contentShorthand
  };

  exports.default = FeedDate;

/***/ },
/* 1135 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _map2 = __webpack_require__(918);

  var _map3 = _interopRequireDefault(_map2);

  var _isNil2 = __webpack_require__(927);

  var _isNil3 = _interopRequireDefault(_isNil2);

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _classnames = __webpack_require__(794);

  var _classnames2 = _interopRequireDefault(_classnames);

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _lib = __webpack_require__(684);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function FeedExtra(props) {
    var children = props.children,
        className = props.className,
        content = props.content,
        images = props.images,
        text = props.text;

    var classes = (0, _classnames2.default)(className, (0, _lib.useKeyOnly)(images, 'images'), (0, _lib.useKeyOnly)(content || text, 'text'), 'extra');
    var rest = (0, _lib.getUnhandledProps)(FeedExtra, props);
    var ElementType = (0, _lib.getElementType)(FeedExtra, props);

    if (!(0, _isNil3.default)(children)) {
      return _react2.default.createElement(
        ElementType,
        _extends({}, rest, { className: classes }),
        children
      );
    }

    // TODO need a "collection factory" to handle creating multiple image elements and their keys
    var imageElements = (0, _map3.default)(images, function (image, index) {
      var key = [index, image].join('-');
      return (0, _lib.createHTMLImage)(image, { key: key });
    });

    return _react2.default.createElement(
      ElementType,
      _extends({}, rest, { className: classes }),
      content,
      imageElements
    );
  }

  FeedExtra._meta = {
    name: 'FeedExtra',
    parent: 'Feed',
    type: _lib.META.TYPES.VIEW
  };

  FeedExtra.propTypes = {
    /** An element type to render as (string or function). */
    as: _lib.customPropTypes.as,

    /** Primary content. */
    children: _react.PropTypes.node,

    /** Additional classes. */
    className: _react.PropTypes.string,

    /** Shorthand for primary content. */
    content: _lib.customPropTypes.contentShorthand,

    /** An event can contain additional information like a set of images. */
    images: _lib.customPropTypes.every([_lib.customPropTypes.disallow(['text']), _react.PropTypes.oneOfType([_react.PropTypes.bool, _lib.customPropTypes.collectionShorthand])]),

    /** An event can contain additional text information. */
    text: _react.PropTypes.bool
  };

  exports.default = FeedExtra;

/***/ },
/* 1136 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _isNil2 = __webpack_require__(927);

  var _isNil3 = _interopRequireDefault(_isNil2);

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _classnames = __webpack_require__(794);

  var _classnames2 = _interopRequireDefault(_classnames);

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _lib = __webpack_require__(684);

  var _FeedLike = __webpack_require__(1137);

  var _FeedLike2 = _interopRequireDefault(_FeedLike);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function FeedMeta(props) {
    var children = props.children,
        className = props.className,
        content = props.content,
        like = props.like;

    var classes = (0, _classnames2.default)(className, 'meta');
    var rest = (0, _lib.getUnhandledProps)(FeedMeta, props);
    var ElementType = (0, _lib.getElementType)(FeedMeta, props);

    if (!(0, _isNil3.default)(children)) {
      return _react2.default.createElement(
        ElementType,
        _extends({}, rest, { className: classes }),
        children
      );
    }

    return _react2.default.createElement(
      ElementType,
      _extends({}, rest, { className: classes }),
      (0, _lib.createShorthand)(_FeedLike2.default, function (val) {
        return { content: val };
      }, like),
      content
    );
  }

  FeedMeta._meta = {
    name: 'FeedMeta',
    parent: 'Feed',
    type: _lib.META.TYPES.VIEW
  };

  FeedMeta.propTypes = {
    /** An element type to render as (string or function). */
    as: _lib.customPropTypes.as,

    /** Primary content. */
    children: _react.PropTypes.node,

    /** Additional classes. */
    className: _react.PropTypes.string,

    /** Shorthand for primary content. */
    content: _lib.customPropTypes.contentShorthand,

    /** Shorthand for FeedLike. */
    like: _lib.customPropTypes.itemShorthand
  };

  exports.default = FeedMeta;

/***/ },
/* 1137 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _isNil2 = __webpack_require__(927);

  var _isNil3 = _interopRequireDefault(_isNil2);

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _classnames = __webpack_require__(794);

  var _classnames2 = _interopRequireDefault(_classnames);

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _lib = __webpack_require__(684);

  var _Icon = __webpack_require__(966);

  var _Icon2 = _interopRequireDefault(_Icon);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function FeedLike(props) {
    var children = props.children,
        className = props.className,
        content = props.content,
        icon = props.icon;

    var classes = (0, _classnames2.default)(className, 'like');
    var rest = (0, _lib.getUnhandledProps)(FeedLike, props);
    var ElementType = (0, _lib.getElementType)(FeedLike, props);

    if (!(0, _isNil3.default)(children)) {
      return _react2.default.createElement(
        ElementType,
        _extends({}, rest, { className: classes }),
        children
      );
    }

    return _react2.default.createElement(
      ElementType,
      _extends({}, rest, { className: classes }),
      _Icon2.default.create(icon),
      content
    );
  }

  FeedLike._meta = {
    name: 'FeedLike',
    parent: 'Feed',
    type: _lib.META.TYPES.VIEW
  };

  FeedLike.defaultProps = {
    as: 'a'
  };

  FeedLike.propTypes = {
    /** An element type to render as (string or function). */
    as: _lib.customPropTypes.as,

    /** Primary content. */
    children: _react.PropTypes.node,

    /** Additional classes. */
    className: _react.PropTypes.string,

    /** Shorthand for primary content. */
    content: _lib.customPropTypes.contentShorthand,

    /** Shorthand for icon. Mutually exclusive with children. */
    icon: _lib.customPropTypes.itemShorthand
  };

  exports.default = FeedLike;

/***/ },
/* 1138 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _isNil2 = __webpack_require__(927);

  var _isNil3 = _interopRequireDefault(_isNil2);

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _classnames = __webpack_require__(794);

  var _classnames2 = _interopRequireDefault(_classnames);

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _lib = __webpack_require__(684);

  var _FeedDate = __webpack_require__(1134);

  var _FeedDate2 = _interopRequireDefault(_FeedDate);

  var _FeedUser = __webpack_require__(1139);

  var _FeedUser2 = _interopRequireDefault(_FeedUser);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function FeedSummary(props) {
    var children = props.children,
        className = props.className,
        content = props.content,
        date = props.date,
        user = props.user;

    var classes = (0, _classnames2.default)(className, 'summary');
    var rest = (0, _lib.getUnhandledProps)(FeedSummary, props);
    var ElementType = (0, _lib.getElementType)(FeedSummary, props);

    if (!(0, _isNil3.default)(children)) {
      return _react2.default.createElement(
        ElementType,
        _extends({}, rest, { className: classes }),
        children
      );
    }

    return _react2.default.createElement(
      ElementType,
      _extends({}, rest, { className: classes }),
      (0, _lib.createShorthand)(_FeedUser2.default, function (val) {
        return { content: val };
      }, user),
      content,
      (0, _lib.createShorthand)(_FeedDate2.default, function (val) {
        return { content: val };
      }, date)
    );
  }

  FeedSummary._meta = {
    name: 'FeedSummary',
    parent: 'Feed',
    type: _lib.META.TYPES.VIEW
  };

  FeedSummary.propTypes = {
    /** An element type to render as (string or function). */
    as: _lib.customPropTypes.as,

    /** Primary content. */
    children: _react.PropTypes.node,

    /** Additional classes. */
    className: _react.PropTypes.string,

    /** Shorthand for primary content. */
    content: _lib.customPropTypes.contentShorthand,

    /** Shorthand for FeedDate. */
    date: _lib.customPropTypes.itemShorthand,

    /** Shorthand for FeedUser. */
    user: _lib.customPropTypes.itemShorthand
  };

  exports.default = FeedSummary;

/***/ },
/* 1139 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _isNil2 = __webpack_require__(927);

  var _isNil3 = _interopRequireDefault(_isNil2);

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _classnames = __webpack_require__(794);

  var _classnames2 = _interopRequireDefault(_classnames);

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _lib = __webpack_require__(684);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function FeedUser(props) {
    var children = props.children,
        className = props.className,
        content = props.content;

    var classes = (0, _classnames2.default)(className, 'user');
    var rest = (0, _lib.getUnhandledProps)(FeedUser, props);
    var ElementType = (0, _lib.getElementType)(FeedUser, props);

    return _react2.default.createElement(
      ElementType,
      _extends({}, rest, { className: classes }),
      (0, _isNil3.default)(children) ? content : children
    );
  }

  FeedUser._meta = {
    name: 'FeedUser',
    parent: 'Feed',
    type: _lib.META.TYPES.VIEW
  };

  FeedUser.propTypes = {
    /** An element type to render as (string or function). */
    as: _lib.customPropTypes.as,

    /** Primary content. */
    children: _react.PropTypes.node,

    /** Additional classes. */
    className: _react.PropTypes.string,

    /** Shorthand for primary content. */
    content: _lib.customPropTypes.contentShorthand
  };

  FeedUser.defaultProps = {
    as: 'a'
  };

  exports.default = FeedUser;

/***/ },
/* 1140 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _classnames = __webpack_require__(794);

  var _classnames2 = _interopRequireDefault(_classnames);

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _lib = __webpack_require__(684);

  var _FeedContent = __webpack_require__(1133);

  var _FeedContent2 = _interopRequireDefault(_FeedContent);

  var _FeedLabel = __webpack_require__(1141);

  var _FeedLabel2 = _interopRequireDefault(_FeedLabel);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function FeedEvent(props) {
    var content = props.content,
        children = props.children,
        className = props.className,
        date = props.date,
        extraImages = props.extraImages,
        extraText = props.extraText,
        image = props.image,
        icon = props.icon,
        meta = props.meta,
        summary = props.summary;

    var classes = (0, _classnames2.default)(className, 'event');
    var rest = (0, _lib.getUnhandledProps)(FeedEvent, props);
    var ElementType = (0, _lib.getElementType)(FeedEvent, props);

    var hasContentProp = content || date || extraImages || extraText || meta || summary;
    var contentProps = { content: content, date: date, extraImages: extraImages, extraText: extraText, meta: meta, summary: summary };

    return _react2.default.createElement(
      ElementType,
      _extends({}, rest, { className: classes }),
      (0, _lib.createShorthand)(_FeedLabel2.default, function (val) {
        return { icon: val };
      }, icon),
      (0, _lib.createShorthand)(_FeedLabel2.default, function (val) {
        return { image: val };
      }, image),
      hasContentProp && _react2.default.createElement(_FeedContent2.default, contentProps),
      children
    );
  }

  FeedEvent._meta = {
    name: 'FeedEvent',
    parent: 'Feed',
    type: _lib.META.TYPES.VIEW
  };

  FeedEvent.propTypes = {
    /** An element type to render as (string or function). */
    as: _lib.customPropTypes.as,

    /** Primary content. */
    children: _react.PropTypes.node,

    /** Additional classes. */
    className: _react.PropTypes.string,

    /** Shorthand for FeedContent. */
    content: _FeedContent2.default.propTypes.content,

    /** Shorthand for FeedDate. */
    date: _FeedContent2.default.propTypes.date,

    /** Shorthand for FeedExtra with images. */
    extraImages: _FeedContent2.default.propTypes.extraImages,

    /** Shorthand for FeedExtra with content. */
    extraText: _FeedContent2.default.propTypes.extraText,

    /** An event can contain icon label. */
    icon: _lib.customPropTypes.itemShorthand,

    /** An event can contain image label. */
    image: _lib.customPropTypes.itemShorthand,

    /** Shorthand for FeedMeta. */
    meta: _FeedContent2.default.propTypes.meta,

    /** Shorthand for FeedSummary. */
    summary: _FeedContent2.default.propTypes.summary
  };

  exports.default = FeedEvent;

/***/ },
/* 1141 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _isNil2 = __webpack_require__(927);

  var _isNil3 = _interopRequireDefault(_isNil2);

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _classnames = __webpack_require__(794);

  var _classnames2 = _interopRequireDefault(_classnames);

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _lib = __webpack_require__(684);

  var _Icon = __webpack_require__(966);

  var _Icon2 = _interopRequireDefault(_Icon);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function FeedLabel(props) {
    var children = props.children,
        className = props.className,
        content = props.content,
        icon = props.icon,
        image = props.image;

    var classes = (0, _classnames2.default)(className, 'label');
    var rest = (0, _lib.getUnhandledProps)(FeedLabel, props);
    var ElementType = (0, _lib.getElementType)(FeedLabel, props);

    if (!(0, _isNil3.default)(children)) {
      return _react2.default.createElement(
        ElementType,
        _extends({}, rest, { className: classes }),
        children
      );
    }

    return _react2.default.createElement(
      ElementType,
      _extends({}, rest, { className: classes }),
      content,
      _Icon2.default.create(icon),
      (0, _lib.createHTMLImage)(image)
    );
  }

  FeedLabel._meta = {
    name: 'FeedLabel',
    parent: 'Feed',
    type: _lib.META.TYPES.VIEW
  };

  FeedLabel.propTypes = {
    /** An element type to render as (string or function). */
    as: _lib.customPropTypes.as,

    /** Primary content. */
    children: _react.PropTypes.node,

    /** Additional classes. */
    className: _react.PropTypes.string,

    /** Shorthand for primary content. */
    content: _lib.customPropTypes.contentShorthand,

    /** An event can contain icon label. */
    icon: _lib.customPropTypes.itemShorthand,

    /** An event can contain image label. */
    image: _lib.customPropTypes.itemShorthand
  };

  exports.default = FeedLabel;

/***/ },
/* 1142 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _Item = __webpack_require__(1143);

  var _Item2 = _interopRequireDefault(_Item);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  exports.default = _Item2.default;

/***/ },
/* 1143 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _isNil2 = __webpack_require__(927);

  var _isNil3 = _interopRequireDefault(_isNil2);

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _classnames = __webpack_require__(794);

  var _classnames2 = _interopRequireDefault(_classnames);

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _lib = __webpack_require__(684);

  var _ItemContent = __webpack_require__(1144);

  var _ItemContent2 = _interopRequireDefault(_ItemContent);

  var _ItemDescription = __webpack_require__(1146);

  var _ItemDescription2 = _interopRequireDefault(_ItemDescription);

  var _ItemExtra = __webpack_require__(1147);

  var _ItemExtra2 = _interopRequireDefault(_ItemExtra);

  var _ItemGroup = __webpack_require__(1149);

  var _ItemGroup2 = _interopRequireDefault(_ItemGroup);

  var _ItemHeader = __webpack_require__(1145);

  var _ItemHeader2 = _interopRequireDefault(_ItemHeader);

  var _ItemImage = __webpack_require__(1150);

  var _ItemImage2 = _interopRequireDefault(_ItemImage);

  var _ItemMeta = __webpack_require__(1148);

  var _ItemMeta2 = _interopRequireDefault(_ItemMeta);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  /**
   * An item view presents large collections of site content for display
   **/
  function Item(props) {
    var children = props.children,
        className = props.className,
        content = props.content,
        description = props.description,
        extra = props.extra,
        header = props.header,
        image = props.image,
        meta = props.meta;

    var classes = (0, _classnames2.default)(className, 'item');
    var rest = (0, _lib.getUnhandledProps)(Item, props);
    var ElementType = (0, _lib.getElementType)(Item, props);

    if (!(0, _isNil3.default)(children)) {
      return _react2.default.createElement(
        ElementType,
        _extends({}, rest, { className: classes }),
        children
      );
    }

    return _react2.default.createElement(
      ElementType,
      _extends({}, rest, { className: classes }),
      (0, _lib.createShorthand)(_ItemImage2.default, function (val) {
        return { src: val };
      }, image),
      _react2.default.createElement(_ItemContent2.default, {
        content: content,
        description: description,
        extra: extra,
        header: header,
        meta: meta
      })
    );
  }

  Item._meta = {
    name: 'Item',
    type: _lib.META.TYPES.VIEW
  };

  Item.Content = _ItemContent2.default;
  Item.Description = _ItemDescription2.default;
  Item.Extra = _ItemExtra2.default;
  Item.Group = _ItemGroup2.default;
  Item.Header = _ItemHeader2.default;
  Item.Image = _ItemImage2.default;
  Item.Meta = _ItemMeta2.default;

  Item.propTypes = {
    /** An element type to render as (string or function). */
    as: _lib.customPropTypes.as,

    /** Primary content. */
    children: _react.PropTypes.node,

    /** Additional classes. */
    className: _react.PropTypes.string,

    /** Shorthand for ItemContent component. */
    content: _lib.customPropTypes.contentShorthand,

    /** Shorthand for ItemDescription component. */
    description: _lib.customPropTypes.itemShorthand,

    /** Shorthand for ItemExtra component. */
    extra: _lib.customPropTypes.itemShorthand,

    /** Shorthand for ItemImage component. */
    image: _lib.customPropTypes.itemShorthand,

    /** Shorthand for ItemHeader component. */
    header: _lib.customPropTypes.itemShorthand,

    /** Shorthand for ItemMeta component. */
    meta: _lib.customPropTypes.itemShorthand
  };

  exports.default = Item;

/***/ },
/* 1144 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _isNil2 = __webpack_require__(927);

  var _isNil3 = _interopRequireDefault(_isNil2);

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _classnames = __webpack_require__(794);

  var _classnames2 = _interopRequireDefault(_classnames);

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _lib = __webpack_require__(684);

  var _ItemHeader = __webpack_require__(1145);

  var _ItemHeader2 = _interopRequireDefault(_ItemHeader);

  var _ItemDescription = __webpack_require__(1146);

  var _ItemDescription2 = _interopRequireDefault(_ItemDescription);

  var _ItemExtra = __webpack_require__(1147);

  var _ItemExtra2 = _interopRequireDefault(_ItemExtra);

  var _ItemMeta = __webpack_require__(1148);

  var _ItemMeta2 = _interopRequireDefault(_ItemMeta);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  /**
   * An item can contain content
   **/
  function ItemContent(props) {
    var children = props.children,
        className = props.className,
        content = props.content,
        description = props.description,
        extra = props.extra,
        header = props.header,
        meta = props.meta,
        verticalAlign = props.verticalAlign;

    var classes = (0, _classnames2.default)(className, (0, _lib.useVerticalAlignProp)(verticalAlign), 'content');
    var rest = (0, _lib.getUnhandledProps)(ItemContent, props);
    var ElementType = (0, _lib.getElementType)(ItemContent, props);

    if (!(0, _isNil3.default)(children)) {
      return _react2.default.createElement(
        ElementType,
        _extends({}, rest, { className: classes }),
        children
      );
    }

    return _react2.default.createElement(
      ElementType,
      _extends({}, rest, { className: classes }),
      (0, _lib.createShorthand)(_ItemHeader2.default, function (val) {
        return { content: val };
      }, header),
      (0, _lib.createShorthand)(_ItemMeta2.default, function (val) {
        return { content: val };
      }, meta),
      (0, _lib.createShorthand)(_ItemDescription2.default, function (val) {
        return { content: val };
      }, description),
      (0, _lib.createShorthand)(_ItemExtra2.default, function (val) {
        return { content: val };
      }, extra),
      content
    );
  }

  ItemContent._meta = {
    name: 'ItemContent',
    parent: 'Item',
    type: _lib.META.TYPES.VIEW,
    props: {
      verticalAlign: _lib.SUI.VERTICAL_ALIGNMENTS
    }
  };

  ItemContent.propTypes = {
    /** An element type to render as (string or function). */
    as: _lib.customPropTypes.as,

    /** Primary content. */
    children: _react.PropTypes.node,

    /** Additional classes. */
    className: _react.PropTypes.string,

    /** Shorthand for primary content. */
    content: _lib.customPropTypes.contentShorthand,

    /** Shorthand for ItemDescription component. */
    description: _lib.customPropTypes.itemShorthand,

    /** Shorthand for ItemExtra component. */
    extra: _lib.customPropTypes.itemShorthand,

    /** Shorthand for ItemHeader component. */
    header: _lib.customPropTypes.itemShorthand,

    /** Shorthand for ItemMeta component. */
    meta: _lib.customPropTypes.itemShorthand,

    /** Content can specify its vertical alignment */
    verticalAlign: _react.PropTypes.oneOf(ItemContent._meta.props.verticalAlign)
  };

  exports.default = ItemContent;

/***/ },
/* 1145 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _isNil2 = __webpack_require__(927);

  var _isNil3 = _interopRequireDefault(_isNil2);

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _classnames = __webpack_require__(794);

  var _classnames2 = _interopRequireDefault(_classnames);

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _lib = __webpack_require__(684);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  /**
   * An item can contain a header
   **/
  function ItemHeader(props) {
    var children = props.children,
        className = props.className,
        content = props.content;

    var classes = (0, _classnames2.default)(className, 'header');
    var rest = (0, _lib.getUnhandledProps)(ItemHeader, props);
    var ElementType = (0, _lib.getElementType)(ItemHeader, props);

    return _react2.default.createElement(
      ElementType,
      _extends({}, rest, { className: classes }),
      (0, _isNil3.default)(children) ? content : children
    );
  }

  ItemHeader._meta = {
    name: 'ItemHeader',
    parent: 'Item',
    type: _lib.META.TYPES.VIEW
  };

  ItemHeader.propTypes = {
    /** An element type to render as (string or function). */
    as: _lib.customPropTypes.as,

    /** Primary content. */
    children: _react.PropTypes.node,

    /** Additional classes. */
    className: _react.PropTypes.string,

    /** Shorthand for primary content. */
    content: _lib.customPropTypes.contentShorthand
  };

  exports.default = ItemHeader;

/***/ },
/* 1146 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _isNil2 = __webpack_require__(927);

  var _isNil3 = _interopRequireDefault(_isNil2);

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _classnames = __webpack_require__(794);

  var _classnames2 = _interopRequireDefault(_classnames);

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _lib = __webpack_require__(684);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  /**
   * An item can contain a description with a single or multiple paragraphs
   **/
  function ItemDescription(props) {
    var children = props.children,
        className = props.className,
        content = props.content;

    var classes = (0, _classnames2.default)(className, 'description');
    var rest = (0, _lib.getUnhandledProps)(ItemDescription, props);
    var ElementType = (0, _lib.getElementType)(ItemDescription, props);

    return _react2.default.createElement(
      ElementType,
      _extends({}, rest, { className: classes }),
      (0, _isNil3.default)(children) ? content : children
    );
  }

  ItemDescription._meta = {
    name: 'ItemDescription',
    parent: 'Item',
    type: _lib.META.TYPES.VIEW
  };

  ItemDescription.propTypes = {
    /** An element type to render as (string or function). */
    as: _lib.customPropTypes.as,

    /** Primary content. */
    children: _react.PropTypes.node,

    /** Additional classes. */
    className: _react.PropTypes.string,

    /** Shorthand for primary content. */
    content: _lib.customPropTypes.contentShorthand
  };

  exports.default = ItemDescription;

/***/ },
/* 1147 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _isNil2 = __webpack_require__(927);

  var _isNil3 = _interopRequireDefault(_isNil2);

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _classnames = __webpack_require__(794);

  var _classnames2 = _interopRequireDefault(_classnames);

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _lib = __webpack_require__(684);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  /**
   * An item can contain extra content meant to be formatted separately from the main content
   **/
  function ItemExtra(props) {
    var children = props.children,
        className = props.className,
        content = props.content;

    var classes = (0, _classnames2.default)(className, 'extra');
    var rest = (0, _lib.getUnhandledProps)(ItemExtra, props);
    var ElementType = (0, _lib.getElementType)(ItemExtra, props);

    return _react2.default.createElement(
      ElementType,
      _extends({}, rest, { className: classes }),
      (0, _isNil3.default)(children) ? content : children
    );
  }

  ItemExtra._meta = {
    name: 'ItemExtra',
    parent: 'Item',
    type: _lib.META.TYPES.VIEW
  };

  ItemExtra.propTypes = {
    /** An element type to render as (string or function). */
    as: _lib.customPropTypes.as,

    /** Primary content. */
    children: _react.PropTypes.node,

    /** Additional classes. */
    className: _react.PropTypes.string,

    /** Shorthand for primary content. */
    content: _lib.customPropTypes.contentShorthand
  };

  exports.default = ItemExtra;

/***/ },
/* 1148 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _isNil2 = __webpack_require__(927);

  var _isNil3 = _interopRequireDefault(_isNil2);

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _classnames = __webpack_require__(794);

  var _classnames2 = _interopRequireDefault(_classnames);

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _lib = __webpack_require__(684);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  /**
   * An item can contain content metadata.
   **/
  function ItemMeta(props) {
    var children = props.children,
        className = props.className,
        content = props.content;

    var classes = (0, _classnames2.default)(className, 'meta');
    var rest = (0, _lib.getUnhandledProps)(ItemMeta, props);
    var ElementType = (0, _lib.getElementType)(ItemMeta, props);

    return _react2.default.createElement(
      ElementType,
      _extends({}, rest, { className: classes }),
      (0, _isNil3.default)(children) ? content : children
    );
  }

  ItemMeta._meta = {
    name: 'ItemMeta',
    parent: 'Item',
    type: _lib.META.TYPES.VIEW
  };

  ItemMeta.propTypes = {
    /** An element type to render as (string or function). */
    as: _lib.customPropTypes.as,

    /** Primary content. */
    children: _react.PropTypes.node,

    /** Additional classes. */
    className: _react.PropTypes.string,

    /** Shorthand for primary content. */
    content: _lib.customPropTypes.contentShorthand
  };

  exports.default = ItemMeta;

/***/ },
/* 1149 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _map2 = __webpack_require__(918);

  var _map3 = _interopRequireDefault(_map2);

  var _isNil2 = __webpack_require__(927);

  var _isNil3 = _interopRequireDefault(_isNil2);

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _classnames = __webpack_require__(794);

  var _classnames2 = _interopRequireDefault(_classnames);

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _lib = __webpack_require__(684);

  var _Item = __webpack_require__(1143);

  var _Item2 = _interopRequireDefault(_Item);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

  /**
   * A group of items
   **/
  function ItemGroup(props) {
    var children = props.children,
        className = props.className,
        divided = props.divided,
        items = props.items,
        link = props.link,
        relaxed = props.relaxed;

    var classes = (0, _classnames2.default)('ui', className, (0, _lib.useKeyOnly)(divided, 'divided'), (0, _lib.useKeyOnly)(link, 'link'), (0, _lib.useKeyOrValueAndKey)(relaxed, 'relaxed'), 'items');
    var rest = (0, _lib.getUnhandledProps)(ItemGroup, props);
    var ElementType = (0, _lib.getElementType)(ItemGroup, props);

    if (!(0, _isNil3.default)(children)) {
      return _react2.default.createElement(
        ElementType,
        _extends({}, rest, { className: classes }),
        children
      );
    }

    var itemsJSX = (0, _map3.default)(items, function (item) {
      var childKey = item.childKey,
          itemProps = _objectWithoutProperties(item, ['childKey']);

      var finalKey = childKey || [itemProps.content, itemProps.description, itemProps.header, itemProps.meta].join('-');

      return _react2.default.createElement(_Item2.default, _extends({}, itemProps, { key: finalKey }));
    });

    return _react2.default.createElement(
      ElementType,
      _extends({}, rest, { className: classes }),
      itemsJSX
    );
  }

  ItemGroup._meta = {
    name: 'ItemGroup',
    type: _lib.META.TYPES.VIEW,
    parent: 'Item',
    props: {
      relaxed: ['very']
    }
  };

  ItemGroup.propTypes = {
    /** An element type to render as (string or function). */
    as: _lib.customPropTypes.as,

    /** Primary content. */
    children: _react.PropTypes.node,

    /** Additional classes. */
    className: _react.PropTypes.string,

    /** Items can be divided to better distinguish between grouped content. */
    divided: _react.PropTypes.bool,

    /** Shorthand array of props for Item. */
    items: _lib.customPropTypes.collectionShorthand,

    /** An item can be formatted so that the entire contents link to another page. */
    link: _react.PropTypes.bool,

    /** A group of items can relax its padding to provide more negative space. */
    relaxed: _react.PropTypes.oneOfType([_react.PropTypes.bool, _react.PropTypes.oneOf(ItemGroup._meta.props.relaxed)])
  };

  exports.default = ItemGroup;

/***/ },
/* 1150 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _lib = __webpack_require__(684);

  var _Image = __webpack_require__(990);

  var _Image2 = _interopRequireDefault(_Image);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  /**
   * An item can contain an image
   **/
  function ItemImage(props) {
    var size = props.size;

    var rest = (0, _lib.getUnhandledProps)(ItemImage, props);

    return _react2.default.createElement(_Image2.default, _extends({}, rest, { size: size, ui: !!size, wrapped: true }));
  }

  ItemImage._meta = {
    name: 'ItemImage',
    parent: 'Item',
    type: _lib.META.TYPES.VIEW
  };

  ItemImage.propTypes = {
    /** An image may appear at different sizes */
    size: _react.PropTypes.oneOf(_Image2.default._meta.props.size)
  };

  exports.default = ItemImage;

/***/ },
/* 1151 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _Statistic = __webpack_require__(1152);

  var _Statistic2 = _interopRequireDefault(_Statistic);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  exports.default = _Statistic2.default;

/***/ },
/* 1152 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _without2 = __webpack_require__(939);

  var _without3 = _interopRequireDefault(_without2);

  var _isNil2 = __webpack_require__(927);

  var _isNil3 = _interopRequireDefault(_isNil2);

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _classnames = __webpack_require__(794);

  var _classnames2 = _interopRequireDefault(_classnames);

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _lib = __webpack_require__(684);

  var _StatisticGroup = __webpack_require__(1153);

  var _StatisticGroup2 = _interopRequireDefault(_StatisticGroup);

  var _StatisticLabel = __webpack_require__(1154);

  var _StatisticLabel2 = _interopRequireDefault(_StatisticLabel);

  var _StatisticValue = __webpack_require__(1155);

  var _StatisticValue2 = _interopRequireDefault(_StatisticValue);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  /**
   * A statistic emphasizes the current value of an attribute
   */
  function Statistic(props) {
    var children = props.children,
        className = props.className,
        color = props.color,
        floated = props.floated,
        horizontal = props.horizontal,
        inverted = props.inverted,
        label = props.label,
        size = props.size,
        text = props.text,
        value = props.value;

    var classes = (0, _classnames2.default)('ui', color, (0, _lib.useValueAndKey)(floated, 'floated'), (0, _lib.useKeyOnly)(horizontal, 'horizontal'), (0, _lib.useKeyOnly)(inverted, 'inverted'), size, className, 'statistic');
    var rest = (0, _lib.getUnhandledProps)(Statistic, props);
    var ElementType = (0, _lib.getElementType)(Statistic, props);

    if (!(0, _isNil3.default)(children)) {
      return _react2.default.createElement(
        ElementType,
        _extends({}, rest, { className: classes }),
        children
      );
    }

    return _react2.default.createElement(
      ElementType,
      _extends({}, rest, { className: classes }),
      _react2.default.createElement(_StatisticValue2.default, { text: text, value: value }),
      _react2.default.createElement(_StatisticLabel2.default, { label: label })
    );
  }

  Statistic._meta = {
    name: 'Statistic',
    type: _lib.META.TYPES.VIEW,
    props: {
      color: _lib.SUI.COLORS,
      floated: _lib.SUI.FLOATS,
      size: (0, _without3.default)(_lib.SUI.SIZES, 'big', 'massive', 'medium')
    }
  };

  Statistic.propTypes = {
    /** An element type to render as (string or function). */
    as: _lib.customPropTypes.as,

    /** Primary content. */
    children: _react.PropTypes.node,

    /** Additional classes. */
    className: _react.PropTypes.string,

    /** A statistic can be formatted to be different colors. */
    color: _react.PropTypes.oneOf(Statistic._meta.props.color),

    /** A statistic can sit to the left or right of other content. */
    floated: _react.PropTypes.oneOf(Statistic._meta.props.floated),

    /** A statistic can present its measurement horizontally. */
    horizontal: _react.PropTypes.bool,

    /** A statistic can be formatted to fit on a dark background. */
    inverted: _react.PropTypes.bool,

    /** Label content of the Statistic. */
    label: _lib.customPropTypes.contentShorthand,

    /** A statistic can vary in size. */
    size: _react.PropTypes.oneOf(Statistic._meta.props.size),

    /** Format the StatisticValue with smaller font size to fit nicely beside number values. */
    text: _react.PropTypes.bool,

    /** Value content of the Statistic. */
    value: _lib.customPropTypes.contentShorthand
  };

  Statistic.Group = _StatisticGroup2.default;
  Statistic.Label = _StatisticLabel2.default;
  Statistic.Value = _StatisticValue2.default;

  exports.default = Statistic;

/***/ },
/* 1153 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _without2 = __webpack_require__(939);

  var _without3 = _interopRequireDefault(_without2);

  var _map2 = __webpack_require__(918);

  var _map3 = _interopRequireDefault(_map2);

  var _isNil2 = __webpack_require__(927);

  var _isNil3 = _interopRequireDefault(_isNil2);

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _classnames = __webpack_require__(794);

  var _classnames2 = _interopRequireDefault(_classnames);

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _lib = __webpack_require__(684);

  var _Statistic = __webpack_require__(1152);

  var _Statistic2 = _interopRequireDefault(_Statistic);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function StatisticGroup(props) {
    var children = props.children,
        className = props.className,
        color = props.color,
        horizontal = props.horizontal,
        inverted = props.inverted,
        items = props.items,
        size = props.size,
        widths = props.widths;

    var classes = (0, _classnames2.default)('ui', color, (0, _lib.useKeyOnly)(horizontal, 'horizontal'), (0, _lib.useKeyOnly)(inverted, 'inverted'), (0, _lib.useWidthProp)(widths), size, 'statistics', className);
    var rest = (0, _lib.getUnhandledProps)(StatisticGroup, props);
    var ElementType = (0, _lib.getElementType)(StatisticGroup, props);

    if (!(0, _isNil3.default)(children)) {
      return _react2.default.createElement(
        ElementType,
        _extends({}, rest, { className: classes }),
        children
      );
    }

    var itemsJSX = (0, _map3.default)(items, function (item) {
      return _react2.default.createElement(_Statistic2.default, _extends({ key: item.childKey || [item.label, item.title].join('-') }, item));
    });

    return _react2.default.createElement(
      ElementType,
      _extends({}, rest, { className: classes }),
      itemsJSX
    );
  }

  StatisticGroup._meta = {
    name: 'StatisticGroup',
    type: _lib.META.TYPES.VIEW,
    parent: 'Statistic',
    props: {
      color: _lib.SUI.COLORS,
      size: (0, _without3.default)(_lib.SUI.SIZES, 'big', 'massive', 'medium'),
      widths: _lib.SUI.WIDTHS
    }
  };

  StatisticGroup.propTypes = {
    /** An element type to render as (string or function). */
    as: _lib.customPropTypes.as,

    /** Primary content. */
    children: _react.PropTypes.node,

    /** Additional classes. */
    className: _react.PropTypes.string,

    /** A statistic group can be formatted to be different colors. */
    color: _react.PropTypes.oneOf(StatisticGroup._meta.props.color),

    /** A statistic group can present its measurement horizontally. */
    horizontal: _react.PropTypes.bool,

    /** A statistic group can be formatted to fit on a dark background. */
    inverted: _react.PropTypes.bool,

    /** Array of props for Statistic. */
    items: _lib.customPropTypes.collectionShorthand,

    /** A statistic group can vary in size. */
    size: _react.PropTypes.oneOf(StatisticGroup._meta.props.size),

    /** A statistic group can have its items divided evenly. */
    widths: _react.PropTypes.oneOf(StatisticGroup._meta.props.widths)
  };

  exports.default = StatisticGroup;

/***/ },
/* 1154 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _isNil2 = __webpack_require__(927);

  var _isNil3 = _interopRequireDefault(_isNil2);

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _classnames = __webpack_require__(794);

  var _classnames2 = _interopRequireDefault(_classnames);

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _lib = __webpack_require__(684);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function StatisticLabel(props) {
    var children = props.children,
        className = props.className,
        label = props.label;

    var classes = (0, _classnames2.default)(className, 'label');
    var rest = (0, _lib.getUnhandledProps)(StatisticLabel, props);
    var ElementType = (0, _lib.getElementType)(StatisticLabel, props);

    return _react2.default.createElement(
      ElementType,
      _extends({}, rest, { className: classes }),
      (0, _isNil3.default)(children) ? label : children
    );
  }

  StatisticLabel._meta = {
    name: 'StatisticLabel',
    parent: 'Statistic',
    type: _lib.META.TYPES.VIEW
  };

  StatisticLabel.propTypes = {
    /** An element type to render as (string or function). */
    as: _lib.customPropTypes.as,

    /** Primary content. */
    children: _react.PropTypes.node,

    /** Additional classes. */
    className: _react.PropTypes.string,

    /** Shorthand for primary content. */
    label: _lib.customPropTypes.contentShorthand
  };

  exports.default = StatisticLabel;

/***/ },
/* 1155 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _isNil2 = __webpack_require__(927);

  var _isNil3 = _interopRequireDefault(_isNil2);

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _classnames = __webpack_require__(794);

  var _classnames2 = _interopRequireDefault(_classnames);

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _lib = __webpack_require__(684);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function StatisticValue(props) {
    var children = props.children,
        className = props.className,
        text = props.text,
        value = props.value;

    var classes = (0, _classnames2.default)((0, _lib.useKeyOnly)(text, 'text'), className, 'value');
    var rest = (0, _lib.getUnhandledProps)(StatisticValue, props);
    var ElementType = (0, _lib.getElementType)(StatisticValue, props);

    return _react2.default.createElement(
      ElementType,
      _extends({}, rest, { className: classes }),
      (0, _isNil3.default)(children) ? value : children
    );
  }

  StatisticValue._meta = {
    name: 'StatisticValue',
    parent: 'Statistic',
    type: _lib.META.TYPES.VIEW
  };

  StatisticValue.propTypes = {
    /** An element type to render as (string or function). */
    as: _lib.customPropTypes.as,

    /** Primary content. */
    children: _react.PropTypes.node,

    /** Additional classes. */
    className: _react.PropTypes.string,

    /** Format the value with smaller font size to fit nicely beside number values. */
    text: _react.PropTypes.bool,

    /** Primary content of the StatisticValue. Mutually exclusive with the children prop. */
    value: _lib.customPropTypes.contentShorthand
  };

  exports.default = StatisticValue;

/***/ },
/* 1156 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  module.exports = __webpack_require__(1157);

/***/ },
/* 1157 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  exports.__esModule = true;

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _innerSlider = __webpack_require__(1158);

  var _objectAssign = __webpack_require__(387);

  var _objectAssign2 = _interopRequireDefault(_objectAssign);

  var _json2mq = __webpack_require__(1174);

  var _json2mq2 = _interopRequireDefault(_json2mq);

  var _defaultProps = __webpack_require__(1163);

  var _defaultProps2 = _interopRequireDefault(_defaultProps);

  var _canUseDom = __webpack_require__(1176);

  var _canUseDom2 = _interopRequireDefault(_canUseDom);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

  function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

  var enquire = _canUseDom2.default && __webpack_require__(1177);

  var Slider = function (_React$Component) {
    _inherits(Slider, _React$Component);

    function Slider(props) {
      _classCallCheck(this, Slider);

      var _this = _possibleConstructorReturn(this, _React$Component.call(this, props));

      _this.state = {
        breakpoint: null
      };
      _this._responsiveMediaHandlers = [];
      _this.innerSliderRefHandler = _this.innerSliderRefHandler.bind(_this);
      return _this;
    }

    Slider.prototype.innerSliderRefHandler = function innerSliderRefHandler(ref) {
      this.innerSlider = ref;
    };

    Slider.prototype.media = function media(query, handler) {
      enquire.register(query, handler);
      this._responsiveMediaHandlers.push({ query: query, handler: handler });
    };

    Slider.prototype.componentWillMount = function componentWillMount() {
      var _this2 = this;

      if (this.props.responsive) {
        var breakpoints = this.props.responsive.map(function (breakpt) {
          return breakpt.breakpoint;
        });
        breakpoints.sort(function (x, y) {
          return x - y;
        });

        breakpoints.forEach(function (breakpoint, index) {
          var bQuery;
          if (index === 0) {
            bQuery = (0, _json2mq2.default)({ minWidth: 0, maxWidth: breakpoint });
          } else {
            bQuery = (0, _json2mq2.default)({ minWidth: breakpoints[index - 1], maxWidth: breakpoint });
          }
          _canUseDom2.default && _this2.media(bQuery, function () {
            _this2.setState({ breakpoint: breakpoint });
          });
        });

        // Register media query for full screen. Need to support resize from small to large
        var query = (0, _json2mq2.default)({ minWidth: breakpoints.slice(-1)[0] });

        _canUseDom2.default && this.media(query, function () {
          _this2.setState({ breakpoint: null });
        });
      }
    };

    Slider.prototype.componentWillUnmount = function componentWillUnmount() {
      this._responsiveMediaHandlers.forEach(function (obj) {
        enquire.unregister(obj.query, obj.handler);
      });
    };

    Slider.prototype.slickPrev = function slickPrev() {
      this.innerSlider.slickPrev();
    };

    Slider.prototype.slickNext = function slickNext() {
      this.innerSlider.slickNext();
    };

    Slider.prototype.slickGoTo = function slickGoTo(slide) {
      this.innerSlider.slickGoTo(slide);
    };

    Slider.prototype.render = function render() {
      var _this3 = this;

      var settings;
      var newProps;
      if (this.state.breakpoint) {
        newProps = this.props.responsive.filter(function (resp) {
          return resp.breakpoint === _this3.state.breakpoint;
        });
        settings = newProps[0].settings === 'unslick' ? 'unslick' : (0, _objectAssign2.default)({}, this.props, newProps[0].settings);
      } else {
        settings = (0, _objectAssign2.default)({}, _defaultProps2.default, this.props);
      }

      var children = this.props.children;
      if (!Array.isArray(children)) {
        children = [children];
      }

      // Children may contain false or null, so we should filter them
      children = children.filter(function (child) {
        return !!child;
      });

      if (settings === 'unslick') {
        // if 'unslick' responsive breakpoint setting used, just return the <Slider> tag nested HTML
        return _react2.default.createElement(
          'div',
          null,
          children
        );
      } else {
        return _react2.default.createElement(
          _innerSlider.InnerSlider,
          _extends({ ref: this.innerSliderRefHandler }, settings),
          children
        );
      }
    };

    return Slider;
  }(_react2.default.Component);

  exports.default = Slider;

/***/ },
/* 1158 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  exports.__esModule = true;
  exports.InnerSlider = undefined;

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _eventHandlers = __webpack_require__(1159);

  var _eventHandlers2 = _interopRequireDefault(_eventHandlers);

  var _helpers = __webpack_require__(1161);

  var _helpers2 = _interopRequireDefault(_helpers);

  var _initialState = __webpack_require__(1162);

  var _initialState2 = _interopRequireDefault(_initialState);

  var _defaultProps = __webpack_require__(1163);

  var _defaultProps2 = _interopRequireDefault(_defaultProps);

  var _createReactClass = __webpack_require__(1164);

  var _createReactClass2 = _interopRequireDefault(_createReactClass);

  var _classnames = __webpack_require__(794);

  var _classnames2 = _interopRequireDefault(_classnames);

  var _objectAssign = __webpack_require__(387);

  var _objectAssign2 = _interopRequireDefault(_objectAssign);

  var _track = __webpack_require__(1171);

  var _dots = __webpack_require__(1172);

  var _arrows = __webpack_require__(1173);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  var InnerSlider = exports.InnerSlider = (0, _createReactClass2.default)({
    mixins: [_helpers2.default, _eventHandlers2.default],
    list: null,
    track: null,
    listRefHandler: function listRefHandler(ref) {
      this.list = ref;
    },
    trackRefHandler: function trackRefHandler(ref) {
      this.track = ref;
    },
    getInitialState: function getInitialState() {
      return _extends({}, _initialState2.default, {
        currentSlide: this.props.initialSlide
      });
    },
    getDefaultProps: function getDefaultProps() {
      return _defaultProps2.default;
    },
    componentWillMount: function componentWillMount() {
      if (this.props.init) {
        this.props.init();
      }
      this.setState({
        mounted: true
      });
      var lazyLoadedList = [];
      for (var i = 0; i < _react2.default.Children.count(this.props.children); i++) {
        if (i >= this.state.currentSlide && i < this.state.currentSlide + this.props.slidesToShow) {
          lazyLoadedList.push(i);
        }
      }

      if (this.props.lazyLoad && this.state.lazyLoadedList.length === 0) {
        this.setState({
          lazyLoadedList: lazyLoadedList
        });
      }
    },
    componentDidMount: function componentDidMount() {
      // Hack for autoplay -- Inspect Later
      this.initialize(this.props);
      this.adaptHeight();

      // To support server-side rendering
      if (!window) {
        return;
      }
      if (window.addEventListener) {
        window.addEventListener('resize', this.onWindowResized);
      } else {
        window.attachEvent('onresize', this.onWindowResized);
      }
    },
    componentWillUnmount: function componentWillUnmount() {
      if (this.animationEndCallback) {
        clearTimeout(this.animationEndCallback);
      }
      if (window.addEventListener) {
        window.removeEventListener('resize', this.onWindowResized);
      } else {
        window.detachEvent('onresize', this.onWindowResized);
      }
      if (this.state.autoPlayTimer) {
        clearInterval(this.state.autoPlayTimer);
      }
    },
    componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
      if (this.props.slickGoTo != nextProps.slickGoTo) {
        if (true) {
          console.warn('react-slick deprecation warning: slickGoTo prop is deprecated and it will be removed in next release. Use slickGoTo method instead');
        }
        this.changeSlide({
          message: 'index',
          index: nextProps.slickGoTo,
          currentSlide: this.state.currentSlide
        });
      } else if (this.state.currentSlide >= nextProps.children.length) {
        this.update(nextProps);
        this.changeSlide({
          message: 'index',
          index: nextProps.children.length - nextProps.slidesToShow,
          currentSlide: this.state.currentSlide
        });
      } else {
        this.update(nextProps);
      }
    },
    componentDidUpdate: function componentDidUpdate() {
      this.adaptHeight();
    },
    onWindowResized: function onWindowResized() {
      this.update(this.props);
      // animating state should be cleared while resizing, otherwise autoplay stops working
      this.setState({
        animating: false
      });
      clearTimeout(this.animationEndCallback);
      delete this.animationEndCallback;
    },
    slickPrev: function slickPrev() {
      this.changeSlide({ message: 'previous' });
    },
    slickNext: function slickNext() {
      this.changeSlide({ message: 'next' });
    },
    slickGoTo: function slickGoTo(slide) {
      typeof slide === 'number' && this.changeSlide({
        message: 'index',
        index: slide,
        currentSlide: this.state.currentSlide
      });
    },
    render: function render() {
      var className = (0, _classnames2.default)('slick-initialized', 'slick-slider', this.props.className, {
        'slick-vertical': this.props.vertical
      });

      var trackProps = {
        fade: this.props.fade,
        cssEase: this.props.cssEase,
        speed: this.props.speed,
        infinite: this.props.infinite,
        centerMode: this.props.centerMode,
        focusOnSelect: this.props.focusOnSelect ? this.selectHandler : null,
        currentSlide: this.state.currentSlide,
        lazyLoad: this.props.lazyLoad,
        lazyLoadedList: this.state.lazyLoadedList,
        rtl: this.props.rtl,
        slideWidth: this.state.slideWidth,
        slidesToShow: this.props.slidesToShow,
        slidesToScroll: this.props.slidesToScroll,
        slideCount: this.state.slideCount,
        trackStyle: this.state.trackStyle,
        variableWidth: this.props.variableWidth
      };

      var dots;

      if (this.props.dots === true && this.state.slideCount >= this.props.slidesToShow) {
        var dotProps = {
          dotsClass: this.props.dotsClass,
          slideCount: this.state.slideCount,
          slidesToShow: this.props.slidesToShow,
          currentSlide: this.state.currentSlide,
          slidesToScroll: this.props.slidesToScroll,
          clickHandler: this.changeSlide,
          children: this.props.children,
          customPaging: this.props.customPaging
        };

        dots = _react2.default.createElement(_dots.Dots, dotProps);
      }

      var prevArrow, nextArrow;

      var arrowProps = {
        infinite: this.props.infinite,
        centerMode: this.props.centerMode,
        currentSlide: this.state.currentSlide,
        slideCount: this.state.slideCount,
        slidesToShow: this.props.slidesToShow,
        prevArrow: this.props.prevArrow,
        nextArrow: this.props.nextArrow,
        clickHandler: this.changeSlide
      };

      if (this.props.arrows) {
        prevArrow = _react2.default.createElement(_arrows.PrevArrow, arrowProps);
        nextArrow = _react2.default.createElement(_arrows.NextArrow, arrowProps);
      }

      var verticalHeightStyle = null;

      if (this.props.vertical) {
        verticalHeightStyle = {
          height: this.state.listHeight
        };
      }

      var centerPaddingStyle = null;

      if (this.props.vertical === false) {
        if (this.props.centerMode === true) {
          centerPaddingStyle = {
            padding: '0px ' + this.props.centerPadding
          };
        }
      } else {
        if (this.props.centerMode === true) {
          centerPaddingStyle = {
            padding: this.props.centerPadding + ' 0px'
          };
        }
      }

      var listStyle = (0, _objectAssign2.default)({}, verticalHeightStyle, centerPaddingStyle);

      return _react2.default.createElement(
        'div',
        {
          className: className,
          onMouseEnter: this.onInnerSliderEnter,
          onMouseLeave: this.onInnerSliderLeave,
          onMouseOver: this.onInnerSliderOver
        },
        prevArrow,
        _react2.default.createElement(
          'div',
          {
            ref: this.listRefHandler,
            className: 'slick-list',
            style: listStyle,
            onMouseDown: this.swipeStart,
            onMouseMove: this.state.dragging ? this.swipeMove : null,
            onMouseUp: this.swipeEnd,
            onMouseLeave: this.state.dragging ? this.swipeEnd : null,
            onTouchStart: this.swipeStart,
            onTouchMove: this.state.dragging ? this.swipeMove : null,
            onTouchEnd: this.swipeEnd,
            onTouchCancel: this.state.dragging ? this.swipeEnd : null,
            onKeyDown: this.props.accessibility ? this.keyHandler : null },
          _react2.default.createElement(
            _track.Track,
            _extends({ ref: this.trackRefHandler }, trackProps),
            this.props.children
          )
        ),
        nextArrow,
        dots
      );
    }
  });

/***/ },
/* 1159 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  exports.__esModule = true;

  var _trackHelper = __webpack_require__(1160);

  var _helpers = __webpack_require__(1161);

  var _helpers2 = _interopRequireDefault(_helpers);

  var _objectAssign = __webpack_require__(387);

  var _objectAssign2 = _interopRequireDefault(_objectAssign);

  var _reactDom = __webpack_require__(415);

  var _reactDom2 = _interopRequireDefault(_reactDom);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  var EventHandlers = {
    // Event handler for previous and next
    changeSlide: function changeSlide(options) {
      var indexOffset, previousInt, slideOffset, unevenOffset, targetSlide;
      var _props = this.props,
          slidesToScroll = _props.slidesToScroll,
          slidesToShow = _props.slidesToShow;
      var _state = this.state,
          slideCount = _state.slideCount,
          currentSlide = _state.currentSlide;

      unevenOffset = slideCount % slidesToScroll !== 0;
      indexOffset = unevenOffset ? 0 : (slideCount - currentSlide) % slidesToScroll;

      if (options.message === 'previous') {
        slideOffset = indexOffset === 0 ? slidesToScroll : slidesToShow - indexOffset;
        targetSlide = currentSlide - slideOffset;
        if (this.props.lazyLoad) {
          previousInt = currentSlide - slideOffset;
          targetSlide = previousInt === -1 ? slideCount - 1 : previousInt;
        }
      } else if (options.message === 'next') {
        slideOffset = indexOffset === 0 ? slidesToScroll : indexOffset;
        targetSlide = currentSlide + slideOffset;
        if (this.props.lazyLoad) {
          targetSlide = (currentSlide + slidesToScroll) % slideCount + indexOffset;
        }
      } else if (options.message === 'dots' || options.message === 'children') {
        // Click on dots
        targetSlide = options.index * options.slidesToScroll;
        if (targetSlide === options.currentSlide) {
          return;
        }
      } else if (options.message === 'index') {
        targetSlide = parseInt(options.index);
        if (targetSlide === options.currentSlide) {
          return;
        }
      }

      this.slideHandler(targetSlide);
    },

    // Accessiblity handler for previous and next
    keyHandler: function keyHandler(e) {
      //Dont slide if the cursor is inside the form fields and arrow keys are pressed
      if (!e.target.tagName.match('TEXTAREA|INPUT|SELECT')) {
        if (e.keyCode === 37 && this.props.accessibility === true) {
          this.changeSlide({
            message: this.props.rtl === true ? 'next' : 'previous'
          });
        } else if (e.keyCode === 39 && this.props.accessibility === true) {
          this.changeSlide({
            message: this.props.rtl === true ? 'previous' : 'next'
          });
        }
      }
    },
    // Focus on selecting a slide (click handler on track)
    selectHandler: function selectHandler(options) {
      this.changeSlide(options);
    },
    swipeStart: function swipeStart(e) {
      var touches, posX, posY;

      if (this.props.swipe === false || 'ontouchend' in document && this.props.swipe === false) {
        return;
      } else if (this.props.draggable === false && e.type.indexOf('mouse') !== -1) {
        return;
      }
      posX = e.touches !== undefined ? e.touches[0].pageX : e.clientX;
      posY = e.touches !== undefined ? e.touches[0].pageY : e.clientY;
      this.setState({
        dragging: true,
        touchObject: {
          startX: posX,
          startY: posY,
          curX: posX,
          curY: posY
        }
      });
    },
    swipeMove: function swipeMove(e) {
      if (!this.state.dragging) {
        e.preventDefault();
        return;
      }
      if (this.state.animating) {
        return;
      }
      if (this.props.vertical && this.props.swipeToSlide && this.props.verticalSwiping) {
        e.preventDefault();
      }
      var swipeLeft;
      var curLeft, positionOffset;
      var touchObject = this.state.touchObject;

      curLeft = (0, _trackHelper.getTrackLeft)((0, _objectAssign2.default)({
        slideIndex: this.state.currentSlide,
        trackRef: this.track
      }, this.props, this.state));
      touchObject.curX = e.touches ? e.touches[0].pageX : e.clientX;
      touchObject.curY = e.touches ? e.touches[0].pageY : e.clientY;
      touchObject.swipeLength = Math.round(Math.sqrt(Math.pow(touchObject.curX - touchObject.startX, 2)));

      if (this.props.verticalSwiping) {
        touchObject.swipeLength = Math.round(Math.sqrt(Math.pow(touchObject.curY - touchObject.startY, 2)));
      }

      positionOffset = (this.props.rtl === false ? 1 : -1) * (touchObject.curX > touchObject.startX ? 1 : -1);

      if (this.props.verticalSwiping) {
        positionOffset = touchObject.curY > touchObject.startY ? 1 : -1;
      }

      var currentSlide = this.state.currentSlide;
      var dotCount = Math.ceil(this.state.slideCount / this.props.slidesToScroll);
      var swipeDirection = this.swipeDirection(this.state.touchObject);
      var touchSwipeLength = touchObject.swipeLength;

      if (this.props.infinite === false) {
        if (currentSlide === 0 && swipeDirection === 'right' || currentSlide + 1 >= dotCount && swipeDirection === 'left') {
          touchSwipeLength = touchObject.swipeLength * this.props.edgeFriction;

          if (this.state.edgeDragged === false && this.props.edgeEvent) {
            this.props.edgeEvent(swipeDirection);
            this.setState({ edgeDragged: true });
          }
        }
      }

      if (this.state.swiped === false && this.props.swipeEvent) {
        this.props.swipeEvent(swipeDirection);
        this.setState({ swiped: true });
      }

      if (!this.props.vertical) {
        swipeLeft = curLeft + touchSwipeLength * positionOffset;
      } else {
        swipeLeft = curLeft + touchSwipeLength * (this.state.listHeight / this.state.listWidth) * positionOffset;
      }

      if (this.props.verticalSwiping) {
        swipeLeft = curLeft + touchSwipeLength * positionOffset;
      }

      this.setState({
        touchObject: touchObject,
        swipeLeft: swipeLeft,
        trackStyle: (0, _trackHelper.getTrackCSS)((0, _objectAssign2.default)({ left: swipeLeft }, this.props, this.state))
      });

      if (Math.abs(touchObject.curX - touchObject.startX) < Math.abs(touchObject.curY - touchObject.startY) * 0.8) {
        return;
      }
      if (touchObject.swipeLength > 4) {
        e.preventDefault();
      }
    },
    getNavigableIndexes: function getNavigableIndexes() {
      var max = void 0;
      var breakPoint = 0;
      var counter = 0;
      var indexes = [];

      if (!this.props.infinite) {
        max = this.state.slideCount;
      } else {
        breakPoint = this.props.slidesToShow * -1;
        counter = this.props.slidesToShow * -1;
        max = this.state.slideCount * 2;
      }

      while (breakPoint < max) {
        indexes.push(breakPoint);
        breakPoint = counter + this.props.slidesToScroll;

        counter += this.props.slidesToScroll <= this.props.slidesToShow ? this.props.slidesToScroll : this.props.slidesToShow;
      }

      return indexes;
    },
    checkNavigable: function checkNavigable(index) {
      var navigables = this.getNavigableIndexes();
      var prevNavigable = 0;

      if (index > navigables[navigables.length - 1]) {
        index = navigables[navigables.length - 1];
      } else {
        for (var n in navigables) {
          if (index < navigables[n]) {
            index = prevNavigable;
            break;
          }

          prevNavigable = navigables[n];
        }
      }

      return index;
    },
    getSlideCount: function getSlideCount() {
      var _this = this;

      var centerOffset = this.props.centerMode ? this.state.slideWidth * Math.floor(this.props.slidesToShow / 2) : 0;

      if (this.props.swipeToSlide) {
        var swipedSlide = void 0;

        var slickList = _reactDom2.default.findDOMNode(this.list);

        var slides = slickList.querySelectorAll('.slick-slide');

        Array.from(slides).every(function (slide) {
          if (!_this.props.vertical) {
            if (slide.offsetLeft - centerOffset + _this.getWidth(slide) / 2 > _this.state.swipeLeft * -1) {
              swipedSlide = slide;
              return false;
            }
          } else {
            if (slide.offsetTop + _this.getHeight(slide) / 2 > _this.state.swipeLeft * -1) {
              swipedSlide = slide;
              return false;
            }
          }

          return true;
        });

        var slidesTraversed = Math.abs(swipedSlide.dataset.index - this.state.currentSlide) || 1;

        return slidesTraversed;
      } else {
        return this.props.slidesToScroll;
      }
    },

    swipeEnd: function swipeEnd(e) {
      if (!this.state.dragging) {
        if (this.props.swipe) {
          e.preventDefault();
        }
        return;
      }
      var touchObject = this.state.touchObject;
      var minSwipe = this.state.listWidth / this.props.touchThreshold;
      var swipeDirection = this.swipeDirection(touchObject);

      if (this.props.verticalSwiping) {
        minSwipe = this.state.listHeight / this.props.touchThreshold;
      }

      // reset the state of touch related state variables.
      this.setState({
        dragging: false,
        edgeDragged: false,
        swiped: false,
        swipeLeft: null,
        touchObject: {}
      });
      // Fix for #13
      if (!touchObject.swipeLength) {
        return;
      }
      if (touchObject.swipeLength > minSwipe) {
        e.preventDefault();

        var slideCount = void 0,
            newSlide = void 0;

        switch (swipeDirection) {

          case 'left':
          case 'down':
            newSlide = this.state.currentSlide + this.getSlideCount();
            slideCount = this.props.swipeToSlide ? this.checkNavigable(newSlide) : newSlide;
            this.state.currentDirection = 0;
            break;

          case 'right':
          case 'up':
            newSlide = this.state.currentSlide - this.getSlideCount();
            slideCount = this.props.swipeToSlide ? this.checkNavigable(newSlide) : newSlide;
            this.state.currentDirection = 1;
            break;

          default:
            slideCount = this.state.currentSlide;

        }

        this.slideHandler(slideCount);
      } else {
        // Adjust the track back to it's original position.
        var currentLeft = (0, _trackHelper.getTrackLeft)((0, _objectAssign2.default)({
          slideIndex: this.state.currentSlide,
          trackRef: this.track
        }, this.props, this.state));

        this.setState({
          trackStyle: (0, _trackHelper.getTrackAnimateCSS)((0, _objectAssign2.default)({ left: currentLeft }, this.props, this.state))
        });
      }
    },
    onInnerSliderEnter: function onInnerSliderEnter(e) {
      if (this.props.autoplay && this.props.pauseOnHover) {
        this.pause();
      }
    },
    onInnerSliderOver: function onInnerSliderOver(e) {
      if (this.props.autoplay && this.props.pauseOnHover) {
        this.pause();
      }
    },
    onInnerSliderLeave: function onInnerSliderLeave(e) {
      if (this.props.autoplay && this.props.pauseOnHover) {
        this.autoPlay();
      }
    }
  };

  exports.default = EventHandlers;

/***/ },
/* 1160 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  exports.__esModule = true;
  exports.getTrackLeft = exports.getTrackAnimateCSS = exports.getTrackCSS = undefined;

  var _reactDom = __webpack_require__(415);

  var _reactDom2 = _interopRequireDefault(_reactDom);

  var _objectAssign = __webpack_require__(387);

  var _objectAssign2 = _interopRequireDefault(_objectAssign);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  var checkSpecKeys = function checkSpecKeys(spec, keysArray) {
    return keysArray.reduce(function (value, key) {
      return value && spec.hasOwnProperty(key);
    }, true) ? null : console.error('Keys Missing', spec);
  };

  var getTrackCSS = exports.getTrackCSS = function getTrackCSS(spec) {
    checkSpecKeys(spec, ['left', 'variableWidth', 'slideCount', 'slidesToShow', 'slideWidth']);

    var trackWidth, trackHeight;

    var trackChildren = spec.slideCount + 2 * spec.slidesToShow;

    if (!spec.vertical) {
      if (spec.variableWidth) {
        trackWidth = (spec.slideCount + 2 * spec.slidesToShow) * spec.slideWidth;
      } else if (spec.centerMode) {
        trackWidth = (spec.slideCount + 2 * (spec.slidesToShow + 1)) * spec.slideWidth;
      } else {
        trackWidth = (spec.slideCount + 2 * spec.slidesToShow) * spec.slideWidth;
      }
    } else {
      trackHeight = trackChildren * spec.slideHeight;
    }

    var style = {
      opacity: 1,
      WebkitTransform: !spec.vertical ? 'translate3d(' + spec.left + 'px, 0px, 0px)' : 'translate3d(0px, ' + spec.left + 'px, 0px)',
      transform: !spec.vertical ? 'translate3d(' + spec.left + 'px, 0px, 0px)' : 'translate3d(0px, ' + spec.left + 'px, 0px)',
      transition: '',
      WebkitTransition: '',
      msTransform: !spec.vertical ? 'translateX(' + spec.left + 'px)' : 'translateY(' + spec.left + 'px)'
    };

    if (trackWidth) {
      (0, _objectAssign2.default)(style, { width: trackWidth });
    }

    if (trackHeight) {
      (0, _objectAssign2.default)(style, { height: trackHeight });
    }

    // Fallback for IE8
    if (window && !window.addEventListener && window.attachEvent) {
      if (!spec.vertical) {
        style.marginLeft = spec.left + 'px';
      } else {
        style.marginTop = spec.left + 'px';
      }
    }

    return style;
  };

  var getTrackAnimateCSS = exports.getTrackAnimateCSS = function getTrackAnimateCSS(spec) {
    checkSpecKeys(spec, ['left', 'variableWidth', 'slideCount', 'slidesToShow', 'slideWidth', 'speed', 'cssEase']);

    var style = getTrackCSS(spec);
    // useCSS is true by default so it can be undefined
    style.WebkitTransition = '-webkit-transform ' + spec.speed + 'ms ' + spec.cssEase;
    style.transition = 'transform ' + spec.speed + 'ms ' + spec.cssEase;
    return style;
  };

  var getTrackLeft = exports.getTrackLeft = function getTrackLeft(spec) {

    checkSpecKeys(spec, ['slideIndex', 'trackRef', 'infinite', 'centerMode', 'slideCount', 'slidesToShow', 'slidesToScroll', 'slideWidth', 'listWidth', 'variableWidth', 'slideHeight']);

    var slideOffset = 0;
    var targetLeft;
    var targetSlide;
    var verticalOffset = 0;

    if (spec.fade) {
      return 0;
    }

    if (spec.infinite) {
      if (spec.slideCount >= spec.slidesToShow) {
        slideOffset = spec.slideWidth * spec.slidesToShow * -1;
        verticalOffset = spec.slideHeight * spec.slidesToShow * -1;
      }
      if (spec.slideCount % spec.slidesToScroll !== 0) {
        if (spec.slideIndex + spec.slidesToScroll > spec.slideCount && spec.slideCount > spec.slidesToShow) {
          if (spec.slideIndex > spec.slideCount) {
            slideOffset = (spec.slidesToShow - (spec.slideIndex - spec.slideCount)) * spec.slideWidth * -1;
            verticalOffset = (spec.slidesToShow - (spec.slideIndex - spec.slideCount)) * spec.slideHeight * -1;
          } else {
            slideOffset = spec.slideCount % spec.slidesToScroll * spec.slideWidth * -1;
            verticalOffset = spec.slideCount % spec.slidesToScroll * spec.slideHeight * -1;
          }
        }
      }
    } else {

      if (spec.slideCount % spec.slidesToScroll !== 0) {
        if (spec.slideIndex + spec.slidesToScroll > spec.slideCount && spec.slideCount > spec.slidesToShow) {
          var slidesToOffset = spec.slidesToShow - spec.slideCount % spec.slidesToScroll;
          slideOffset = slidesToOffset * spec.slideWidth;
        }
      }
    }

    if (spec.centerMode) {
      if (spec.infinite) {
        slideOffset += spec.slideWidth * Math.floor(spec.slidesToShow / 2);
      } else {
        slideOffset = spec.slideWidth * Math.floor(spec.slidesToShow / 2);
      }
    }

    if (!spec.vertical) {
      targetLeft = spec.slideIndex * spec.slideWidth * -1 + slideOffset;
    } else {
      targetLeft = spec.slideIndex * spec.slideHeight * -1 + verticalOffset;
    }

    if (spec.variableWidth === true) {
      var targetSlideIndex;
      if (spec.slideCount <= spec.slidesToShow || spec.infinite === false) {
        targetSlide = _reactDom2.default.findDOMNode(spec.trackRef).childNodes[spec.slideIndex];
      } else {
        targetSlideIndex = spec.slideIndex + spec.slidesToShow;
        targetSlide = _reactDom2.default.findDOMNode(spec.trackRef).childNodes[targetSlideIndex];
      }
      targetLeft = targetSlide ? targetSlide.offsetLeft * -1 : 0;
      if (spec.centerMode === true) {
        if (spec.infinite === false) {
          targetSlide = _reactDom2.default.findDOMNode(spec.trackRef).children[spec.slideIndex];
        } else {
          targetSlide = _reactDom2.default.findDOMNode(spec.trackRef).children[spec.slideIndex + spec.slidesToShow + 1];
        }

        if (targetSlide) {
          targetLeft = targetSlide.offsetLeft * -1 + (spec.listWidth - targetSlide.offsetWidth) / 2;
        }
      }
    }

    return targetLeft;
  };

/***/ },
/* 1161 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  exports.__esModule = true;

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _reactDom = __webpack_require__(415);

  var _reactDom2 = _interopRequireDefault(_reactDom);

  var _trackHelper = __webpack_require__(1160);

  var _objectAssign = __webpack_require__(387);

  var _objectAssign2 = _interopRequireDefault(_objectAssign);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  var helpers = {
    initialize: function initialize(props) {
      var slickList = _reactDom2.default.findDOMNode(this.list);

      var slideCount = _react2.default.Children.count(props.children);
      var listWidth = this.getWidth(slickList);
      var trackWidth = this.getWidth(_reactDom2.default.findDOMNode(this.track));
      var slideWidth;

      if (!props.vertical) {
        var centerPaddingAdj = props.centerMode && parseInt(props.centerPadding) * 2;
        slideWidth = (this.getWidth(_reactDom2.default.findDOMNode(this)) - centerPaddingAdj) / props.slidesToShow;
      } else {
        slideWidth = this.getWidth(_reactDom2.default.findDOMNode(this));
      }

      var slideHeight = this.getHeight(slickList.querySelector('[data-index="0"]'));
      var listHeight = slideHeight * props.slidesToShow;

      var currentSlide = props.rtl ? slideCount - 1 - props.initialSlide : props.initialSlide;

      this.setState({
        slideCount: slideCount,
        slideWidth: slideWidth,
        listWidth: listWidth,
        trackWidth: trackWidth,
        currentSlide: currentSlide,
        slideHeight: slideHeight,
        listHeight: listHeight
      }, function () {

        var targetLeft = (0, _trackHelper.getTrackLeft)((0, _objectAssign2.default)({
          slideIndex: this.state.currentSlide,
          trackRef: this.track
        }, props, this.state));
        // getCSS function needs previously set state
        var trackStyle = (0, _trackHelper.getTrackCSS)((0, _objectAssign2.default)({ left: targetLeft }, props, this.state));

        this.setState({ trackStyle: trackStyle });

        this.autoPlay(); // once we're set up, trigger the initial autoplay.
      });
    },
    update: function update(props) {
      var slickList = _reactDom2.default.findDOMNode(this.list);
      // This method has mostly same code as initialize method.
      // Refactor it
      var slideCount = _react2.default.Children.count(props.children);
      var listWidth = this.getWidth(slickList);
      var trackWidth = this.getWidth(_reactDom2.default.findDOMNode(this.track));
      var slideWidth;

      if (!props.vertical) {
        var centerPaddingAdj = props.centerMode && parseInt(props.centerPadding) * 2;
        slideWidth = (this.getWidth(_reactDom2.default.findDOMNode(this)) - centerPaddingAdj) / props.slidesToShow;
      } else {
        slideWidth = this.getWidth(_reactDom2.default.findDOMNode(this));
      }

      var slideHeight = this.getHeight(slickList.querySelector('[data-index="0"]'));
      var listHeight = slideHeight * props.slidesToShow;

      // pause slider if autoplay is set to false
      if (props.autoplay) {
        this.pause();
      } else {
        this.autoPlay();
      }

      this.setState({
        slideCount: slideCount,
        slideWidth: slideWidth,
        listWidth: listWidth,
        trackWidth: trackWidth,
        slideHeight: slideHeight,
        listHeight: listHeight
      }, function () {

        var targetLeft = (0, _trackHelper.getTrackLeft)((0, _objectAssign2.default)({
          slideIndex: this.state.currentSlide,
          trackRef: this.track
        }, props, this.state));
        // getCSS function needs previously set state
        var trackStyle = (0, _trackHelper.getTrackCSS)((0, _objectAssign2.default)({ left: targetLeft }, props, this.state));

        this.setState({ trackStyle: trackStyle });
      });
    },
    getWidth: function getWidth(elem) {
      return elem.getBoundingClientRect().width || elem.offsetWidth || 0;
    },
    getHeight: function getHeight(elem) {
      return elem.getBoundingClientRect().height || elem.offsetHeight || 0;
    },

    adaptHeight: function adaptHeight() {
      if (this.props.adaptiveHeight) {
        var selector = '[data-index="' + this.state.currentSlide + '"]';
        if (this.list) {
          var slickList = _reactDom2.default.findDOMNode(this.list);
          slickList.style.height = slickList.querySelector(selector).offsetHeight + 'px';
        }
      }
    },
    canGoNext: function canGoNext(opts) {
      var canGo = true;
      if (!opts.infinite) {
        if (opts.centerMode) {
          // check if current slide is last slide
          if (opts.currentSlide >= opts.slideCount - 1) {
            canGo = false;
          }
        } else {
          // check if all slides are shown in slider
          if (opts.slideCount <= opts.slidesToShow || opts.currentSlide >= opts.slideCount - opts.slidesToShow) {
            canGo = false;
          }
        }
      }
      return canGo;
    },
    slideHandler: function slideHandler(index) {
      var _this = this;

      // Functionality of animateSlide and postSlide is merged into this function
      // console.log('slideHandler', index);
      var targetSlide, currentSlide;
      var targetLeft, currentLeft;
      var callback;

      if (this.props.waitForAnimate && this.state.animating) {
        return;
      }

      if (this.props.fade) {
        currentSlide = this.state.currentSlide;

        // Don't change slide if it's not infite and current slide is the first or last slide.
        if (this.props.infinite === false && (index < 0 || index >= this.state.slideCount)) {
          return;
        }

        //  Shifting targetSlide back into the range
        if (index < 0) {
          targetSlide = index + this.state.slideCount;
        } else if (index >= this.state.slideCount) {
          targetSlide = index - this.state.slideCount;
        } else {
          targetSlide = index;
        }

        if (this.props.lazyLoad && this.state.lazyLoadedList.indexOf(targetSlide) < 0) {
          this.setState({
            lazyLoadedList: this.state.lazyLoadedList.concat(targetSlide)
          });
        }

        callback = function callback() {
          _this.setState({
            animating: false
          });
          if (_this.props.afterChange) {
            _this.props.afterChange(targetSlide);
          }
          delete _this.animationEndCallback;
        };

        this.setState({
          animating: true,
          currentSlide: targetSlide
        }, function () {
          this.animationEndCallback = setTimeout(callback, this.props.speed);
        });

        if (this.props.beforeChange) {
          this.props.beforeChange(this.state.currentSlide, targetSlide);
        }

        this.autoPlay();
        return;
      }

      targetSlide = index;
      if (targetSlide < 0) {
        if (this.props.infinite === false) {
          currentSlide = 0;
        } else if (this.state.slideCount % this.props.slidesToScroll !== 0) {
          currentSlide = this.state.slideCount - this.state.slideCount % this.props.slidesToScroll;
        } else {
          currentSlide = this.state.slideCount + targetSlide;
        }
      } else if (targetSlide >= this.state.slideCount) {
        if (this.props.infinite === false) {
          currentSlide = this.state.slideCount - this.props.slidesToShow;
        } else if (this.state.slideCount % this.props.slidesToScroll !== 0) {
          currentSlide = 0;
        } else {
          currentSlide = targetSlide - this.state.slideCount;
        }
      } else {
        currentSlide = targetSlide;
      }

      targetLeft = (0, _trackHelper.getTrackLeft)((0, _objectAssign2.default)({
        slideIndex: targetSlide,
        trackRef: this.track
      }, this.props, this.state));

      currentLeft = (0, _trackHelper.getTrackLeft)((0, _objectAssign2.default)({
        slideIndex: currentSlide,
        trackRef: this.track
      }, this.props, this.state));

      if (this.props.infinite === false) {
        targetLeft = currentLeft;
      }

      if (this.props.beforeChange) {
        this.props.beforeChange(this.state.currentSlide, currentSlide);
      }

      if (this.props.lazyLoad) {
        var loaded = true;
        var slidesToLoad = [];
        for (var i = targetSlide; i < targetSlide + this.props.slidesToShow; i++) {
          loaded = loaded && this.state.lazyLoadedList.indexOf(i) >= 0;
          if (!loaded) {
            slidesToLoad.push(i);
          }
        }
        if (!loaded) {
          this.setState({
            lazyLoadedList: this.state.lazyLoadedList.concat(slidesToLoad)
          });
        }
      }

      // Slide Transition happens here.
      // animated transition happens to target Slide and
      // non - animated transition happens to current Slide
      // If CSS transitions are false, directly go the current slide.

      if (this.props.useCSS === false) {

        this.setState({
          currentSlide: currentSlide,
          trackStyle: (0, _trackHelper.getTrackCSS)((0, _objectAssign2.default)({ left: currentLeft }, this.props, this.state))
        }, function () {
          if (this.props.afterChange) {
            this.props.afterChange(currentSlide);
          }
        });
      } else {

        var nextStateChanges = {
          animating: false,
          currentSlide: currentSlide,
          trackStyle: (0, _trackHelper.getTrackCSS)((0, _objectAssign2.default)({ left: currentLeft }, this.props, this.state)),
          swipeLeft: null
        };

        callback = function callback() {
          _this.setState(nextStateChanges);
          if (_this.props.afterChange) {
            _this.props.afterChange(currentSlide);
          }
          delete _this.animationEndCallback;
        };

        this.setState({
          animating: true,
          currentSlide: currentSlide,
          trackStyle: (0, _trackHelper.getTrackAnimateCSS)((0, _objectAssign2.default)({ left: targetLeft }, this.props, this.state))
        }, function () {
          this.animationEndCallback = setTimeout(callback, this.props.speed);
        });
      }

      this.autoPlay();
    },
    swipeDirection: function swipeDirection(touchObject) {
      var xDist, yDist, r, swipeAngle;

      xDist = touchObject.startX - touchObject.curX;
      yDist = touchObject.startY - touchObject.curY;
      r = Math.atan2(yDist, xDist);

      swipeAngle = Math.round(r * 180 / Math.PI);
      if (swipeAngle < 0) {
        swipeAngle = 360 - Math.abs(swipeAngle);
      }
      if (swipeAngle <= 45 && swipeAngle >= 0 || swipeAngle <= 360 && swipeAngle >= 315) {
        return this.props.rtl === false ? 'left' : 'right';
      }
      if (swipeAngle >= 135 && swipeAngle <= 225) {
        return this.props.rtl === false ? 'right' : 'left';
      }
      if (this.props.verticalSwiping === true) {
        if (swipeAngle >= 35 && swipeAngle <= 135) {
          return 'down';
        } else {
          return 'up';
        }
      }

      return 'vertical';
    },
    play: function play() {
      var nextIndex;

      if (!this.state.mounted) {
        return false;
      }

      if (this.props.rtl) {
        nextIndex = this.state.currentSlide - this.props.slidesToScroll;
      } else {
        if (this.canGoNext(_extends({}, this.props, this.state))) {
          nextIndex = this.state.currentSlide + this.props.slidesToScroll;
        } else {
          return false;
        }
      }

      this.slideHandler(nextIndex);
    },
    autoPlay: function autoPlay() {
      if (this.state.autoPlayTimer) {
        clearTimeout(this.state.autoPlayTimer);
      }
      if (this.props.autoplay) {
        this.setState({
          autoPlayTimer: setTimeout(this.play, this.props.autoplaySpeed)
        });
      }
    },
    pause: function pause() {
      if (this.state.autoPlayTimer) {
        clearTimeout(this.state.autoPlayTimer);
        this.setState({
          autoPlayTimer: null
        });
      }
    }
  };

  exports.default = helpers;

/***/ },
/* 1162 */
/***/ function(module, exports) {

  "use strict";

  var initialState = {
      animating: false,
      dragging: false,
      autoPlayTimer: null,
      currentDirection: 0,
      currentLeft: null,
      currentSlide: 0,
      direction: 1,
      listWidth: null,
      listHeight: null,
      // loadIndex: 0,
      slideCount: null,
      slideWidth: null,
      slideHeight: null,
      // sliding: false,
      // slideOffset: 0,
      swipeLeft: null,
      touchObject: {
          startX: 0,
          startY: 0,
          curX: 0,
          curY: 0
      },

      lazyLoadedList: [],

      // added for react
      initialized: false,
      edgeDragged: false,
      swiped: false, // used by swipeEvent. differentites between touch and swipe.
      trackStyle: {},
      trackWidth: 0

      // Removed
      // transformsEnabled: false,
      // $nextArrow: null,
      // $prevArrow: null,
      // $dots: null,
      // $list: null,
      // $slideTrack: null,
      // $slides: null,
  };

  module.exports = initialState;

/***/ },
/* 1163 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  var defaultProps = {
      className: '',
      accessibility: true,
      adaptiveHeight: false,
      arrows: true,
      autoplay: false,
      autoplaySpeed: 3000,
      centerMode: false,
      centerPadding: '50px',
      cssEase: 'ease',
      customPaging: function customPaging(i) {
          return _react2.default.createElement(
              'button',
              null,
              i + 1
          );
      },
      dots: false,
      dotsClass: 'slick-dots',
      draggable: true,
      easing: 'linear',
      edgeFriction: 0.35,
      fade: false,
      focusOnSelect: false,
      infinite: true,
      initialSlide: 0,
      lazyLoad: false,
      pauseOnHover: true,
      responsive: null,
      rtl: false,
      slide: 'div',
      slidesToShow: 1,
      slidesToScroll: 1,
      speed: 500,
      swipe: true,
      swipeToSlide: false,
      touchMove: true,
      touchThreshold: 5,
      useCSS: true,
      variableWidth: false,
      vertical: false,
      waitForAnimate: true,
      afterChange: null,
      beforeChange: null,
      edgeEvent: null,
      init: null,
      swipeEvent: null,
      // nextArrow, prevArrow are react componets
      nextArrow: null,
      prevArrow: null
  };

  module.exports = defaultProps;

/***/ },
/* 1164 */
/***/ function(module, exports, __webpack_require__) {

  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  var React = __webpack_require__(385);
  var factory = __webpack_require__(1165);

  // Hack to grab NoopUpdateQueue from isomorphic React
  var ReactNoopUpdateQueue = new React.Component().updater;

  module.exports = factory(
    React.Component,
    React.isValidElement,
    ReactNoopUpdateQueue
  );


/***/ },
/* 1165 */
/***/ function(module, exports, __webpack_require__) {

  /**
   * Copyright 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  var _assign = __webpack_require__(1166);

  var emptyObject = __webpack_require__(1167);
  var _invariant = __webpack_require__(1168);

  if (true) {
    var warning = __webpack_require__(1169);
  }

  var MIXINS_KEY = 'mixins';

  // Helper function to allow the creation of anonymous functions which do not
  // have .name set to the name of the variable being assigned to.
  function identity(fn) {
    return fn;
  }

  var ReactPropTypeLocationNames;
  if (true) {
    ReactPropTypeLocationNames = {
      prop: 'prop',
      context: 'context',
      childContext: 'child context',
    };
  } else {
    ReactPropTypeLocationNames = {};
  }

  function factory(ReactComponent, isValidElement, ReactNoopUpdateQueue) {
    /**
     * Policies that describe methods in `ReactClassInterface`.
     */


    var injectedMixins = [];

    /**
     * Composite components are higher-level components that compose other composite
     * or host components.
     *
     * To create a new type of `ReactClass`, pass a specification of
     * your new class to `React.createClass`. The only requirement of your class
     * specification is that you implement a `render` method.
     *
     *   var MyComponent = React.createClass({
     *     render: function() {
     *       return <div>Hello World</div>;
     *     }
     *   });
     *
     * The class specification supports a specific protocol of methods that have
     * special meaning (e.g. `render`). See `ReactClassInterface` for
     * more the comprehensive protocol. Any other properties and methods in the
     * class specification will be available on the prototype.
     *
     * @interface ReactClassInterface
     * @internal
     */
    var ReactClassInterface = {

      /**
       * An array of Mixin objects to include when defining your component.
       *
       * @type {array}
       * @optional
       */
      mixins: 'DEFINE_MANY',

      /**
       * An object containing properties and methods that should be defined on
       * the component's constructor instead of its prototype (static methods).
       *
       * @type {object}
       * @optional
       */
      statics: 'DEFINE_MANY',

      /**
       * Definition of prop types for this component.
       *
       * @type {object}
       * @optional
       */
      propTypes: 'DEFINE_MANY',

      /**
       * Definition of context types for this component.
       *
       * @type {object}
       * @optional
       */
      contextTypes: 'DEFINE_MANY',

      /**
       * Definition of context types this component sets for its children.
       *
       * @type {object}
       * @optional
       */
      childContextTypes: 'DEFINE_MANY',

      // ==== Definition methods ====

      /**
       * Invoked when the component is mounted. Values in the mapping will be set on
       * `this.props` if that prop is not specified (i.e. using an `in` check).
       *
       * This method is invoked before `getInitialState` and therefore cannot rely
       * on `this.state` or use `this.setState`.
       *
       * @return {object}
       * @optional
       */
      getDefaultProps: 'DEFINE_MANY_MERGED',

      /**
       * Invoked once before the component is mounted. The return value will be used
       * as the initial value of `this.state`.
       *
       *   getInitialState: function() {
       *     return {
       *       isOn: false,
       *       fooBaz: new BazFoo()
       *     }
       *   }
       *
       * @return {object}
       * @optional
       */
      getInitialState: 'DEFINE_MANY_MERGED',

      /**
       * @return {object}
       * @optional
       */
      getChildContext: 'DEFINE_MANY_MERGED',

      /**
       * Uses props from `this.props` and state from `this.state` to render the
       * structure of the component.
       *
       * No guarantees are made about when or how often this method is invoked, so
       * it must not have side effects.
       *
       *   render: function() {
       *     var name = this.props.name;
       *     return <div>Hello, {name}!</div>;
       *   }
       *
       * @return {ReactComponent}
       * @nosideeffects
       * @required
       */
      render: 'DEFINE_ONCE',

      // ==== Delegate methods ====

      /**
       * Invoked when the component is initially created and about to be mounted.
       * This may have side effects, but any external subscriptions or data created
       * by this method must be cleaned up in `componentWillUnmount`.
       *
       * @optional
       */
      componentWillMount: 'DEFINE_MANY',

      /**
       * Invoked when the component has been mounted and has a DOM representation.
       * However, there is no guarantee that the DOM node is in the document.
       *
       * Use this as an opportunity to operate on the DOM when the component has
       * been mounted (initialized and rendered) for the first time.
       *
       * @param {DOMElement} rootNode DOM element representing the component.
       * @optional
       */
      componentDidMount: 'DEFINE_MANY',

      /**
       * Invoked before the component receives new props.
       *
       * Use this as an opportunity to react to a prop transition by updating the
       * state using `this.setState`. Current props are accessed via `this.props`.
       *
       *   componentWillReceiveProps: function(nextProps, nextContext) {
       *     this.setState({
       *       likesIncreasing: nextProps.likeCount > this.props.likeCount
       *     });
       *   }
       *
       * NOTE: There is no equivalent `componentWillReceiveState`. An incoming prop
       * transition may cause a state change, but the opposite is not true. If you
       * need it, you are probably looking for `componentWillUpdate`.
       *
       * @param {object} nextProps
       * @optional
       */
      componentWillReceiveProps: 'DEFINE_MANY',

      /**
       * Invoked while deciding if the component should be updated as a result of
       * receiving new props, state and/or context.
       *
       * Use this as an opportunity to `return false` when you're certain that the
       * transition to the new props/state/context will not require a component
       * update.
       *
       *   shouldComponentUpdate: function(nextProps, nextState, nextContext) {
       *     return !equal(nextProps, this.props) ||
       *       !equal(nextState, this.state) ||
       *       !equal(nextContext, this.context);
       *   }
       *
       * @param {object} nextProps
       * @param {?object} nextState
       * @param {?object} nextContext
       * @return {boolean} True if the component should update.
       * @optional
       */
      shouldComponentUpdate: 'DEFINE_ONCE',

      /**
       * Invoked when the component is about to update due to a transition from
       * `this.props`, `this.state` and `this.context` to `nextProps`, `nextState`
       * and `nextContext`.
       *
       * Use this as an opportunity to perform preparation before an update occurs.
       *
       * NOTE: You **cannot** use `this.setState()` in this method.
       *
       * @param {object} nextProps
       * @param {?object} nextState
       * @param {?object} nextContext
       * @param {ReactReconcileTransaction} transaction
       * @optional
       */
      componentWillUpdate: 'DEFINE_MANY',

      /**
       * Invoked when the component's DOM representation has been updated.
       *
       * Use this as an opportunity to operate on the DOM when the component has
       * been updated.
       *
       * @param {object} prevProps
       * @param {?object} prevState
       * @param {?object} prevContext
       * @param {DOMElement} rootNode DOM element representing the component.
       * @optional
       */
      componentDidUpdate: 'DEFINE_MANY',

      /**
       * Invoked when the component is about to be removed from its parent and have
       * its DOM representation destroyed.
       *
       * Use this as an opportunity to deallocate any external resources.
       *
       * NOTE: There is no `componentDidUnmount` since your component will have been
       * destroyed by that point.
       *
       * @optional
       */
      componentWillUnmount: 'DEFINE_MANY',

      // ==== Advanced methods ====

      /**
       * Updates the component's currently mounted DOM representation.
       *
       * By default, this implements React's rendering and reconciliation algorithm.
       * Sophisticated clients may wish to override this.
       *
       * @param {ReactReconcileTransaction} transaction
       * @internal
       * @overridable
       */
      updateComponent: 'OVERRIDE_BASE'

    };

    /**
     * Mapping from class specification keys to special processing functions.
     *
     * Although these are declared like instance properties in the specification
     * when defining classes using `React.createClass`, they are actually static
     * and are accessible on the constructor instead of the prototype. Despite
     * being static, they must be defined outside of the "statics" key under
     * which all other static methods are defined.
     */
    var RESERVED_SPEC_KEYS = {
      displayName: function (Constructor, displayName) {
        Constructor.displayName = displayName;
      },
      mixins: function (Constructor, mixins) {
        if (mixins) {
          for (var i = 0; i < mixins.length; i++) {
            mixSpecIntoComponent(Constructor, mixins[i]);
          }
        }
      },
      childContextTypes: function (Constructor, childContextTypes) {
        if (true) {
          validateTypeDef(Constructor, childContextTypes, 'childContext');
        }
        Constructor.childContextTypes = _assign({}, Constructor.childContextTypes, childContextTypes);
      },
      contextTypes: function (Constructor, contextTypes) {
        if (true) {
          validateTypeDef(Constructor, contextTypes, 'context');
        }
        Constructor.contextTypes = _assign({}, Constructor.contextTypes, contextTypes);
      },
      /**
       * Special case getDefaultProps which should move into statics but requires
       * automatic merging.
       */
      getDefaultProps: function (Constructor, getDefaultProps) {
        if (Constructor.getDefaultProps) {
          Constructor.getDefaultProps = createMergedResultFunction(Constructor.getDefaultProps, getDefaultProps);
        } else {
          Constructor.getDefaultProps = getDefaultProps;
        }
      },
      propTypes: function (Constructor, propTypes) {
        if (true) {
          validateTypeDef(Constructor, propTypes, 'prop');
        }
        Constructor.propTypes = _assign({}, Constructor.propTypes, propTypes);
      },
      statics: function (Constructor, statics) {
        mixStaticSpecIntoComponent(Constructor, statics);
      },
      autobind: function () {} };

    function validateTypeDef(Constructor, typeDef, location) {
      for (var propName in typeDef) {
        if (typeDef.hasOwnProperty(propName)) {
          // use a warning instead of an _invariant so components
          // don't show up in prod but only in __DEV__
           true ? warning(typeof typeDef[propName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'React.PropTypes.', Constructor.displayName || 'ReactClass', ReactPropTypeLocationNames[location], propName) : void 0;
        }
      }
    }

    function validateMethodOverride(isAlreadyDefined, name) {
      var specPolicy = ReactClassInterface.hasOwnProperty(name) ? ReactClassInterface[name] : null;

      // Disallow overriding of base class methods unless explicitly allowed.
      if (ReactClassMixin.hasOwnProperty(name)) {
        _invariant(specPolicy === 'OVERRIDE_BASE', 'ReactClassInterface: You are attempting to override ' + '`%s` from your class specification. Ensure that your method names ' + 'do not overlap with React methods.', name);
      }

      // Disallow defining methods more than once unless explicitly allowed.
      if (isAlreadyDefined) {
        _invariant(specPolicy === 'DEFINE_MANY' || specPolicy === 'DEFINE_MANY_MERGED', 'ReactClassInterface: You are attempting to define ' + '`%s` on your component more than once. This conflict may be due ' + 'to a mixin.', name);
      }
    }

    /**
     * Mixin helper which handles policy validation and reserved
     * specification keys when building React classes.
     */
    function mixSpecIntoComponent(Constructor, spec) {
      if (!spec) {
        if (true) {
          var typeofSpec = typeof spec;
          var isMixinValid = typeofSpec === 'object' && spec !== null;

           true ? warning(isMixinValid, '%s: You\'re attempting to include a mixin that is either null ' + 'or not an object. Check the mixins included by the component, ' + 'as well as any mixins they include themselves. ' + 'Expected object but got %s.', Constructor.displayName || 'ReactClass', spec === null ? null : typeofSpec) : void 0;
        }

        return;
      }

      _invariant(typeof spec !== 'function', 'ReactClass: You\'re attempting to ' + 'use a component class or function as a mixin. Instead, just use a ' + 'regular object.');
      _invariant(!isValidElement(spec), 'ReactClass: You\'re attempting to ' + 'use a component as a mixin. Instead, just use a regular object.');

      var proto = Constructor.prototype;
      var autoBindPairs = proto.__reactAutoBindPairs;

      // By handling mixins before any other properties, we ensure the same
      // chaining order is applied to methods with DEFINE_MANY policy, whether
      // mixins are listed before or after these methods in the spec.
      if (spec.hasOwnProperty(MIXINS_KEY)) {
        RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);
      }

      for (var name in spec) {
        if (!spec.hasOwnProperty(name)) {
          continue;
        }

        if (name === MIXINS_KEY) {
          // We have already handled mixins in a special case above.
          continue;
        }

        var property = spec[name];
        var isAlreadyDefined = proto.hasOwnProperty(name);
        validateMethodOverride(isAlreadyDefined, name);

        if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {
          RESERVED_SPEC_KEYS[name](Constructor, property);
        } else {
          // Setup methods on prototype:
          // The following member methods should not be automatically bound:
          // 1. Expected ReactClass methods (in the "interface").
          // 2. Overridden methods (that were mixed in).
          var isReactClassMethod = ReactClassInterface.hasOwnProperty(name);
          var isFunction = typeof property === 'function';
          var shouldAutoBind = isFunction && !isReactClassMethod && !isAlreadyDefined && spec.autobind !== false;

          if (shouldAutoBind) {
            autoBindPairs.push(name, property);
            proto[name] = property;
          } else {
            if (isAlreadyDefined) {
              var specPolicy = ReactClassInterface[name];

              // These cases should already be caught by validateMethodOverride.
              _invariant(isReactClassMethod && (specPolicy === 'DEFINE_MANY_MERGED' || specPolicy === 'DEFINE_MANY'), 'ReactClass: Unexpected spec policy %s for key %s ' + 'when mixing in component specs.', specPolicy, name);

              // For methods which are defined more than once, call the existing
              // methods before calling the new property, merging if appropriate.
              if (specPolicy === 'DEFINE_MANY_MERGED') {
                proto[name] = createMergedResultFunction(proto[name], property);
              } else if (specPolicy === 'DEFINE_MANY') {
                proto[name] = createChainedFunction(proto[name], property);
              }
            } else {
              proto[name] = property;
              if (true) {
                // Add verbose displayName to the function, which helps when looking
                // at profiling tools.
                if (typeof property === 'function' && spec.displayName) {
                  proto[name].displayName = spec.displayName + '_' + name;
                }
              }
            }
          }
        }
      }
    }

    function mixStaticSpecIntoComponent(Constructor, statics) {
      if (!statics) {
        return;
      }
      for (var name in statics) {
        var property = statics[name];
        if (!statics.hasOwnProperty(name)) {
          continue;
        }

        var isReserved = name in RESERVED_SPEC_KEYS;
        _invariant(!isReserved, 'ReactClass: You are attempting to define a reserved ' + 'property, `%s`, that shouldn\'t be on the "statics" key. Define it ' + 'as an instance property instead; it will still be accessible on the ' + 'constructor.', name);

        var isInherited = name in Constructor;
        _invariant(!isInherited, 'ReactClass: You are attempting to define ' + '`%s` on your component more than once. This conflict may be ' + 'due to a mixin.', name);
        Constructor[name] = property;
      }
    }

    /**
     * Merge two objects, but throw if both contain the same key.
     *
     * @param {object} one The first object, which is mutated.
     * @param {object} two The second object
     * @return {object} one after it has been mutated to contain everything in two.
     */
    function mergeIntoWithNoDuplicateKeys(one, two) {
      _invariant(one && two && typeof one === 'object' && typeof two === 'object', 'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.');

      for (var key in two) {
        if (two.hasOwnProperty(key)) {
          _invariant(one[key] === undefined, 'mergeIntoWithNoDuplicateKeys(): ' + 'Tried to merge two objects with the same key: `%s`. This conflict ' + 'may be due to a mixin; in particular, this may be caused by two ' + 'getInitialState() or getDefaultProps() methods returning objects ' + 'with clashing keys.', key);
          one[key] = two[key];
        }
      }
      return one;
    }

    /**
     * Creates a function that invokes two functions and merges their return values.
     *
     * @param {function} one Function to invoke first.
     * @param {function} two Function to invoke second.
     * @return {function} Function that invokes the two argument functions.
     * @private
     */
    function createMergedResultFunction(one, two) {
      return function mergedResult() {
        var a = one.apply(this, arguments);
        var b = two.apply(this, arguments);
        if (a == null) {
          return b;
        } else if (b == null) {
          return a;
        }
        var c = {};
        mergeIntoWithNoDuplicateKeys(c, a);
        mergeIntoWithNoDuplicateKeys(c, b);
        return c;
      };
    }

    /**
     * Creates a function that invokes two functions and ignores their return vales.
     *
     * @param {function} one Function to invoke first.
     * @param {function} two Function to invoke second.
     * @return {function} Function that invokes the two argument functions.
     * @private
     */
    function createChainedFunction(one, two) {
      return function chainedFunction() {
        one.apply(this, arguments);
        two.apply(this, arguments);
      };
    }

    /**
     * Binds a method to the component.
     *
     * @param {object} component Component whose method is going to be bound.
     * @param {function} method Method to be bound.
     * @return {function} The bound method.
     */
    function bindAutoBindMethod(component, method) {
      var boundMethod = method.bind(component);
      if (true) {
        boundMethod.__reactBoundContext = component;
        boundMethod.__reactBoundMethod = method;
        boundMethod.__reactBoundArguments = null;
        var componentName = component.constructor.displayName;
        var _bind = boundMethod.bind;
        boundMethod.bind = function (newThis) {
          for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
            args[_key - 1] = arguments[_key];
          }

          // User is trying to bind() an autobound method; we effectively will
          // ignore the value of "this" that the user is trying to use, so
          // let's warn.
          if (newThis !== component && newThis !== null) {
             true ? warning(false, 'bind(): React component methods may only be bound to the ' + 'component instance. See %s', componentName) : void 0;
          } else if (!args.length) {
             true ? warning(false, 'bind(): You are binding a component method to the component. ' + 'React does this for you automatically in a high-performance ' + 'way, so you can safely remove this call. See %s', componentName) : void 0;
            return boundMethod;
          }
          var reboundMethod = _bind.apply(boundMethod, arguments);
          reboundMethod.__reactBoundContext = component;
          reboundMethod.__reactBoundMethod = method;
          reboundMethod.__reactBoundArguments = args;
          return reboundMethod;
        };
      }
      return boundMethod;
    }

    /**
     * Binds all auto-bound methods in a component.
     *
     * @param {object} component Component whose method is going to be bound.
     */
    function bindAutoBindMethods(component) {
      var pairs = component.__reactAutoBindPairs;
      for (var i = 0; i < pairs.length; i += 2) {
        var autoBindKey = pairs[i];
        var method = pairs[i + 1];
        component[autoBindKey] = bindAutoBindMethod(component, method);
      }
    }

    var IsMountedMixin = {
      componentDidMount: function () {
        this.__isMounted = true;
      },
      componentWillUnmount: function () {
        this.__isMounted = false;
      }
    };

    /**
     * Add more to the ReactClass base class. These are all legacy features and
     * therefore not already part of the modern ReactComponent.
     */
    var ReactClassMixin = {

      /**
       * TODO: This will be deprecated because state should always keep a consistent
       * type signature and the only use case for this, is to avoid that.
       */
      replaceState: function (newState, callback) {
        this.updater.enqueueReplaceState(this, newState, callback);
      },

      /**
       * Checks whether or not this composite component is mounted.
       * @return {boolean} True if mounted, false otherwise.
       * @protected
       * @final
       */
      isMounted: function () {
        if (true) {
           true ? warning(this.__didWarnIsMounted, '%s: isMounted is deprecated. Instead, make sure to clean up ' + 'subscriptions and pending requests in componentWillUnmount to ' + 'prevent memory leaks.', this.constructor && this.constructor.displayName || this.name || 'Component') : void 0;
          this.__didWarnIsMounted = true;
        }
        return !!this.__isMounted;
      }
    };

    var ReactClassComponent = function () {};
    _assign(ReactClassComponent.prototype, ReactComponent.prototype, ReactClassMixin);

    /**
     * Creates a composite component class given a class specification.
     * See https://facebook.github.io/react/docs/top-level-api.html#react.createclass
     *
     * @param {object} spec Class specification (which must define `render`).
     * @return {function} Component constructor function.
     * @public
     */
    function createClass(spec) {
      // To keep our warnings more understandable, we'll use a little hack here to
      // ensure that Constructor.name !== 'Constructor'. This makes sure we don't
      // unnecessarily identify a class without displayName as 'Constructor'.
      var Constructor = identity(function (props, context, updater) {
        // This constructor gets overridden by mocks. The argument is used
        // by mocks to assert on what gets mounted.

        if (true) {
           true ? warning(this instanceof Constructor, 'Something is calling a React component directly. Use a factory or ' + 'JSX instead. See: https://fb.me/react-legacyfactory') : void 0;
        }

        // Wire up auto-binding
        if (this.__reactAutoBindPairs.length) {
          bindAutoBindMethods(this);
        }

        this.props = props;
        this.context = context;
        this.refs = emptyObject;
        this.updater = updater || ReactNoopUpdateQueue;

        this.state = null;

        // ReactClasses doesn't have constructors. Instead, they use the
        // getInitialState and componentWillMount methods for initialization.

        var initialState = this.getInitialState ? this.getInitialState() : null;
        if (true) {
          // We allow auto-mocks to proceed as if they're returning null.
          if (initialState === undefined && this.getInitialState._isMockFunction) {
            // This is probably bad practice. Consider warning here and
            // deprecating this convenience.
            initialState = null;
          }
        }
        _invariant(typeof initialState === 'object' && !Array.isArray(initialState), '%s.getInitialState(): must return an object or null', Constructor.displayName || 'ReactCompositeComponent');

        this.state = initialState;
      });
      Constructor.prototype = new ReactClassComponent();
      Constructor.prototype.constructor = Constructor;
      Constructor.prototype.__reactAutoBindPairs = [];

      injectedMixins.forEach(mixSpecIntoComponent.bind(null, Constructor));

      mixSpecIntoComponent(Constructor, IsMountedMixin);
      mixSpecIntoComponent(Constructor, spec);

      // Initialize the defaultProps property after all mixins have been merged.
      if (Constructor.getDefaultProps) {
        Constructor.defaultProps = Constructor.getDefaultProps();
      }

      if (true) {
        // This is a tag to indicate that the use of these method names is ok,
        // since it's used with createClass. If it's not, then it's likely a
        // mistake so we'll warn you to use the static property, property
        // initializer or constructor respectively.
        if (Constructor.getDefaultProps) {
          Constructor.getDefaultProps.isReactClassApproved = {};
        }
        if (Constructor.prototype.getInitialState) {
          Constructor.prototype.getInitialState.isReactClassApproved = {};
        }
      }

      _invariant(Constructor.prototype.render, 'createClass(...): Class specification must implement a `render` method.');

      if (true) {
         true ? warning(!Constructor.prototype.componentShouldUpdate, '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', spec.displayName || 'A component') : void 0;
         true ? warning(!Constructor.prototype.componentWillRecieveProps, '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', spec.displayName || 'A component') : void 0;
      }

      // Reduce time spent doing lookups by setting these on the prototype.
      for (var methodName in ReactClassInterface) {
        if (!Constructor.prototype[methodName]) {
          Constructor.prototype[methodName] = null;
        }
      }

      return Constructor;
    }

    return createClass;
  }

  module.exports = factory;


/***/ },
/* 1166 */
/***/ function(module, exports) {

  /*
  object-assign
  (c) Sindre Sorhus
  @license MIT
  */

  'use strict';
  /* eslint-disable no-unused-vars */
  var getOwnPropertySymbols = Object.getOwnPropertySymbols;
  var hasOwnProperty = Object.prototype.hasOwnProperty;
  var propIsEnumerable = Object.prototype.propertyIsEnumerable;

  function toObject(val) {
  	if (val === null || val === undefined) {
  		throw new TypeError('Object.assign cannot be called with null or undefined');
  	}

  	return Object(val);
  }

  function shouldUseNative() {
  	try {
  		if (!Object.assign) {
  			return false;
  		}

  		// Detect buggy property enumeration order in older V8 versions.

  		// https://bugs.chromium.org/p/v8/issues/detail?id=4118
  		var test1 = new String('abc');  // eslint-disable-line no-new-wrappers
  		test1[5] = 'de';
  		if (Object.getOwnPropertyNames(test1)[0] === '5') {
  			return false;
  		}

  		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
  		var test2 = {};
  		for (var i = 0; i < 10; i++) {
  			test2['_' + String.fromCharCode(i)] = i;
  		}
  		var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
  			return test2[n];
  		});
  		if (order2.join('') !== '0123456789') {
  			return false;
  		}

  		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
  		var test3 = {};
  		'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
  			test3[letter] = letter;
  		});
  		if (Object.keys(Object.assign({}, test3)).join('') !==
  				'abcdefghijklmnopqrst') {
  			return false;
  		}

  		return true;
  	} catch (err) {
  		// We don't expect any of the above to throw, but better to be safe.
  		return false;
  	}
  }

  module.exports = shouldUseNative() ? Object.assign : function (target, source) {
  	var from;
  	var to = toObject(target);
  	var symbols;

  	for (var s = 1; s < arguments.length; s++) {
  		from = Object(arguments[s]);

  		for (var key in from) {
  			if (hasOwnProperty.call(from, key)) {
  				to[key] = from[key];
  			}
  		}

  		if (getOwnPropertySymbols) {
  			symbols = getOwnPropertySymbols(from);
  			for (var i = 0; i < symbols.length; i++) {
  				if (propIsEnumerable.call(from, symbols[i])) {
  					to[symbols[i]] = from[symbols[i]];
  				}
  			}
  		}
  	}

  	return to;
  };


/***/ },
/* 1167 */
/***/ function(module, exports, __webpack_require__) {

  /**
   * Copyright (c) 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  var emptyObject = {};

  if (true) {
    Object.freeze(emptyObject);
  }

  module.exports = emptyObject;

/***/ },
/* 1168 */
/***/ function(module, exports, __webpack_require__) {

  /**
   * Copyright (c) 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  /**
   * Use invariant() to assert state which your program assumes to be true.
   *
   * Provide sprintf-style format (only %s is supported) and arguments
   * to provide information about what broke and what you were
   * expecting.
   *
   * The invariant message will be stripped in production, but the invariant
   * will remain to ensure logic does not differ in production.
   */

  var validateFormat = function validateFormat(format) {};

  if (true) {
    validateFormat = function validateFormat(format) {
      if (format === undefined) {
        throw new Error('invariant requires an error message argument');
      }
    };
  }

  function invariant(condition, format, a, b, c, d, e, f) {
    validateFormat(format);

    if (!condition) {
      var error;
      if (format === undefined) {
        error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
      } else {
        var args = [a, b, c, d, e, f];
        var argIndex = 0;
        error = new Error(format.replace(/%s/g, function () {
          return args[argIndex++];
        }));
        error.name = 'Invariant Violation';
      }

      error.framesToPop = 1; // we don't care about invariant's own frame
      throw error;
    }
  }

  module.exports = invariant;

/***/ },
/* 1169 */
/***/ function(module, exports, __webpack_require__) {

  /**
   * Copyright 2014-2015, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   */

  'use strict';

  var emptyFunction = __webpack_require__(1170);

  /**
   * Similar to invariant but only logs a warning if the condition is not met.
   * This can be used to log issues in development environments in critical
   * paths. Removing the logging code for production environments will keep the
   * same logic and follow the same code paths.
   */

  var warning = emptyFunction;

  if (true) {
    (function () {
      var printWarning = function printWarning(format) {
        for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
          args[_key - 1] = arguments[_key];
        }

        var argIndex = 0;
        var message = 'Warning: ' + format.replace(/%s/g, function () {
          return args[argIndex++];
        });
        if (typeof console !== 'undefined') {
          console.error(message);
        }
        try {
          // --- Welcome to debugging React ---
          // This error was thrown as a convenience so that you can use this stack
          // to find the callsite that caused this warning to fire.
          throw new Error(message);
        } catch (x) {}
      };

      warning = function warning(condition, format) {
        if (format === undefined) {
          throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
        }

        if (format.indexOf('Failed Composite propType: ') === 0) {
          return; // Ignore CompositeComponent proptype check.
        }

        if (!condition) {
          for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
            args[_key2 - 2] = arguments[_key2];
          }

          printWarning.apply(undefined, [format].concat(args));
        }
      };
    })();
  }

  module.exports = warning;

/***/ },
/* 1170 */
/***/ function(module, exports) {

  "use strict";

  /**
   * Copyright (c) 2013-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   *
   * 
   */

  function makeEmptyFunction(arg) {
    return function () {
      return arg;
    };
  }

  /**
   * This function accepts and discards inputs; it has no side effects. This is
   * primarily useful idiomatically for overridable function endpoints which
   * always need to be callable, since JS lacks a null-call idiom ala Cocoa.
   */
  var emptyFunction = function emptyFunction() {};

  emptyFunction.thatReturns = makeEmptyFunction;
  emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
  emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
  emptyFunction.thatReturnsNull = makeEmptyFunction(null);
  emptyFunction.thatReturnsThis = function () {
    return this;
  };
  emptyFunction.thatReturnsArgument = function (arg) {
    return arg;
  };

  module.exports = emptyFunction;

/***/ },
/* 1171 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  exports.__esModule = true;
  exports.Track = undefined;

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _objectAssign = __webpack_require__(387);

  var _objectAssign2 = _interopRequireDefault(_objectAssign);

  var _classnames = __webpack_require__(794);

  var _classnames2 = _interopRequireDefault(_classnames);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

  function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

  var getSlideClasses = function getSlideClasses(spec) {
    var slickActive, slickCenter, slickCloned;
    var centerOffset, index;

    if (spec.rtl) {
      index = spec.slideCount - 1 - spec.index;
    } else {
      index = spec.index;
    }

    slickCloned = index < 0 || index >= spec.slideCount;
    if (spec.centerMode) {
      centerOffset = Math.floor(spec.slidesToShow / 2);
      slickCenter = (index - spec.currentSlide) % spec.slideCount === 0;
      if (index > spec.currentSlide - centerOffset - 1 && index <= spec.currentSlide + centerOffset) {
        slickActive = true;
      }
    } else {
      slickActive = spec.currentSlide <= index && index < spec.currentSlide + spec.slidesToShow;
    }
    return (0, _classnames2.default)({
      'slick-slide': true,
      'slick-active': slickActive,
      'slick-center': slickCenter,
      'slick-cloned': slickCloned
    });
  };

  var getSlideStyle = function getSlideStyle(spec) {
    var style = {};

    if (spec.variableWidth === undefined || spec.variableWidth === false) {
      style.width = spec.slideWidth;
    }

    if (spec.fade) {
      style.position = 'relative';
      style.left = -spec.index * spec.slideWidth;
      style.opacity = spec.currentSlide === spec.index ? 1 : 0;
      style.transition = 'opacity ' + spec.speed + 'ms ' + spec.cssEase;
      style.WebkitTransition = 'opacity ' + spec.speed + 'ms ' + spec.cssEase;
    }

    return style;
  };

  var getKey = function getKey(child, fallbackKey) {
    // key could be a zero
    return child.key === null || child.key === undefined ? fallbackKey : child.key;
  };

  var renderSlides = function renderSlides(spec) {
    var key;
    var slides = [];
    var preCloneSlides = [];
    var postCloneSlides = [];
    var count = _react2.default.Children.count(spec.children);

    _react2.default.Children.forEach(spec.children, function (elem, index) {
      var child = void 0;
      var childOnClickOptions = {
        message: 'children',
        index: index,
        slidesToScroll: spec.slidesToScroll,
        currentSlide: spec.currentSlide
      };

      if (!spec.lazyLoad | (spec.lazyLoad && spec.lazyLoadedList.indexOf(index) >= 0)) {
        child = elem;
      } else {
        child = _react2.default.createElement('div', null);
      }
      var childStyle = getSlideStyle((0, _objectAssign2.default)({}, spec, { index: index }));
      var slickClasses = getSlideClasses((0, _objectAssign2.default)({ index: index }, spec));
      var cssClasses;

      if (child.props.className) {
        cssClasses = (0, _classnames2.default)(slickClasses, child.props.className);
      } else {
        cssClasses = slickClasses;
      }

      var onClick = function onClick(e) {
        child.props && child.props.onClick && child.props.onClick(e);
        if (spec.focusOnSelect) {
          spec.focusOnSelect(childOnClickOptions);
        }
      };

      slides.push(_react2.default.cloneElement(child, {
        key: 'original' + getKey(child, index),
        'data-index': index,
        className: cssClasses,
        tabIndex: '-1',
        style: (0, _objectAssign2.default)({ outline: 'none' }, child.props.style || {}, childStyle),
        onClick: onClick
      }));

      // variableWidth doesn't wrap properly.
      if (spec.infinite && spec.fade === false) {
        var infiniteCount = spec.variableWidth ? spec.slidesToShow + 1 : spec.slidesToShow;

        if (index >= count - infiniteCount) {
          key = -(count - index);
          preCloneSlides.push(_react2.default.cloneElement(child, {
            key: 'precloned' + getKey(child, key),
            'data-index': key,
            className: cssClasses,
            style: (0, _objectAssign2.default)({}, child.props.style || {}, childStyle),
            onClick: onClick
          }));
        }

        if (index < infiniteCount) {
          key = count + index;
          postCloneSlides.push(_react2.default.cloneElement(child, {
            key: 'postcloned' + getKey(child, key),
            'data-index': key,
            className: cssClasses,
            style: (0, _objectAssign2.default)({}, child.props.style || {}, childStyle),
            onClick: onClick
          }));
        }
      }
    });

    if (spec.rtl) {
      return preCloneSlides.concat(slides, postCloneSlides).reverse();
    } else {
      return preCloneSlides.concat(slides, postCloneSlides);
    }
  };

  var Track = exports.Track = function (_React$Component) {
    _inherits(Track, _React$Component);

    function Track() {
      _classCallCheck(this, Track);

      return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));
    }

    Track.prototype.render = function render() {
      var slides = renderSlides.call(this, this.props);
      return _react2.default.createElement(
        'div',
        { className: 'slick-track', style: this.props.trackStyle },
        slides
      );
    };

    return Track;
  }(_react2.default.Component);

/***/ },
/* 1172 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  exports.__esModule = true;
  exports.Dots = undefined;

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _classnames = __webpack_require__(794);

  var _classnames2 = _interopRequireDefault(_classnames);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

  function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

  var getDotCount = function getDotCount(spec) {
    var dots;
    dots = Math.ceil(spec.slideCount / spec.slidesToScroll);
    return dots;
  };

  var Dots = exports.Dots = function (_React$Component) {
    _inherits(Dots, _React$Component);

    function Dots() {
      _classCallCheck(this, Dots);

      return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));
    }

    Dots.prototype.clickHandler = function clickHandler(options, e) {
      // In Autoplay the focus stays on clicked button even after transition
      // to next slide. That only goes away by click somewhere outside
      e.preventDefault();
      this.props.clickHandler(options);
    };

    Dots.prototype.render = function render() {
      var _this2 = this;

      var dotCount = getDotCount({
        slideCount: this.props.slideCount,
        slidesToScroll: this.props.slidesToScroll
      });

      // Apply join & split to Array to pre-fill it for IE8
      //
      // Credit: http://stackoverflow.com/a/13735425/1849458
      var dots = Array.apply(null, Array(dotCount + 1).join('0').split('')).map(function (x, i) {

        var leftBound = i * _this2.props.slidesToScroll;
        var rightBound = i * _this2.props.slidesToScroll + (_this2.props.slidesToScroll - 1);
        var className = (0, _classnames2.default)({
          'slick-active': _this2.props.currentSlide >= leftBound && _this2.props.currentSlide <= rightBound
        });

        var dotOptions = {
          message: 'dots',
          index: i,
          slidesToScroll: _this2.props.slidesToScroll,
          currentSlide: _this2.props.currentSlide
        };

        var onClick = _this2.clickHandler.bind(_this2, dotOptions);

        return _react2.default.createElement(
          'li',
          { key: i, className: className },
          _react2.default.cloneElement(_this2.props.customPaging(i), { onClick: onClick })
        );
      });

      return _react2.default.createElement(
        'ul',
        { className: this.props.dotsClass, style: { display: 'block' } },
        dots
      );
    };

    return Dots;
  }(_react2.default.Component);

/***/ },
/* 1173 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  exports.__esModule = true;
  exports.NextArrow = exports.PrevArrow = undefined;

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _classnames = __webpack_require__(794);

  var _classnames2 = _interopRequireDefault(_classnames);

  var _helpers = __webpack_require__(1161);

  var _helpers2 = _interopRequireDefault(_helpers);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

  function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

  var PrevArrow = exports.PrevArrow = function (_React$Component) {
    _inherits(PrevArrow, _React$Component);

    function PrevArrow() {
      _classCallCheck(this, PrevArrow);

      return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));
    }

    PrevArrow.prototype.clickHandler = function clickHandler(options, e) {
      if (e) {
        e.preventDefault();
      }
      this.props.clickHandler(options, e);
    };

    PrevArrow.prototype.render = function render() {
      var prevClasses = { 'slick-arrow': true, 'slick-prev': true };
      var prevHandler = this.clickHandler.bind(this, { message: 'previous' });

      if (!this.props.infinite && (this.props.currentSlide === 0 || this.props.slideCount <= this.props.slidesToShow)) {
        prevClasses['slick-disabled'] = true;
        prevHandler = null;
      }

      var prevArrowProps = {
        key: '0',
        'data-role': 'none',
        className: (0, _classnames2.default)(prevClasses),
        style: { display: 'block' },
        onClick: prevHandler
      };
      var customProps = {
        currentSlide: this.props.currentSlide,
        slideCount: this.props.slideCount
      };
      var prevArrow;

      if (this.props.prevArrow) {
        prevArrow = _react2.default.cloneElement(this.props.prevArrow, _extends({}, prevArrowProps, customProps));
      } else {
        prevArrow = _react2.default.createElement(
          'button',
          _extends({ key: '0', type: 'button' }, prevArrowProps),
          ' Previous'
        );
      }

      return prevArrow;
    };

    return PrevArrow;
  }(_react2.default.Component);

  var NextArrow = exports.NextArrow = function (_React$Component2) {
    _inherits(NextArrow, _React$Component2);

    function NextArrow() {
      _classCallCheck(this, NextArrow);

      return _possibleConstructorReturn(this, _React$Component2.apply(this, arguments));
    }

    NextArrow.prototype.clickHandler = function clickHandler(options, e) {
      if (e) {
        e.preventDefault();
      }
      this.props.clickHandler(options, e);
    };

    NextArrow.prototype.render = function render() {
      var nextClasses = { 'slick-arrow': true, 'slick-next': true };
      var nextHandler = this.clickHandler.bind(this, { message: 'next' });

      if (!_helpers2.default.canGoNext(this.props)) {
        nextClasses['slick-disabled'] = true;
        nextHandler = null;
      }

      var nextArrowProps = {
        key: '1',
        'data-role': 'none',
        className: (0, _classnames2.default)(nextClasses),
        style: { display: 'block' },
        onClick: nextHandler
      };
      var customProps = {
        currentSlide: this.props.currentSlide,
        slideCount: this.props.slideCount
      };
      var nextArrow;

      if (this.props.nextArrow) {
        nextArrow = _react2.default.cloneElement(this.props.nextArrow, _extends({}, nextArrowProps, customProps));
      } else {
        nextArrow = _react2.default.createElement(
          'button',
          _extends({ key: '1', type: 'button' }, nextArrowProps),
          ' Next'
        );
      }

      return nextArrow;
    };

    return NextArrow;
  }(_react2.default.Component);

/***/ },
/* 1174 */
/***/ function(module, exports, __webpack_require__) {

  var camel2hyphen = __webpack_require__(1175);

  var isDimension = function (feature) {
    var re = /[height|width]$/;
    return re.test(feature);
  };

  var obj2mq = function (obj) {
    var mq = '';
    var features = Object.keys(obj);
    features.forEach(function (feature, index) {
      var value = obj[feature];
      feature = camel2hyphen(feature);
      // Add px to dimension features
      if (isDimension(feature) && typeof value === 'number') {
        value = value + 'px';
      }
      if (value === true) {
        mq += feature;
      } else if (value === false) {
        mq += 'not ' + feature;
      } else {
        mq += '(' + feature + ': ' + value + ')';
      }
      if (index < features.length-1) {
        mq += ' and '
      }
    });
    return mq;
  };

  var json2mq = function (query) {
    var mq = '';
    if (typeof query === 'string') {
      return query;
    }
    // Handling array of media queries
    if (query instanceof Array) {
      query.forEach(function (q, index) {
        mq += obj2mq(q);
        if (index < query.length-1) {
          mq += ', '
        }
      });
      return mq;
    }
    // Handling single media query
    return obj2mq(query);
  };

  module.exports = json2mq;

/***/ },
/* 1175 */
/***/ function(module, exports) {

  var camel2hyphen = function (str) {
    return str
            .replace(/[A-Z]/g, function (match) {
              return '-' + match.toLowerCase();
            })
            .toLowerCase();
  };

  module.exports = camel2hyphen;

/***/ },
/* 1176 */
/***/ function(module, exports) {

  var canUseDOM = !!(
    typeof window !== 'undefined' &&
    window.document &&
    window.document.createElement
  );

  module.exports = canUseDOM;

/***/ },
/* 1177 */
/***/ function(module, exports, __webpack_require__) {

  var MediaQueryDispatch = __webpack_require__(1178);
  module.exports = new MediaQueryDispatch();


/***/ },
/* 1178 */
/***/ function(module, exports, __webpack_require__) {

  var MediaQuery = __webpack_require__(1179);
  var Util = __webpack_require__(1181);
  var each = Util.each;
  var isFunction = Util.isFunction;
  var isArray = Util.isArray;

  /**
   * Allows for registration of query handlers.
   * Manages the query handler's state and is responsible for wiring up browser events
   *
   * @constructor
   */
  function MediaQueryDispatch () {
      if(!window.matchMedia) {
          throw new Error('matchMedia not present, legacy browsers require a polyfill');
      }

      this.queries = {};
      this.browserIsIncapable = !window.matchMedia('only all').matches;
  }

  MediaQueryDispatch.prototype = {

      constructor : MediaQueryDispatch,

      /**
       * Registers a handler for the given media query
       *
       * @param {string} q the media query
       * @param {object || Array || Function} options either a single query handler object, a function, or an array of query handlers
       * @param {function} options.match fired when query matched
       * @param {function} [options.unmatch] fired when a query is no longer matched
       * @param {function} [options.setup] fired when handler first triggered
       * @param {boolean} [options.deferSetup=false] whether setup should be run immediately or deferred until query is first matched
       * @param {boolean} [shouldDegrade=false] whether this particular media query should always run on incapable browsers
       */
      register : function(q, options, shouldDegrade) {
          var queries         = this.queries,
              isUnconditional = shouldDegrade && this.browserIsIncapable;

          if(!queries[q]) {
              queries[q] = new MediaQuery(q, isUnconditional);
          }

          //normalise to object in an array
          if(isFunction(options)) {
              options = { match : options };
          }
          if(!isArray(options)) {
              options = [options];
          }
          each(options, function(handler) {
              if (isFunction(handler)) {
                  handler = { match : handler };
              }
              queries[q].addHandler(handler);
          });

          return this;
      },

      /**
       * unregisters a query and all it's handlers, or a specific handler for a query
       *
       * @param {string} q the media query to target
       * @param {object || function} [handler] specific handler to unregister
       */
      unregister : function(q, handler) {
          var query = this.queries[q];

          if(query) {
              if(handler) {
                  query.removeHandler(handler);
              }
              else {
                  query.clear();
                  delete this.queries[q];
              }
          }

          return this;
      }
  };

  module.exports = MediaQueryDispatch;


/***/ },
/* 1179 */
/***/ function(module, exports, __webpack_require__) {

  var QueryHandler = __webpack_require__(1180);
  var each = __webpack_require__(1181).each;

  /**
   * Represents a single media query, manages it's state and registered handlers for this query
   *
   * @constructor
   * @param {string} query the media query string
   * @param {boolean} [isUnconditional=false] whether the media query should run regardless of whether the conditions are met. Primarily for helping older browsers deal with mobile-first design
   */
  function MediaQuery(query, isUnconditional) {
      this.query = query;
      this.isUnconditional = isUnconditional;
      this.handlers = [];
      this.mql = window.matchMedia(query);

      var self = this;
      this.listener = function(mql) {
          // Chrome passes an MediaQueryListEvent object, while other browsers pass MediaQueryList directly
          self.mql = mql.currentTarget || mql;
          self.assess();
      };
      this.mql.addListener(this.listener);
  }

  MediaQuery.prototype = {

      constuctor : MediaQuery,

      /**
       * add a handler for this query, triggering if already active
       *
       * @param {object} handler
       * @param {function} handler.match callback for when query is activated
       * @param {function} [handler.unmatch] callback for when query is deactivated
       * @param {function} [handler.setup] callback for immediate execution when a query handler is registered
       * @param {boolean} [handler.deferSetup=false] should the setup callback be deferred until the first time the handler is matched?
       */
      addHandler : function(handler) {
          var qh = new QueryHandler(handler);
          this.handlers.push(qh);

          this.matches() && qh.on();
      },

      /**
       * removes the given handler from the collection, and calls it's destroy methods
       *
       * @param {object || function} handler the handler to remove
       */
      removeHandler : function(handler) {
          var handlers = this.handlers;
          each(handlers, function(h, i) {
              if(h.equals(handler)) {
                  h.destroy();
                  return !handlers.splice(i,1); //remove from array and exit each early
              }
          });
      },

      /**
       * Determine whether the media query should be considered a match
       *
       * @return {Boolean} true if media query can be considered a match, false otherwise
       */
      matches : function() {
          return this.mql.matches || this.isUnconditional;
      },

      /**
       * Clears all handlers and unbinds events
       */
      clear : function() {
          each(this.handlers, function(handler) {
              handler.destroy();
          });
          this.mql.removeListener(this.listener);
          this.handlers.length = 0; //clear array
      },

      /*
          * Assesses the query, turning on all handlers if it matches, turning them off if it doesn't match
          */
      assess : function() {
          var action = this.matches() ? 'on' : 'off';

          each(this.handlers, function(handler) {
              handler[action]();
          });
      }
  };

  module.exports = MediaQuery;


/***/ },
/* 1180 */
/***/ function(module, exports) {

  /**
   * Delegate to handle a media query being matched and unmatched.
   *
   * @param {object} options
   * @param {function} options.match callback for when the media query is matched
   * @param {function} [options.unmatch] callback for when the media query is unmatched
   * @param {function} [options.setup] one-time callback triggered the first time a query is matched
   * @param {boolean} [options.deferSetup=false] should the setup callback be run immediately, rather than first time query is matched?
   * @constructor
   */
  function QueryHandler(options) {
      this.options = options;
      !options.deferSetup && this.setup();
  }

  QueryHandler.prototype = {

      constructor : QueryHandler,

      /**
       * coordinates setup of the handler
       *
       * @function
       */
      setup : function() {
          if(this.options.setup) {
              this.options.setup();
          }
          this.initialised = true;
      },

      /**
       * coordinates setup and triggering of the handler
       *
       * @function
       */
      on : function() {
          !this.initialised && this.setup();
          this.options.match && this.options.match();
      },

      /**
       * coordinates the unmatch event for the handler
       *
       * @function
       */
      off : function() {
          this.options.unmatch && this.options.unmatch();
      },

      /**
       * called when a handler is to be destroyed.
       * delegates to the destroy or unmatch callbacks, depending on availability.
       *
       * @function
       */
      destroy : function() {
          this.options.destroy ? this.options.destroy() : this.off();
      },

      /**
       * determines equality by reference.
       * if object is supplied compare options, if function, compare match callback
       *
       * @function
       * @param {object || function} [target] the target for comparison
       */
      equals : function(target) {
          return this.options === target || this.options.match === target;
      }

  };

  module.exports = QueryHandler;


/***/ },
/* 1181 */
/***/ function(module, exports) {

  /**
   * Helper function for iterating over a collection
   *
   * @param collection
   * @param fn
   */
  function each(collection, fn) {
      var i      = 0,
          length = collection.length,
          cont;

      for(i; i < length; i++) {
          cont = fn(collection[i], i);
          if(cont === false) {
              break; //allow early exit
          }
      }
  }

  /**
   * Helper function for determining whether target object is an array
   *
   * @param target the object under test
   * @return {Boolean} true if array, false otherwise
   */
  function isArray(target) {
      return Object.prototype.toString.apply(target) === '[object Array]';
  }

  /**
   * Helper function for determining whether target object is a function
   *
   * @param target the object under test
   * @return {Boolean} true if function, false otherwise
   */
  function isFunction(target) {
      return typeof target === 'function';
  }

  module.exports = {
      isFunction : isFunction,
      isArray : isArray,
      each : each
  };


/***/ },
/* 1182 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _getPrototypeOf = __webpack_require__(597);

  var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

  var _classCallCheck2 = __webpack_require__(601);

  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

  var _createClass2 = __webpack_require__(602);

  var _createClass3 = _interopRequireDefault(_createClass2);

  var _possibleConstructorReturn2 = __webpack_require__(606);

  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

  var _inherits2 = __webpack_require__(607);

  var _inherits3 = _interopRequireDefault(_inherits2);

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _hoistNonReactStatics = __webpack_require__(1183);

  var _hoistNonReactStatics2 = _interopRequireDefault(_hoistNonReactStatics);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  /**
   * Isomorphic CSS style loader for Webpack
   *
   * Copyright © 2015-2016 Kriasoft, LLC. All rights reserved.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.txt file in the root directory of this source tree.
   */

  var contextTypes = {
    insertCss: _react.PropTypes.func
  };

  function withStyles() {
    for (var _len = arguments.length, styles = Array(_len), _key = 0; _key < _len; _key++) {
      styles[_key] = arguments[_key];
    }

    return function wrapWithStyles(ComposedComponent) {
      var WithStyles = function (_Component) {
        (0, _inherits3.default)(WithStyles, _Component);

        function WithStyles() {
          (0, _classCallCheck3.default)(this, WithStyles);
          return (0, _possibleConstructorReturn3.default)(this, (WithStyles.__proto__ || (0, _getPrototypeOf2.default)(WithStyles)).apply(this, arguments));
        }

        (0, _createClass3.default)(WithStyles, [{
          key: 'componentWillMount',
          value: function componentWillMount() {
            this.removeCss = this.context.insertCss.apply(undefined, styles);
          }
        }, {
          key: 'componentWillUnmount',
          value: function componentWillUnmount() {
            setTimeout(this.removeCss, 0);
          }
        }, {
          key: 'render',
          value: function render() {
            return _react2.default.createElement(ComposedComponent, this.props);
          }
        }]);
        return WithStyles;
      }(_react.Component);

      var displayName = ComposedComponent.displayName || ComposedComponent.name || 'Component';

      WithStyles.displayName = 'WithStyles(' + displayName + ')';
      WithStyles.contextTypes = contextTypes;
      WithStyles.ComposedComponent = ComposedComponent;

      return (0, _hoistNonReactStatics2.default)(WithStyles, ComposedComponent);
    };
  }

  exports.default = withStyles;

/***/ },
/* 1183 */
/***/ function(module, exports) {

  /**
   * Copyright 2015, Yahoo! Inc.
   * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.
   */
  'use strict';

  var REACT_STATICS = {
      childContextTypes: true,
      contextTypes: true,
      defaultProps: true,
      displayName: true,
      getDefaultProps: true,
      mixins: true,
      propTypes: true,
      type: true
  };

  var KNOWN_STATICS = {
      name: true,
      length: true,
      prototype: true,
      caller: true,
      arguments: true,
      arity: true
  };

  var isGetOwnPropertySymbolsAvailable = typeof Object.getOwnPropertySymbols === 'function';

  module.exports = function hoistNonReactStatics(targetComponent, sourceComponent, customStatics) {
      if (typeof sourceComponent !== 'string') { // don't hoist over string (html) components
          var keys = Object.getOwnPropertyNames(sourceComponent);

          /* istanbul ignore else */
          if (isGetOwnPropertySymbolsAvailable) {
              keys = keys.concat(Object.getOwnPropertySymbols(sourceComponent));
          }

          for (var i = 0; i < keys.length; ++i) {
              if (!REACT_STATICS[keys[i]] && !KNOWN_STATICS[keys[i]] && (!customStatics || !customStatics[keys[i]])) {
                  try {
                      targetComponent[keys[i]] = sourceComponent[keys[i]];
                  } catch (error) {

                  }
              }
          }
      }

      return targetComponent;
  };


/***/ },
/* 1184 */,
/* 1185 */,
/* 1186 */
/***/ function(module, exports) {

  /*
  	MIT License http://www.opensource.org/licenses/mit-license.php
  	Author Tobias Koppers @sokra
  */
  // css base code, injected by the css-loader
  module.exports = function() {
  	var list = [];

  	// return the list of modules as css string
  	list.toString = function toString() {
  		var result = [];
  		for(var i = 0; i < this.length; i++) {
  			var item = this[i];
  			if(item[2]) {
  				result.push("@media " + item[2] + "{" + item[1] + "}");
  			} else {
  				result.push(item[1]);
  			}
  		}
  		return result.join("");
  	};

  	// import a list of modules into the list
  	list.i = function(modules, mediaQuery) {
  		if(typeof modules === "string")
  			modules = [[null, modules, ""]];
  		var alreadyImportedModules = {};
  		for(var i = 0; i < this.length; i++) {
  			var id = this[i][0];
  			if(typeof id === "number")
  				alreadyImportedModules[id] = true;
  		}
  		for(i = 0; i < modules.length; i++) {
  			var item = modules[i];
  			// skip already imported module
  			// this implementation is not 100% perfect for weird media query combinations
  			//  when a module is imported multiple times with different media queries.
  			//  I hope this will never occur (Hey this way we have smaller bundles)
  			if(typeof item[0] !== "number" || !alreadyImportedModules[item[0]]) {
  				if(mediaQuery && !item[2]) {
  					item[2] = mediaQuery;
  				} else if(mediaQuery) {
  					item[2] = "(" + item[2] + ") and (" + mediaQuery + ")";
  				}
  				list.push(item);
  			}
  		}
  	};
  	return list;
  };


/***/ },
/* 1187 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  var _stringify = __webpack_require__(1188);

  var _stringify2 = _interopRequireDefault(_stringify);

  var _slicedToArray2 = __webpack_require__(1190);

  var _slicedToArray3 = _interopRequireDefault(_slicedToArray2);

  var _getIterator2 = __webpack_require__(1194);

  var _getIterator3 = _interopRequireDefault(_getIterator2);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  /**
   * Isomorphic CSS style loader for Webpack
   *
   * Copyright © 2015-2016 Kriasoft, LLC. All rights reserved.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.txt file in the root directory of this source tree.
   */

  var prefix = 's';
  var inserted = {};

  // Base64 encoding and decoding - The "Unicode Problem"
  // https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding#The_Unicode_Problem
  function b64EncodeUnicode(str) {
    return btoa(encodeURIComponent(str).replace(/%([0-9A-F]{2})/g, function (match, p1) {
      return String.fromCharCode('0x' + p1);
    }));
  }

  /**
   * Remove style/link elements for specified node IDs
   * if they are no longer referenced by UI components.
   */
  function removeCss(ids) {
    var _iteratorNormalCompletion = true;
    var _didIteratorError = false;
    var _iteratorError = undefined;

    try {
      for (var _iterator = (0, _getIterator3.default)(ids), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
        var id = _step.value;

        if (--inserted[id] <= 0) {
          var elem = document.getElementById(prefix + id);
          if (elem) {
            elem.parentNode.removeChild(elem);
          }
        }
      }
    } catch (err) {
      _didIteratorError = true;
      _iteratorError = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion && _iterator.return) {
          _iterator.return();
        }
      } finally {
        if (_didIteratorError) {
          throw _iteratorError;
        }
      }
    }
  }

  /**
   * Example:
   *   // Insert CSS styles object generated by `css-loader` into DOM
   *   var removeCss = insertCss([[1, 'body { color: red; }']]);
   *
   *   // Remove it from the DOM
   *   removeCss();
   */
  function insertCss(styles) {
    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
        _ref$replace = _ref.replace,
        replace = _ref$replace === undefined ? false : _ref$replace,
        _ref$prepend = _ref.prepend,
        prepend = _ref$prepend === undefined ? false : _ref$prepend;

    var ids = [];
    for (var i = 0; i < styles.length; i++) {
      var _styles$i = (0, _slicedToArray3.default)(styles[i], 4),
          moduleId = _styles$i[0],
          css = _styles$i[1],
          media = _styles$i[2],
          sourceMap = _styles$i[3];

      var id = moduleId + '-' + i;

      ids.push(id);

      if (inserted[id]) {
        if (!replace) {
          inserted[id]++;
          continue;
        }
      }

      inserted[id] = 1;

      var elem = document.getElementById(prefix + id);
      var create = false;

      if (!elem) {
        create = true;

        elem = document.createElement('style');
        elem.setAttribute('type', 'text/css');
        elem.id = prefix + id;

        if (media) {
          elem.setAttribute('media', media);
        }
      }

      var cssText = css;
      if (sourceMap && btoa) {
        // skip IE9 and below, see http://caniuse.com/atob-btoa
        cssText += '\n/*# sourceMappingURL=data:application/json;base64,' + b64EncodeUnicode((0, _stringify2.default)(sourceMap)) + '*/';
        cssText += '\n/*# sourceURL=' + sourceMap.file + '?' + id + '*/';
      }

      if ('textContent' in elem) {
        elem.textContent = cssText;
      } else {
        elem.styleSheet.cssText = cssText;
      }

      if (create) {
        if (prepend) {
          document.head.insertBefore(elem, document.head.childNodes[0]);
        } else {
          document.head.appendChild(elem);
        }
      }
    }

    return removeCss.bind(null, ids);
  }

  module.exports = insertCss;

/***/ },
/* 1188 */
/***/ function(module, exports, __webpack_require__) {

  module.exports = { "default": __webpack_require__(1189), __esModule: true };

/***/ },
/* 1189 */
/***/ function(module, exports, __webpack_require__) {

  var core  = __webpack_require__(12)
    , $JSON = core.JSON || (core.JSON = {stringify: JSON.stringify});
  module.exports = function stringify(it){ // eslint-disable-line no-unused-vars
    return $JSON.stringify.apply($JSON, arguments);
  };

/***/ },
/* 1190 */
/***/ function(module, exports, __webpack_require__) {

  "use strict";

  exports.__esModule = true;

  var _isIterable2 = __webpack_require__(1191);

  var _isIterable3 = _interopRequireDefault(_isIterable2);

  var _getIterator2 = __webpack_require__(1194);

  var _getIterator3 = _interopRequireDefault(_getIterator2);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  exports.default = function () {
    function sliceIterator(arr, i) {
      var _arr = [];
      var _n = true;
      var _d = false;
      var _e = undefined;

      try {
        for (var _i = (0, _getIterator3.default)(arr), _s; !(_n = (_s = _i.next()).done); _n = true) {
          _arr.push(_s.value);

          if (i && _arr.length === i) break;
        }
      } catch (err) {
        _d = true;
        _e = err;
      } finally {
        try {
          if (!_n && _i["return"]) _i["return"]();
        } finally {
          if (_d) throw _e;
        }
      }

      return _arr;
    }

    return function (arr, i) {
      if (Array.isArray(arr)) {
        return arr;
      } else if ((0, _isIterable3.default)(Object(arr))) {
        return sliceIterator(arr, i);
      } else {
        throw new TypeError("Invalid attempt to destructure non-iterable instance");
      }
    };
  }();

/***/ },
/* 1191 */
/***/ function(module, exports, __webpack_require__) {

  module.exports = { "default": __webpack_require__(1192), __esModule: true };

/***/ },
/* 1192 */
/***/ function(module, exports, __webpack_require__) {

  __webpack_require__(48);
  __webpack_require__(4);
  module.exports = __webpack_require__(1193);

/***/ },
/* 1193 */
/***/ function(module, exports, __webpack_require__) {

  var classof   = __webpack_require__(77)
    , ITERATOR  = __webpack_require__(45)('iterator')
    , Iterators = __webpack_require__(27);
  module.exports = __webpack_require__(12).isIterable = function(it){
    var O = Object(it);
    return O[ITERATOR] !== undefined
      || '@@iterator' in O
      || Iterators.hasOwnProperty(classof(O));
  };

/***/ },
/* 1194 */
/***/ function(module, exports, __webpack_require__) {

  module.exports = { "default": __webpack_require__(1195), __esModule: true };

/***/ },
/* 1195 */
/***/ function(module, exports, __webpack_require__) {

  __webpack_require__(48);
  __webpack_require__(4);
  module.exports = __webpack_require__(1196);

/***/ },
/* 1196 */
/***/ function(module, exports, __webpack_require__) {

  var anObject = __webpack_require__(17)
    , get      = __webpack_require__(82);
  module.exports = __webpack_require__(12).getIterator = function(it){
    var iterFn = get(it);
    if(typeof iterFn != 'function')throw TypeError(it + ' is not iterable!');
    return anObject(iterFn.call(it));
  };

/***/ },
/* 1197 */,
/* 1198 */,
/* 1199 */,
/* 1200 */,
/* 1201 */,
/* 1202 */,
/* 1203 */,
/* 1204 */,
/* 1205 */
/***/ function(module, exports, __webpack_require__) {

  module.exports = __webpack_require__(1206);

/***/ },
/* 1206 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  var utils = __webpack_require__(1207);
  var bind = __webpack_require__(1208);
  var Axios = __webpack_require__(1209);
  var defaults = __webpack_require__(1210);

  /**
   * Create an instance of Axios
   *
   * @param {Object} defaultConfig The default config for the instance
   * @return {Axios} A new instance of Axios
   */
  function createInstance(defaultConfig) {
    var context = new Axios(defaultConfig);
    var instance = bind(Axios.prototype.request, context);

    // Copy axios.prototype to instance
    utils.extend(instance, Axios.prototype, context);

    // Copy context to instance
    utils.extend(instance, context);

    return instance;
  }

  // Create the default instance to be exported
  var axios = createInstance(defaults);

  // Expose Axios class to allow class inheritance
  axios.Axios = Axios;

  // Factory for creating new instances
  axios.create = function create(instanceConfig) {
    return createInstance(utils.merge(defaults, instanceConfig));
  };

  // Expose Cancel & CancelToken
  axios.Cancel = __webpack_require__(1227);
  axios.CancelToken = __webpack_require__(1228);
  axios.isCancel = __webpack_require__(1224);

  // Expose all/spread
  axios.all = function all(promises) {
    return Promise.all(promises);
  };
  axios.spread = __webpack_require__(1229);

  module.exports = axios;

  // Allow use of default import syntax in TypeScript
  module.exports.default = axios;


/***/ },
/* 1207 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  var bind = __webpack_require__(1208);

  /*global toString:true*/

  // utils is a library of generic helper functions non-specific to axios

  var toString = Object.prototype.toString;

  /**
   * Determine if a value is an Array
   *
   * @param {Object} val The value to test
   * @returns {boolean} True if value is an Array, otherwise false
   */
  function isArray(val) {
    return toString.call(val) === '[object Array]';
  }

  /**
   * Determine if a value is an ArrayBuffer
   *
   * @param {Object} val The value to test
   * @returns {boolean} True if value is an ArrayBuffer, otherwise false
   */
  function isArrayBuffer(val) {
    return toString.call(val) === '[object ArrayBuffer]';
  }

  /**
   * Determine if a value is a FormData
   *
   * @param {Object} val The value to test
   * @returns {boolean} True if value is an FormData, otherwise false
   */
  function isFormData(val) {
    return (typeof FormData !== 'undefined') && (val instanceof FormData);
  }

  /**
   * Determine if a value is a view on an ArrayBuffer
   *
   * @param {Object} val The value to test
   * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false
   */
  function isArrayBufferView(val) {
    var result;
    if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {
      result = ArrayBuffer.isView(val);
    } else {
      result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);
    }
    return result;
  }

  /**
   * Determine if a value is a String
   *
   * @param {Object} val The value to test
   * @returns {boolean} True if value is a String, otherwise false
   */
  function isString(val) {
    return typeof val === 'string';
  }

  /**
   * Determine if a value is a Number
   *
   * @param {Object} val The value to test
   * @returns {boolean} True if value is a Number, otherwise false
   */
  function isNumber(val) {
    return typeof val === 'number';
  }

  /**
   * Determine if a value is undefined
   *
   * @param {Object} val The value to test
   * @returns {boolean} True if the value is undefined, otherwise false
   */
  function isUndefined(val) {
    return typeof val === 'undefined';
  }

  /**
   * Determine if a value is an Object
   *
   * @param {Object} val The value to test
   * @returns {boolean} True if value is an Object, otherwise false
   */
  function isObject(val) {
    return val !== null && typeof val === 'object';
  }

  /**
   * Determine if a value is a Date
   *
   * @param {Object} val The value to test
   * @returns {boolean} True if value is a Date, otherwise false
   */
  function isDate(val) {
    return toString.call(val) === '[object Date]';
  }

  /**
   * Determine if a value is a File
   *
   * @param {Object} val The value to test
   * @returns {boolean} True if value is a File, otherwise false
   */
  function isFile(val) {
    return toString.call(val) === '[object File]';
  }

  /**
   * Determine if a value is a Blob
   *
   * @param {Object} val The value to test
   * @returns {boolean} True if value is a Blob, otherwise false
   */
  function isBlob(val) {
    return toString.call(val) === '[object Blob]';
  }

  /**
   * Determine if a value is a Function
   *
   * @param {Object} val The value to test
   * @returns {boolean} True if value is a Function, otherwise false
   */
  function isFunction(val) {
    return toString.call(val) === '[object Function]';
  }

  /**
   * Determine if a value is a Stream
   *
   * @param {Object} val The value to test
   * @returns {boolean} True if value is a Stream, otherwise false
   */
  function isStream(val) {
    return isObject(val) && isFunction(val.pipe);
  }

  /**
   * Determine if a value is a URLSearchParams object
   *
   * @param {Object} val The value to test
   * @returns {boolean} True if value is a URLSearchParams object, otherwise false
   */
  function isURLSearchParams(val) {
    return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;
  }

  /**
   * Trim excess whitespace off the beginning and end of a string
   *
   * @param {String} str The String to trim
   * @returns {String} The String freed of excess whitespace
   */
  function trim(str) {
    return str.replace(/^\s*/, '').replace(/\s*$/, '');
  }

  /**
   * Determine if we're running in a standard browser environment
   *
   * This allows axios to run in a web worker, and react-native.
   * Both environments support XMLHttpRequest, but not fully standard globals.
   *
   * web workers:
   *  typeof window -> undefined
   *  typeof document -> undefined
   *
   * react-native:
   *  typeof document.createElement -> undefined
   */
  function isStandardBrowserEnv() {
    return (
      typeof window !== 'undefined' &&
      typeof document !== 'undefined' &&
      typeof document.createElement === 'function'
    );
  }

  /**
   * Iterate over an Array or an Object invoking a function for each item.
   *
   * If `obj` is an Array callback will be called passing
   * the value, index, and complete array for each item.
   *
   * If 'obj' is an Object callback will be called passing
   * the value, key, and complete object for each property.
   *
   * @param {Object|Array} obj The object to iterate
   * @param {Function} fn The callback to invoke for each item
   */
  function forEach(obj, fn) {
    // Don't bother if no value provided
    if (obj === null || typeof obj === 'undefined') {
      return;
    }

    // Force an array if not already something iterable
    if (typeof obj !== 'object' && !isArray(obj)) {
      /*eslint no-param-reassign:0*/
      obj = [obj];
    }

    if (isArray(obj)) {
      // Iterate over array values
      for (var i = 0, l = obj.length; i < l; i++) {
        fn.call(null, obj[i], i, obj);
      }
    } else {
      // Iterate over object keys
      for (var key in obj) {
        if (Object.prototype.hasOwnProperty.call(obj, key)) {
          fn.call(null, obj[key], key, obj);
        }
      }
    }
  }

  /**
   * Accepts varargs expecting each argument to be an object, then
   * immutably merges the properties of each object and returns result.
   *
   * When multiple objects contain the same key the later object in
   * the arguments list will take precedence.
   *
   * Example:
   *
   * ```js
   * var result = merge({foo: 123}, {foo: 456});
   * console.log(result.foo); // outputs 456
   * ```
   *
   * @param {Object} obj1 Object to merge
   * @returns {Object} Result of all merge properties
   */
  function merge(/* obj1, obj2, obj3, ... */) {
    var result = {};
    function assignValue(val, key) {
      if (typeof result[key] === 'object' && typeof val === 'object') {
        result[key] = merge(result[key], val);
      } else {
        result[key] = val;
      }
    }

    for (var i = 0, l = arguments.length; i < l; i++) {
      forEach(arguments[i], assignValue);
    }
    return result;
  }

  /**
   * Extends object a by mutably adding to it the properties of object b.
   *
   * @param {Object} a The object to be extended
   * @param {Object} b The object to copy properties from
   * @param {Object} thisArg The object to bind function to
   * @return {Object} The resulting value of object a
   */
  function extend(a, b, thisArg) {
    forEach(b, function assignValue(val, key) {
      if (thisArg && typeof val === 'function') {
        a[key] = bind(val, thisArg);
      } else {
        a[key] = val;
      }
    });
    return a;
  }

  module.exports = {
    isArray: isArray,
    isArrayBuffer: isArrayBuffer,
    isFormData: isFormData,
    isArrayBufferView: isArrayBufferView,
    isString: isString,
    isNumber: isNumber,
    isObject: isObject,
    isUndefined: isUndefined,
    isDate: isDate,
    isFile: isFile,
    isBlob: isBlob,
    isFunction: isFunction,
    isStream: isStream,
    isURLSearchParams: isURLSearchParams,
    isStandardBrowserEnv: isStandardBrowserEnv,
    forEach: forEach,
    merge: merge,
    extend: extend,
    trim: trim
  };


/***/ },
/* 1208 */
/***/ function(module, exports) {

  'use strict';

  module.exports = function bind(fn, thisArg) {
    return function wrap() {
      var args = new Array(arguments.length);
      for (var i = 0; i < args.length; i++) {
        args[i] = arguments[i];
      }
      return fn.apply(thisArg, args);
    };
  };


/***/ },
/* 1209 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  var defaults = __webpack_require__(1210);
  var utils = __webpack_require__(1207);
  var InterceptorManager = __webpack_require__(1221);
  var dispatchRequest = __webpack_require__(1222);
  var isAbsoluteURL = __webpack_require__(1225);
  var combineURLs = __webpack_require__(1226);

  /**
   * Create a new instance of Axios
   *
   * @param {Object} instanceConfig The default config for the instance
   */
  function Axios(instanceConfig) {
    this.defaults = instanceConfig;
    this.interceptors = {
      request: new InterceptorManager(),
      response: new InterceptorManager()
    };
  }

  /**
   * Dispatch a request
   *
   * @param {Object} config The config specific for this request (merged with this.defaults)
   */
  Axios.prototype.request = function request(config) {
    /*eslint no-param-reassign:0*/
    // Allow for axios('example/url'[, config]) a la fetch API
    if (typeof config === 'string') {
      config = utils.merge({
        url: arguments[0]
      }, arguments[1]);
    }

    config = utils.merge(defaults, this.defaults, { method: 'get' }, config);

    // Support baseURL config
    if (config.baseURL && !isAbsoluteURL(config.url)) {
      config.url = combineURLs(config.baseURL, config.url);
    }

    // Hook up interceptors middleware
    var chain = [dispatchRequest, undefined];
    var promise = Promise.resolve(config);

    this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {
      chain.unshift(interceptor.fulfilled, interceptor.rejected);
    });

    this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {
      chain.push(interceptor.fulfilled, interceptor.rejected);
    });

    while (chain.length) {
      promise = promise.then(chain.shift(), chain.shift());
    }

    return promise;
  };

  // Provide aliases for supported request methods
  utils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {
    /*eslint func-names:0*/
    Axios.prototype[method] = function(url, config) {
      return this.request(utils.merge(config || {}, {
        method: method,
        url: url
      }));
    };
  });

  utils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {
    /*eslint func-names:0*/
    Axios.prototype[method] = function(url, data, config) {
      return this.request(utils.merge(config || {}, {
        method: method,
        url: url,
        data: data
      }));
    };
  });

  module.exports = Axios;


/***/ },
/* 1210 */
/***/ function(module, exports, __webpack_require__) {

  /* WEBPACK VAR INJECTION */(function(process) {'use strict';

  var utils = __webpack_require__(1207);
  var normalizeHeaderName = __webpack_require__(1211);

  var PROTECTION_PREFIX = /^\)\]\}',?\n/;
  var DEFAULT_CONTENT_TYPE = {
    'Content-Type': 'application/x-www-form-urlencoded'
  };

  function setContentTypeIfUnset(headers, value) {
    if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {
      headers['Content-Type'] = value;
    }
  }

  function getDefaultAdapter() {
    var adapter;
    if (typeof XMLHttpRequest !== 'undefined') {
      // For browsers use XHR adapter
      adapter = __webpack_require__(1212);
    } else if (typeof process !== 'undefined') {
      // For node use HTTP adapter
      adapter = __webpack_require__(1212);
    }
    return adapter;
  }

  var defaults = {
    adapter: getDefaultAdapter(),

    transformRequest: [function transformRequest(data, headers) {
      normalizeHeaderName(headers, 'Content-Type');
      if (utils.isFormData(data) ||
        utils.isArrayBuffer(data) ||
        utils.isStream(data) ||
        utils.isFile(data) ||
        utils.isBlob(data)
      ) {
        return data;
      }
      if (utils.isArrayBufferView(data)) {
        return data.buffer;
      }
      if (utils.isURLSearchParams(data)) {
        setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');
        return data.toString();
      }
      if (utils.isObject(data)) {
        setContentTypeIfUnset(headers, 'application/json;charset=utf-8');
        return JSON.stringify(data);
      }
      return data;
    }],

    transformResponse: [function transformResponse(data) {
      /*eslint no-param-reassign:0*/
      if (typeof data === 'string') {
        data = data.replace(PROTECTION_PREFIX, '');
        try {
          data = JSON.parse(data);
        } catch (e) { /* Ignore */ }
      }
      return data;
    }],

    timeout: 0,

    xsrfCookieName: 'XSRF-TOKEN',
    xsrfHeaderName: 'X-XSRF-TOKEN',

    maxContentLength: -1,

    validateStatus: function validateStatus(status) {
      return status >= 200 && status < 300;
    }
  };

  defaults.headers = {
    common: {
      'Accept': 'application/json, text/plain, */*'
    }
  };

  utils.forEach(['delete', 'get', 'head'], function forEachMehtodNoData(method) {
    defaults.headers[method] = {};
  });

  utils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {
    defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);
  });

  module.exports = defaults;

  /* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(72)))

/***/ },
/* 1211 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  var utils = __webpack_require__(1207);

  module.exports = function normalizeHeaderName(headers, normalizedName) {
    utils.forEach(headers, function processHeader(value, name) {
      if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {
        headers[normalizedName] = value;
        delete headers[name];
      }
    });
  };


/***/ },
/* 1212 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  var utils = __webpack_require__(1207);
  var settle = __webpack_require__(1213);
  var buildURL = __webpack_require__(1216);
  var parseHeaders = __webpack_require__(1217);
  var isURLSameOrigin = __webpack_require__(1218);
  var createError = __webpack_require__(1214);
  var btoa = (typeof window !== 'undefined' && window.btoa && window.btoa.bind(window)) || __webpack_require__(1219);

  module.exports = function xhrAdapter(config) {
    return new Promise(function dispatchXhrRequest(resolve, reject) {
      var requestData = config.data;
      var requestHeaders = config.headers;

      if (utils.isFormData(requestData)) {
        delete requestHeaders['Content-Type']; // Let the browser set it
      }

      var request = new XMLHttpRequest();
      var loadEvent = 'onreadystatechange';
      var xDomain = false;

      // For IE 8/9 CORS support
      // Only supports POST and GET calls and doesn't returns the response headers.
      // DON'T do this for testing b/c XMLHttpRequest is mocked, not XDomainRequest.
      if (("development") !== 'test' &&
          typeof window !== 'undefined' &&
          window.XDomainRequest && !('withCredentials' in request) &&
          !isURLSameOrigin(config.url)) {
        request = new window.XDomainRequest();
        loadEvent = 'onload';
        xDomain = true;
        request.onprogress = function handleProgress() {};
        request.ontimeout = function handleTimeout() {};
      }

      // HTTP basic authentication
      if (config.auth) {
        var username = config.auth.username || '';
        var password = config.auth.password || '';
        requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);
      }

      request.open(config.method.toUpperCase(), buildURL(config.url, config.params, config.paramsSerializer), true);

      // Set the request timeout in MS
      request.timeout = config.timeout;

      // Listen for ready state
      request[loadEvent] = function handleLoad() {
        if (!request || (request.readyState !== 4 && !xDomain)) {
          return;
        }

        // The request errored out and we didn't get a response, this will be
        // handled by onerror instead
        // With one exception: request that using file: protocol, most browsers
        // will return status as 0 even though it's a successful request
        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {
          return;
        }

        // Prepare the response
        var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;
        var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;
        var response = {
          data: responseData,
          // IE sends 1223 instead of 204 (https://github.com/mzabriskie/axios/issues/201)
          status: request.status === 1223 ? 204 : request.status,
          statusText: request.status === 1223 ? 'No Content' : request.statusText,
          headers: responseHeaders,
          config: config,
          request: request
        };

        settle(resolve, reject, response);

        // Clean up request
        request = null;
      };

      // Handle low level network errors
      request.onerror = function handleError() {
        // Real errors are hidden from us by the browser
        // onerror should only fire if it's a network error
        reject(createError('Network Error', config));

        // Clean up request
        request = null;
      };

      // Handle timeout
      request.ontimeout = function handleTimeout() {
        reject(createError('timeout of ' + config.timeout + 'ms exceeded', config, 'ECONNABORTED'));

        // Clean up request
        request = null;
      };

      // Add xsrf header
      // This is only done if running in a standard browser environment.
      // Specifically not if we're in a web worker, or react-native.
      if (utils.isStandardBrowserEnv()) {
        var cookies = __webpack_require__(1220);

        // Add xsrf header
        var xsrfValue = (config.withCredentials || isURLSameOrigin(config.url)) && config.xsrfCookieName ?
            cookies.read(config.xsrfCookieName) :
            undefined;

        if (xsrfValue) {
          requestHeaders[config.xsrfHeaderName] = xsrfValue;
        }
      }

      // Add headers to the request
      if ('setRequestHeader' in request) {
        utils.forEach(requestHeaders, function setRequestHeader(val, key) {
          if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {
            // Remove Content-Type if data is undefined
            delete requestHeaders[key];
          } else {
            // Otherwise add header to the request
            request.setRequestHeader(key, val);
          }
        });
      }

      // Add withCredentials to request if needed
      if (config.withCredentials) {
        request.withCredentials = true;
      }

      // Add responseType to request if needed
      if (config.responseType) {
        try {
          request.responseType = config.responseType;
        } catch (e) {
          if (request.responseType !== 'json') {
            throw e;
          }
        }
      }

      // Handle progress if needed
      if (typeof config.onDownloadProgress === 'function') {
        request.addEventListener('progress', config.onDownloadProgress);
      }

      // Not all browsers support upload events
      if (typeof config.onUploadProgress === 'function' && request.upload) {
        request.upload.addEventListener('progress', config.onUploadProgress);
      }

      if (config.cancelToken) {
        // Handle cancellation
        config.cancelToken.promise.then(function onCanceled(cancel) {
          if (!request) {
            return;
          }

          request.abort();
          reject(cancel);
          // Clean up request
          request = null;
        });
      }

      if (requestData === undefined) {
        requestData = null;
      }

      // Send the request
      request.send(requestData);
    });
  };


/***/ },
/* 1213 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  var createError = __webpack_require__(1214);

  /**
   * Resolve or reject a Promise based on response status.
   *
   * @param {Function} resolve A function that resolves the promise.
   * @param {Function} reject A function that rejects the promise.
   * @param {object} response The response.
   */
  module.exports = function settle(resolve, reject, response) {
    var validateStatus = response.config.validateStatus;
    // Note: status is not exposed by XDomainRequest
    if (!response.status || !validateStatus || validateStatus(response.status)) {
      resolve(response);
    } else {
      reject(createError(
        'Request failed with status code ' + response.status,
        response.config,
        null,
        response
      ));
    }
  };


/***/ },
/* 1214 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  var enhanceError = __webpack_require__(1215);

  /**
   * Create an Error with the specified message, config, error code, and response.
   *
   * @param {string} message The error message.
   * @param {Object} config The config.
   * @param {string} [code] The error code (for example, 'ECONNABORTED').
   @ @param {Object} [response] The response.
   * @returns {Error} The created error.
   */
  module.exports = function createError(message, config, code, response) {
    var error = new Error(message);
    return enhanceError(error, config, code, response);
  };


/***/ },
/* 1215 */
/***/ function(module, exports) {

  'use strict';

  /**
   * Update an Error with the specified config, error code, and response.
   *
   * @param {Error} error The error to update.
   * @param {Object} config The config.
   * @param {string} [code] The error code (for example, 'ECONNABORTED').
   @ @param {Object} [response] The response.
   * @returns {Error} The error.
   */
  module.exports = function enhanceError(error, config, code, response) {
    error.config = config;
    if (code) {
      error.code = code;
    }
    error.response = response;
    return error;
  };


/***/ },
/* 1216 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  var utils = __webpack_require__(1207);

  function encode(val) {
    return encodeURIComponent(val).
      replace(/%40/gi, '@').
      replace(/%3A/gi, ':').
      replace(/%24/g, '$').
      replace(/%2C/gi, ',').
      replace(/%20/g, '+').
      replace(/%5B/gi, '[').
      replace(/%5D/gi, ']');
  }

  /**
   * Build a URL by appending params to the end
   *
   * @param {string} url The base of the url (e.g., http://www.google.com)
   * @param {object} [params] The params to be appended
   * @returns {string} The formatted url
   */
  module.exports = function buildURL(url, params, paramsSerializer) {
    /*eslint no-param-reassign:0*/
    if (!params) {
      return url;
    }

    var serializedParams;
    if (paramsSerializer) {
      serializedParams = paramsSerializer(params);
    } else if (utils.isURLSearchParams(params)) {
      serializedParams = params.toString();
    } else {
      var parts = [];

      utils.forEach(params, function serialize(val, key) {
        if (val === null || typeof val === 'undefined') {
          return;
        }

        if (utils.isArray(val)) {
          key = key + '[]';
        }

        if (!utils.isArray(val)) {
          val = [val];
        }

        utils.forEach(val, function parseValue(v) {
          if (utils.isDate(v)) {
            v = v.toISOString();
          } else if (utils.isObject(v)) {
            v = JSON.stringify(v);
          }
          parts.push(encode(key) + '=' + encode(v));
        });
      });

      serializedParams = parts.join('&');
    }

    if (serializedParams) {
      url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;
    }

    return url;
  };


/***/ },
/* 1217 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  var utils = __webpack_require__(1207);

  /**
   * Parse headers into an object
   *
   * ```
   * Date: Wed, 27 Aug 2014 08:58:49 GMT
   * Content-Type: application/json
   * Connection: keep-alive
   * Transfer-Encoding: chunked
   * ```
   *
   * @param {String} headers Headers needing to be parsed
   * @returns {Object} Headers parsed into an object
   */
  module.exports = function parseHeaders(headers) {
    var parsed = {};
    var key;
    var val;
    var i;

    if (!headers) { return parsed; }

    utils.forEach(headers.split('\n'), function parser(line) {
      i = line.indexOf(':');
      key = utils.trim(line.substr(0, i)).toLowerCase();
      val = utils.trim(line.substr(i + 1));

      if (key) {
        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;
      }
    });

    return parsed;
  };


/***/ },
/* 1218 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  var utils = __webpack_require__(1207);

  module.exports = (
    utils.isStandardBrowserEnv() ?

    // Standard browser envs have full support of the APIs needed to test
    // whether the request URL is of the same origin as current location.
    (function standardBrowserEnv() {
      var msie = /(msie|trident)/i.test(navigator.userAgent);
      var urlParsingNode = document.createElement('a');
      var originURL;

      /**
      * Parse a URL to discover it's components
      *
      * @param {String} url The URL to be parsed
      * @returns {Object}
      */
      function resolveURL(url) {
        var href = url;

        if (msie) {
          // IE needs attribute set twice to normalize properties
          urlParsingNode.setAttribute('href', href);
          href = urlParsingNode.href;
        }

        urlParsingNode.setAttribute('href', href);

        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils
        return {
          href: urlParsingNode.href,
          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',
          host: urlParsingNode.host,
          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\?/, '') : '',
          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',
          hostname: urlParsingNode.hostname,
          port: urlParsingNode.port,
          pathname: (urlParsingNode.pathname.charAt(0) === '/') ?
                    urlParsingNode.pathname :
                    '/' + urlParsingNode.pathname
        };
      }

      originURL = resolveURL(window.location.href);

      /**
      * Determine if a URL shares the same origin as the current location
      *
      * @param {String} requestURL The URL to test
      * @returns {boolean} True if URL shares the same origin, otherwise false
      */
      return function isURLSameOrigin(requestURL) {
        var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;
        return (parsed.protocol === originURL.protocol &&
              parsed.host === originURL.host);
      };
    })() :

    // Non standard browser envs (web workers, react-native) lack needed support.
    (function nonStandardBrowserEnv() {
      return function isURLSameOrigin() {
        return true;
      };
    })()
  );


/***/ },
/* 1219 */
/***/ function(module, exports) {

  'use strict';

  // btoa polyfill for IE<10 courtesy https://github.com/davidchambers/Base64.js

  var chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';

  function E() {
    this.message = 'String contains an invalid character';
  }
  E.prototype = new Error;
  E.prototype.code = 5;
  E.prototype.name = 'InvalidCharacterError';

  function btoa(input) {
    var str = String(input);
    var output = '';
    for (
      // initialize result and counter
      var block, charCode, idx = 0, map = chars;
      // if the next str index does not exist:
      //   change the mapping table to "="
      //   check if d has no fractional digits
      str.charAt(idx | 0) || (map = '=', idx % 1);
      // "8 - idx % 1 * 8" generates the sequence 2, 4, 6, 8
      output += map.charAt(63 & block >> 8 - idx % 1 * 8)
    ) {
      charCode = str.charCodeAt(idx += 3 / 4);
      if (charCode > 0xFF) {
        throw new E();
      }
      block = block << 8 | charCode;
    }
    return output;
  }

  module.exports = btoa;


/***/ },
/* 1220 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  var utils = __webpack_require__(1207);

  module.exports = (
    utils.isStandardBrowserEnv() ?

    // Standard browser envs support document.cookie
    (function standardBrowserEnv() {
      return {
        write: function write(name, value, expires, path, domain, secure) {
          var cookie = [];
          cookie.push(name + '=' + encodeURIComponent(value));

          if (utils.isNumber(expires)) {
            cookie.push('expires=' + new Date(expires).toGMTString());
          }

          if (utils.isString(path)) {
            cookie.push('path=' + path);
          }

          if (utils.isString(domain)) {
            cookie.push('domain=' + domain);
          }

          if (secure === true) {
            cookie.push('secure');
          }

          document.cookie = cookie.join('; ');
        },

        read: function read(name) {
          var match = document.cookie.match(new RegExp('(^|;\\s*)(' + name + ')=([^;]*)'));
          return (match ? decodeURIComponent(match[3]) : null);
        },

        remove: function remove(name) {
          this.write(name, '', Date.now() - 86400000);
        }
      };
    })() :

    // Non standard browser env (web workers, react-native) lack needed support.
    (function nonStandardBrowserEnv() {
      return {
        write: function write() {},
        read: function read() { return null; },
        remove: function remove() {}
      };
    })()
  );


/***/ },
/* 1221 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  var utils = __webpack_require__(1207);

  function InterceptorManager() {
    this.handlers = [];
  }

  /**
   * Add a new interceptor to the stack
   *
   * @param {Function} fulfilled The function to handle `then` for a `Promise`
   * @param {Function} rejected The function to handle `reject` for a `Promise`
   *
   * @return {Number} An ID used to remove interceptor later
   */
  InterceptorManager.prototype.use = function use(fulfilled, rejected) {
    this.handlers.push({
      fulfilled: fulfilled,
      rejected: rejected
    });
    return this.handlers.length - 1;
  };

  /**
   * Remove an interceptor from the stack
   *
   * @param {Number} id The ID that was returned by `use`
   */
  InterceptorManager.prototype.eject = function eject(id) {
    if (this.handlers[id]) {
      this.handlers[id] = null;
    }
  };

  /**
   * Iterate over all the registered interceptors
   *
   * This method is particularly useful for skipping over any
   * interceptors that may have become `null` calling `eject`.
   *
   * @param {Function} fn The function to call for each interceptor
   */
  InterceptorManager.prototype.forEach = function forEach(fn) {
    utils.forEach(this.handlers, function forEachHandler(h) {
      if (h !== null) {
        fn(h);
      }
    });
  };

  module.exports = InterceptorManager;


/***/ },
/* 1222 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  var utils = __webpack_require__(1207);
  var transformData = __webpack_require__(1223);
  var isCancel = __webpack_require__(1224);
  var defaults = __webpack_require__(1210);

  /**
   * Throws a `Cancel` if cancellation has been requested.
   */
  function throwIfCancellationRequested(config) {
    if (config.cancelToken) {
      config.cancelToken.throwIfRequested();
    }
  }

  /**
   * Dispatch a request to the server using the configured adapter.
   *
   * @param {object} config The config that is to be used for the request
   * @returns {Promise} The Promise to be fulfilled
   */
  module.exports = function dispatchRequest(config) {
    throwIfCancellationRequested(config);

    // Ensure headers exist
    config.headers = config.headers || {};

    // Transform request data
    config.data = transformData(
      config.data,
      config.headers,
      config.transformRequest
    );

    // Flatten headers
    config.headers = utils.merge(
      config.headers.common || {},
      config.headers[config.method] || {},
      config.headers || {}
    );

    utils.forEach(
      ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],
      function cleanHeaderConfig(method) {
        delete config.headers[method];
      }
    );

    var adapter = config.adapter || defaults.adapter;

    return adapter(config).then(function onAdapterResolution(response) {
      throwIfCancellationRequested(config);

      // Transform response data
      response.data = transformData(
        response.data,
        response.headers,
        config.transformResponse
      );

      return response;
    }, function onAdapterRejection(reason) {
      if (!isCancel(reason)) {
        throwIfCancellationRequested(config);

        // Transform response data
        if (reason && reason.response) {
          reason.response.data = transformData(
            reason.response.data,
            reason.response.headers,
            config.transformResponse
          );
        }
      }

      return Promise.reject(reason);
    });
  };


/***/ },
/* 1223 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  var utils = __webpack_require__(1207);

  /**
   * Transform the data for a request or a response
   *
   * @param {Object|String} data The data to be transformed
   * @param {Array} headers The headers for the request or response
   * @param {Array|Function} fns A single function or Array of functions
   * @returns {*} The resulting transformed data
   */
  module.exports = function transformData(data, headers, fns) {
    /*eslint no-param-reassign:0*/
    utils.forEach(fns, function transform(fn) {
      data = fn(data, headers);
    });

    return data;
  };


/***/ },
/* 1224 */
/***/ function(module, exports) {

  'use strict';

  module.exports = function isCancel(value) {
    return !!(value && value.__CANCEL__);
  };


/***/ },
/* 1225 */
/***/ function(module, exports) {

  'use strict';

  /**
   * Determines whether the specified URL is absolute
   *
   * @param {string} url The URL to test
   * @returns {boolean} True if the specified URL is absolute, otherwise false
   */
  module.exports = function isAbsoluteURL(url) {
    // A URL is considered absolute if it begins with "<scheme>://" or "//" (protocol-relative URL).
    // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed
    // by any combination of letters, digits, plus, period, or hyphen.
    return /^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(url);
  };


/***/ },
/* 1226 */
/***/ function(module, exports) {

  'use strict';

  /**
   * Creates a new URL by combining the specified URLs
   *
   * @param {string} baseURL The base URL
   * @param {string} relativeURL The relative URL
   * @returns {string} The combined URL
   */
  module.exports = function combineURLs(baseURL, relativeURL) {
    return baseURL.replace(/\/+$/, '') + '/' + relativeURL.replace(/^\/+/, '');
  };


/***/ },
/* 1227 */
/***/ function(module, exports) {

  'use strict';

  /**
   * A `Cancel` is an object that is thrown when an operation is canceled.
   *
   * @class
   * @param {string=} message The message.
   */
  function Cancel(message) {
    this.message = message;
  }

  Cancel.prototype.toString = function toString() {
    return 'Cancel' + (this.message ? ': ' + this.message : '');
  };

  Cancel.prototype.__CANCEL__ = true;

  module.exports = Cancel;


/***/ },
/* 1228 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  var Cancel = __webpack_require__(1227);

  /**
   * A `CancelToken` is an object that can be used to request cancellation of an operation.
   *
   * @class
   * @param {Function} executor The executor function.
   */
  function CancelToken(executor) {
    if (typeof executor !== 'function') {
      throw new TypeError('executor must be a function.');
    }

    var resolvePromise;
    this.promise = new Promise(function promiseExecutor(resolve) {
      resolvePromise = resolve;
    });

    var token = this;
    executor(function cancel(message) {
      if (token.reason) {
        // Cancellation has already been requested
        return;
      }

      token.reason = new Cancel(message);
      resolvePromise(token.reason);
    });
  }

  /**
   * Throws a `Cancel` if cancellation has been requested.
   */
  CancelToken.prototype.throwIfRequested = function throwIfRequested() {
    if (this.reason) {
      throw this.reason;
    }
  };

  /**
   * Returns an object that contains a new `CancelToken` and a function that, when called,
   * cancels the `CancelToken`.
   */
  CancelToken.source = function source() {
    var cancel;
    var token = new CancelToken(function executor(c) {
      cancel = c;
    });
    return {
      token: token,
      cancel: cancel
    };
  };

  module.exports = CancelToken;


/***/ },
/* 1229 */
/***/ function(module, exports) {

  'use strict';

  /**
   * Syntactic sugar for invoking a function and expanding an array for arguments.
   *
   * Common use case would be to use `Function.prototype.apply`.
   *
   *  ```js
   *  function f(x, y, z) {}
   *  var args = [1, 2, 3];
   *  f.apply(null, args);
   *  ```
   *
   * With `spread` this example can be re-written.
   *
   *  ```js
   *  spread(function(x, y, z) {})([1, 2, 3]);
   *  ```
   *
   * @param {Function} callback
   * @returns {Function}
   */
  module.exports = function spread(callback) {
    return function wrap(arr) {
      return callback.apply(null, arr);
    };
  };


/***/ },
/* 1230 */,
/* 1231 */
/***/ function(module, exports) {

  (function(self) {
    'use strict';

    if (self.fetch) {
      return
    }

    var support = {
      searchParams: 'URLSearchParams' in self,
      iterable: 'Symbol' in self && 'iterator' in Symbol,
      blob: 'FileReader' in self && 'Blob' in self && (function() {
        try {
          new Blob()
          return true
        } catch(e) {
          return false
        }
      })(),
      formData: 'FormData' in self,
      arrayBuffer: 'ArrayBuffer' in self
    }

    if (support.arrayBuffer) {
      var viewClasses = [
        '[object Int8Array]',
        '[object Uint8Array]',
        '[object Uint8ClampedArray]',
        '[object Int16Array]',
        '[object Uint16Array]',
        '[object Int32Array]',
        '[object Uint32Array]',
        '[object Float32Array]',
        '[object Float64Array]'
      ]

      var isDataView = function(obj) {
        return obj && DataView.prototype.isPrototypeOf(obj)
      }

      var isArrayBufferView = ArrayBuffer.isView || function(obj) {
        return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1
      }
    }

    function normalizeName(name) {
      if (typeof name !== 'string') {
        name = String(name)
      }
      if (/[^a-z0-9\-#$%&'*+.\^_`|~]/i.test(name)) {
        throw new TypeError('Invalid character in header field name')
      }
      return name.toLowerCase()
    }

    function normalizeValue(value) {
      if (typeof value !== 'string') {
        value = String(value)
      }
      return value
    }

    // Build a destructive iterator for the value list
    function iteratorFor(items) {
      var iterator = {
        next: function() {
          var value = items.shift()
          return {done: value === undefined, value: value}
        }
      }

      if (support.iterable) {
        iterator[Symbol.iterator] = function() {
          return iterator
        }
      }

      return iterator
    }

    function Headers(headers) {
      this.map = {}

      if (headers instanceof Headers) {
        headers.forEach(function(value, name) {
          this.append(name, value)
        }, this)

      } else if (headers) {
        Object.getOwnPropertyNames(headers).forEach(function(name) {
          this.append(name, headers[name])
        }, this)
      }
    }

    Headers.prototype.append = function(name, value) {
      name = normalizeName(name)
      value = normalizeValue(value)
      var oldValue = this.map[name]
      this.map[name] = oldValue ? oldValue+','+value : value
    }

    Headers.prototype['delete'] = function(name) {
      delete this.map[normalizeName(name)]
    }

    Headers.prototype.get = function(name) {
      name = normalizeName(name)
      return this.has(name) ? this.map[name] : null
    }

    Headers.prototype.has = function(name) {
      return this.map.hasOwnProperty(normalizeName(name))
    }

    Headers.prototype.set = function(name, value) {
      this.map[normalizeName(name)] = normalizeValue(value)
    }

    Headers.prototype.forEach = function(callback, thisArg) {
      for (var name in this.map) {
        if (this.map.hasOwnProperty(name)) {
          callback.call(thisArg, this.map[name], name, this)
        }
      }
    }

    Headers.prototype.keys = function() {
      var items = []
      this.forEach(function(value, name) { items.push(name) })
      return iteratorFor(items)
    }

    Headers.prototype.values = function() {
      var items = []
      this.forEach(function(value) { items.push(value) })
      return iteratorFor(items)
    }

    Headers.prototype.entries = function() {
      var items = []
      this.forEach(function(value, name) { items.push([name, value]) })
      return iteratorFor(items)
    }

    if (support.iterable) {
      Headers.prototype[Symbol.iterator] = Headers.prototype.entries
    }

    function consumed(body) {
      if (body.bodyUsed) {
        return Promise.reject(new TypeError('Already read'))
      }
      body.bodyUsed = true
    }

    function fileReaderReady(reader) {
      return new Promise(function(resolve, reject) {
        reader.onload = function() {
          resolve(reader.result)
        }
        reader.onerror = function() {
          reject(reader.error)
        }
      })
    }

    function readBlobAsArrayBuffer(blob) {
      var reader = new FileReader()
      var promise = fileReaderReady(reader)
      reader.readAsArrayBuffer(blob)
      return promise
    }

    function readBlobAsText(blob) {
      var reader = new FileReader()
      var promise = fileReaderReady(reader)
      reader.readAsText(blob)
      return promise
    }

    function readArrayBufferAsText(buf) {
      var view = new Uint8Array(buf)
      var chars = new Array(view.length)

      for (var i = 0; i < view.length; i++) {
        chars[i] = String.fromCharCode(view[i])
      }
      return chars.join('')
    }

    function bufferClone(buf) {
      if (buf.slice) {
        return buf.slice(0)
      } else {
        var view = new Uint8Array(buf.byteLength)
        view.set(new Uint8Array(buf))
        return view.buffer
      }
    }

    function Body() {
      this.bodyUsed = false

      this._initBody = function(body) {
        this._bodyInit = body
        if (!body) {
          this._bodyText = ''
        } else if (typeof body === 'string') {
          this._bodyText = body
        } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {
          this._bodyBlob = body
        } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {
          this._bodyFormData = body
        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {
          this._bodyText = body.toString()
        } else if (support.arrayBuffer && support.blob && isDataView(body)) {
          this._bodyArrayBuffer = bufferClone(body.buffer)
          // IE 10-11 can't handle a DataView body.
          this._bodyInit = new Blob([this._bodyArrayBuffer])
        } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {
          this._bodyArrayBuffer = bufferClone(body)
        } else {
          throw new Error('unsupported BodyInit type')
        }

        if (!this.headers.get('content-type')) {
          if (typeof body === 'string') {
            this.headers.set('content-type', 'text/plain;charset=UTF-8')
          } else if (this._bodyBlob && this._bodyBlob.type) {
            this.headers.set('content-type', this._bodyBlob.type)
          } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {
            this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')
          }
        }
      }

      if (support.blob) {
        this.blob = function() {
          var rejected = consumed(this)
          if (rejected) {
            return rejected
          }

          if (this._bodyBlob) {
            return Promise.resolve(this._bodyBlob)
          } else if (this._bodyArrayBuffer) {
            return Promise.resolve(new Blob([this._bodyArrayBuffer]))
          } else if (this._bodyFormData) {
            throw new Error('could not read FormData body as blob')
          } else {
            return Promise.resolve(new Blob([this._bodyText]))
          }
        }

        this.arrayBuffer = function() {
          if (this._bodyArrayBuffer) {
            return consumed(this) || Promise.resolve(this._bodyArrayBuffer)
          } else {
            return this.blob().then(readBlobAsArrayBuffer)
          }
        }
      }

      this.text = function() {
        var rejected = consumed(this)
        if (rejected) {
          return rejected
        }

        if (this._bodyBlob) {
          return readBlobAsText(this._bodyBlob)
        } else if (this._bodyArrayBuffer) {
          return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))
        } else if (this._bodyFormData) {
          throw new Error('could not read FormData body as text')
        } else {
          return Promise.resolve(this._bodyText)
        }
      }

      if (support.formData) {
        this.formData = function() {
          return this.text().then(decode)
        }
      }

      this.json = function() {
        return this.text().then(JSON.parse)
      }

      return this
    }

    // HTTP methods whose capitalization should be normalized
    var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']

    function normalizeMethod(method) {
      var upcased = method.toUpperCase()
      return (methods.indexOf(upcased) > -1) ? upcased : method
    }

    function Request(input, options) {
      options = options || {}
      var body = options.body

      if (typeof input === 'string') {
        this.url = input
      } else {
        if (input.bodyUsed) {
          throw new TypeError('Already read')
        }
        this.url = input.url
        this.credentials = input.credentials
        if (!options.headers) {
          this.headers = new Headers(input.headers)
        }
        this.method = input.method
        this.mode = input.mode
        if (!body && input._bodyInit != null) {
          body = input._bodyInit
          input.bodyUsed = true
        }
      }

      this.credentials = options.credentials || this.credentials || 'omit'
      if (options.headers || !this.headers) {
        this.headers = new Headers(options.headers)
      }
      this.method = normalizeMethod(options.method || this.method || 'GET')
      this.mode = options.mode || this.mode || null
      this.referrer = null

      if ((this.method === 'GET' || this.method === 'HEAD') && body) {
        throw new TypeError('Body not allowed for GET or HEAD requests')
      }
      this._initBody(body)
    }

    Request.prototype.clone = function() {
      return new Request(this, { body: this._bodyInit })
    }

    function decode(body) {
      var form = new FormData()
      body.trim().split('&').forEach(function(bytes) {
        if (bytes) {
          var split = bytes.split('=')
          var name = split.shift().replace(/\+/g, ' ')
          var value = split.join('=').replace(/\+/g, ' ')
          form.append(decodeURIComponent(name), decodeURIComponent(value))
        }
      })
      return form
    }

    function parseHeaders(rawHeaders) {
      var headers = new Headers()
      rawHeaders.split('\r\n').forEach(function(line) {
        var parts = line.split(':')
        var key = parts.shift().trim()
        if (key) {
          var value = parts.join(':').trim()
          headers.append(key, value)
        }
      })
      return headers
    }

    Body.call(Request.prototype)

    function Response(bodyInit, options) {
      if (!options) {
        options = {}
      }

      this.type = 'default'
      this.status = 'status' in options ? options.status : 200
      this.ok = this.status >= 200 && this.status < 300
      this.statusText = 'statusText' in options ? options.statusText : 'OK'
      this.headers = new Headers(options.headers)
      this.url = options.url || ''
      this._initBody(bodyInit)
    }

    Body.call(Response.prototype)

    Response.prototype.clone = function() {
      return new Response(this._bodyInit, {
        status: this.status,
        statusText: this.statusText,
        headers: new Headers(this.headers),
        url: this.url
      })
    }

    Response.error = function() {
      var response = new Response(null, {status: 0, statusText: ''})
      response.type = 'error'
      return response
    }

    var redirectStatuses = [301, 302, 303, 307, 308]

    Response.redirect = function(url, status) {
      if (redirectStatuses.indexOf(status) === -1) {
        throw new RangeError('Invalid status code')
      }

      return new Response(null, {status: status, headers: {location: url}})
    }

    self.Headers = Headers
    self.Request = Request
    self.Response = Response

    self.fetch = function(input, init) {
      return new Promise(function(resolve, reject) {
        var request = new Request(input, init)
        var xhr = new XMLHttpRequest()

        xhr.onload = function() {
          var options = {
            status: xhr.status,
            statusText: xhr.statusText,
            headers: parseHeaders(xhr.getAllResponseHeaders() || '')
          }
          options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')
          var body = 'response' in xhr ? xhr.response : xhr.responseText
          resolve(new Response(body, options))
        }

        xhr.onerror = function() {
          reject(new TypeError('Network request failed'))
        }

        xhr.ontimeout = function() {
          reject(new TypeError('Network request failed'))
        }

        xhr.open(request.method, request.url, true)

        if (request.credentials === 'include') {
          xhr.withCredentials = true
        }

        if ('responseType' in xhr && support.blob) {
          xhr.responseType = 'blob'
        }

        request.headers.forEach(function(value, name) {
          xhr.setRequestHeader(name, value)
        })

        xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)
      })
    }
    self.fetch.polyfill = true
  })(typeof self !== 'undefined' ? self : this);


/***/ },
/* 1232 */,
/* 1233 */,
/* 1234 */,
/* 1235 */,
/* 1236 */,
/* 1237 */,
/* 1238 */,
/* 1239 */,
/* 1240 */,
/* 1241 */,
/* 1242 */,
/* 1243 */,
/* 1244 */,
/* 1245 */,
/* 1246 */,
/* 1247 */
/***/ function(module, exports, __webpack_require__) {

  "use strict";

  exports.__esModule = true;

  var _defineProperty = __webpack_require__(603);

  var _defineProperty2 = _interopRequireDefault(_defineProperty);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  exports.default = function (obj, key, value) {
    if (key in obj) {
      (0, _defineProperty2.default)(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
      });
    } else {
      obj[key] = value;
    }

    return obj;
  };

/***/ },
/* 1248 */
/***/ function(module, exports, __webpack_require__) {

  (function webpackUniversalModuleDefinition(root, factory) {
  	if(true)
  		module.exports = factory();
  	else if(typeof define === 'function' && define.amd)
  		define("geolocator", [], factory);
  	else if(typeof exports === 'object')
  		exports["geolocator"] = factory();
  	else
  		root["geolocator"] = factory();
  })(this, function() {
  return /******/ (function(modules) { // webpackBootstrap
  /******/ 	// The module cache
  /******/ 	var installedModules = {};
  /******/
  /******/ 	// The require function
  /******/ 	function __webpack_require__(moduleId) {
  /******/
  /******/ 		// Check if module is in cache
  /******/ 		if(installedModules[moduleId])
  /******/ 			return installedModules[moduleId].exports;
  /******/
  /******/ 		// Create a new module (and put it into the cache)
  /******/ 		var module = installedModules[moduleId] = {
  /******/ 			i: moduleId,
  /******/ 			l: false,
  /******/ 			exports: {}
  /******/ 		};
  /******/
  /******/ 		// Execute the module function
  /******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
  /******/
  /******/ 		// Flag the module as loaded
  /******/ 		module.l = true;
  /******/
  /******/ 		// Return the exports of the module
  /******/ 		return module.exports;
  /******/ 	}
  /******/
  /******/
  /******/ 	// expose the modules object (__webpack_modules__)
  /******/ 	__webpack_require__.m = modules;
  /******/
  /******/ 	// expose the module cache
  /******/ 	__webpack_require__.c = installedModules;
  /******/
  /******/ 	// identity function for calling harmony imports with the correct context
  /******/ 	__webpack_require__.i = function(value) { return value; };
  /******/
  /******/ 	// define getter function for harmony exports
  /******/ 	__webpack_require__.d = function(exports, name, getter) {
  /******/ 		if(!__webpack_require__.o(exports, name)) {
  /******/ 			Object.defineProperty(exports, name, {
  /******/ 				configurable: false,
  /******/ 				enumerable: true,
  /******/ 				get: getter
  /******/ 			});
  /******/ 		}
  /******/ 	};
  /******/
  /******/ 	// getDefaultExport function for compatibility with non-harmony modules
  /******/ 	__webpack_require__.n = function(module) {
  /******/ 		var getter = module && module.__esModule ?
  /******/ 			function getDefault() { return module['default']; } :
  /******/ 			function getModuleExports() { return module; };
  /******/ 		__webpack_require__.d(getter, 'a', getter);
  /******/ 		return getter;
  /******/ 	};
  /******/
  /******/ 	// Object.prototype.hasOwnProperty.call
  /******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
  /******/
  /******/ 	// __webpack_public_path__
  /******/ 	__webpack_require__.p = "dist/";
  /******/
  /******/ 	// Load entry module and return exports
  /******/ 	return __webpack_require__(__webpack_require__.s = 7);
  /******/ })
  /************************************************************************/
  /******/ ([
  /* 0 */
  /***/ (function(module, exports, __webpack_require__) {

  "use strict";


  Object.defineProperty(exports, "__esModule", {
      value: true
  });

  var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

  var _toString = Object.prototype.toString;

  /**
   * Simple utility methods; internally used within Geolocator core;
   * made publically accessible.
   * @type {Object}
   * @readonly
   *
   * @license MIT
   * @copyright 2016, Onur Yıldırım (onur@cutepilot.com)
   */
  var utils = {
      noop: function noop() {},


      // ---------------------------
      // Validation
      // ---------------------------

      /**
       * Checks if the type of the given value is `String`.
       * @memberof utils
       *
       * @param {*} value - Value to be checked.
       * @returns {Boolean}
       */
      isString: function isString(value) {
          return typeof value === 'string';
      },
      isStringSet: function isStringSet(value) {
          return typeof value === 'string' && value.trim().length > 0;
      },


      /**
       * Checks if the type of the given value is `Number`.
       * @memberof utils
       *
       * @param {*} value - Value to be checked.
       * @returns {Boolean}
       */
      isNumber: function isNumber(value) {
          return typeof value === 'number';
      },


      /**
       * Checks if the type of the given value is an `Object` or `Function`.
       * @memberof utils
       *
       * @param {*} value - Value to be checked.
       * @returns {Boolean}
       */
      isObject: function isObject(value) {
          var type = typeof value === 'undefined' ? 'undefined' : _typeof(value);
          return Boolean(value) && (type === 'object' || type === 'function');
      },


      /**
       * Checks if the type of the given value is `Function`.
       * @memberof utils
       *
       * @param {*} value - Value to be checked.
       * @returns {Boolean}
       */
      isFunction: function isFunction(value) {
          return typeof value === 'function';
      },


      /**
       * Checks if the type of the given value is `Array`.
       * @memberof utils
       *
       * @param {*} value - Value to be checked.
       * @returns {Boolean}
       */
      isArray: function isArray(value) {
          return Boolean(value) && _toString.call(value) === '[object Array]';
      },


      /**
       * Checks if the given object is a non-empty `Array`.
       * @memberof utils
       *
       * @param {*} array - Object to be checked.
       * @returns {Boolean}
       */
      isFilledArray: function isFilledArray(array) {
          return utils.isArray(array) && array.length > 0;
      },


      /**
       * Checks if the given value is a plain `Object`.
       * @memberof utils
       *
       * @param {*} value - Value to be checked.
       * @returns {Boolean}
       */
      isPlainObject: function isPlainObject(value) {
          return Boolean(value) && (typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object' && _toString.call(value) === '[object Object]';
      },


      /**
       * Checks if the given value is a `Date`.
       * @memberof utils
       *
       * @param {*} value - Value to be checked.
       * @returns {Boolean}
       */
      isDate: function isDate(value) {
          return Boolean(value) && _toString.call(value) === '[object Date]';
      },


      /**
       * Checks if the given object is a DOM element.
       * @memberof utils
       *
       * @param {Object} object - Object to be checked.
       * @returns {Boolean}
       */
      isElement: function isElement(object) {
          if (!object) return false;
          return object instanceof HTMLElement || (typeof object === 'undefined' ? 'undefined' : _typeof(object)) === 'object' && object.nodeType === 1;
      },


      /**
       * Checks if the given object is a DOM node.
       * @memberof utils
       *
       * @param {Object} object - Object to be checked.
       * @returns {Boolean}
       */
      isNode: function isNode(object) {
          if (!object) return false;
          return object instanceof Node || (typeof object === 'undefined' ? 'undefined' : _typeof(object)) === 'object' && typeof object.nodeType === 'number';
      },


      /**
       * Checks if the given object is a jQuery instance.
       * This will still return `false` if the jQuery instance has no items.
       * @memberof utils
       *
       * @param {Object} object - Object to be checked.
       * @returns {Boolean}
       */
      isJQueryObject: function isJQueryObject(object) {
          if (!object) return false;
          return 'jQuery' in window && object instanceof window.jQuery && Boolean(object[0]);
          // http://api.jquery.com/jquery-2/
          // || (typeof object === 'object' && Boolean(object.jquery));
      },


      /**
       * Checks if the type of the given value is an HTML5 `PositionError`.
       * @memberof utils
       *
       * @param {*} value - Value to be checked.
       * @returns {Boolean}
       */
      isPositionError: function isPositionError(value) {
          return Boolean(value) && _toString.call(value) === '[object PositionError]';
      },


      /**
       * Checks if the given value is an instance of `Error` or HTML5 `PositionError`.
       * @memberof utils
       *
       * @param {*} value - Value to be checked.
       * @returns {Boolean}
       */
      isError: function isError(value) {
          return value instanceof Error || utils.isPositionError(value);
      },


      // ---------------------------
      // String
      // ---------------------------

      /**
       * Removes the query string portion from the given URL string.
       * @memberof utils
       *
       * @param {String} str - String to be processed.
       * @returns {String} - Returns the rest of the string.
       */
      removeQuery: function removeQuery(str) {
          return str.replace(/\?.*$/, '');
      },


      /**
       * Removes the protocol portion from the given URL string.
       * @memberof utils
       *
       * @param {String} str - String to be processed.
       * @returns {String} - Returns the rest of the string.
       */
      removeProtocol: function removeProtocol(str) {
          return str.replace(/^(.*:)?\/\//, '');
      },


      /**
       * Sets the protocol of the given URL.
       * @memberof utils
       *
       * @param {String} url
       *        The URL to be modified.
       * @param {Boolean} [https]
       *        Specifies whether to set the protocol to HTTPS.
       *        If omitted, current page protocol will be used.
       *
       * @returns {String} - The modified URL string.
       */
      setProtocol: function setProtocol(url, https) {
          var p = void 0;
          if (https === undefined || https === null) {
              p = window.location.protocol;
          } else {
              p = https ? 'https:' : 'http:';
          }
          url = utils.removeProtocol(url);
          return p + '//' + url;
      },


      /**
       * Removes both the leading and trailing dots from the given string.
       * @memberof utils
       *
       * @param {String} str - String to be processed.
       * @returns {String} - Returns the rest of the string.
       */
      trimDots: function trimDots(str) {
          return str.replace(/^\.+?(.*?)\.+?$/g, '$1');
      },


      /**
       * URL-Encodes the given string. Note that the encoding is done Google's
       * way; that is, spaces are replaced with `+` instead of `%20`.
       * @memberof utils
       *
       * @param {String} str - String to be processed.
       * @returns {String} - Returns the encoded string.
       */
      encodeURI: function encodeURI(str) {
          return encodeURIComponent(str).replace(/%20/g, '+');
      },


      /**
       * URL-Decodes the given string. This is the reverse of `utils.encodeURI()`;
       * so pluses (`+`) are replaced with spaces.
       * @memberof utils
       *
       * @param {String} str - String to be processed.
       * @returns {String} - Returns the decoded string.
       */
      decodeURI: function decodeURI(str) {
          return decodeURIComponent(str.replace(/\+/g, '%20'));
      },


      /**
       * Converts the given value to string.
       * `null` and `undefined` converts to empty string.
       * If value is a function, it's native `toString()` method is used.
       * Otherwise, value is coerced.
       * @memberof utils
       *
       * @param {*} value - String to be converted.
       * @returns {String} - Returns the result string.
       */
      toString: function toString(value) {
          if (value === null || value === undefined) return '';
          if (value.toString && utils.isFunction(value.toString)) {
              return value.toString();
          }
          return String(value);
      },


      /**
       * Generates a random string with the number of characters.
       * @memberof utils
       *
       * @param {Number} [len=1] - Length of the string.
       * @returns {String} - Returns a random string.
       */
      randomString: function randomString(len) {
          if (!len || !utils.isNumber(len)) len = 1;
          len = -Math.abs(len);
          return Math.random().toString(36).slice(len);
      },


      /**
       * Gets the abbreviation of the given phrase.
       * @memberof utils
       *
       * @param {String} str
       *        String to abbreviate.
       * @param {Object} [options]
       *        Abbreviation options.
       *     @param {Boolean} [options.upper=true]
       *            Whether to convert to upper-case.
       *     @param {Boolean} [options.dots=true]
       *            Whether to add dots after each abbreviation.
       *
       * @returns {String} - Returns the abbreviation of the given phrase.
       */
      abbr: function abbr(str, options) {
          options = utils.extend({
              upper: true,
              dots: true
          }, options);
          var d = options.dots ? '.' : '',
              s = str.match(/(\b\w)/gi).join(d) + d;
          return options.upper ? s.toUpperCase() : s;
      },


      /**
       * Builds URI parameters from the given object.
       * Note: This does not iterate deep objects.
       * @memberof utils
       *
       * @param {Object} obj - Object to be processed.
       * @param {Object} options - Parameterize options.
       *     @param {Boolean} [options.encode=true]
       *            Whether to encode URI components.
       *     @param {String} [options.operator="="]
       *     @param {String} [options.separator="&"]
       *     @param {Array} [options.include]
       *            Keys to be included in the output params. If defined,
       *            `options.exclude` is ignored.
       *     @param {Array} [options.exclude]
       *            Keys to be excluded from the output params.
       *
       * @returns {String} - URI parameters string.
       */
      params: function params(obj, options) {
          if (!utils.isPlainObject(obj) || Object.keys(obj).length === 0) {
              return '';
          }

          options = utils.extend({
              encode: true,
              operator: '=',
              separator: '&',
              include: undefined,
              exclude: undefined
          }, options);

          var params = [],
              inc = utils.isArray(options.include) ? options.include : null,
              exc = !inc && utils.isArray(options.exclude) ? options.exclude : null;
          utils.forIn(obj, function (value, key) {
              if ((!inc || inc.indexOf(key) >= 0) && (!exc || exc.indexOf(key) < 0)) {
                  var v = utils.toString(value);
                  v = options.encode ? utils.encodeURI(v) : v;
                  var k = options.encode ? utils.encodeURI(key) : key;
                  params.push(k + options.operator + v);
              }
          });

          return params.join(options.separator);
      },


      /**
       * Gets the object from the given object notation string.
       * @private
       *
       * @param {String} notation - Object notation.
       * @returns {*} - Any existing object.
       */
      notateGlobalObj: function notateGlobalObj(notation) {
          notation = utils.trimDots(notation);
          var levels = notation.split('.'),
              o = window;
          if (levels[0] === 'window' || levels[0] === 'document') {
              levels.shift();
          }
          levels.forEach(function (note) {
              o = o[note];
          });
          return o;
      },


      // ---------------------------
      // Object
      // ---------------------------

      /**
       * Iterates over own properties of an object invoking a callback for each
       * property.
       * @memberof utils
       *
       * @param {Object} obj
       *        Object to be processed.
       * @param {Function} callback
       *        Callback function with the following signature:
       *        `function (value, key, object) { ... }`.
       *        Explicitly returning `false` will exit the iteration early.
       * @returns {void}
       */
      forIn: function forIn(obj, callback) {
          var k = void 0;
          for (k in obj) {
              // if (obj.hasOwnProperty(k)) {} // Do this inside callback if needed.
              if (callback(obj[k], k, obj) === false) break;
          }
      },


      /**
       * Extends the given object with the specified sources.
       * Right most source overwrites the previous.
       * NOTE: This is not a full implementation. Use with caution.
       * @memberof utils
       *
       * @param {Object} destination
       *        Destionation Object that will be extended and holds the default
       *        values.
       * @param {...Object} sources
       *        Source objects to be merged.
       *
       * @returns {Object} - Returns the extended object.
       */
      extend: function extend(destination) {
          if (!utils.isObject(destination)) return {};
          var key = void 0,
              value = void 0;

          for (var _len = arguments.length, sources = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
              sources[_key - 1] = arguments[_key];
          }

          sources.forEach(function (source) {
              for (key in source) {
                  // eslint-disable-line
                  value = source[key];
                  if (utils.isArray(value)) {
                      destination[key] = value.concat();
                  } else if (utils.isDate(value)) {
                      destination[key] = new Date(value);
                  } else if (utils.isFunction(value)) {
                      // should be before object
                      destination[key] = value;
                  } else if (utils.isObject(value)) {
                      destination[key] = utils.extend({}, value);
                  } else {
                      destination[key] = value;
                  }
              }
          });
          return destination;
      },


      /**
       * Clones the given object.
       * NOTE: This is not a full implementation. Use with caution.
       * @memberof utils
       *
       * @param {Object} obj
       *        Target Object to be cloned.
       * @param {Object|Array} [options]
       *        Clone options or array of keys to be cloned.
       *     @param {Array} [options.keys]
       *            Keys of the properties to be cloned.
       *     @param {Boolean} [options.own=true]
       *            Whether to clone own properties only. This is only effective
       *            if `keys` is not defined.
       *
       * @returns {Object} - Returns the cloned object.
       */
      clone: function clone(obj, options) {
          if (!obj) return {};

          if (utils.isArray(options)) {
              options = { keys: options };
          }
          options = utils.extend({
              keys: null,
              own: true
          }, options);

          var include = void 0,
              cloned = {};

          utils.forIn(obj, function (value, key) {
              include = options.keys ? options.keys.indexOf(key) >= 0 : options.own && obj.hasOwnProperty(key) || !options.own;
              if (include) {
                  if (utils.isObject(value)) {
                      cloned[key] = utils.clone(value, options);
                  } else {
                      cloned[key] = value;
                  }
              }
          });
          return cloned;
      },


      /**
       *  Maps the values of the given object to a schema to re-structure a new
       *  object.
       *  @memberof utils
       *
       *  @param {Object} obj
       *         Original object to be mapped.
       *  @param {Object} schema
       *         Schema to be used to map the object.
       *
       *  @returns {Object} - Mapped object.
       */
      mapToSchema: function mapToSchema(obj, schema) {
          var mapped = {};
          utils.forIn(schema, function (value, key) {
              if (utils.isPlainObject(value)) {
                  mapped[key] = utils.mapToSchema(obj, value);
              } else {
                  mapped[key] = obj[value];
              }
          });
          return mapped;
      },


      // ---------------------------
      // Misc
      // ---------------------------

      /**
       * Safely parses the given JSON `String` into an `Object`.
       * The only difference from `JSON.parse()` is that this method does not
       * throw for invalid input. Instead, returns `null`.
       * @memberof utils
       *
       * @param {String} str - JSON string to be parsed
       * @returns {Object|null} - Returns the parsed `Object` or `null` if the
       * input is invalid.
       */
      safeJsonParse: function safeJsonParse(str) {
          var o = null;
          try {
              o = JSON.parse(str);
          } catch (e) {}
          return o;
      },


      /**
       * Gets a timestamp that is seconds or milliseconds since midnight,
       * January 1, 1970 UTC.
       * @memberof utils
       *
       * @param {Boolean} [seconds=false]
       *        Specifies whether seconds should be returned instead of
       *        milliseconds.
       *
       * @returns {Number} - Returns seconds or milliseconds since midnight,
       * January 1, 1970 UTC.
       */
      time: function time(seconds) {
          var ts = Date.now();
          return seconds ? parseInt(ts / 1000, 10) : ts;
      }
  };

  exports.default = utils;

  /***/ }),
  /* 1 */
  /***/ (function(module, exports, __webpack_require__) {

  "use strict";


  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  var GOOGLE_MAPS_API_BASE = '//maps.googleapis.com/maps/api';

  /**
   * This file only includes partial documentation about `geolocator` enumerations.
   * Note that these enumerations are mostly an aggregation of
   * {@link https://developers.google.com/maps/documentation/javascript|Google Maps API} constants.
   *
   * @private
   * @readonly
   */
  var enums = Object.freeze({
    /**
     * Enumerates API endpoints used within Geolocator core.
     *
     * @enum {String}
     * @readonly
     * @private
     */
    URL: {
      /**
       *  Public IP retrieval (free) service.
       *  @type {String}
       *  @private
       */
      IP: '//api.ipify.org',
      /**
       *  Country SVG flags.
       *  e.g. <url>/tr.svg for Turkey flag.
       *  @type {String}
       *  @private
       */
      FLAG: '//cdnjs.cloudflare.com/ajax/libs/flag-icon-css/2.3.1/flags/4x3/',
      /**
       * Google Maps API bootstrap endpoint that loads all of the main
       * Javascript objects and symbols for use in the Maps API.
       * Some Maps API features are also available in self-contained
       * libraries which are not loaded unless you specifically request them.
       * See {@link https://developers.google.com/maps/documentation/javascript/libraries|details}.
       * @type {String}
       * @private
       */
      GOOGLE_MAPS_API: GOOGLE_MAPS_API_BASE + '/js',
      /**
       * Google Maps API Static Map endpoint.
       * @type {String}
       * @private
       */
      GOOGLE_SATATIC_MAP: GOOGLE_MAPS_API_BASE + '/staticmap',
      /**
       * Google Geolocation API endpoint.
       * @type {String}
       * @private
       */
      GOOGLE_GEOLOCATION: '//www.googleapis.com/geolocation/v1/geolocate',
      /**
       * Google Geocode API endpoint.
       * @type {String}
       * @private
       */
      GOOGLE_GEOCODE: '//maps.googleapis.com/maps/api/geocode/json',
      /**
       * Google TimeZone API endpoint.
       * @type {String}
       * @private
       */
      GOOGLE_TIMEZONE: '//maps.googleapis.com/maps/api/timezone/json',
      /**
       * Google Distance Matrix API endpoint.
       * @type {String}
       * @private
       */
      GOOGLE_DISTANCE_MATRIX: '//maps.googleapis.com/maps/api/distancematrix/json'
    },
    /**
     * Enumerates Google map types.
     * @memberof! geolocator
     *
     * @enum {String}
     * @readonly
     */
    MapTypeId: {
      /**
       * Map type that displays a transparent layer of major streets on
       * satellite images.
       * @type {String}
       */
      HYBRID: 'hybrid',
      /**
       * Map type that displays a normal street map.
       * @type {String}
       */
      ROADMAP: 'roadmap',
      /**
       * Map type that displays satellite images.
       * @type {String}
       */
      SATELLITE: 'satellite',
      /**
       * Map type displays maps with physical features such as terrain and
       * vegetation.
       * @type {String}
       */
      TERRAIN: 'terrain'
    },
    /**
     * Enumerates Google location types.
     * @memberof! geolocator
     *
     * @enum {String}
     * @readonly
     */
    LocationType: {
      /**
       * Indicates that the returned result is a precise geocode for which
       * we have location information accurate down to street address
       * precision.
       * @type {String}
       */
      ROOFTOP: 'ROOFTOP',
      /**
       * Indicates that the returned result reflects an approximation
       * (usually on a road) interpolated between two precise points (such as
       * intersections). Interpolated results are generally returned when
       * rooftop geocodes are unavailable for a street address.
       * @type {String}
       */
      RANGE_INTERPOLATED: 'RANGE_INTERPOLATED',
      /**
       * Indicates that the returned result is the geometric center of a
       * result such as a polyline (for example, a street) or polygon
       * (region).
       * @type {String}
       */
      GEOMETRIC_CENTER: 'GEOMETRIC_CENTER',
      /**
       * Indicates that the returned result is approximate.
       * @type {String}
       */
      APPROXIMATE: 'APPROXIMATE'
    },
    /**
     * Enumerates Google travel modes.
     * @memberof! geolocator
     *
     * @enum {String}
     * @readonly
     */
    TravelMode: {
      /**
       * Indicates distance calculation using the road network.
       * @type {String}
       */
      DRIVING: 'DRIVING',
      /**
       * Requests distance calculation for walking via pedestrian paths &
       * sidewalks (where available).
       * @type {String}
       */
      WALKING: 'WALKING',
      /**
       * Requests distance calculation for bicycling via bicycle paths &
       * preferred streets (where available).
       * @type {String}
       */
      BICYCLING: 'BICYCLING',
      /**
       * Requests distance calculation via public transit routes (where
       * available). This value may only be specified if the request includes
       * an API key or a Google Maps APIs Premium Plan client ID. If you set
       * the mode to transit you can optionally specify either a
       * `departureTime` or an `arrivalTime`. If neither time is specified,
       * the `departureTime` defaults to now (that is, the departure time defaults
       * to the current time). You can also optionally include a `transitMode`
       * and/or a `transitRoutingPreference`.
       * @type {String}
       */
      TRANSIT: 'TRANSIT'
    },
    // /**
    //  * Enumerates Google route restrictions.
    //  * @memberof! geolocator
    //  *
    //  * @enum {String}
    //  * @readonly
    //  */
    // RouteRestriction: {
    //     TOLLS: 'tolls',
    //     HIGHWAYS: 'highways',
    //     FERRIES: 'ferries',
    //     INDOOR: 'indoor'
    // },
    /**
     * Enumerates Google unit systems.
     * @memberof! geolocator
     *
     * @enum {Number}
     * @readonly
     */
    UnitSystem: {
      /**
       * Distances in kilometers and meters.
       * @type {Number}
       */
      METRIC: 0,
      /**
       * Distances defined in miles and feet.
       * @type {Number}
       */
      IMPERIAL: 1
    },
    /**
     * Enumerates mobile radio types.
     * @memberof! geolocator
     *
     * @enum {String}
     * @readonly
     */
    RadioType: {
      /**
       * LTE (Long-Term Evolution) mobile radio type.
       * @type {String}
       */
      LTE: 'lte',
      /**
       * GSM (Global System for Mobile Communications) mobile radio type.
       * @type {String}
       */
      GSM: 'gsm',
      /**
       * CDMA (Code division multiple access) mobile radio access technology.
       * @type {String}
       */
      CDMA: 'cdma',
      /**
       * Wideband CDMA mobile radio access technology.
       * @type {String}
       */
      WCDMA: 'wcdma'
    },
    /**
     * Enumerates formulas/algorithms for calculating the distance between two
     * lat/lng points.
     * @memberof! geolocator
     *
     * @readonly
     * @enum {String}
     *
     * @todo {@link https://en.wikipedia.org/wiki/Vincenty%27s_formulae|Vincenty's Formula}
     */
    DistanceFormula: {
      /**
       * Haversine formula for calculating the distance between two lat/lng points
       * by relating the sides and angles of spherical triangles.
       * @see {@link http://en.wikipedia.org/wiki/Haversine_formula|Haversine_formula}.
       * @type {String}
       */
      HAVERSINE: 'haversine',
      /**
       * Formula based on the Pythagoras Theorem for calculating the
       * distance between two lat/lng points on a Equirectangular projection
       * to account for curvature of the longitude lines.
       * @see {@link https://en.wikipedia.org/wiki/Pythagorean_theorem|Pythagorean_theorem}
       * @type {String}
       */
      PYTHAGOREAN: 'pythagorean'
    },
    /**
     *  Enumerates the image formats used for getting static Google Map images.
     *  @memberof! geolocator
     *
     *  @readonly
     *  @enum {String}
     */
    ImageFormat: {
      /**
       *  Specifies the PNG image format.
       *  Same as `PNG_8`.
       *  @type {String}
       */
      PNG: 'png',
      /**
       *  Specifies the 8-bit PNG image format.
       *  Same as `PNG`.
       *  @type {String}
       */
      PNG_8: 'png8',
      /**
       *  Specifies the 32-bit PNG image format.
       *  @type {String}
       */
      PNG_32: 'png32',
      /**
       *  Specifies the GIF image format.
       *  @type {String}
       */
      GIF: 'gif',
      /**
       *  Specifies the JPEG compressed image format.
       *  @type {String}
       */
      JPG: 'jpg',
      /**
       *  Specifies a non-progressive JPEG compression image format.
       *  @type {String}
       */
      JPG_BASELINE: 'jpg-baseline'
    }
  });

  exports.default = enums;

  /***/ }),
  /* 2 */
  /***/ (function(module, exports, __webpack_require__) {

  "use strict";


  Object.defineProperty(exports, "__esModule", {
      value: true
  });

  var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

  var _utils = __webpack_require__(0);

  var _utils2 = _interopRequireDefault(_utils);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  /**
   * Geolocator Error class that provides a common type of error object for the
   * various APIs implemented in Geolocator. All callbacks of Geolocator will
   * include an instance of this object as the first argument; if the
   * corresponding operation fails. Also all thrown errors will be an instance of
   * this object.
   *
   * This object can be publicly accessed via `geolocator.Error`.
   *
   * @extends Error
   */
  var GeoError = function () {
      // extends Error (doesn't work with transpilers)

      /**
       * Costructs a new instance of `GeoError`.
       *
       * @param {String} [code="UNKNOWN_ERROR"]
       *        Any valid Geolocator Error code.
       *        See {@link #GeoError.Code|`GeoError.Code` enumeration} for
       *        possible values.
       * @param {String} [message]
       *        Error message. If omitted, this will be set to `code`.
       *
       * @returns {GeoError}
       *
       * @example
       * var GeoError = geolocator.Error,
       *     error = new GeoError(GeoError.Code.GEOLOCATION_NOT_SUPPORTED);
       * console.log(error.code); // "GEOLOCATION_NOT_SUPPORTED"
       * console.log(error instanceof GeoError); // true
       */
      function GeoError() {
          var code = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : GeoError.Code.UNKNOWN_ERROR;
          var message = arguments[1];

          _classCallCheck(this, GeoError);

          message = message || String(code);

          /**
           *  Gets the name of the Error object.
           *  This always returns `"GeoError"`.
           *  @name GeoError#name
           *  @type {String}
           */
          Object.defineProperty(this, 'name', {
              enumerable: false,
              writable: false,
              value: 'GeoError' // this.constructor.name
          });

          /**
           *  Gets the error code set for this instance.
           *  This will return one of
           *  {@link #GeoError.Code|`GeoError.Code` enumeration}.
           *  @name GeoError#code
           *  @type {String}
           */
          Object.defineProperty(this, 'code', {
              enumerable: false,
              writable: true,
              value: code
          });

          /**
           *  Gets the error message set for this instance.
           *  If no message is set, this will return the error code value.
           *  @name GeoError#message
           *  @type {String}
           */
          Object.defineProperty(this, 'message', {
              enumerable: false,
              writable: true,
              value: message
          });

          if (Error.hasOwnProperty('captureStackTrace')) {
              // V8
              Error.captureStackTrace(this, this.constructor);
          } else {
              /**
               *  Gets the error stack for this instance.
               *  @name GeoError#stack
               *  @type {String}
               */
              Object.defineProperty(this, 'stack', {
                  enumerable: false,
                  writable: false,
                  value: new Error(message).stack
              });
          }
      }

      /**
       * Creates a new instance of `GeoError` from the given value.
       *
       * @param {*} [err]
       *        Value to be transformed. This is used to determine the proper
       *        error code for the created instance. If an `Error` or `Object` is
       *        passed, its `message` property is checked if it matches any of the
       *        valid error codes. If omitted or no match is found, error code
       *        `GeoError.Code.UNKNOWN_ERROR` will be used as default.
       *
       * @returns {GeoError}
       *
       * @example
       * var GeoError = geolocator.Error,
       * 	   error = GeoError.create();
       * console.log(error.code); // "UNKNOWN_ERROR"
       * error = GeoError.create(GeoError.Code.GEOLOCATION_NOT_SUPPORTED);
       * console.log(error.code); // "GEOLOCATION_NOT_SUPPORTED"
       */


      _createClass(GeoError, null, [{
          key: 'create',
          value: function create(err) {
              if (err instanceof GeoError) {
                  return err;
              }

              var code = void 0,
                  msg = void 0;

              if (_utils2.default.isPositionError(err) && err.code) {
                  switch (err.code) {
                      case 1:
                          code = GeoError.Code.PERMISSION_DENIED;
                          break;
                      case 2:
                          code = GeoError.Code.POSITION_UNAVAILABLE;
                          break;
                      case 3:
                          code = GeoError.Code.TIMEOUT;
                          break;
                      default:
                          code = GeoError.Code.UNKNOWN_ERROR;
                          break;
                  }
                  return new GeoError(code, err.message || '');
              }

              if (typeof err === 'string') {
                  code = msg = err;
              } else if ((typeof err === 'undefined' ? 'undefined' : _typeof(err)) === 'object') {
                  code = err.code || err.message;
                  msg = err.message || err.code;
              }
              if (code && GeoError.isValidErrorCode(code)) {
                  return new GeoError(code, msg);
              }

              return new GeoError(GeoError.Code.UNKNOWN_ERROR, msg);
          }

          /**
           * Creates a new instance of `GeoError` from the given response object.
           * Since Geolocator implements various Google APIs, we might receive
           * responses if different structures. For example, some APIs return a
           * response object with a `status:String` property (such as the TimeZone
           * API) and some return responses with an `error:Object` property. This
           * method will determine the correct reason or message and return a
           * consistent error object.
           *
           * @param {Object|String} response
           *        Response (Object) or status (String) to be transformed.
           * @param {String} [message=null]
           *        Error message.
           *
           * @returns {GeoError}
           *          `GeoError` instance if response contains an error. Otherwise,
           *          returns `null`.
           *
           * @example
           * var error = geolocator.Error.fromResponse(googleResponse);
           * console.log(error.code); // "GOOGLE_KEY_INVALID"
           */

      }, {
          key: 'fromResponse',
          value: function fromResponse(response) {
              var message = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';

              // example Google Geolocation API response:
              // https://developers.google.com/maps/documentation/geolocation/intro#errors
              // {
              //      "error": {
              //          "errors": [
              //              {
              //                  "domain": "global",
              //                  "reason": "parseError",
              //                  "message": "Parse Error",
              //              }
              //          ],
              //      "code": 400,
              //      "message": "Parse Error"
              //      }
              // }
              // example Google TimeZone API response:
              // {
              //     "status": "REQUEST_DENIED"
              // }

              if (!response) return new GeoError(GeoError.Code.INVALID_RESPONSE);

              var errCode = void 0;

              if (_utils2.default.isString(response)) {
                  errCode = errorCodeFromStatus(response);
                  if (errCode) return new GeoError(errCode, message || response);
              }

              if (!_utils2.default.isObject(response)) return null;

              var errMsg = response.error_message || response.errorMessage || response.error && response.error.message || '' || '';

              if (response.status) {
                  errCode = errorCodeFromStatus(response.status);
                  if (errCode) return new GeoError(errCode, errMsg || message || response.status);
              }

              if (response.error) {
                  var reason = response.reason || response.error.reason;
                  if (!reason) {
                      var errors = response.error.errors;
                      if (_utils2.default.isArray(errors) && errors.length > 0) {
                          reason = errors[0].reason; // get the first reason only
                          errMsg = errMsg || errors[0].message; // update errMsg
                      }
                  }
                  errCode = errorCodeFromReason(reason) || GeoError.Code.UNKNOWN_ERROR;
                  return new GeoError(errCode, errMsg || reason || message);
              }

              if (errMsg) {
                  errCode = errorCodeFromStatus(errMsg) || GeoError.Code.UNKNOWN_ERROR;
                  return new GeoError(errCode, errMsg || message);
              }

              return null;
          }

          /**
           *  Checks whether the given value is an instance of `GeoError`.
           *
           *  @param {*} err - Object to be checked.
           *
           *  @returns {Boolean}
           */

      }, {
          key: 'isGeoError',
          value: function isGeoError(err) {
              return err instanceof GeoError;
          }

          /**
           *  Checks whether the given value is a valid Geolocator Error code.
           *
           *  @param {String} errorCode - Error code to be checked.
           *
           *  @returns {Boolean}
           */

      }, {
          key: 'isValidErrorCode',
          value: function isValidErrorCode(errorCode) {
              var prop = void 0;
              for (prop in GeoError.Code) {
                  if (GeoError.Code.hasOwnProperty(prop) && errorCode === GeoError.Code[prop]) {
                      return true;
                  }
              }
              return false;
          }
      }]);

      return GeoError;
  }();

  /**
   *  Gets the string representation of the error instance.
   *
   *  @returns {String}
   */


  GeoError.prototype.toString = function () {
      var msg = this.code !== this.message ? ' (' + this.message + ')' : '';
      return this.name + ': ' + this.code + msg;
  };

  // `class x extends Error` doesn't work when using an ES6 transpiler, such as
  // Babel, since subclasses must extend a class. With Babel 6, we need
  // transform-builtin-extend plugin for this to work. So we're extending from
  // Error the old way. Now, `err instanceof Error` also returns `true`.
  if (typeof Object.setPrototypeOf === 'function') {
      Object.setPrototypeOf(GeoError.prototype, Error.prototype);
  } else {
      GeoError.prototype = Object.create(Error.prototype);
  }

  // ---------------------------
  // ERROR CODES
  // ---------------------------

  /**
   *  Enumerates Geolocator error codes.
   *  This enumeration combines Google API status (error) codes, HTML5 Geolocation
   *  position error codes and other Geolocator-specific error codes.
   *  @enum {String}
   */
  GeoError.Code = {
      /**
       *  Indicates that HTML5 Geolocation API is not supported by the browser.
       *  @type {String}
       */
      GEOLOCATION_NOT_SUPPORTED: 'GEOLOCATION_NOT_SUPPORTED',
      /**
       *  Indicates that Geolocation-IP source is not set or invalid.
       *  @type {String}
       */
      INVALID_GEO_IP_SOURCE: 'INVALID_GEO_IP_SOURCE',
      /**
       *  The acquisition of the geolocation information failed because the
       *  page didn't have the permission to do it.
       *  @type {String}
       */
      PERMISSION_DENIED: 'PERMISSION_DENIED',
      /**
       *  The acquisition of the geolocation failed because at least one
       *  internal source of position returned an internal error.
       *  @type {String}
       */
      POSITION_UNAVAILABLE: 'POSITION_UNAVAILABLE',
      /**
       *  The time allowed to acquire the geolocation, defined by
       *  PositionOptions.timeout information was reached before
       *  the information was obtained.
       *  @type {String}
       */
      TIMEOUT: 'TIMEOUT',
      /**
       * Indicates that the request had one or more invalid parameters.
       * @type {String}
       */
      INVALID_PARAMETERS: 'INVALID_PARAMETERS',
      /**
       * Indicates that the service returned invalid response.
       * @type {String}
       */
      INVALID_RESPONSE: 'INVALID_RESPONSE',
      /**
       * Generally indicates that the query (address, components or latlng)
       * is missing.
       * @type {String}
       */
      INVALID_REQUEST: 'INVALID_REQUEST',
      /**
       * Indicates that the request was denied by the service.
       * This will generally occur because of a missing API key or because the request
       * is sent over HTTP instead of HTTPS.
       * @type {String}
       */
      REQUEST_DENIED: 'REQUEST_DENIED',
      /**
       * Indicates that the request has failed.
       * This will generally occur because of an XHR error.
       * @type {String}
       */
      REQUEST_FAILED: 'REQUEST_FAILED',
      /**
       * Indicates that Google API could not be loaded.
       * @type {String}
       */
      GOOGLE_API_FAILED: 'GOOGLE_API_FAILED',
      /**
       * Indicates that you are over your Google API quota.
       * @type {String}
       */
      OVER_QUERY_LIMIT: 'OVER_QUERY_LIMIT',
      /**
       * Indicates that you've exceeded the requests per second per user limit that
       * you configured in the Google Developers Console. This limit should be
       * configured to prevent a single or small group of users from exhausting your
       * daily quota, while still allowing reasonable access to all users.
       * @type {String}
       */
      USER_RATE_LIMIT_EXCEEDED: 'USER_RATE_LIMIT_EXCEEDED',
      /**
       * Indicates that you've exceeded your daily limit for Google API(s).
       * @type {String}
       */
      DAILY_LIMIT_EXCEEDED: 'DAILY_LIMIT_EXCEEDED',
      /**
       * Indicates that your Google API key is not valid. Please ensure that you've
       * included the entire key, and that you've either purchased the API or have
       * enabled billing and activated the API to obtain the free quota.
       * @type {String}
       */
      GOOGLE_KEY_INVALID: 'GOOGLE_KEY_INVALID',
      /**
       * Indicates that maximum number of elements limit is exceeded. For
       * example, for the Distance Matrix API; occurs when the product of
       * origins and destinations exceeds the per-query limit.
       * @type {String}
       */
      MAX_ELEMENTS_EXCEEDED: 'MAX_ELEMENTS_EXCEEDED',
      /**
       * Indicates that the request contained more than 25 origins,
       * or more than 25 destinations.
       * @type {String}
       */
      MAX_DIMENSIONS_EXCEEDED: 'MAX_DIMENSIONS_EXCEEDED',
      /**
       * Indicates that the request contained more than allowed waypoints.
       * @type {String}
       */
      MAX_WAYPOINTS_EXCEEDED: 'MAX_WAYPOINTS_EXCEEDED',
      /**
       * Indicates that the request body is not valid JSON.
       * @type {String}
       */
      PARSE_ERROR: 'PARSE_ERROR',
      /**
       * Indicates that the requested resource could not be found.
       * Note that this also covers `ZERO_RESULTS`.
       * @type {String}
       */
      NOT_FOUND: 'NOT_FOUND',
      /**
       * Indicates that an internal error (such as XHR cross-domain, etc) has occured.
       * @type {String}
       */
      INTERNAL_ERROR: 'INTERNAL_ERROR',
      /**
       * Indicates that an unknown error has occured.
       * @type {String}
       */
      UNKNOWN_ERROR: 'UNKNOWN_ERROR'
  };

  // ---------------------------
  // HELPER METHODS
  // ---------------------------

  /**
   *  @private
   */
  function errorCodeFromStatus(status) {
      if (!status) return GeoError.Code.INVALID_RESPONSE;
      if (status === 'OK') return null;
      if (status === 'ZERO_RESULTS') return GeoError.Code.NOT_FOUND;
      if (GeoError.Code.hasOwnProperty(status)) return status;
      return null;
  }

  /**
   *  Gets `GeoError.Code` from the given response error reason.
   *  @private
   *
   *  @param {String} reason
   *         Google response error reason.
   *
   *  @returns {String}
   */
  function errorCodeFromReason(reason) {
      switch (reason) {
          case 'invalid':
              return GeoError.Code.INVALID_REQUEST;
          case 'dailyLimitExceeded':
              return GeoError.Code.DAILY_LIMIT_EXCEEDED;
          case 'keyInvalid':
              return GeoError.Code.GOOGLE_KEY_INVALID;
          case 'userRateLimitExceeded':
              return GeoError.Code.USER_RATE_LIMIT_EXCEEDED;
          case 'notFound':
              return GeoError.Code.NOT_FOUND;
          case 'parseError':
              return GeoError.Code.PARSE_ERROR;
          default:
              return null;
      }
  }

  // ---------------------------
  // EXPORT
  // ---------------------------

  exports.default = GeoError;

  /***/ }),
  /* 3 */
  /***/ (function(module, exports, __webpack_require__) {

  "use strict";


  Object.defineProperty(exports, "__esModule", {
      value: true
  });

  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

  var _utils = __webpack_require__(0);

  var _utils2 = _interopRequireDefault(_utils);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  /**
   * Utility for making `XMLHttpRequest` and `JSONP` requests.
   *
   * @license MIT
   * @copyright 2016, Onur Yıldırım (onur@cutepilot.com)
   */
  var fetch = function () {
      function fetch() {
          _classCallCheck(this, fetch);
      }

      _createClass(fetch, null, [{
          key: 'jsonp',


          // https://html.spec.whatwg.org/multipage/scripting.html#script

          /**
           * Makes a JSONP (GET) request by injecting a script tag in the browser.
           * Note that using JSONP has some security implications. As JSONP is really
           * javascript, it can do everything else javascript can do, so you need to
           * trust the provider of the JSONP data.
           * @see https://en.wikipedia.org/wiki/JSONP
           * @memberof fetch
           *
           * @param {Object|String} options - Required. Either the URL string which
           *     will set other options to defaults or an options object with the
           *     following properties.
           *     @param {String} options.url
           *            Source URL to be called.
           *     @param {String} [options.type]
           *            The MIME type that identifies the scripting language of the
           *            code referenced within the script element.
           *            e.g. `"text/javascript"`
           *     @param {String} [options.charset]
           *            Indicates the character encoding of the external resource.
           *            e.g. `"utf-8"`.
           *     @param {Boolean} [options.async=true]
           *            Indicates whether or not to perform the operation
           *            asynchronously. See {@link http://caniuse.com/#feat=script-async|browser support}.
           *     @param {Boolean} [options.defer=false]
           *            Indicates whether the script should be executed when the page
           *            has finished parsing. See {@link http://caniuse.com/#feat=script-defer|browser support}.
           *     @param {String} [options.crossorigin]
           *            Indicates the CORS setting for the script element being
           *            injected. Note that this attribute is not widely supported.
           *            Valid values: `"anonymous"`, `"use-credentials"`.
           *            See {@link https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_settings_attributes|CORS settings}.
           *     @param {Number} [options.timeout=0]
           *            The number of milliseconds a request can take before
           *            automatically being terminated. `0` disables timeout.
           *     @param {Boolean} [options.clean=false]
           *            Whether to remove the loaded script from DOM when the
           *            operation ends. Note that the initial source might load
           *            additional sources which are not deteceted or removed. Only
           *            the initial source is removed.
           *     @param {Object} [options.params]
           *            Optional query parameters to be appended at the end of the URL.
           *            e.g. `{ key: "MY-KEY" }`
           *            You can also include the JSONP callback name parameter here
           *            but if you want the object to be passed to the callback
           *            argument of this method, use `options.callbackParam` to set
           *            the callback parameter.
           *     @param {String} [options.callbackParam]
           *            If the endpoint supports JSONP callbacks, you can set the
           *            callback parameter with this setting. This will enable a
           *            second `obj` argument in the callback of this method which is
           *            useful if the JSONP source invokes the callback with an
           *            argument.
           *     @param {String} [options.rootName]
           *            The name (or notation) of the object that the generated JSONP
           *            callback function should be assigned to. By default, this is
           *            the `window` object but you can set this to a custom object
           *            notation; for example, to prevent global namespace polution.
           *            Note that this root object has to be globally accessible for
           *            this to work. e.g. `"window.myObject"` (as string)
           * @param {Function} [callback]
           *        The callback function that will be executed when the script is
           *        loaded. This callback has the following signature:
           *        `function (err, obj) { ... }`. Note that the second argument
           *        `obj` will always be `undefined` if the source endpoint does not
           *        support JSONP callbacks or a callback param is not set explicitly
           *        via `options.callbackParam` (or if the source does not invoke the
           *        jsonp with an argument). However, the function will always execute
           *        when the script loads or an error occurs.
           *
           * @returns {void}
           *
           * @example
           * var opts1 = {
           * 	   url: 'some/api',
           * 	   callbackParam: 'jsonCallback',
           * 	   params: { key: 'MY-KEY' }
           * };
           * // This will load the following source:
           * // some/api?jsonCallback={auto-generated-fn-name}&key=MY-KEY
           * fetch.jsonp(opts1, function (err, obj) {
           * 	   console.log(obj); // some object
           * });
           *
           * var opts2 = {
           * 	   url: 'some/api',
           * 	   params: {
           * 		   key: 'MY-KEY',
           * 		   jsonCallback: 'my-fn-name'
           * 	   }
           * };
           * // This will load the following source:
           * // some/api?jsonCallback=my-fn-name&key=MY-KEY
           * fetch.jsonp(options, function (err, obj) {
           * 	   console.log(obj); // undefined
           * 	   // still executes, catch errors here
           * });
           * // JSON callback should be explicitly set.
           * window['my-fn-name'] = function (obj) {
           * 	   console.log(obj); // some object
           * };
           */
          value: function jsonp(options, callback) {
              var timeout = void 0;

              callback = _utils2.default.isFunction(callback) ? callback : _utils2.default.noop;

              if (_utils2.default.isString(options)) {
                  options = { url: options };
              }

              if (_utils2.default.isPlainObject(options)) {
                  options = _utils2.default.extend({
                      // type: undefined,
                      async: true,
                      defer: false,
                      // crossorigin: undefined,
                      timeout: 0,
                      params: {},
                      // callbackParam: undefined,
                      // rootName: undefined,
                      clean: true
                  }, options);
              } else {
                  return callback(new Error('No options or target URL is provided.'));
              }

              if (_utils2.default.isString(options.url) === false || options.url.trim() === '') {
                  return callback(new Error('No target URL is provided.'));
              }

              var script = document.createElement('script'),
                  cbParamSet = _utils2.default.isString(options.callbackParam) && options.callbackParam.trim() !== '',
                  cbFnName = void 0,
                  root = void 0,
                  rootNameSet = _utils2.default.isString(options.rootName) && options.rootName !== 'window' && options.rootName !== 'document' && options.rootName.trim() !== '';

              if (cbParamSet) {
                  cbFnName = '_jsonp_' + _utils2.default.randomString(10);
                  options.params[options.callbackParam] = rootNameSet ? options.rootName + '.' + cbFnName : cbFnName;
              }
              var query = _utils2.default.params(options.params) || '',
                  qMark = options.url.indexOf('?') >= 0 ? '&' : '?',
                  url = query ? '' + options.url + qMark + query : options.url;
              // console.log(url);

              function execCb(err, timeUp, obj) {
                  if (timeout) {
                      clearTimeout(timeout);
                      timeout = null;
                  }
                  if ((timeUp || options.clean) && script.parentNode) {
                      script.parentNode.removeChild(script);
                  }
                  // delete the jsonp callback function
                  if (rootNameSet) {
                      delete root[cbFnName];
                  }
                  callback(err, obj);
              }

              if (cbFnName) {
                  var fn = function fn(obj) {
                      execCb(null, false, obj);
                  };
                  root = rootNameSet
                  // ? window[options.rootName][cbFnName] = fn;
                  ? _utils2.default.notateGlobalObj(options.rootName) // if rootName is dot-notation.
                  : window;
                  root[cbFnName] = fn;
              } else if (script.readyState) {
                  // IE < 11
                  script.onreadystatechange = function () {
                      if (script.readyState === 'loaded' || script.readyState === 'complete') {
                          script.onreadystatechange = null;
                          execCb(null);
                      }
                  };
              } else {
                  // IE 11+
                  script.onload = function () {
                      execCb(null);
                  };
              }

              script.onerror = function (error) {
                  var errMsg = 'Could not load source at ' + _utils2.default.removeQuery(options.url);
                  if (error) {
                      errMsg += '\n' + (error.message || error);
                  }
                  execCb(new Error(errMsg));
              };

              if (options.type) {
                  script.type = options.type;
              }
              if (options.charset) {
                  script.charset = options.charset;
              }
              if (options.async) {
                  script.async = true;
              }
              if (options.defer) {
                  script.defer = true;
              }
              if (options.crossorigin) {
                  script.crossorigin = options.crossorigin;
              }

              script.src = url;
              document.getElementsByTagName('head')[0].appendChild(script);

              // Timeout
              if (_utils2.default.isNumber(options.timeout) && options.timeout > 0) {
                  timeout = setTimeout(function () {
                      script.src = '';
                      execCb(new Error('Operation timed out.'), true);
                  }, options.timeout);
              }
          }

          /**
           * Makes an XMLHttpRequest with the given parameters.
           * Note that `"Access-Control-Allow-Origin"` header should be present on
           * the requested resource. Otherwise, the request will not be allowed.
           * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest|XMLHttpRequest}.
           * @memberof fetch
           *
           * @param {Object|String} options
           *        Either the URL string which will set other options to defaults or
           *        the full options object.
           *     @param {String} options.url
           *            Target URL to be called.
           *     @param {String} [options.method="GET"]
           *            HTTP method.
           *     @param {*} [options.data]
           *            Data to be sent with the request.
           *     @param {Number} [options.timeout]
           *            The number of milliseconds a request can take before
           *            automatically being terminated. `0` disables timeout.
           *     @param {Boolean} [options.withCredentials=false]
           *            Indicates whether or not cross-site Access-Control requests
           *            should be made using credentials such as cookies or
           *            authorization headers.
           *     @param {Boolean} [options.async=true]
           *            Indicating whether or not to perform the operation
           *            asynchronously. If this value is false, the `send()` method
           *            does not return until the response is received. If `true`,
           *            notification of a completed transaction is provided using
           *            event listeners. This must be `true` if the multipart
           *            attribute is `true`, or an exception will be thrown.
           *     @param {String} [options.mimeType]
           *            If set, overrides the MIME type returned by the server. This
           *            may be used, for example, to force a stream to be treated and
           *            parsed as `text/xml`, even if the server does not report it as
           *            such.
           *     @param {Object} [options.headers]
           *            Sets the HTTP request headers. Each key should be a header
           *            name with a value. e.g. `{ 'Content-Length': 50 }`. For
           *            security reasons, some headers cannot be set and can only be
           *            controlled by the user agent.
           *     @param {String} [options.username=""]
           *            User name to use for authentication purposes.
           *     @param {String} [options.password=""]
           *            Password to use for authentication purposes.
           * @param {Function} [callback]
           *        The callback function in the following signature:
           *        `function (err, xhr) { ... }`
           *        Note that `xhr` object is always passed regardless of an error.
           *
           * @returns {void}
           */

      }, {
          key: 'xhr',
          value: function xhr(options, callback) {
              var xhr = void 0,
                  err = void 0;

              if ('XMLHttpRequest' in window) {
                  xhr = new XMLHttpRequest();
              } else {
                  throw new Error('XMLHttpRequest is not supported!');
              }

              var hasCallback = _utils2.default.isFunction(callback);
              callback = hasCallback ? callback : _utils2.default.noop;

              if (_utils2.default.isString(options)) {
                  options = { url: options };
              }

              if (_utils2.default.isPlainObject(options)) {
                  options = _utils2.default.extend({
                      method: 'GET',
                      data: undefined,
                      async: true,
                      timeout: 0, // no timeout
                      withCredentials: false,
                      mimeType: undefined,
                      username: '',
                      password: ''
                  }, options);
              } else {
                  callback(new Error('No options or target URL is provided.'));
              }

              if (_utils2.default.isString(options.url) === false) {
                  callback(new Error('No target URL is provided.'));
              }

              options.username = String(options.username);
              options.password = String(options.password);
              options.method = options.method.toUpperCase();
              if (options.method !== 'POST' && options.method !== 'PUT') {
                  options.data = undefined;
              }
              // console.log(JSON.stringify(options));

              if (hasCallback) {
                  xhr.onreadystatechange = function () {
                      if (xhr.readyState === fetch.XHR_READY_STATE.DONE) {
                          if (xhr.status === 200) {
                              callback(null, xhr);
                          } else {
                              // let response = utils.safeJsonParse(xhr.responseText);
                              // if (response && response.error)
                              var crossDomain = xhr.status === 0 ? '. Make sure you have permission if this is a cross-domain request.' : '';
                              err = new Error('The request returned status: ' + xhr.status + crossDomain);
                              // console.log(xhr);
                              callback(err, xhr);
                          }
                      }
                  };

                  if (_utils2.default.isNumber(options.timeout) && options.timeout > 0) {
                      xhr.timeout = options.timeout;
                      xhr.ontimeout = function () {
                          // xhr.abort();
                          err = new Error('The request had timed out.');
                          callback(err, xhr);
                      };
                  }
              }
              // console.log(options);
              xhr.open(options.method, options.url, options.async, options.username, options.password);

              // xhr.setRequestHeader() method should b called œafter open(), but
              // before send().
              if (_utils2.default.isPlainObject(options.headers)) {
                  Object.keys(options.headers).forEach(function (key) {
                      var value = options.headers[key];
                      xhr.setRequestHeader(key, value);
                  });
              }

              // xhr.overrideMimeType() method must be called before send().
              if (options.mimeType) {
                  xhr.overrideMimeType(options.mimeType);
              }

              xhr.send(options.data);
          }

          /**
           * Alias of `fetch.xhr()` with request method set to `"GET"` by default.
           * @memberof fetch
           *
           * @param {Object} options
           *        Either the URL string which will set other options to defaults or
           *        the full options object. See `fetch.xhr()` method options for
           *        details.
           * @param {Function} [callback]
           *        The callback function in the following signature:
           *        `function (err, xhr) { ... }`
           *        Note that `xhr` object is always passed regardless of an error.
           * @returns {void}
           */

      }, {
          key: 'get',
          value: function get(options, callback) {
              return fetch.xhr(options, callback);
          }

          /**
           * Alias of `fetch.xhr()` with request method set to `"POST"` by default.
           * @memberof fetch
           *
           * @param {Object} options
           *        Either the URL string which will set other options to defaults or
           *        the full options object. See `fetch.xhr()` method options for
           *        details.
           * @param {Function} [callback]
           *        The callback function in the following signature:
           *        `function (err, xhr) { ... }`
           *        Note that `xhr` object is always passed regardless of an error.
           * @returns {void}
           */

      }, {
          key: 'post',
          value: function post(options, callback) {
              return _xhr('POST', options, callback);
          }

          /**
           * Alias of `fetch.xhr()` with request method set to `"PUT"` by default.
           * @memberof fetch
           *
           * @param {Object} options
           *        Either the URL string which will set other options to defaults or
           *        the full options object. See `fetch.xhr()` method options for
           *        details.
           * @param {Function} [callback]
           *        The callback function in the following signature:
           *        `function (err, xhr) { ... }`
           *        Note that `xhr` object is always passed regardless of an error.
           * @returns {void}
           */

      }, {
          key: 'put',
          value: function put(options, callback) {
              return _xhr('PUT', options, callback);
          }

          /**
           * Alias of `fetch.xhr()` with request method set to `"DELETE"` by default.
           * @memberof fetch
           *
           * @param {Object} options
           *        Either the URL string which will set other options to defaults or
           *        the full options object. See `fetch.xhr()` method options for
           *        details.
           * @param {Function} [callback]
           *        The callback function in the following signature:
           *        `function (err, xhr) { ... }`
           *        Note that `xhr` object is always passed regardless of an error.
           * @returns {void}
           */

      }, {
          key: 'delete',
          value: function _delete(options, callback) {
              return _xhr('DELETE', options, callback);
          }
      }]);

      return fetch;
  }();

  /**
   *  @private
   */


  function _xhr(method, options, callback) {
      options = _utils2.default.isString(options) ? { url: options } : options || {};
      options.method = method;
      return fetch.xhr(options, callback);
  }

  /**
   * Enumerates `XMLHttpRequest` ready states.
   * Not to be confused with `script.readyState`.
   * @memberof fetch
   *
   * @enum {Number}
   */
  fetch.XHR_READY_STATE = {
      /**
       * `xhr.open()` has not been called yet.
       * @type {Number}
       */
      UNSENT: 0,
      /**
       * `xhr.send()` has been called.
       * @type {Number}
       */
      OPENED: 1,
      /**
       * `xhr.send()` has been called, and headers and status are available.
       * @type {Number}
       */
      HEADERS_RECEIVED: 2,
      /**
       * Downloading; responseText holds partial data.
       * @type {Number}
       */
      LOADING: 3,
      /**
       * The operation is complete.
       * @type {Number}
       */
      DONE: 4
  };

  exports.default = fetch;

  /***/ }),
  /* 4 */
  /***/ (function(module, exports, __webpack_require__) {

  "use strict";


  Object.defineProperty(exports, "__esModule", {
      value: true
  });

  var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

  var _utils = __webpack_require__(0);

  var _utils2 = _interopRequireDefault(_utils);

  var _fetch = __webpack_require__(3);

  var _fetch2 = _interopRequireDefault(_fetch);

  var _geo = __webpack_require__(5);

  var _geo2 = _interopRequireDefault(_geo);

  var _geo3 = __webpack_require__(2);

  var _geo4 = _interopRequireDefault(_geo3);

  var _geo5 = __webpack_require__(6);

  var _geo6 = _interopRequireDefault(_geo5);

  var _enums = __webpack_require__(1);

  var _enums2 = _interopRequireDefault(_enums);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  /**
   *  Radius of earth in kilometers.
   *  @private
   *  @type {Number}
   */
  var EARTH_RADIUS_KM = 6371;

  /**
   *  Radius of earth in miles.
   *  @private
   *  @type {Number}
   */
  var EARTH_RADIUS_MI = 3959;

  /**
   *  Storage for Geolocator default configuration.
   *
   *  @readonly
   *  @private
   */
  var defaultConfig = {
      language: 'en',
      https: true,
      google: {
          version: '3', // latest 3.x
          key: '',
          styles: null
      }
  };

  /**
   *  Geolocator library that provides methods for getting geo-location information,
   *  geocoding, address look-ups, distance & durations, timezone information and more...
   *  This library makes use of HTML5 position feautures, implements Google APIs
   *  and other services.
   *
   *  <b>Important Notes:</b>
   *
   *  Although some calls might work without a key, it is generally required by
   *  most {@link https://developers.google.com/maps/faq#using-google-maps-apis|Goolge APIs}
   *  (such as Time Zone API). To get a free (or premium) key,
   *  {@link https://developers.google.com/maps/documentation/javascript/|click here}.
   *  After getting a key, you can enable multiple APIs for it. Make sure you
   *  {@link https://console.developers.google.com|enable}
   *  all the APIs supported by Geolocator.
   *
   *  Note that browser API keys cannot have referer restrictions when used
   *  with some Google APIs.
   *
   *  Make sure your doctype is HTML5 and you're calling Geolocation APIs from an
   *  HTTPS page. Geolocation API is removed from unsecured origins in Chrome 50.
   *  Other browsers are expected to follow.
   *
   *  @license MIT
   *  @copyright 2016, Onur Yıldırım (onur@cutepilot.com)
   */

  var geolocator = function () {
      function geolocator() {
          _classCallCheck(this, geolocator);
      }

      _createClass(geolocator, null, [{
          key: 'config',


          // ---------------------------
          // STATIC METHODS
          // ---------------------------

          /**
           *  Sets or gets the geolocator configuration object.
           *  Make sure you configure Geolocator before calling other methods that
           *  require a Google API key.
           *
           *  @param {Object} [options]
           *         Configuration object. If omitted, this method returns the current
           *         configuration.
           *      @param {String} [options.language="en"]
           *             Language to be used for API requests that supports language
           *             configurations. This is generally used for Google APIs.
           *             See {@link https://developers.google.com/maps/faq#languagesupport|supported languages}.
           *      @param {Boolean} [options.https=true]
           *             As Google recommends; using HTTPS encryption makes your site
           *             more secure, and more resistant to snooping or tampering.
           *             If set to `true`, the API calls are made over HTTPS, at all
           *             times. Setting to `false` will switch to HTTP (even if the
           *             page is on HTTPS). And if set to `null`, current protocol will
           *             be used. Note that some APIs might not work with HTTP such as
           *             Google Maps TimeZone API.
           *      @param {Object} [options.google]
           *             Google specific options.
           *          @param {String} [options.google.version="3"]
           *                 Google Maps API version to be used (with
           *                 `geolocator.createMap()`) method. The default version
           *                 value is tested and works with Geolocator. You can set a
           *                 greater value or the latest version number and it should
           *                 work; but it's not guaranteed. Find out the
           *                 {@link https://developers.google.com/maps/documentation/javascript/versions|latest version here}.
           *          @param {String} [options.google.key=""]
           *                 API key to be used with Google API calls. Although some
           *                 calls might work without a key, it is generally required
           *                 by most Goolge APIs. To get a free (or premium) key,
           *                 {@link https://developers.google.com/maps/documentation/javascript/|click here}.
           *          @param {Array} [options.google.styles]
           *                 An array of objects to customize the presentation of the
           *                 Google base maps, changing the visual display of such
           *                 elements as roads, parks, and built-up areas.
           *                 See {@link https://developers.google.com/maps/documentation/javascript/styling|Styling Maps}.
           *
           *  @returns {Object} - Returns the current or updated configuration object.
           *
           *  @example
           *  geolocator.config({
           *      language: "en",
           *      google: {
           *          version: "3",
           *          key: "YOUR-GOOGLE-API-KEY"
           *      }
           *  });
           */
          value: function config(options) {
              if (options) {
                  geolocator._.config = _utils2.default.extend(defaultConfig, options);
              }
              return geolocator._.config;
          }

          /**
           *  Gets a static map image URL which can be embeded via an `<img />` tag
           *  on the page.
           *
           *  Note that, if `options.center` is set to an address (instead of
           *  coordinates) and `options.marker` is also set; we will need to geocode
           *  that address to get center coordinates for the marker.
           *  In this case, you must use the `callback` parameter to get the async
           *  result. Otherwise, this method will directly return a `String`.
           *
           *  Make sure you have enabled Static Maps API (and Geocoding API if
           *  `marker` is enabled) in your Google Developers console.
           *
           *  For interactive map, see {@link #geolocator.createMap|`geolocator.createMap()` method}.
           *
           *  @see {@link https://developers.google.com/maps/documentation/static-maps/intro|Static Maps}
           *  @see {@link https://developers.google.com/maps/documentation/static-maps/usage-limits|Usage Limits}
           *
           *  @param {Object} options
           *         Static map options.
           *         @param {String|Object} options.center
           *                Defines the center of the map and the location.
           *                Either an address `String` or an coordinates `Object` with
           *                `latitude:Number` and `longitude:Number` properties.
           *         @param {String} [options.mapTypeId="roadmap"]
           *                Type of the map to be created.
           *                See {@link #geolocator.MapTypeId|`geolocator.MapTypeId` enumeration}
           *                for possible values.
           *         @param {String|Object} [options.size="600x300"]
           *                Defines the size (in pixels) of the returned image.
           *                Either a string in `widthxheight` format or an Object
           *                with `width:Number` and `height:Number` properties.
           *         @param {Number} [options.scale=1]
           *                Affects the number of pixels that are returned. scale=2
           *                returns twice as many pixels as scale=1 while retaining
           *                the same coverage area and level of detail (i.e. the
           *                contents of the map don't change). Accepted values are 1,
           *                2 and 4 (4 is only available to Google Maps APIs Premium
           *                Plan customers.)
           *         @param {Number} [options.zoom=9]
           *                Zoom level to be set for the map.
           *         @param {String} [options.format=png]
           *                Defines the format of the resulting image.
           *                See {@link #geolocator.ImageFormat|`geolocator.ImageFormat` enumeration}
           *                for possible values.
           *         @param {Boolean|String} [options.marker=true]
           *                Specifies whether to add a marker to the center of the map.
           *                You can define the color of the marker by passing a color
           *                `String` instead of a `Boolean`. Color can be a predefined
           *                color from the set `red` (default), `black`, `brown`,
           *                `green`, `purple`, `yellow`, `blue`, `gray`, `orange` and
           *                `white`; or a HEX 24-bit color (e.g. `"0xFF0000"`).
           *                Note that marker will not be visible if `center` is set to
           *                a `String` address and you don't use the callback.
           *         @param {String} [options.region]
           *                Defines the appropriate borders to display, based on
           *                geo-political sensitivities. Accepts a region code
           *                specified as a two-character ccTLD (top-level domain)
           *                value. e.g. `"us"`.
           *         @param {Array} [options.styles]
           *                An array of objects to customize the presentation of the
           *                Google base maps, changing the visual display of such
           *                elements as roads, parks, and built-up areas.
           *                This will default to the global styles set via
           *                {@link #geolocator.config|`geolocator.config()` method}, if any.
           *                See {@link https://developers.google.com/maps/documentation/javascript/styling|Styling Maps}.
           *
           *  @param {Function} [callback]
           *         Callback function to be executed when the static map URL is built.
           *         This takes 2 arguments: `function (err, url) { ... }`.
           *         If omitted, this method will directly return the static map
           *         image URL; but (if enabled) the marker will not be visible if
           *         `options.center` is set to an address `String` instead of a
           *         coordinates `Object`.
           *
           *  @returns {String|void}
           *           If a callback is passed, this will return `void`.
           *           Otherwise, a `String` that represents the URL of the static map.
           *
           *  @example
           *  // Async example (with address and marker)
           *  var options = {
           *      center: "Los Angles, CA, US",
           *      mapTypeId: geolocator.MapTypeId.ROADMAP,
           *      size: "600x300",
           *      scale: 1,
           *      zoom: 5,
           *      marker: "0xFFCC00",
           *      format: geolocator.ImageFormat.PNG
           *  };
           *  geolocator.getStaticMap(options, function (err, url) {
           *      if (!err) {
           *          document.getElementById('my-img').src = url;
           *      }
           *  });
           *
           *  @example
           *  // Sync example (with coordinates)
           *  var options = {
           *      center: {
           *          longitude: 34.0522342,
           *          latitude: -118.2436849
           *      },
           *      mapTypeId: geolocator.MapTypeId.ROADMAP,
           *      size: "600x300",
           *      scale: 1,
           *      zoom: 5,
           *      marker: "0xFFCC00",
           *      format: geolocator.ImageFormat.PNG
           *  };
           *  document.getElementById('my-img').src = geolocator.getStaticMap(options);
           */

      }, {
          key: 'getStaticMap',
          value: function getStaticMap(options, callback) {
              if (!_utils2.default.isPlainObject(options) || !options.center) {
                  throw new _geo4.default(_geo4.default.Code.INVALID_PARAMETERS, 'A center address or coordinates are required.');
              }

              if (_utils2.default.isString(options.center)) {
                  return geolocator.geocode(options.center, function (err, location) {
                      if (err) callback(err);
                      options.center = location.coords;
                      callback(null, geolocator.getStaticMap(options));
                  });
              }

              var conf = geolocator._.config;
              var opts = _utils2.default.extend({
                  mapTypeId: _enums2.default.MapTypeId.ROADMAP,
                  size: {
                      width: 600,
                      height: 300
                  },
                  scale: 1, // 1 | 2 | (4 for business customers of google maps)
                  zoom: 9,
                  marker: 'red',
                  format: _enums2.default.ImageFormat.PNG,
                  language: conf.language || 'en',
                  region: null
              }, options);

              var center = _utils2.default.isPlainObject(opts.center) ? opts.center.latitude + ',' + opts.center.longitude : String(opts.center);

              var size = _utils2.default.isPlainObject(opts.size) ? opts.size.width + 'x' + opts.size.height : String(opts.size);

              var url = _enums2.default.URL.GOOGLE_SATATIC_MAP // not using utils.setProtocol() here
              + ('?center=' + center + '&maptype=' + opts.mapTypeId) + ('&size=' + size + '&scale=' + opts.scale + '&zoom=' + opts.zoom) + ('&format=' + opts.format + '&language=' + opts.language);

              if (opts.marker) {
                  var color = _utils2.default.isString(opts.marker) ? opts.marker : 'red';
                  url += '&markers=' + encodeURIComponent('color:' + color + '|' + center);
              }
              if (opts.region) url += '&region=' + opts.region;
              if (conf.google.key) url += '&key=' + conf.google.key;

              var styles = getStyles(opts);
              if (styles) url += '&' + _geo2.default.mapStylesToParams(styles);

              if (_utils2.default.isFunction(callback)) return callback(null, url);
              return url;
          }

          /**
           *  Creates an interactive Google Map within the given element.
           *  Make sure you have enabled Google Static Maps API in your Google Developers console.
           *  For static map, see {@link #geolocator.getStaticMap|`geolocator.getStaticMap()` method}.
           *  @see {@link https://developers.google.com/maps/documentation/javascript/reference|Google Maps JavaScript API}
           *  @see {@link https://developers.google.com/maps/documentation/javascript/usage|Usage Limits}
           *
           *  @param {Object|String|HTMLElement|Map} options
           *         Either map options object with the following properties or; the ID
           *         of a DOM element, or element itself which the map will be
           *         created within; or a previously created `google.maps.Map` instance.
           *         If a map instance is set, this only will apply the options without
           *         re-creating it.
           *      @param {String|HTMLElement|Map} options.element
           *             Either the ID of a DOM element or the element itself;
           *             which the map will be created within; or a previously created
           *             `google.maps.Map` instance. If a map instance is set, this
           *             only will apply the options without re-creating it.
           *      @param {Object} options.center
           *             Center coordinates for the map to be created.
           *          @param {Number} options.center.latitude
           *                 Latitude of the center point coordinates.
           *          @param {Number} options.center.longitude
           *                 Longitude of the center point coordinates.
           *      @param {String} [options.mapTypeId="roadmap"]
           *             Type of the map to be created.
           *             See {@link #geolocator.MapTypeId|`geolocator.MapTypeId` enumeration}
           *             for possible values.
           *      @param {String} [options.title]
           *             Title text to be displayed within an `InfoWindow`, when the
           *             marker is clicked. This only take effect if `marker` is
           *             enabled.
           *      @param {Boolean} [options.marker=true]
           *             Whether to place a marker at the given coordinates.
           *             If `title` is set, an `InfoWindow` will be opened when the
           *             marker is clicked.
           *      @param {Number} [options.zoom=9]
           *             Zoom level to be set for the map.
           *      @param {Array} [options.styles]
           *             An array of objects to customize the presentation of the
           *             Google base maps, changing the visual display of such
           *             elements as roads, parks, and built-up areas.
           *             This will default to the global styles set via
           *             {@link #geolocator.config|`geolocator.config` method}`, if any.
           *             See {@link https://developers.google.com/maps/documentation/javascript/styling|Styling Maps}.
           *
           *  @param {Function} callback
           *         Callback function to be executed when the map is created.
           *         This takes 2 arguments: `function (err, map) { ... }`.
           *         See {@link #geolocator~MapData|`geolocator~MapData` type} for details.
           *
           *  @returns {void}
           *
           *  @example
           *  var options = {
           *      element: "my-map",
           *      center: {
           *          latitude: 48.8534100,
           *          longitude: 2.3488000
           *  	},
           *  	marker: true,
           *  	title: "Paris, France",
           *  	zoom: 12
           *  };
           *  geolocator.createMap(options, function (err, map) {
           *      if (map && map.infoWindow) {
           *          map.infoWindow.open(map.instance, map.marker);
           *      }
           *  });
           */

      }, {
          key: 'createMap',
          value: function createMap(options, callback) {
              // if options is not a plain object, consider element ID, `HTMLElement`,
              // `jQuery` instance or `google.maps.Map` instance.
              if (!_utils2.default.isPlainObject(options)) {
                  options = { element: options };
              }

              options = _utils2.default.extend({
                  element: null,
                  mapTypeId: _enums2.default.MapTypeId.ROADMAP,
                  title: undefined,
                  marker: true,
                  zoom: 9
              }, options);

              var e = options.element,
                  elem = void 0;
              if (_utils2.default.isString(e)) {
                  elem = document.getElementById(e);
              } else if (_utils2.default.isJQueryObject(e)) {
                  elem = e[0];
              } else if (geolocator.isGoogleLoaded() && e instanceof google.maps.Map) {
                  elem = e.getDiv();
              }

              if (!_utils2.default.isElement(elem) && !_utils2.default.isNode(elem)) {
                  throw new _geo4.default(_geo4.default.Code.INVALID_PARAMETERS, 'A valid DOM element or element ID is required to create a map.');
              }

              if (!_utils2.default.isPlainObject(options.center) || !_utils2.default.isNumber(options.center.latitude) || !_utils2.default.isNumber(options.center.longitude)) {
                  throw new _geo4.default(_geo4.default.Code.INVALID_PARAMETERS, 'Center coordinates are required to create a map.');
              }

              options.element = elem;

              var conf = geolocator._.config,
                  key = conf.google.key;
              options.styles = getStyles(options);

              geolocator.ensureGoogleLoaded(key, function (err) {
                  if (err) {
                      throw new _geo4.default(_geo4.default.Code.GOOGLE_API_FAILED, String(err.message || err));
                  }

                  var mapData = configCreateMap(options);
                  callback(null, mapData);
              });
          }

          /**
           *  Locates the user's location via HTML5 geolocation. This may
           *  require/prompt for user's permission. If the permission is granted we'll
           *  get the most accurate location information. Otherwise, we'll fallback to
           *  locating via user's IP (if enabled).
           *
           *  For better accuracy, Geolocator implements a different approach than the
           *  `getCurrentPosition` API; which generally triggers before the device's
           *  GPS hardware can provide anything accurate. Thanks to
           *  {@link https://github.com/gwilson/getAccurateCurrentPosition#background|Greg Wilson}
           *  for the idea.
           *
           *  Also note that HTML5 Geolocation feature no more allows insecure origins.
           *  See {@link https://goo.gl/rStTGz|this} for more details.
           *  This means if you don't call this method from an HTTPS page, it will
           *  fail. And if `options.fallbackToIP` is enabled, this will locate by IP.
           *
           *  @param {Object} [options]
           *         HTML5 geo-location settings with some additional options.
           *      @param {Boolean} [options.enableHighAccuracy=true]
           *             Specifies whether the device should provide the most accurate
           *             position it can. Note that setting this to `true` might
           *             consume more CPU and/or battery power; and result in slower
           *             response times.
           *      @param {Number} [options.desiredAccuracy=30]
           *             Minimum accuracy desired, in meters. Position will not be
           *             returned until this is met, before the timeout. This only
           *             takes effect if `enableHighAccuracy` is set to `true`.
           *      @param {Number} [options.timeout=5000]
           *             HTML5 position timeout setting in milliseconds. Setting this
           *             to `Infinity` means that Geolocator won't return until the
           *             position is available.
           *      @param {Number} [options.maximumWait=10000]
           *             Maximum time to wait (in milliseconds) for the desired
           *             accuracy (which should be greater than `timeout`).
           *             This only takes effect if `enableHighAccuracy` is set to
           *             `true`.
           *      @param {Number} [options.maximumAge=0]
           *             HTML5 position maximum age. Indicates the maximum age in
           *             milliseconds of a possible cached position that is acceptable
           *             to return. `0` means, the device cannot use a cached position
           *             and must attempt to retrieve the real current position. If set
           *             to `Infinity` the device must return a cached position
           *             regardless of its age. Note that if `enableHighAccuracy` is
           *             set to `true`, `maximumAge` will be forced to `0`.
           *      @param {Function} [options.onProgress]
           *             If `enableHighAccuracy` is set to `true`, you can use this
           *             callback to check the progress of the location accuracy;
           *             while waiting for the final, best accurate location.
           *      @param {Boolean} [options.fallbackToIP=false]
           *             Specifies whether to fallback to IP geolocation if the HTML5
           *             geolocation fails (e.g. user rejection).
           *      @param {Boolean} [options.addressLookup=false]
           *             Specifies whether to run a reverse-geocode operation for the
           *             fetched coordinates to retrieve detailed address information.
           *             Note that this means an additional request which requires a
           *             Google API key to be set in the Geolocator configuration.
           *             See {@link #geolocator.config|`geolocator.config()`}.
           *      @param {Boolean} [options.timezone=false]
           *             Specifies whether to also fetch the time zone information for
           *             the receieved coordinates. Note that this means an additional
           *             request which requires a Google API key to be set in the
           *             Geolocator configuration.
           *             See {@link #geolocator.config|`geolocator.config()`}.
           *      @param {String|MapOptions} [options.map]
           *             In order to create an interactive map from the fetched
           *             location coordinates; either set this to a
           *             {@link #geolocator~MapOptions|`MapOptions` object}
           *             or; the ID of a DOM element or DOM element itself which the
           *             map will be created within.
           *      @param {Boolean|Object} [options.staticMap=false]
           *             Set to `true` to get a static Google Map image URL (with
           *             default options); or pass a static map options object.
           *
           *  @param {Function} callback
           *         Callback function to be executed when the request completes.
           *         This takes 2 arguments: `function (err, location) { ... }`.
           *         See {@link #geolocator~Location|`geolocator~Location` type} for details.
           *
           *  @returns {void}
           *
           *  @example
           *  var options = {
           *      enableHighAccuracy: true,
           *      desiredAccuracy: 30,
           *      timeout: 5000,
           *      maximumWait: 10000,
           *      maximumAge: 0,
           *      fallbackToIP: true,
           *      addressLookup: true,
           *      timezone: true,
           *      map: "my-map",
           *      staticMap: true
           *  };
           *  geolocator.locate(options, function (err, location) {
           *      console.log(err || location);
           *  });
           *
           * @example
           *  // location result:
           *  {
           *      coords: {
           *          latitude: 37.4224764,
           *          longitude: -122.0842499,
           *          accuracy: 30,
           *          altitude: null,
           *          altitudeAccuracy: null,
           *          heading: null,
           *          speed: null
           *      },
           *      address: {
           *          commonName: "",
           *          street: "Amphitheatre Pkwy",
           *          route: "Amphitheatre Pkwy",
           *          streetNumber: "1600",
           *          neighborhood: "",
           *          town: "",
           *          city: "Mountain View",
           *          region: "Santa Clara County",
           *          state: "California",
           *          stateCode: "CA",
           *          postalCode: "94043",
           *          country: "United States",
           *          countryCode: "US"
           *      },
           *      formattedAddress: "1600 Amphitheatre Parkway, Mountain View, CA 94043, USA",
           *      type: "ROOFTOP",
           *      placeId: "ChIJ2eUgeAK6j4ARbn5u_wAGqWA",
           *      timezone: {
           *          id: "America/Los_Angeles",
           *          name: "Pacific Standard Time",
           *          abbr: "PST",
           *          dstOffset: 0,
           *          rawOffset: -28800
           *      },
           *      flag: "//cdnjs.cloudflare.com/ajax/libs/flag-icon-css/2.3.1/flags/4x3/us.svg",
           *      map: {
           *          element: HTMLElement,
           *          instance: Object, // google.maps.Map
           *          marker: Object, // google.maps.Marker
           *          infoWindow: Object, // google.maps.InfoWindow
           *          options: Object // map options
           *      },
           *      staticMap: "//maps.googleapis.com/maps/api/staticmap?center=37.4224764,-122.0842499&maptype=roadmap&size=600x300&scale=1&zoom=9&format=png&language=en&markers=color%3Ared%7C37.4224764%2C2-122.0842499&key=YOUR-GOOGLE-API-KEY",
           *      timestamp: 1456795956380
           *  }
           */

      }, {
          key: 'locate',
          value: function locate(options, callback) {
              options = _utils2.default.extend({
                  enableHighAccuracy: true,
                  timeout: 5000,
                  maximumWait: 10000,
                  maximumAge: 0,
                  desiredAccuracy: 30,
                  onProgress: _utils2.default.noop,
                  fallbackToIP: false,
                  addressLookup: false,
                  timezone: false,
                  map: undefined,
                  staticMap: false
              }, options);

              // force disable cache if high-accuracy is enabled
              if (options.enableHighAccuracy) options.maximumAge = 0;
              // set a min value for timeout
              if (options.timeout < 1000) options.timeout = 1000;
              // max wait should not be less than timeout
              if (options.maximumWait < options.timeout) options.maximumWait = options.timeout;

              // check options and Google key
              checkGoogleKey(options);

              var cb = callbackMap(options, callback);

              function fallbackToIP(error) {
                  if (options.fallbackToIP) {
                      return geolocator.locateByIP(options, function (err, location) {
                          if (err) return cb(err, null);
                          return cb(null, location);
                      });
                  }
                  cb(error, null);
              }
              function onPositionReceived(location) {
                  fetchAddressAndTimezone(location, options, cb);
              }
              function onPositionError(err) {
                  err = _geo4.default.create(err);
                  fallbackToIP(err);
              }

              if (geolocator.isGeolocationSupported()) {
                  if (options.enableHighAccuracy) {
                      locateAccurate(options, onPositionReceived, onPositionError);
                  } else {
                      navigator.geolocation.getCurrentPosition(onPositionReceived, onPositionError, options);
                  }
              } else {
                  var err = new _geo4.default(_geo4.default.Code.GEOLOCATION_NOT_SUPPORTED);
                  fallbackToIP(err);
              }
          }

          /**
           *  Returns a location and accuracy radius based on information about cell
           *  towers and WiFi nodes that the mobile client can detect; via the Google
           *  Maps Geolocation API.
           *  @see {@link https://developers.google.com/maps/documentation/geolocation/intro|Google Maps Geolocation API}
           *  @see {@link https://developers.google.com/maps/documentation/geolocation/usage-limits|Usage Limits}
           *
           *  @param {Object} [options]
           *         Geolocation options.
           *      @param {Number} [options.homeMobileCountryCode]
           *             The mobile country code (MCC) for the device's home network.
           *      @param {Number} [options.homeMobileNetworkCode]
           *             The mobile network code (MNC) for the device's home network.
           *      @param {String} [options.radioType]
           *             The mobile radio type.
           *             See {@link #geolocator.RadioType|`geolocator.RadioType` enumeration}
           *             for possible values. While this field is optional, it should
           *             be included if a value is available, for more accurate results.
           *      @param {string} [options.carrier]
           *             The carrier name. e.g. "Vodafone"
           *      @param {Boolean} [options.fallbackToIP=false]
           *             Specifies whether to fallback to IP geolocation if wifi and
           *             cell tower signals are not available. Note that the IP address
           *             in the request header may not be the IP of the device. Set
           *             `fallbackToIP` to `false` to disable fall back.
           *      @param {Array} [options.cellTowers]
           *             An array of cell tower objects.
           *             See {@link https://developers.google.com/maps/documentation/geolocation/intro#cell_tower_object|Cell tower objects} for details.
           *      @param {Array} [options.wifiAccessPoints]
           *             An array of WiFi access point objects.
           *             See {@link https://developers.google.com/maps/documentation/geolocation/intro#wifi_access_point_object|WiFi access point objects} for details.
           *      @param {Boolean} [options.addressLookup=false]
           *             Specifies whether to run a reverse-geocode operation for the
           *             fetched coordinates to retrieve detailed address information.
           *             Note that this means an additional request which requires a
           *             Google API key to be set in the Geolocator configuration.
           *             See {@link #geolocator.config|`geolocator.config()`}.
           *      @param {Boolean} [options.timezone=false]
           *             Specifies whether to also fetch the time zone information for
           *             the receieved coordinates. Note that this means an additional
           *             request which requires a Google API key to be set in the
           *             Geolocator configuration.
           *             See {@link #geolocator.config|`geolocator.config()`}.
           *      @param {String|MapOptions} [options.map]
           *             In order to create an interactive map from the fetched
           *             location coordinates; either set this to a
           *             {@link #geolocator~MapOptions|`MapOptions` object}
           *             or; the ID of a DOM element or DOM element itself which the
           *             map will be created within.
           *      @param {Boolean|Object} [options.staticMap=false]
           *             Set to `true` to get a static Google Map image URL (with
           *             default options); or pass a static map options object.
           *      @param {Boolean} [options.raw=false]
           *      	      Whether to return the raw Google API result.
           *  @param {Function} callback
           *         Callback function to be executed when the request completes.
           *         This takes 2 arguments: `function (err, location) { ... }`.
           *         See {@link #geolocator~Location|`geolocator~Location` type} for details.
           *
           *  @returns {void}
           *
           *  @example
           *  var options = {
           *      homeMobileCountryCode: 310,
           *      homeMobileNetworkCode: 410,
           *      carrier: 'Vodafone',
           *      radioType: geolocator.RadioType.GSM,
           *      fallbackToIP: true,
           *      addressLookup: false,
           *      timezone: false,
           *      map: "my-map",
           *      staticMap: false
           *  };
           *  geolocator.locateByMobile(options, function (err, location) {
           *      console.log(err || location);
           *  });
           */

      }, {
          key: 'locateByMobile',
          value: function locateByMobile(options, callback) {
              if (!_utils2.default.isPlainObject(options)) {
                  throw new _geo4.default(_geo4.default.Code.INVALID_PARAMETERS);
              }

              var cb = callbackMap(options, callback);

              options = _utils2.default.extend({
                  homeMobileCountryCode: undefined,
                  homeMobileNetworkCode: undefined,
                  radioType: undefined,
                  carrier: undefined,
                  fallbackToIP: false,
                  cellTowers: undefined,
                  wifiAccessPoints: undefined,
                  addressLookup: false,
                  timezone: false,
                  map: undefined,
                  raw: false
              }, options);

              options.considerIp = options.fallbackToIP;
              // check Google key
              checkGoogleKey();

              var conf = geolocator._.config,
                  key = conf.google.key || '',
                  url = _utils2.default.setProtocol(_enums2.default.URL.GOOGLE_GEOLOCATION, conf.https),
                  xhrOpts = {
                  url: url + '?key=' + key,
                  headers: {
                      'Content-Type': 'application/json'
                  },
                  data: JSON.stringify(options)
              };
              // console.log(xhrOpts.data);

              _fetch2.default.post(xhrOpts, function (err, xhr) {
                  var response = getXHRResponse(err, xhr);
                  if (_geo4.default.isGeoError(response)) return cb(response, null);

                  response = options.raw ? response : {
                      coords: {
                          latitude: response.location.lat,
                          longitude: response.location.lng,
                          accuracy: response.accuracy
                      },
                      timestamp: _utils2.default.time()
                  };

                  fetchAddressAndTimezone(response, options, cb);

                  // e.g. raw response
                  // {
                  //     "location": {
                  //         "lat": 51.0,
                  //         "lng": -0.1
                  //     },
                  //     "accuracy": 1200.4
                  // }
              });
          }

          /**
           *  Locates the user's location by the client's IP.
           *
           *  This method uses FreeGeoIP's lookup service, by default.
           *  In order to change the source provider, you can use
           *  {@link #geolocator.setGeoIPSource|`geolocator.setGeoIPSource()` method}.
           *
           *  @param {Object} [options]
           *         Locate options.
           *      @param {Boolean} [options.addressLookup=false]
           *             Specifies whether to run a reverse-geocode operation for the
           *             fetched coordinates to retrieve detailed address information.
           *             Since no precise address can be fetched from an IP addres; you
           *             should only enable this if the Geo-IP Source returns no useful
           *             address information other than coordinates. Also, note that
           *             this means an additional request which requires a Google API
           *             key to be set in the Geolocator configuration.
           *             See {@link #geolocator.config|`geolocator.config()`}.
           *      @param {Boolean} [options.timezone=false]
           *             Specifies whether to also fetch the time zone information for
           *             the receieved coordinates. Note that this means an additional
           *             request which requires a Google API key to be set in the
           *             Geolocator configuration.
           *             See {@link #geolocator.config|`geolocator.config()`}.
           *      @param {String|MapOptions} [options.map]
           *             In order to create an interactive map from the fetched
           *             location coordinates; either set this to a
           *             {@link #geolocator~MapOptions|`MapOptions` object}
           *             or; the ID of a DOM element or DOM element itself which the
           *             map will be created within.
           *      @param {Boolean|Object} [options.staticMap=false]
           *             Set to `true` to get a static Google Map image URL (with
           *             default options); or pass a static map options object.
           *  @param {Function} callback
           *         Callback function to be executed when the request completes.
           *         This takes 2 arguments: `function (err, location) { ... }`.
           *         See {@link #geolocator~Location|`geolocator~Location` type} for details.
           *
           *  @returns {void}
           *
           *  @example
           *  var options = {
           *  	addressLookup: true,
           *  	timezone: true,
           *  	map: "my-map",
           *  	staticMap: true
           *  };
           *  geolocator.locateByIP(options, function (err, location) {
           *  	console.log(err || location);
           *  });
           *
           *  @example
           *  // location result:
           *  {
           *      coords: {
           *          latitude: 41.0214,
           *          longitude: 28.9948,
           *      },
           *      address: {
           *          city: "Istanbul",
           *          region: "34",
           *          state: "34",
           *          country: "Turkey",
           *          countryCode: "TR"
           *      },
           *      formattedAddress: "Demirtaş, Tesviyeci Sk. No:7, 34134 Fatih/İstanbul, Turkey",
           *      type: "ROOFTOP",
           *      placeId: "ChIJ-ZRLfO25yhQRBi5YJxX80Q0",
           *      timezone: {
           *          id: "Europe/Istanbul",
           *          name: "Eastern European Summer Time",
           *          abbr: "EEST",
           *          dstOffset: 3600,
           *          rawOffset: 7200
           *      },
           *      flag: "//cdnjs.cloudflare.com/ajax/libs/flag-icon-css/2.3.1/flags/4x3/tr.svg",
           *      map: {
           *          element: HTMLElement,
           *          instance: Object, // google.maps.Map
           *          marker: Object, // google.maps.Marker
           *          infoWindow: Object, // google.maps.InfoWindow
           *          options: Object // map options
           *      },
           *      staticMap: "//maps.googleapis.com/maps/api/staticmap?center=41.0214,28.9948&maptype=roadmap&size=600x300&scale=1&zoom=9&format=png&language=en&markers=color%3Ared%7C41.0214%2C228.9948&key=YOUR-GOOGLE-API-KEY",
           *      provider: "freegeoip",
           *      timestamp: 1466216325223
           *  }
           */

      }, {
          key: 'locateByIP',
          value: function locateByIP(options, callback) {
              // passed source can be a string or object
              var source = geolocator._.geoIpSource;

              if (!_utils2.default.isPlainObject(source)) {
                  throw new _geo4.default(_geo4.default.Code.INVALID_GEO_IP_SOURCE, 'Please set a valid Geo-IP Source via geolocator.setGeoIPSource(options).');
              }

              // check options and Google key
              checkGoogleKey(options || {});

              var jsonpOpts = {
                  url: source.url,
                  async: true,
                  clean: true
                  // params: {}
              };
              if (source.callbackParam) {
                  jsonpOpts.callbackParam = source.callbackParam;
                  jsonpOpts.rootName = 'geolocator._.cb';
              } else if (!source.globalVar) {
                  throw new _geo4.default(_geo4.default.Code.INVALID_GEO_IP_SOURCE, 'Either callbackParam or globalVar should be set for Geo-IP source.');
              }
              return _fetch2.default.jsonp(jsonpOpts, function (err, response) {
                  if (err) {
                      return callback(_geo4.default.create(err), null);
                  }
                  if (source.globalVar) {
                      if (window[source.globalVar]) {
                          response = _utils2.default.clone(window[source.globalVar]);
                          delete window[source.globalVar];
                      } else {
                          response = null;
                      }
                  }
                  if (!response) {
                      err = new _geo4.default(_geo4.default.Code.INVALID_RESPONSE);
                      return callback(err, null);
                  }
                  if (_utils2.default.isPlainObject(source.schema)) {
                      response = _utils2.default.mapToSchema(response, source.schema);
                  }
                  response.provider = source.provider || 'unknown';
                  setLocationURLs(response, options);
                  if (response.coords) {
                      response.coords.latitude = Number(response.coords.latitude);
                      response.coords.longitude = Number(response.coords.longitude);
                  }
                  var cb = callbackMap(options, callback);
                  fetchAddressAndTimezone(response, options, cb);
              });
          }

          /**
           *  Sets the Geo-IP source to be used for fetching location information
           *  by user's IP; which is internally used by
           *  {@link #geolocator.locateByIP|`geolocator.locateByIP()` method}.
           *
           *  By default, Geolocator uses FreeGeoIP as the Geo-IP source provider.
           *  You can use this method to change this; or you can choose from
           *  ready-to-use
           *  {@link https://github.com/onury/geolocator/tree/master/src/geo-ip-sources|Geo-IP sources}.
           *
           *  @param {Object} options
           *         Geo-IP Source options.
           *      @param {String} [options.provider]
           *             Source or service provider's name.
           *      @param {String} options.url
           *             Source URL without the callback query parameter. The callback
           *             name (if supported) should be set via `options.callbackParam`.
           *             Also, make sure the service supports the protocol you use in
           *             the enums.URL. If it supports both HTTP and HTTPS, you can omit the
           *             protocol. In this case, it will be determined via Geolocator
           *             configuration.
           *             See {@link #geolocator.config|`geolocator.config()`}.
           *             NOTE: Do not forget to include your API key in the query
           *             parameters of the URL, if you have one.
           *      @param {String} [options.callbackParam]
           *             If JSON callback is supported, pass the name of the callback
           *             parameter, defined by the provider.
           *      @param {Object} [options.globalVar]
           *             Set this instead of `options.callbackParam` if the service
           *             does not support JSON callbacks, but weirdly set a global
           *             variable in the document. For example, if the response is
           *             `Geo = { lat, lng }`, you should set this to `"Geo"`.
           *      @param {Object} [options.schema]
           *             Schema object to be used to re-structure the response returned
           *             from the service. Set the response object's keys as values of
           *             a custom object to map the format to the `location` object.
           *             For example; if the service returns a response like
           *             `{ lat: 40.112233, lng: 10.112233, otherProp: 'hello' }`.
           *             Then you should set the following schema:
           *             `{ coords: { latitude: 'lat', longitude: 'lng' } }`.
           *
           *  @return {geolocator}
           */

      }, {
          key: 'setGeoIPSource',
          value: function setGeoIPSource(options) {
              if (!_utils2.default.isPlainObject(options)) {
                  throw new _geo4.default(_geo4.default.Code.INVALID_PARAMETERS, 'Geo-IP source options is invalid.');
              }
              if (!_utils2.default.isStringSet(options.url)) {
                  throw new _geo4.default(_geo4.default.Code.INVALID_PARAMETERS, 'Geo-IP source should have a valid URI.');
              }
              // if (!utils.isStringSet(options.callbackParam) && !utils.isStringSet(options.globalVar)) {
              //     throw new GeoError(GeoError.Code.INVALID_PARAMETERS, 'No \'callbackParam\' or \'globalVar\' is provided for the Geo-IP Source options.');
              // }
              geolocator._.geoIpSource = Object.freeze(options);
          }

          /**
           *  Registers a handler for watching the user's location via HTML5
           *  geolocation; that is triggered each time the position of the device
           *  changes. This may require/prompt for user's permission.
           *
           *  @param {Object} [options]
           *         HTML5 geo-location settings.
           *      @param {Boolean} [options.enableHighAccuracy=true]
           *             Specifies whether the device should provide the most accurate
           *             position it can. Note that setting this to `true` might consume
           *             more CPU and/or battery power; and result in slower response
           *             times.
           *      @param {Number} [options.timeout=6000]
           *             HTML5 position timeout setting in milliseconds. Setting this
           *             to `Infinity` means that Geolocator won't return until the
           *             position is available.
           *      @param {Number} [options.maximumAge=0]
           *             HTML5 position maximum age. Indicates the maximum age in
           *             milliseconds of a possible cached position that is acceptable
           *             to return. `0` means, the device cannot use a cached position
           *             and must attempt to retrieve the real current position. If set
           *             to `Infinity` the device must return a cached position
           *             regardless of its age.
           *      @param {Boolean} [options.clearOnError=false]
           *             Specifies whether to clear the watcher on first error so that
           *             it does not execute any more callbacks.
           *      @param {Object} [options.target]
           *             Object that defines the target location and settings; that
           *             when the location is reached, the watcher will auto-clear
           *             itself and invoke the callback.
           *      @param {Number} options.target.latitude
           *             The `latitude` of the target location.
           *      @param {Number} options.target.longitude
           *             The `longitude` of the target location.
           *      @param {Number} [options.target.radius=0.5]
           *             The radius, in other words; the minimum distance (in
           *             kilometers or miles) to the target point that should be
           *             reached.
           *      @param {Number} [options.target.unitSystem=0]
           *             Unit system to be used for target radius.
           *             See {@link #geolocator.UnitSystem|`geolocator.UnitSystem` enumeration}
           *             for possible values.
           *  @param {Function} callback
           *         Callback function to be executed when the request completes.
           *         This takes 2 arguments: `function (err, location) { ... }`.
           *         If `options.target` is set, `location` will also
           *         include a `targetReached:Boolean` property.
           *         See {@link #geolocator~Location|`geolocator~Location` type} for details.
           *
           *  @returns {GeoWatcher} - A watcher object that provides a
           *  `.clear(delay:Number, callback:Function)` method to clear the watcher
           *  when needed. Optional `delay` argument can be set (in milliseconds) to
           *  clear in a later time. Omitting this argument will clear the watcher
           *  immediately. You should always call this method, except if you've set up
           *  a target; which will auto-clear the watcher when reached.
           *
           *  @example
           *  // Watch my position for 5 minutes.
           *  var options = { enableHighAccuracy: true, timeout: 6000, maximumAge: 0 };
           *  var watcher = geolocator.watch(options, function (err, location) {
           *      console.log(err || location);
           *  });
           *  console.log(watcher.id); // ID of the watcher
           *  watcher.clear(300000); // clear after 5 minutes.
           *
           *  @example
           *  // Watch my position until I'm 350 meters near Disneyland Park.
           *  options.target = {
           *      latitude: 33.8120918,
           *      longitude: -117.9233569,
           *      radius: 0.35,
           *      unitSystem: geolocator.UnitSystem.METRIC
           *  };
           *  watcher = geolocator.watch(options, function (err, location) {
           *      if (err) {
           *          console.log(err);
           *          return;
           *      }
           *      if (location.targetReached) {
           *          console.log(watcher.isCleared); // true
           *          console.log(watcher.cycle); // 15 — target reached after 15 cycles
           *      } else {
           *          console.log(watcher.isCleared); // false — watcher is active.
           *      }
           *  });
           */

      }, {
          key: 'watch',
          value: function watch(options, callback) {
              if (!geolocator.isGeolocationSupported()) {
                  callback(new _geo4.default(_geo4.default.Code.GEOLOCATION_NOT_SUPPORTED), null);
                  return {};
              }

              var watcher = void 0,
                  target = void 0;

              options = _utils2.default.extend({
                  enableHighAccuracy: true,
                  timeout: 6000,
                  maximumAge: 0,
                  clearOnError: false
              }, options);

              if (_utils2.default.isPlainObject(options.target)) {
                  target = _utils2.default.extend({
                      radius: 0.5,
                      unitSystem: geolocator.UnitSystem.METRIC
                  }, options.target);
              }

              function onPositionChanged(location) {
                  var pos = _utils2.default.clone(location, { own: false });
                  if (target) {
                      var distance = geolocator.calcDistance({
                          from: location.coords,
                          to: target,
                          formula: geolocator.DistanceFormula.HAVERSINE,
                          unitSystem: target.unitSystem
                      });
                      pos.targetReached = distance <= target.radius;
                      if (watcher && pos.targetReached) {
                          watcher.clear(function () {
                              return callback(null, pos);
                          });
                      }
                  }
                  return callback(null, pos);
              }
              function onPositionError(err) {
                  callback(_geo4.default.create(err), null);
              }
              return new _geo6.default(onPositionChanged, onPositionError, options);
          }

          /**
           *  Converts a given address (or address components) into geographic
           *  coordinates (i.e. latitude, longitude); and gets detailed address
           *  information.
           *  @see {@link https://developers.google.com/maps/documentation/geocoding/intro|Google Maps Geocoding API}
           *  @see {@link https://developers.google.com/maps/documentation/geocoding/usage-limits|Usage Limits}
           *
           *  @param {String|Object} options
           *         Either the address to geocode or geocoding options with the
           *         following properties.
           *      @param {String} options.address
           *             The street address to geocode, in the format used by the
           *             national postal service of the country concerned. Additional
           *             address elements such as business names and unit, suite or
           *             floor numbers should be avoided. Note that any address
           *             component (route, locality, administrativeArea, postalCode and
           *             country) should be specified either in address or the
           *             corresponding property - not both. Doing so may result in
           *             `ZERO_RESULTS`.
           *      @param {String} [options.route]
           *      	      Long or short name of a route.
           *      @param {String} [options.locality]
           *      	      Locality and sublocality of the location.
           *      @param {String} [options.administrativeArea]
           *      	      Administrative area of the location.
           *      @param {String} [options.postalCode]
           *      	      Postal code of the location.
           *      @param {String} [options.country]
           *      	      A country name or a two letter ISO 3166-1 country code.
           *      @param {String} [options.region]
           *      	      The region code, specified as a ccTLD ("top-level domain")
           *      	      two-character value. e.g.: `"fr"` for France.
           *      @param {Array|Object} [options.bounds]
           *      	      The bounding box of the viewport within which to bias geocode
           *      	      results more prominently. e.g.:
           *      	      `[ southwestLat:Number, southwestLng:Number, northeastLat:Number, northeastLng:Number ]`
           *      @param {String|MapOptions} [options.map]
           *             In order to create an interactive map from the fetched
           *             location coordinates; either set this to a
           *             {@link #geolocator~MapOptions|`MapOptions` object}
           *             or; the ID of a DOM element or DOM element itself which the
           *             map will be created within.
           *      @param {Boolean|Object} [options.staticMap=false]
           *             Set to `true` to get a static Google Map image URL (with
           *             default options); or pass a static map options object.
           *      @param {Boolean} [options.raw=false]
           *      	      Whether to return the raw Google API result.
           *  @param {Function} callback
           *         Callback function to be executed when the request completes.
           *         This takes 2 arguments: `function (err, location) { ... }`.
           *         See {@link #geolocator~Location|`geolocator~Location` type} for details.
           *
           *  @returns {void}
           *
           *  @example
           *  var address = '1600 Amphitheatre Parkway, CA';
           *  geolocator.geocode(address, function (err, location) {
           *      console.log(err || location);
           *  });
           *
           *  @example
           *  // location result:
           *  {
           *      coords: {
           *          latitude: 37.4224764,
           *          longitude: -122.0842499
           *      },
           *      address: {
           *          commonName: "",
           *          street: "Amphitheatre Pkwy",
           *          route: "Amphitheatre Pkwy",
           *          streetNumber: "1600",
           *          neighborhood: "",
           *          town: "",
           *          city: "Mountain View",
           *          region: "Santa Clara County",
           *          state: "California",
           *          stateCode: "CA",
           *          postalCode: "94043",
           *          country: "United States",
           *          countryCode: "US"
           *      },
           *      formattedAddress: "1600 Amphitheatre Parkway, Mountain View, CA 94043, USA",
           *      type: "ROOFTOP",
           *      placeId: "ChIJ2eUgeAK6j4ARbn5u_wAGqWA",
           *      flag: "//cdnjs.cloudflare.com/ajax/libs/flag-icon-css/2.3.1/flags/4x3/us.svg",
           *      map: {
           *          element: HTMLElement,
           *          instance: Object, // google.maps.Map
           *          marker: Object, // google.maps.Marker
           *          infoWindow: Object, // google.maps.InfoWindow
           *          options: Object // map options
           *      },
           *      timestamp: 1456795956380
           *  }
           */

      }, {
          key: 'geocode',
          value: function geocode(options, callback) {
              _geocode(false, options, callback);
          }

          /**
           *  Converts the given geographic coordinates into a human-readable address
           *  information.
           *  @see {@link https://developers.google.com/maps/documentation/geocoding/intro#ReverseGeocoding|Google Maps (Reverse) Geocoding API}
           *  @see {@link https://developers.google.com/maps/documentation/geocoding/usage-limits|Usage Limits}
           *  @alias geolocator.addressLookup
           *
           *  @param {Object|String} options
           *         Either the `placeId` of the location or Reverse Geocoding options
           *         with the following properties.
           *      @param {Number} options.latitude
           *      Latitude of the target location.
           *      @param {Number} options.longitude
           *      Longitude of the target location.
           *      @param {String} [options.placeId]
           *             Required if `latitude` and `longitude` are omitted. The place
           *             ID of the place for which you wish to obtain the
           *             human-readable address. The place ID is a unique identifier
           *             that can be used with other Google APIs. Note that if
           *             `placeId` is set, `latitude` and `longitude` are ignored.
           *      @param {String|MapOptions} [options.map]
           *             In order to create an interactive map from the fetched
           *             location coordinates; either set this to a
           *             {@link #geolocator~MapOptions|`MapOptions` object}
           *             or; the ID of a DOM element or DOM element itself which the
           *             map will be created within.
           *      @param {Boolean|Object} [options.staticMap=false]
           *             Set to `true` to get a static Google Map image URL (with
           *             default options); or pass a static map options object.
           *      @param {Boolean} [options.raw=false]
           *             Whether to return the raw Google API result.
           *  @param {Function} callback
           *         Callback function to be executed when the request completes.
           *         This takes 2 arguments: `function (err, location) { ... }`
           *         See {@link #geolocator~Location|`geolocator~Location` type} for details.
           *
           *  @returns {void}
           *
           *  @example
           *  var coords = {
           *      latitude: 37.4224764,
           *      longitude: -122.0842499
           *  };
           *
           *  geolocator.reverseGeocode(coords, function (err, location) {
           *      console.log(err || location);
           *  });
           *
           *  @example
           *  // location result:
           *  {
           *      coords: {
           *          latitude: 37.4224764,
           *          longitude: -122.0842499
           *      },
           *      address: {
           *          commonName: "",
           *          street: "Amphitheatre Pkwy",
           *          route: "Amphitheatre Pkwy",
           *          streetNumber: "1600",
           *          neighborhood: "",
           *          town: "",
           *          city: "Mountain View",
           *          region: "Santa Clara County",
           *          state: "California",
           *          stateCode: "CA",
           *          postalCode: "94043",
           *          country: "United States",
           *          countryCode: "US"
           *      },
           *      formattedAddress: "1600 Amphitheatre Parkway, Mountain View, CA 94043, USA",
           *      type: "ROOFTOP",
           *      placeId: "ChIJ2eUgeAK6j4ARbn5u_wAGqWA",
           *      flag: "//cdnjs.cloudflare.com/ajax/libs/flag-icon-css/2.3.1/flags/4x3/us.svg",
           *      map: {
           *          element: HTMLElement,
           *          instance: Object, // google.maps.Map
           *          marker: Object, // google.maps.Marker
           *          infoWindow: Object, // google.maps.InfoWindow
           *          options: Object // map options
           *      },
           *      timestamp: 1456795956380
           *  }
           */

      }, {
          key: 'reverseGeocode',
          value: function reverseGeocode(options, callback) {
              _geocode(true, options, callback);
          }

          /**
           *  Alias for `geolocator.reverseGeocode`
           *  @private
           */

      }, {
          key: 'addressLookup',
          value: function addressLookup(options, callback) {
              geolocator.reverseGeocode(options, callback);
          }

          /**
           *  Gets timezone information for the given coordinates.
           *  Note: Google Browser API keys cannot have referer restrictions when used with this API.
           *  @see {@link https://developers.google.com/maps/documentation/timezone/intro|Google Maps TimeZone API}
           *  @see {@link https://developers.google.com/maps/documentation/timezone/usage-limits|Usage Limits}
           *
           *  @param {Object} options
           *         Time zone options.
           *      @param {Number} options.latitude
           *             Latitude of location.
           *      @param {Number} options.longitude
           *             Longitude of location.
           *      @param {Number} [options.timestamp=Date.now()]
           *             Specifies the desired time as seconds since midnight, January
           *             1, 1970 UTC. This is used to determine whether or not Daylight
           *             Savings should be applied.
           *      @param {Boolean} [options.raw=false]
           *             Whether to return the raw Google API result.
           *  @param {Function} callback
           *         Callback function to be executed when the request completes, in
           *         the following signature: `function (err, timezone) { ... }`.
           *         See {@link #geolocator~TimeZone|`geolocator~TimeZone` type} for
           *         details.
           *
           *  @returns {void}
           *
           *  @example
           *  var options = {
           *      latitude: 48.8534100,
           *      longitude: 2.3488000
           *  };
           *  geolocator.getTimeZone(options, function (err, timezone) {
           *      console.log(err || timezone);
           *  });
           *
           *  @example
           *  // timezone result:
           *  {
           *      id: "Europe/Paris",
           *      name: "Central European Standard Time",
           *      abbr: "CEST",
           *      dstOffset: 0,
           *      rawOffset: 3600,
           *      timestamp: 1455733120
           *  }
           */

      }, {
          key: 'getTimeZone',
          value: function getTimeZone(options, callback) {
              if (!_utils2.default.isPlainObject(options) || !_utils2.default.isNumber(options.latitude) || !_utils2.default.isNumber(options.longitude)) {
                  throw new _geo4.default(_geo4.default.Code.INVALID_PARAMETERS);
              }

              checkGoogleKey();

              var conf = geolocator._.config;
              options = _utils2.default.extend({
                  key: conf.google.key || '',
                  language: conf.language || 'en',
                  timestamp: _utils2.default.time(true),
                  raw: false
              }, options);

              var url = _utils2.default.setProtocol(_enums2.default.URL.GOOGLE_TIMEZONE, conf.https),
                  xhrOpts = {
                  url: url + '?location=' + options.latitude + ',' + options.longitude + '&timestamp=' + options.timestamp + '&language=' + options.language + '&key=' + options.key
              };

              _fetch2.default.xhr(xhrOpts, function (err, xhr) {
                  var response = getXHRResponse(err, xhr);
                  if (_geo4.default.isGeoError(response)) return callback(response, null);

                  response = options.raw ? response : {
                      id: response.timeZoneId,
                      name: response.timeZoneName,
                      abbr: _utils2.default.abbr(response.timeZoneName, { dots: false }),
                      dstOffset: response.dstOffset,
                      rawOffset: response.rawOffset,
                      timestamp: options.timestamp
                  };
                  callback(err, response);
              });
          }

          /**
           *  Gets the distance and duration values based on the recommended route
           *  between start and end points.
           *  @see {@link https://developers.google.com/maps/documentation/distance-matrix/intro|Google Maps Distance Matrix API}
           *  @see {@link https://developers.google.com/maps/documentation/distance-matrix/usage-limits|Usage Limits}
           *
           *  @param {Object} options
           *         Distance matrix options.
           *      @param {String|Object|Array} options.origins
           *             One or more addresses and/or an object of latitude/longitude
           *             values, from which to calculate distance and time. If you pass
           *             an address as a string, the service will geocode the string
           *             and convert it to a latitude/longitude coordinate to calculate
           *             distances. Following are valid examples:
           *  <pre><code>options.origins = 'London';
           *  options.origins = ['London', 'Paris'];
           *  options.origins = { latitude: 51.5085300, longitude: -0.1257400 };
           *  options.origins = [
           *      { latitude: 51.5085300, longitude: -0.1257400 },
           *      { latitude: 48.8534100, longitude: 2.3488000 }
           *  ];
           *  </code></pre>
           *      @param {String|Object|Array} options.destinations
           *             One or more addresses and/or an object of latitude/longitude
           *             values, from which to calculate distance and time. If you pass
           *             an address as a string, the service will geocode the string
           *             and convert it to a latitude/longitude coordinate to calculate
           *             distances.
           *      @param {String} [options.travelMode="DRIVING"]
           *             Type of routing requested.
           *             See {@link #geolocator.TravelMode|`geolocator.TravelMode` enumeration}
           *             for possible values.
           *      @param {Boolean} [options.avoidFerries]
           *             If true, instructs the Distance Matrix service to avoid
           *             ferries where possible.
           *      @param {Boolean} [options.avoidHighways]
           *             If true, instructs the Distance Matrix service to avoid
           *             highways where possible.
           *      @param {Boolean} [options.avoidTolls]
           *             If true, instructs the Distance Matrix service to avoid toll
           *             roads where possible.
           *      @param {Number} [options.unitSystem=0]
           *             Preferred unit system to use when displaying distance.
           *             See {@link #geolocator.UnitSystem|`geolocator.UnitSystem` enumeration}
           *             for possible values.
           *      @param {String} [options.region]
           *             Region code used as a bias for geocoding requests.
           *  @param {Boolean} [options.raw=false]
           *         Whether to return the raw Google API result.
           *  @param {Function} callback
           *         Callback function to be executed when the request completes,
           *         in the following signature: `function (err, result) { ... }`
           *
           *  @returns {void}
           *
           *  @example
           *  var options = {
           *      origins: [{ latitude: 51.5085300, longitude: -0.1257400 }],
           *      destinations: [{ latitude: 48.8534100, longitude: 2.3488000 }],
           *      travelMode: geolocator.TravelMode.DRIVING,
           *      unitSystem: geolocator.UnitSystem.METRIC
           *  };
           *  geolocator.getDistanceMatrix(options, function (err, result) {
           *      console.log(err || result);
           *  });
           *
           *  @example
           *  // result:
           *  [
           *  	{
           *  		from: "449 Duncannon St, London WC2R 0DZ, UK",
           *  		to: "1 Parvis Notre-Dame - Pl. Jean-Paul II, 75004 Paris-4E-Arrondissement, France",
           *  		distance: {
           *  			value: 475104,
           *  			text: "475 km"
           *  		},
           *  		duration: {
           *  			value: 20193,
           *  			text: "5 hours 37 mins"
           *  		},
           *  		fare: undefined,
           *  		timestamp: 1456795956380
           *  	}
           *  ]
           */

      }, {
          key: 'getDistanceMatrix',
          value: function getDistanceMatrix(options, callback) {
              checkGoogleKey();

              var key = geolocator._.config.google.key;
              geolocator.ensureGoogleLoaded(key, function (err) {
                  if (err) {
                      throw new _geo4.default(_geo4.default.Code.GOOGLE_API_FAILED, String(err.message || err));
                  }

                  var o = options.origins || options.origin || options.from,
                      d = options.destinations || options.destination || options.to;
                  if (!_utils2.default.isPlainObject(options) || invalidOriginOrDest(o) || invalidOriginOrDest(d)) {
                      throw new _geo4.default(_geo4.default.Code.INVALID_PARAMETERS);
                  }
                  options.origins = _geo2.default.toPointList(o);
                  options.destinations = _geo2.default.toPointList(d);

                  options = _utils2.default.extend({
                      travelMode: google.maps.TravelMode.DRIVING,
                      avoidFerries: undefined,
                      avoidHighways: undefined,
                      avoidTolls: undefined,
                      unitSystem: google.maps.UnitSystem.METRIC
                  }, options);

                  var service = new google.maps.DistanceMatrixService();
                  service.getDistanceMatrix(options, function (response, status) {
                      var err = null;
                      if (status !== google.maps.DistanceMatrixStatus.OK) {
                          err = _geo4.default.fromResponse(status) || _geo4.default.fromResponse(response);
                          response = null;
                      } else {
                          response = options.raw ? response : _geo2.default.formatDistanceResults(response);
                      }
                      callback(err, response);
                  });
              });
          }

          /**
           *  Calculates the distance between two geographic points.
           *
           *  @param {Object} options
           *         Calculation and display options.
           *      @param {Object} options.from
           *             Object containing the `latitude` and `longitude` of original
           *             location.
           *      @param {Object} options.to
           *             Object containing the `latitude` and `longitude` of destination.
           *      @param {String} [options.formula="haversine"]
           *             The algorithm or formula to calculate the distance.
           *             See {@link #geolocator.DistanceFormula|`geolocator.DistanceFormula` enumeration}.
           *      @param {Number} [options.unitSystem=0]
           *             Preferred unit system to use when displaying distance.
           *             See {@link #geolocator.UnitSystem|`geolocator.UnitSystem` enumeration}.
           *
           *  @returns {Number} - The calculated distance.
           *
           *  @example
           *  // Calculate distance from London to Paris.
           *  var result = geolocator.calcDistance({
           *      from: {
           *          latitude: 51.5085300,
           *          longitude: -0.1257400
           *      },
           *      to: {
           *          latitude: 48.8534100,
           *          longitude: 2.3488000
           *      },
           *      formula: geolocator.DistanceFormula.HAVERSINE,
           *      unitSystem: geolocator.UnitSystem.METRIC
           *  });
           *  // result: 366.41656039126093 (kilometers)
           */

      }, {
          key: 'calcDistance',
          value: function calcDistance(options) {
              options = _utils2.default.extend({
                  formula: geolocator.DistanceFormula.HAVERSINE,
                  unitSystem: geolocator.UnitSystem.METRIC
              }, options);

              var from = options.from,
                  to = options.to,
                  radius = options.unitSystem === geolocator.UnitSystem.METRIC ? EARTH_RADIUS_KM : EARTH_RADIUS_MI;

              if (options.formula === geolocator.DistanceFormula.HAVERSINE) {
                  var dLat = geolocator.degToRad(to.latitude - from.latitude),
                      dLng = geolocator.degToRad(to.longitude - from.longitude),
                      a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(geolocator.degToRad(from.latitude)) * Math.cos(geolocator.degToRad(to.longitude)) * Math.sin(dLng / 2) * Math.sin(dLng / 2),
                      c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));
                  return radius * c;
              }
              // geolocator.DistanceFormula.PYTHAGOREAN
              var latA = geolocator.degToRad(from.latitude),
                  latB = geolocator.degToRad(to.latitude),
                  lngA = geolocator.degToRad(from.longitude),
                  lngB = geolocator.degToRad(to.longitude),
                  x = (lngB - lngA) * Math.cos((latA + latB) / 2),
                  y = latB - latA;
              return Math.sqrt(x * x + y * y) * radius;
          }

          /**
           *  Gets the current public IP of the client.
           *
           *  @param {Function} callback
           *         Callback function to be executed when the request completes, in
           *         the following signature: `function (err, result) { ... }`
           *
           *  @returns {void}
           *
           *  @example
           *  geolocator.getIP(function (err, result) {
           *      console.log(err || result);
           *  });
           *
           *  @example
           *  // result:
           *  {
           *      ip: "176.232.71.155",
           *      timestamp: 1457573683427
           *  }
           */

      }, {
          key: 'getIP',
          value: function getIP(callback) {
              var conf = geolocator._.config;

              var jsonpOpts = {
                  url: _utils2.default.setProtocol(_enums2.default.URL.IP, conf.https),
                  async: true,
                  clean: true,
                  params: {
                      format: 'jsonp'
                  },
                  callbackParam: 'callback',
                  rootName: 'geolocator._.cb'
              };
              return _fetch2.default.jsonp(jsonpOpts, function (err, response) {
                  if (err) {
                      return callback(_geo4.default.create(err), null);
                  }
                  if (!response) {
                      err = new _geo4.default(_geo4.default.Code.INVALID_RESPONSE);
                      return callback(err, null);
                  }
                  if ((typeof response === 'undefined' ? 'undefined' : _typeof(response)) === 'object') response.timestamp = _utils2.default.time();
                  callback(null, response);
              });
          }

          /**
           *  Ensures Google Maps API is loaded. If not, this will load all of the
           *  main Javascript objects and symbols for use in the Maps API.
           *
           *  Note that, Google Maps API is loaded only when needed. For example,
           *  the DistanceMatrix API does not support Web Service requests and
           *  requires this API to be loaded. However, the TimeZone API requests are
           *  made throught the Web Service without requiring a `google` object
           *  within DOM.
           *
           *  Also note that this will not re-load the API if `google.maps` object
           *  already exists. In this case, the `callback` is still executed and
           *  no errors are passed.
           *
           *  You can use the following overload to omit the `key` argument altogether:
           *
           *  `geolocator.ensureGoogleLoaded(callback)`
           *
           *  @param {String} [key]
           *         Google API key.
           *  @param {Function} callback
           *         Callback function to be executed when the operation ends.
           *
           *  @returns {void}
           *
           *  @example
           *  geolocator.ensureGoogleLoaded(function (err) {
           *      if (err) return;
           *      console.log('google' in window); // true
           *  });
           */

      }, {
          key: 'ensureGoogleLoaded',
          value: function ensureGoogleLoaded(key, callback) {
              var k = void 0;
              if (_utils2.default.isFunction(key)) {
                  callback = key;
              } else {
                  k = key;
              }
              if (!geolocator.isGoogleLoaded()) {
                  var jsonpOpts = {
                      url: _enums2.default.URL.GOOGLE_MAPS_API,
                      async: true,
                      callbackParam: 'callback',
                      params: {
                          key: k || ''
                          // callback: ''
                      },
                      rootName: 'geolocator._.cb'
                  };
                  return _fetch2.default.jsonp(jsonpOpts, callback);
              }
              callback();
          }

          /**
           *  Checks whether the Google Maps API is loaded.
           *
           *  @returns {Boolean} - Returns `true` if already loaded.
           */

      }, {
          key: 'isGoogleLoaded',
          value: function isGoogleLoaded() {
              return 'google' in window && google.maps;
          }

          /**
           *  Checks whether the type of the given object is an HTML5 `PositionError`.
           *
           *  @param {*} obj - Object to be checked.
           *  @return {Boolean}
           */

      }, {
          key: 'isPositionError',
          value: function isPositionError(obj) {
              return _utils2.default.isPositionError(obj);
          }

          /**
           *  Checks whether the given value is an instance of `GeoError`.
           *
           *  @param {*} obj - Object to be checked.
           *  @return {Boolean}
           */

      }, {
          key: 'isGeoError',
          value: function isGeoError(obj) {
              return _geo4.default.isGeoError(obj);
          }

          /**
           *  Checks whether HTML5 Geolocation API is supported.
           *
           *  @return {Boolean}
           */

      }, {
          key: 'isGeolocationSupported',
          value: function isGeolocationSupported() {
              return navigator && 'geolocation' in navigator;
          }

          /**
           *  Converts kilometers to miles.
           *
           *  @param {Number} km - Kilometers to be converted.
           *  @returns {Number} - Miles.
           */

      }, {
          key: 'kmToMi',
          value: function kmToMi(km) {
              return km * 0.621371;
          }

          /**
           *  Converts miles to kilometers.
           *
           *  @param {Number} mi - Miles to be converted.
           *  @returns {Number} - Kilometers.
           */

      }, {
          key: 'miToKm',
          value: function miToKm(mi) {
              return mi / 0.621371;
          }

          /**
           *  Converts degrees to radians.
           *
           *  @param {Number} deg - Degrees to be converted.
           *  @returns {Number} - Radians.
           */

      }, {
          key: 'degToRad',
          value: function degToRad(degrees) {
              return degrees * (Math.PI / 180);
          }

          /**
           *  Converts radians to degrees.
           *
           *  @param {Number} rad - Radians to be converted.
           *  @returns {Number} - Degrees.
           */

      }, {
          key: 'radToDeg',
          value: function radToDeg(radians) {
              return radians * (180 / Math.PI);
          }

          /**
           *  Converts decimal coordinates (either lat or lng) to degrees, minutes, seconds.
           *
           *  @param {Number} dec
           *         Decimals to be converted.
           *  @param {Boolean} [isLng=false]
           *         Indicates whether the given decimals is longitude.
           *
           *  @returns {String} - Degrees, minutes, seconds.
           */

      }, {
          key: 'decToDegMinSec',
          value: function decToDegMinSec(dec) {
              var isLng = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

              // Degrees Latitude must be in the range of -90. to 90.
              // Degrees Longitude must be in the range of -180 to 180.
              // +Latitude is North, -Latitude is South
              // +Longitude is East, -Longitude is West
              var sign = dec < 0 ? -1 : 1,
                  sn = dec < 0 ? 'S' : 'N',
                  we = dec < 0 ? 'W' : 'E',
                  nsew = !isLng ? sn : we,
                  absValue = Math.abs(Math.round(dec * 1000000.0));
              return Math.floor(absValue / 1000000) * sign + '° ' + Math.floor((absValue / 1000000 - Math.floor(absValue / 1000000)) * 60) + '\' ' + Math.floor(((absValue / 1000000 - Math.floor(absValue / 1000000)) * 60 - Math.floor((absValue / 1000000 - Math.floor(absValue / 1000000)) * 60)) * 100000) * 60 / 100000 + '" ' + nsew;
          }
      }, {
          key: 'Error',


          // ---------------------------
          // PROPERTIES
          // ---------------------------

          /**
           *  Geolocator Error class that provides a common type of error object for
           *  the various APIs implemented in Geolocator. All callbacks of Geolocator
           *  will include an instance of this object as the first argument; if the
           *  corresponding operation fails. Also all thrown errors will be an instance
           *  of this object.
           *
           *  This object also enumerates
           *  {@link ?api=geolocator-error#GeoError.Code|Geolocator Error codes}.
           *
           *  @see {@link ?api=geolocator-error|`GeoError` documentation}
           *  @type {GeoError}
           *  @readonly
           */
          get: function get() {
              return _geo4.default;
          }

          /**
           *  Documented separately in enums.js
           *  @private
           */

      }, {
          key: 'MapTypeId',
          get: function get() {
              return _enums2.default.MapTypeId;
          }

          /**
           *  Documented separately in enums.js
           *  @private
           */

      }, {
          key: 'LocationType',
          get: function get() {
              return _enums2.default.LocationType;
          }

          /**
           *  Documented separately in enums.js
           *  @private
           */

      }, {
          key: 'TravelMode',
          get: function get() {
              return _enums2.default.TravelMode;
          }

          /**
           *  Documented separately in enums.js
           *  @private
           */

      }, {
          key: 'UnitSystem',
          get: function get() {
              return _enums2.default.UnitSystem;
          }

          /**
           *  Documented separately in enums.js
           *  @private
           */

      }, {
          key: 'RadioType',
          get: function get() {
              return _enums2.default.RadioType;
          }

          /**
           *  Documented separately in enums.js
           *  @private
           */

      }, {
          key: 'DistanceFormula',
          get: function get() {
              return _enums2.default.DistanceFormula;
          }

          /**
           *  Documented separately in enums.js
           *  @private
           */

      }, {
          key: 'ImageFormat',
          get: function get() {
              return _enums2.default.ImageFormat;
          }
      }]);

      return geolocator;
  }();

  // ---------------------------
  // HELPER METHODS
  // ---------------------------

  /**
   *  Used with distance matrix calls.
   *  @private
   */


  function invalidOriginOrDest(value) {
      return !_utils2.default.isString(value) && !_utils2.default.isArray(value) && !_utils2.default.isPlainObject(value);
  }

  /**
   *  Check if XHR response is an error response and returns a `GeoError`.
   *  If not, returns the parsed response.
   *  @private
   *
   *  @param {Error} err
   *         XHR error.
   *  @param {Object} xhr
   *         XHR object to be checked.
   *
   *  @returns {GeoError|Object}
   */
  function getXHRResponse(err, xhr) {
      if (err) return _geo4.default.create(err);
      if (!xhr) return new _geo4.default(_geo4.default.Code.REQUEST_FAILED);
      var response = _utils2.default.safeJsonParse(xhr.responseText);
      // Check if XHR response is an error response.
      // return response if not.
      return _geo4.default.fromResponse(response) || response;
  }

  /**
   *  Checks the given options and determines if Google key is required.
   *  Throws if key is required but not set or valid.
   *  @private
   *
   *  @param {Object} [options]
   *         Options to be checked. If `undefined`, directly checks Googke key.
   */
  function checkGoogleKey(options) {
      if (!options || options.addressLookup || options.timezone || options.map || options.staticMap) {
          if (!geolocator._.config.google.key) {
              throw new _geo4.default(_geo4.default.Code.GOOGLE_KEY_INVALID, 'A Google API key is required but it\'s not set or valid.');
          }
      }
  }

  /**
   *  Checks and adds necessary properties to map options from the given location
   *  result object. This is used with methods that support `map` option; to
   *  create a map from the result coordinates; such as locate() method.
   *  @private
   *
   *  @param {Object|String} options
   *         Original options object.
   *  @param {Object} location
   *         Location result object.
   *
   *  @returns {Object} - Final map options object.
   */
  function getMapOpts(mapOptions, location) {
      if (_utils2.default.isObject(mapOptions)) {
          mapOptions.center = location.coords;
      } else {
          mapOptions = {
              element: mapOptions,
              center: location.coords
          };
      }
      // this will enable infoWindow
      if (location.formattedAddress) {
          mapOptions.title = location.formattedAddress;
      }
      // if location has accuracy, (and zoom is not set) we can zoom in a bit more
      if (!mapOptions.zoom && location.coords && _utils2.default.isNumber(location.coords.accuracy) && location.coords.accuracy < 1500) {
          mapOptions.zoom = 15;
      }
      return mapOptions;
  }

  /**
   *  Checks the HTMLElement to see whether a previous map and related objects
   *  (marker, infoWindow) are created for it; by checking our private property
   *  `_geolocatorMapData`. If there is a map, this does not re-create it (which
   *  will break the map) but only re-adjust center, zoom and re-create the marker
   *  if needed. We use this approach bec. Google maps has no feature to destroy
   *  a map. This is considered a bug by Google developers.
   *  @private
   *
   *  @param {Object} options
   *         Options for creating a map.
   */
  function configCreateMap(options) {
      var elem = options.element,

      // when geolocator creates a map, it will set a `_geolocatorMapData`
      // property on the element. So we can use this map instance later,
      // when the same HTMLElement is passed to create a map. So check if
      // we have it here.
      mapData = elem._geolocatorMapData,
          map = mapData && mapData.instance || null,
          marker = mapData && mapData.marker || null,
          infoWindow = mapData && mapData.infoWindow || null,
          center = new google.maps.LatLng(options.center.latitude, options.center.longitude),
          mapOptions = {
          mapTypeId: options.mapTypeId,
          center: center,
          zoom: options.zoom,
          styles: options.styles || null
      };

      // if we have a map, we'll just configure it. otherwise, we'll create
      // one.
      if (map) {
          map.setOptions(mapOptions);
      } else {
          map = new google.maps.Map(options.element, mapOptions);
      }

      // destroy marker and infoWindow if previously created for this element.
      if (infoWindow) infoWindow = null;
      if (marker && marker instanceof google.maps.Marker) {
          google.maps.event.clearInstanceListeners(marker);
          marker.setMap(null);
          marker = null;
      }

      // check the new options to see if we need to re-create a marker for
      // this.
      if (options.marker) {
          marker = new google.maps.Marker({
              position: mapOptions.center,
              map: map
          });
          if (options.title) {
              infoWindow = new google.maps.InfoWindow();
              infoWindow.setContent(options.title);
              // infoWindow.open(map, marker);
              google.maps.event.addListener(marker, 'click', function () {
                  infoWindow.open(map, marker);
              });
          }
      }

      mapData = {
          element: elem,
          instance: map,
          marker: marker,
          infoWindow: infoWindow,
          options: mapOptions
      };
      // set the reference on the element for later use, if needed.
      elem._geolocatorMapData = mapData;
      return mapData;
  }

  /**
   *  Sets the `flag` and `staticMap` (if enabled) property of the given location.
   *  @private
   *
   *  @param {Object} location - Fetched location result.
   *  @param {Object} options - initial options.
   */
  function setLocationURLs(location, options) {
      if (!location || !location.address) return;
      var cc = void 0,
          address = location.address;
      if (_utils2.default.isString(address.countryCode) && address.countryCode.length === 2) {
          cc = address.countryCode;
      } else if (_utils2.default.isString(address.country) && address.country.length === 2) {
          cc = address.country;
      }
      if (!cc) return;
      location.flag = _enums2.default.URL.FLAG + cc.toLowerCase() + '.svg';
      if (options.staticMap) {
          var opts = _utils2.default.isPlainObject(options.staticMap) ? _utils2.default.clone(options.staticMap) : {};
          opts.center = location.coords;
          location.staticMap = geolocator.getStaticMap(opts);
      }
  }

  /**
   *  Nests `createMap` callback within the given callback.
   *  @private
   *
   *  @param {Object} options
   *         Method options.
   *  @param {Function} callback
   *         Parent callback.
   *
   *  @returns {Function} - Nested callback.
   */
  function callbackMap(options, callback) {
      return function cb(err, location) {
          if (err) return callback(_geo4.default.create(err), null);
          setLocationURLs(location, options);
          if (!options.map) return callback(null, location);
          options.map = getMapOpts(options.map, location);
          geolocator.createMap(options.map, function (error, map) {
              if (error) return callback(error, null);
              location.map = map;
              return callback(null, location);
          });
      };
  }

  /**
   *  Sends a geocode or reverse-geocode request with the given options.
   *  @private
   *
   *  @param {Boolean} reverse
   *         Whether to send reverse-geocode request.
   *  @param {Object} options
   *         Geocode options.
   *  @param {Function} callback
   *         Callback to be nested and executed with map callback.
   */
  function _geocode(reverse, options, callback) {
      checkGoogleKey();
      _geo2.default.geocode(reverse, geolocator._.config, options, callbackMap(options, callback));
  }

  /**
   *  Runs both an address and a timezone look-up for the given location.
   *  @private
   *
   *  @param {Object} location
   *         Location object.
   *  @param {Object} options
   *         Method options.
   *  @param {Function} callback
   *         Parent callback.
   */
  function fetchAddressAndTimezone(location, options, callback) {
      var loc = _utils2.default.clone(location, { own: false });
      if (!options.addressLookup && !options.timezone) {
          return callback(null, loc);
      }
      function getTZ(cb) {
          geolocator.getTimeZone(loc.coords, function (err, timezone) {
              if (err) {
                  return cb(err, null);
              }
              delete timezone.timestamp;
              loc.timezone = timezone;
              loc.timestamp = _utils2.default.time(); // update timestamp
              cb(null, loc);
          });
      }
      if (options.addressLookup) {
          geolocator.reverseGeocode(loc.coords, function (err, result) {
              if (err) return callback(err, null);
              loc = _utils2.default.extend({}, result, loc);
              loc.address = result.address;
              loc.timestamp = _utils2.default.time(); // update timestamp
              if (!options.timezone) {
                  callback(err, loc);
              } else {
                  getTZ(callback);
              }
          });
      } else if (options.timezone) {
          getTZ(callback);
      } else {
          callback(null, loc);
      }
  }

  /**
   *  Gets the position with better accuracy.
   *  See https://github.com/gwilson/getAccurateCurrentPosition#background
   *  @private
   *
   *  @param {Object} options
   *         Locate options.
   *  @param {Function} onPositionReceived
   *         Success callback.
   *  @param {Function} onPositionError
   *         Error callback.
   */
  function locateAccurate(options, onPositionReceived, onPositionError) {
      var loc = void 0,
          watcher = void 0,
          onProgress = !_utils2.default.isFunction(options.onProgress) ? _utils2.default.noop : options.onProgress;

      function complete() {
          if (!loc) {
              onPositionError(new _geo4.default(_geo4.default.Code.POSITION_UNAVAILABLE));
          } else {
              onPositionReceived(loc);
          }
      }

      watcher = geolocator.watch(options, function (err, location) {
          if (err) {
              return watcher.clear(function () {
                  onPositionError(err);
              });
          }
          loc = location;
          // ignore the first event if not the only result; for more accuracy.
          if (watcher.cycle > 1 && loc.coords.accuracy <= options.desiredAccuracy) {
              watcher.clear(complete);
          } else {
              onProgress(loc);
          }
      });
      watcher.clear(options.maximumWait + 100, complete);
  }

  function getStyles(options) {
      var conf = geolocator._.config;
      return !_utils2.default.isFilledArray(options.styles) ? _utils2.default.isFilledArray(conf.google.styles) ? conf.google.styles : null : options.styles;
  }

  // ---------------------------
  // INITIALIZE
  // ---------------------------

  /**
   *  @private
   *  @type {Object}
   */
  geolocator._ = {
      config: _utils2.default.extend({}, defaultConfig),
      // Storage for global callbacks.
      cb: {}
  };

  // setting default Geo-IP source, FreeGeoIP
  geolocator.setGeoIPSource({
      provider: 'freegeoip',
      url: 'https://freegeoip.net/json',
      callbackParam: 'callback',
      schema: {
          ip: 'ip',
          coords: {
              latitude: 'latitude',
              longitude: 'longitude'
          },
          address: {
              city: 'city',
              state: 'region_name',
              stateCode: 'region_code',
              postalCode: 'zip_code',
              countryCode: 'country_code',
              country: 'country_name',
              region: 'region_name'
          },
          timezone: {
              id: 'time_zone'
          }
      }
  });

  // ---------------------------
  // EXPORT
  // ---------------------------

  exports.default = geolocator;

  // ---------------------------
  // ADDITIONAL DOCUMENTATION
  // ---------------------------

  /**
   *  `Coordinates` inner type that specifies the geographic position of the
   *  device. The position is expressed as a set of geographic coordinates
   *  together with information about heading and speed.
   *
   *  This is generally returned as part of the
   *  {@link ?api=geolocator#geolocator~Location|`Location` result object}.
   *
   *  @typedef geolocator~Coordinates
   *  @type Object
   *
   *  @property {Number} latitude
   *         Specifies the latitude estimate in decimal degrees. The value
   *         range is [-90.00, +90.00].
   *  @property {Number} longitude
   *         Specifies the longitude estimate in decimal degrees. The value
   *         range is [-180.00, +180.00].
   *  @property {Number} altitude
   *         Specifies the altitude estimate in meters above the WGS 84
   *         ellipsoid.
   *  @property {Number} accuracy
   *         Specifies the accuracy of the latitude and longitude estimates in
   *         meters.
   *  @property {Number} altitudeAccuracy
   *         Specifies the accuracy of the altitude estimate in meters.
   *  @property {Number} heading
   *         Specifies the device's current direction of movement in degrees
   *         counting clockwise relative to true north.
   *  @property {Number} speed
   *         Specifies the device's current ground speed in meters per second.
   */

  /**
   *	`Address` inner type that specifies the address of the fetched location.
   *	The address is expressed as a set of political and locality components.
   *
   *  This is generally returned as part of the
   *  {@link ?api=geolocator#geolocator~Location|`Location` result object}.
   *
   *  @typedef geolocator~Address
   *  @type Object
   *
   *  @property {String} commonName
   *         Indicates a point of interest, a premise or colloquial area name for
   *         the fetched location, if any.
   *  @property {String} streetNumber
   *         Indicates the precise street number of the fetched location, if any.
   *  @property {String} street
   *         Indicates the street name of the fetched location, if any.
   *  @property {String} route
   *         Indicates the route name of the fetched location, if any.
   *  @property {String} neighborhood
   *         Indicates the neighborhood name of the fetched location, if any.
   *  @property {String} town
   *         Indictes the town of the fetched location, if any.
   *  @property {String} city
   *         Indicates the city of the fetched location.
   *  @property {String} region
   *         Indicates the political region name of the fetched location, if any.
   *  @property {String} postalCode
   *         Indicates the postal code of the fetched location, if any.
   *  @property {String} state
   *         Indicates the state of the fetched location, if any.
   *  @property {String} stateCode
   *         Indicates the state code of the fetched location, if any.
   *  @property {String} country
   *         Indicates the national political entity of the fetched location.
   *  @property {String} countryCode
   *         Indicates the ISO alpha-2 country code of the fetched location.
   */

  /**
   *	`TimeZone` inner type that specifies time offset data for the fetched
   *	location on the surface of the earth.
   *
   *  This is generally returned as part of the
   *  {@link ?api=geolocator#geolocator~Location|`Location` result object}.
   *
   *  @typedef geolocator~TimeZone
   *  @type Object
   *
   *  @property {String} id
   *         The ID of the time zone, such as `"America/Los_Angeles"` or
   *         `"Australia/Sydney"`. These IDs are defined in the
   *         {@link http://www.iana.org/time-zones|IANA Time Zone Database},
   *         which is also available in searchable format in Wikipedia's
   *         {@link http://en.wikipedia.org/wiki/List_of_tz_database_time_zones|List of tz database time zones}.
   *  @property {String} name
   *         The long form name of the time zone. This field will be localized if
   *         the Geolocator `language` is configured. e.g. `"Pacific Daylight Time"`
   *         or `"Australian Eastern Daylight Time"`.
   *  @property {String} abbr
   *         The abbreviation of the time zone.
   *  @property {Number} dstOffset
   *         The offset for daylight-savings time in seconds. This will be zero
   *         if the time zone is not in Daylight Savings Time during the specified
   *         timestamp.
   *  @property {Number} rawOffset
   *         The offset from UTC (in seconds) for the given location. This does
   *         not take into effect daylight savings.
   */

  /**
   *	`MapData` inner type that provides references to the components of a
   *	created Google Maps `Map` and the containing DOM element.
   *
   *  This is generally returned as part of the
   *  {@link ?api=geolocator#geolocator~Location|`Location` result object}.
   *
   *  @typedef geolocator~MapData
   *  @type Object
   *
   *  @property {HTMLElement} element
   *         DOM element which a (Google) map is created within.
   *  @property {google.maps.Map} instance
   *         Instance of a Google Maps `Map` object.
   *  @property {google.maps.Marker} marker
   *         Instance of a Google Maps `Marker` object, if any.
   *  @property {google.maps.InfoWindow} infoWindow
   *         Instance of a Google Maps `InfoWindow` object, if any.
   *  @property {Object} options
   *         Arbitrary object of applied map options.
   */

  /**
   *	`Location` inner type that specifies geographic coordinates, address and
   *	time zone information for the fetched location.
   *
   *  This result object is passed to the callbacks of the corresponding
   *  asynchronous Geolocator methods (such as `.locate()` method), as the second
   *  argument. The contents of this object will differ for various  Geolocator
   *  methods, depending on the configured method options.
   *
   *  @typedef geolocator~Location
   *  @type Object
   *
   *  @property {Coordinates} coords
   *         Specifies the geographic location of the device. The location is
   *         expressed as a set of geographic coordinates together with
   *         information about heading and speed.
   *         See {@link #geolocator~Coordinates|`geolocator~Coordinates` type}
   *         for details.
   *  @property {Address} address
   *         Specifies the address of the fetched location. The address is
   *         expressed as a set of political and locality components.
   *         This property might be `undefined` if `addressLookup` option is not
   *         enabled for the corresponding method.
   *         See {@link #geolocator~Address|`geolocator~Address` type}
   *         for details.
   *  @property {String} formattedAddress
   *         The human-readable address of this location. Often this address is
   *         equivalent to the "postal address," which sometimes differs from
   *         country to country.
   *  @property {Boolean} targetReached
   *         Specifies whether the defined target coordinates is reached.
   *         This property is only available for
   *         {@link #geolocator.watch|`geolocator.watch()`} method when `target`
   *         option is defined.
   *  @property {String} type
   *         Type of the location. See
   *         {@link #geolcoator.LocationType|`geolcoator.LocationType` enumeration}
   *         for details.
   *  @property {String} placeId
   *         A unique identifier that can be used with other Google APIs.
   *  @property {String} flag
   *         URL of the country flag image, in SVG format. This property exists
   *         only if address information is available.
   *  @property {TimeZone} timezone
   *         Specifies time offset data for the fetched location on the surface of
   *         the earth. See {@link #geolocator~TimeZone|`geolocator~TimeZone` type}
   *         for details.
   *  @property {MapData} map
   *         Provides references to the components of a created Google Maps `Map`
   *         and the containing DOM element. See
   *         {@link #geolocator~MapData|`geolocator~MapData` type} for details.
   *  @property {String} staticMap
   *         URL of a static Google map image, for the location.
   *  @property {Number} timestamp
   *         Specifies the time when the location information was retrieved and
   *         the `Location` object created.
   */

  /**
   *  `MapOptions` inner type that specifies options for the map to be created.
   *
   *  @typedef geolocator~MapOptions
   *  @type Object
   *
   *  @property {String|HTMLElement|Map} element
   *         Either the ID of a DOM element or the element itself;
   *         which the map will be created within; or a previously created
   *         `google.maps.Map` instance. If a map instance is set, this
   *         only will apply the options without re-creating it.
   *  @property {Object} center
   *         Center coordinates for the map to be created.
   *      @property {Number} center.latitude
   *             Latitude of the center point coordinates.
   *      @property {Number} center.longitude
   *             Longitude of the center point coordinates.
   *  @property {String} mapTypeId
   *         Type of the map to be created.
   *         See {@link #geolocator.MapTypeId|`geolocator.MapTypeId` enumeration}
   *         for possible values.
   *  @property {String} title
   *         Title text to be displayed within an `InfoWindow`, when the
   *         marker is clicked. This only take effect if `marker` is
   *         enabled.
   *  @property {Boolean} marker
   *         Whether to place a marker at the given coordinates.
   *         If `title` is set, an `InfoWindow` will be opened when the
   *         marker is clicked.
   *  @property {Number} zoom
   *             Zoom level to be set for the map.
   */

  /***/ }),
  /* 5 */
  /***/ (function(module, exports, __webpack_require__) {

  "use strict";


  Object.defineProperty(exports, "__esModule", {
      value: true
  });

  var _utils = __webpack_require__(0);

  var _utils2 = _interopRequireDefault(_utils);

  var _fetch = __webpack_require__(3);

  var _fetch2 = _interopRequireDefault(_fetch);

  var _enums = __webpack_require__(1);

  var _enums2 = _interopRequireDefault(_enums);

  var _geo = __webpack_require__(2);

  var _geo2 = _interopRequireDefault(_geo);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  /**
   *  Helper methods.
   *
   *  @license MIT
   *  @copyright 2016, Onur Yıldırım (onur@cutepilot.com)
   *  @type {Object}
   *  @private
   */
  var geoHelper = {
      toGoogleCoords: function toGoogleCoords(coords) {
          return {
              lat: coords.lat || coords.latitude,
              lng: coords.lng || coords.longitude
          };
      },
      fromGoogleCoords: function fromGoogleCoords(coords) {
          return {
              latitude: coords.latitude || coords.lat,
              longitude: coords.longitude || coords.lng
          };
      },


      // used for distance matrix origins and destinations
      toPointList: function toPointList(arr) {
          arr = _utils2.default.isArray(arr) ? arr : [arr];
          return arr.map(function (o) {
              return _utils2.default.isString(o) ? o : geoHelper.toGoogleCoords(o);
          });
      },
      getGeocodeComps: function getGeocodeComps(comp) {
          return {
              route: comp.route,
              locality: comp.locality,
              administrative_area: comp.administrativeArea, // eslint-disable-line camelcase
              postal_code: comp.postalCode, // eslint-disable-line camelcase
              country: comp.country,
              region: comp.region
          };
      },


      // Geocode examples:
      // address=1600+Amphitheatre+Parkway,+Mountain+View,+CA&key=API_KEY
      // address=Winnetka&bounds=34.172684,-118.604794|34.236144,-118.500938&key=API_KEY
      // address=santa+cruz&components=country:ES&key=API_KEY
      // components=administrative_area:TX|country:US&key=API_KEY
      // Reverse Geocode examples:
      // latlng=40.714224,-73.961452&key=API_KEY
      // place_id=ChIJd8BlQ2BZwokRAFUEcm_qrcA&key=API_KEY
      buildGeocodeParams: function buildGeocodeParams(options, reverse) {
          var params = [],
              e = _utils2.default.encodeURI;

          if (reverse) {
              if (options.placeId) {
                  params.push('place_id=' + options.placeId);
              } else if (options.latitude && options.longitude) {
                  params.push('latlng=' + options.latitude + ',' + options.longitude);
              }
          } else {
              if (options.address) {
                  params.push('address=' + e(options.address));
              }

              var geoComps = geoHelper.getGeocodeComps(options);
              geoComps = _utils2.default.params(geoComps, { operator: ':', separator: '|' });
              params.push('components=' + geoComps);

              var b = options.bounds;
              if (_utils2.default.isArray(b) && b.length === 4) {
                  params.push('bounds=' + b[0] + ',' + b[1] + '|' + b[2] + ',' + b[3]);
              } else if (_utils2.default.isPlainObject(b) && Object.keys(b).length === 4) {
                  params.push('bounds=' + b.southwestLat + ',' + b.southwestLng + '|' + b.northeastLat + ',' + b.northeastLng);
              }
          }

          params.push('language=' + options.language);
          params.push('key=' + options.key);
          return params.join('&');
      },


      // See https://developers.google.com/maps/documentation/geocoding/intro
      formatGeocodeResults: function formatGeocodeResults(results) {
          if (!_utils2.default.isArray(results) || results.length <= 0) {
              return {
                  location: null,
                  address: null,
                  formattedAddress: '',
                  type: null, // locationType
                  placeId: ''
              };
          }

          var i = void 0,
              c = void 0,
              o = {},
              data = results[0],
              comps = data.address_components;

          for (i = 0; i < comps.length; i += 1) {
              c = comps[i];
              if (c.types && c.types.length > 0) {
                  o[c.types[0]] = c.long_name;
                  o[c.types[0] + '_s'] = c.short_name;
              }
          }

          var geometry = data.geometry;
          return {
              coords: geometry && geometry.location ? {
                  latitude: geometry.location.lat,
                  longitude: geometry.location.lng
              } : null,
              address: {
                  commonName: o.point_of_interest || o.premise || o.subpremise || o.colloquial_area || '',
                  streetNumber: o.street_number || '',
                  street: o.administrative_area_level_4 || o.administrative_area_level_3 || o.route || '',
                  route: o.route || '',
                  neighborhood: o.neighborhood || o.administrative_area_level_5 || o.administrative_area_level_4 || '',
                  town: o.sublocality || o.administrative_area_level_2 || '',
                  city: o.locality || o.administrative_area_level_1 || '',
                  region: o.administrative_area_level_2 || o.administrative_area_level_1 || '',
                  postalCode: o.postal_code || '',
                  state: o.administrative_area_level_1 || '',
                  stateCode: o.administrative_area_level_1_s || '',
                  country: o.country || '',
                  countryCode: o.country_s || ''
              },
              formattedAddress: data.formatted_address,
              type: geometry.location_type || '',
              placeId: data.place_id,
              timestamp: _utils2.default.time()
          };
      },
      geocode: function geocode(reverse, conf, options, callback) {
          var opts = {};
          if (_utils2.default.isString(options)) {
              opts = {};
              var prop = reverse ? 'placeId' : 'address';
              opts[prop] = options;
          } else if (_utils2.default.isPlainObject(options)) {
              opts = options;
          } else {
              throw new _geo2.default(_geo2.default.Code.INVALID_PARAMETERS);
          }

          if (reverse) {
              var coordsSet = _utils2.default.isNumber(options.latitude) && _utils2.default.isNumber(options.longitude);
              if (!_utils2.default.isString(options.placeId) && !coordsSet) {
                  throw new _geo2.default(_geo2.default.Code.INVALID_PARAMETERS);
              }
          }

          opts = _utils2.default.extend({
              key: conf.google.key || '',
              language: conf.language || 'en',
              raw: false
          }, opts);

          var query = geoHelper.buildGeocodeParams(opts, reverse),
              url = _utils2.default.setProtocol(_enums2.default.URL.GOOGLE_GEOCODE, conf.https),
              xhrOpts = {
              url: url + '?' + query
          };

          _fetch2.default.xhr(xhrOpts, function (err, xhr) {
              if (err) return callback(_geo2.default.create(err), null);

              var response = _utils2.default.safeJsonParse(xhr.responseText),
                  gErr = _geo2.default.fromResponse(response);

              if (gErr) return callback(gErr, null);

              response = options.raw ? response : geoHelper.formatGeocodeResults(response.results);
              callback(null, response);
          });
      },


      // See https://developers.google.com/maps/documentation/distance-matrix/intro
      // Raw Result Example:
      // {
      //    "destination_addresses" : [ "San Francisco, CA, USA", "Victoria, BC, Canada" ],
      //    "origin_addresses" : [ "Vancouver, BC, Canada", "Seattle, WA, USA" ],
      //    "rows" : [
      //       {
      //          "elements" : [
      //             {
      //                "distance" : { "text" : "1,704 km", "value" : 1704324 },
      //                "duration" : { "text" : "3 days 19 hours", "value" : 327061
      //                },
      //                "status" : "OK"
      //             },
      //             {
      //                "distance" : { "text" : "138 km", "value" : 138295 },
      //                "duration" : { "text" : "6 hours 44 mins", "value" : 24236 },
      //                "status" : "OK"
      //             }
      //          ]
      //       },
      //       {
      //          "elements" : [
      //             {
      //                "distance" : { "text" : "1,452 km", "value" : 1451623 },
      //                "duration" : { "text" : "3 days 4 hours", "value" : 275062 },
      //                "status" : "OK"
      //             },
      //             {
      //                "distance" : { "text" : "146 km", "value" : 146496 },
      //                "duration" : { "text" : "2 hours 52 mins", "value" : 10324 },
      //                "status" : "OK"
      //             }
      //          ]
      //       }
      //    ],
      //    "status" : "OK"
      // }
      // Formatted to:

      formatDistanceResults: function formatDistanceResults(results) {
          if (!_utils2.default.isPlainObject(results)) {
              return null;
          }

          var arr = [],
              origins = results.originAddresses,
              dests = results.destinationAddresses,
              rows = results.rows;

          // [
          //     {
          //          from: 'Vancouver, BC, Canada',
          //          to: 'San Francisco, CA, USA',
          //          distance: { value: 1704107, text: "1,704 km" },
          //          duration: { value: 327025, text: "3 days 19 hours" },
          //          fare: { currency: "USD", value: 6, text: "$6.00" }
          //     },
          //     ...
          // ]

          var e = void 0;
          origins.forEach(function (origin, oIndex) {
              dests.forEach(function (dest, dIndex) {
                  e = rows[oIndex].elements[dIndex];
                  arr.push({
                      from: origin,
                      to: dest,
                      distance: e.distance,
                      duration: e.duration,
                      fare: e.fare,
                      timestamp: _utils2.default.time()
                  });
              });
          });

          return arr;
      },


      // Converts a map-styles object in to static map styles (formatted query-string params).
      // See https://developers.google.com/maps/documentation/static-maps/styling
      mapStylesToParams: function mapStylesToParams(styles) {
          if (!styles) return '';
          if (!_utils2.default.isArray(styles)) styles = [styles];
          var result = [];
          styles.forEach(function (v, i, a) {
              var style = '';
              if (v.stylers) {
                  // only if there is a styler object
                  if (v.stylers.length > 0) {
                      // Needs to have a style rule to be valid.
                      style += (v.hasOwnProperty('featureType') ? 'feature:' + v.featureType : 'feature:all') + '|';
                      style += (v.hasOwnProperty('elementType') ? 'element:' + v.elementType : 'element:all') + '|';
                      v.stylers.forEach(function (val, i, a) {
                          var propName = Object.keys(val)[0],
                              propVal = val[propName].toString().replace('#', '0x');
                          style += propName + ':' + propVal + '|';
                      });
                  }
              }
              result.push('style=' + encodeURIComponent(style));
          });
          return result.join('&');
      }
  };

  exports.default = geoHelper;

  /***/ }),
  /* 6 */
  /***/ (function(module, exports, __webpack_require__) {

  "use strict";


  Object.defineProperty(exports, "__esModule", {
      value: true
  });

  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

  var _utils = __webpack_require__(0);

  var _utils2 = _interopRequireDefault(_utils);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  var GeoWatcher = function () {
      function GeoWatcher(onChange, onError) {
          var _this = this;

          var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

          _classCallCheck(this, GeoWatcher);

          this.isCleared = false;
          this.cycle = 0;
          this._timer = null;
          this.id = navigator.geolocation.watchPosition(function (pos) {
              _this.cycle++;
              if (_utils2.default.isFunction(onChange)) onChange(pos);
          }, function (err) {
              _this.cycle++;
              if (_utils2.default.isFunction(onError)) onError(err);
              if (options.clearOnError) {
                  _this.clear();
              }
          }, options);
      }

      _createClass(GeoWatcher, [{
          key: '_clear',
          value: function _clear() {
              navigator.geolocation.clearWatch(this.id);
              this.isCleared = true;
              this._timer = null;
          }
      }, {
          key: 'clear',
          value: function clear(delay, callback) {
              var _this2 = this;

              var d = _utils2.default.isNumber(delay) ? delay : 0,
                  cb = _utils2.default.isFunction(callback) ? callback : _utils2.default.isFunction(delay) ? delay : null;
              // clear any previous timeout
              if (this._timer) {
                  clearTimeout(this._timer);
                  this._timer = null;
              }
              // check if watcher is not cleared
              if (!this.isCleared) {
                  if (d === 0) {
                      this._clear();
                      if (cb) cb();
                      return;
                  }
                  this._timer = setTimeout(function () {
                      _this2._clear();
                      if (cb) cb();
                  }, d);
              }
          }
      }]);

      return GeoWatcher;
  }();

  // ---------------------------
  // EXPORT
  // ---------------------------

  exports.default = GeoWatcher;

  /***/ }),
  /* 7 */
  /***/ (function(module, exports, __webpack_require__) {

  "use strict";


  var _geolocator = __webpack_require__(4);

  var _geolocator2 = _interopRequireDefault(_geolocator);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  // See https://github.com/onury/geolocator/issues/42
  if (typeof window !== 'undefined' && typeof window.geolocator === 'undefined') {
          window.geolocator = _geolocator2.default;
  }

  // export default geolocator;
  // http://stackoverflow.com/a/33683495/112731
  module.exports = _geolocator2.default;

  /***/ })
  /******/ ]);
  });
  //# sourceMappingURL=geolocator.js.map

/***/ },
/* 1249 */,
/* 1250 */,
/* 1251 */,
/* 1252 */,
/* 1253 */,
/* 1254 */,
/* 1255 */,
/* 1256 */
/***/ function(module, exports, __webpack_require__) {

  var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';

  (function (root, factory) {
      if (true) {
          // AMD. Register as an anonymous module.
          !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
      } else if (typeof module === 'object' && module.exports) {
          // Node. Does not work with strict CommonJS, but
          // only CommonJS-like environments that support module.exports,
          // like Node.
          module.exports = factory();
      } else {
          // Browser globals (root is window)
          root.striptags = factory();
    }
  }(this, function () {

      var STATE_OUTPUT       = 0,
          STATE_HTML         = 1,
          STATE_PRE_COMMENT  = 2,
          STATE_COMMENT      = 3,
          WHITESPACE         = /\s/,
          ALLOWED_TAGS_REGEX = /<(\w*)>/g;

      function striptags(html, allowableTags, tagReplacement) {
          var html = html || '',
              state = STATE_OUTPUT,
              depth = 0,
              output = '',
              tagBuffer = '',
              inQuote = false,
              i, length, c;

          if (typeof allowableTags === 'string') {
              // Parse the string into an array of tags
              allowableTags = parseAllowableTags(allowableTags);
          } else if (!Array.isArray(allowableTags)) {
              // If it is not an array, explicitly set to null
              allowableTags = null;
          }

          for (i = 0, length = html.length; i < length; i++) {
              c = html[i];

              switch (c) {
                  case '<': {
                      // ignore '<' if inside a quote
                      if (inQuote) {
                          break;
                      }

                      // '<' followed by a space is not a valid tag, continue
                      if (html[i + 1] == ' ') {
                          consumeCharacter(c);
                          break;
                      }

                      // change to STATE_HTML
                      if (state == STATE_OUTPUT) {
                          state = STATE_HTML;

                          consumeCharacter(c);
                          break;
                      }

                      // ignore additional '<' characters when inside a tag
                      if (state == STATE_HTML) {
                          depth++;
                          break;
                      }

                      consumeCharacter(c);
                      break;
                  }

                  case '>': {
                      // something like this is happening: '<<>>'
                      if (depth) {
                          depth--;
                          break;
                      }

                      // ignore '>' if inside a quote
                      if (inQuote) {
                          break;
                      }

                      // an HTML tag was closed
                      if (state == STATE_HTML) {
                          inQuote = state = 0;

                          if (allowableTags) {
                              tagBuffer += '>';
                              flushTagBuffer();
                          }

                          break;
                      }

                      // '<!' met its ending '>'
                      if (state == STATE_PRE_COMMENT) {
                          inQuote = state = 0;
                          tagBuffer = '';
                          break;
                      }

                      // if last two characters were '--', then end comment
                      if (state == STATE_COMMENT &&
                          html[i - 1] == '-' &&
                          html[i - 2] == '-') {

                          inQuote = state = 0;
                          tagBuffer = '';
                          break;
                      }

                      consumeCharacter(c);
                      break;
                  }

                  // catch both single and double quotes
                  case '"':
                  case '\'': {
                      if (state == STATE_HTML) {
                          if (inQuote == c) {
                              // end quote found
                              inQuote = false;
                          } else if (!inQuote) {
                              // start quote only if not already in one
                              inQuote = c;
                          }
                      }

                      consumeCharacter(c);
                      break;
                  }

                  case '!': {
                      if (state == STATE_HTML &&
                          html[i - 1] == '<') {

                          // looks like we might be starting a comment
                          state = STATE_PRE_COMMENT;
                          break;
                      }

                      consumeCharacter(c);
                      break;
                  }

                  case '-': {
                      // if the previous two characters were '!-', this is a comment
                      if (state == STATE_PRE_COMMENT &&
                          html[i - 1] == '-' &&
                          html[i - 2] == '!') {

                          state = STATE_COMMENT;
                          break;
                      }

                      consumeCharacter(c);
                      break;
                  }

                  case 'E':
                  case 'e': {
                      // check for DOCTYPE, because it looks like a comment and isn't
                      if (state == STATE_PRE_COMMENT &&
                          html.substr(i - 6, 7).toLowerCase() == 'doctype') {

                          state = STATE_HTML;
                          break;
                      }

                      consumeCharacter(c);
                      break;
                  }

                  default: {
                      consumeCharacter(c);
                  }
              }
          }

          function consumeCharacter(c) {
              if (state == STATE_OUTPUT) {
                  output += c;
              } else if (allowableTags && state == STATE_HTML) {
                  tagBuffer += c;
              }
          }

          function flushTagBuffer() {
              var normalized = '',
                  nonWhitespaceSeen = false,
                  i, length, c;

              normalizeTagBuffer:
              for (i = 0, length = tagBuffer.length; i < length; i++) {
                  c = tagBuffer[i].toLowerCase();

                  switch (c) {
                      case '<': {
                          break;
                      }

                      case '>': {
                          break normalizeTagBuffer;
                      }

                      case '/': {
                          nonWhitespaceSeen = true;
                          break;
                      }

                      default: {
                          if (!c.match(WHITESPACE)) {
                              nonWhitespaceSeen = true;
                              normalized += c;
                          } else if (nonWhitespaceSeen) {
                              break normalizeTagBuffer;
                          }
                      }
                  }
              }

              if (allowableTags.indexOf(normalized) !== -1) {
                  output += tagBuffer;
              } else if (tagReplacement) {
                  output += tagReplacement;
              }

              tagBuffer = '';
          }

          return output;
      }

      /**
       * Return an array containing tags that are allowed to pass through the
       * algorithm.
       *
       * @param string allowableTags A string of tags to allow (e.g. "<b><strong>").
       * @return array|null An array of allowed tags or null if none.
       */
      function parseAllowableTags(allowableTags) {
          var tagsArray = [],
              match;

          while ((match = ALLOWED_TAGS_REGEX.exec(allowableTags)) !== null) {
              tagsArray.push(match[1]);
          }

          return tagsArray.length !== 0 ? tagsArray : null;
      }

      return striptags;
  }));


/***/ },
/* 1257 */,
/* 1258 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  var _PaginationBoxView = __webpack_require__(1259);

  var _PaginationBoxView2 = _interopRequireDefault(_PaginationBoxView);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  module.exports = _PaginationBoxView2.default;
  //# sourceMappingURL=index.js.map

/***/ },
/* 1259 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  var _classnames = __webpack_require__(794);

  var _classnames2 = _interopRequireDefault(_classnames);

  var _reactAddonsCreateFragment = __webpack_require__(1260);

  var _reactAddonsCreateFragment2 = _interopRequireDefault(_reactAddonsCreateFragment);

  var _PageView = __webpack_require__(1261);

  var _PageView2 = _interopRequireDefault(_PageView);

  var _BreakView = __webpack_require__(1262);

  var _BreakView2 = _interopRequireDefault(_BreakView);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

  function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

  var PaginationBoxView = function (_Component) {
    _inherits(PaginationBoxView, _Component);

    function PaginationBoxView(props) {
      _classCallCheck(this, PaginationBoxView);

      var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(PaginationBoxView).call(this, props));

      _this.handlePreviousPage = function (evt) {
        evt.preventDefault ? evt.preventDefault() : evt.returnValue = false;
        if (_this.state.selected > 0) {
          _this.handlePageSelected(_this.state.selected - 1, evt);
        }
      };

      _this.handleNextPage = function (evt) {
        evt.preventDefault ? evt.preventDefault() : evt.returnValue = false;
        if (_this.state.selected < _this.props.pageCount - 1) {
          _this.handlePageSelected(_this.state.selected + 1, evt);
        }
      };

      _this.handlePageSelected = function (selected, evt) {
        evt.preventDefault ? evt.preventDefault() : evt.returnValue = false;

        if (_this.state.selected === selected) return;

        _this.setState({ selected: selected });

        // Call the callback with the new selected item:
        _this.callCallback(selected);
      };

      _this.callCallback = function (selectedItem) {
        if (typeof _this.props.onPageChange !== "undefined" && typeof _this.props.onPageChange === "function") {
          _this.props.onPageChange({ selected: selectedItem });
        }
      };

      _this.pagination = function () {
        var items = {};

        if (_this.props.pageCount <= _this.props.pageRangeDisplayed) {

          for (var index = 0; index < _this.props.pageCount; index++) {
            items['key' + index] = _this.getPageElement(index);
          }
        } else {

          var leftSide = _this.props.pageRangeDisplayed / 2;
          var rightSide = _this.props.pageRangeDisplayed - leftSide;

          if (_this.state.selected > _this.props.pageCount - _this.props.pageRangeDisplayed / 2) {
            rightSide = _this.props.pageCount - _this.state.selected;
            leftSide = _this.props.pageRangeDisplayed - rightSide;
          } else if (_this.state.selected < _this.props.pageRangeDisplayed / 2) {
            leftSide = _this.state.selected;
            rightSide = _this.props.pageRangeDisplayed - leftSide;
          }

          var _index = void 0;
          var page = void 0;
          var breakView = void 0;

          for (_index = 0; _index < _this.props.pageCount; _index++) {

            page = _index + 1;

            var pageView = _this.getPageElement(_index);

            if (page <= _this.props.marginPagesDisplayed) {
              items['key' + _index] = pageView;
              continue;
            }

            if (page > _this.props.pageCount - _this.props.marginPagesDisplayed) {
              items['key' + _index] = pageView;
              continue;
            }

            if (_index >= _this.state.selected - leftSide && _index <= _this.state.selected + rightSide) {
              items['key' + _index] = pageView;
              continue;
            }

            var keys = Object.keys(items);
            var breakLabelKey = keys[keys.length - 1];
            var breakLabelValue = items[breakLabelKey];

            if (_this.props.breakLabel && breakLabelValue !== breakView) {
              breakView = _react2.default.createElement(_BreakView2.default, {
                breakLabel: _this.props.breakLabel,
                breakClassName: _this.props.breakClassName
              });

              items['key' + _index] = breakView;
            }
          }
        }

        return items;
      };

      _this.state = {
        selected: props.initialPage ? props.initialPage : props.forcePage ? props.forcePage : 0
      };
      return _this;
    }

    _createClass(PaginationBoxView, [{
      key: 'componentDidMount',
      value: function componentDidMount() {
        // Call the callback with the initialPage item:
        if (typeof this.props.initialPage !== 'undefined' && !this.props.disableInitialCallback) {
          this.callCallback(this.props.initialPage);
        }
      }
    }, {
      key: 'componentWillReceiveProps',
      value: function componentWillReceiveProps(nextProps) {
        if (typeof nextProps.forcePage !== 'undefined' && this.props.forcePage !== nextProps.forcePage) {
          this.setState({ selected: nextProps.forcePage });
        }
      }
    }, {
      key: 'hrefBuilder',
      value: function hrefBuilder(pageIndex) {
        if (this.props.hrefBuilder && pageIndex !== this.state.selected && pageIndex >= 0 && pageIndex < this.props.pageCount) {
          return this.props.hrefBuilder(pageIndex + 1);
        }
      }
    }, {
      key: 'getPageElement',
      value: function getPageElement(index) {
        return _react2.default.createElement(_PageView2.default, {
          onClick: this.handlePageSelected.bind(null, index),
          selected: this.state.selected === index,
          pageClassName: this.props.pageClassName,
          pageLinkClassName: this.props.pageLinkClassName,
          activeClassName: this.props.activeClassName,
          extraAriaContext: this.props.extraAriaContext,
          href: this.hrefBuilder(index),
          page: index + 1 });
      }
    }, {
      key: 'render',
      value: function render() {
        var disabled = this.props.disabledClassName;

        var previousClasses = (0, _classnames2.default)(this.props.previousClassName, _defineProperty({}, disabled, this.state.selected === 0));

        var nextClasses = (0, _classnames2.default)(this.props.nextClassName, _defineProperty({}, disabled, this.state.selected === this.props.pageCount - 1));

        return _react2.default.createElement(
          'ul',
          { className: this.props.containerClassName },
          _react2.default.createElement(
            'li',
            { className: previousClasses },
            _react2.default.createElement(
              'a',
              { onClick: this.handlePreviousPage,
                className: this.props.previousLinkClassName,
                href: this.hrefBuilder(this.state.selected - 1),
                tabIndex: '0',
                onKeyPress: this.handlePreviousPage },
              this.props.previousLabel
            )
          ),
          (0, _reactAddonsCreateFragment2.default)(this.pagination()),
          _react2.default.createElement(
            'li',
            { className: nextClasses },
            _react2.default.createElement(
              'a',
              { onClick: this.handleNextPage,
                className: this.props.nextLinkClassName,
                href: this.hrefBuilder(this.state.selected + 1),
                tabIndex: '0',
                onKeyPress: this.handleNextPage },
              this.props.nextLabel
            )
          )
        );
      }
    }]);

    return PaginationBoxView;
  }(_react.Component);

  PaginationBoxView.propTypes = {
    pageCount: _react.PropTypes.number.isRequired,
    pageRangeDisplayed: _react.PropTypes.number.isRequired,
    marginPagesDisplayed: _react.PropTypes.number.isRequired,
    previousLabel: _react.PropTypes.node,
    nextLabel: _react.PropTypes.node,
    breakLabel: _react.PropTypes.node,
    hrefBuilder: _react.PropTypes.func,
    onPageChange: _react.PropTypes.func,
    initialPage: _react.PropTypes.number,
    forcePage: _react.PropTypes.number,
    disableInitialCallback: _react.PropTypes.bool,
    containerClassName: _react.PropTypes.string,
    pageClassName: _react.PropTypes.string,
    pageLinkClassName: _react.PropTypes.string,
    activeClassName: _react.PropTypes.string,
    previousClassName: _react.PropTypes.string,
    nextClassName: _react.PropTypes.string,
    previousLinkClassName: _react.PropTypes.string,
    nextLinkClassName: _react.PropTypes.string,
    disabledClassName: _react.PropTypes.string,
    breakClassName: _react.PropTypes.string
  };
  PaginationBoxView.defaultProps = {
    pageCount: 10,
    pageRangeDisplayed: 2,
    marginPagesDisplayed: 3,
    activeClassName: "selected",
    previousClassName: "previous",
    nextClassName: "next",
    previousLabel: "Previous",
    nextLabel: "Next",
    breakLabel: "...",
    disabledClassName: "disabled",
    disableInitialCallback: false
  };
  exports.default = PaginationBoxView;
  ;
  //# sourceMappingURL=PaginationBoxView.js.map

/***/ },
/* 1260 */
/***/ function(module, exports, __webpack_require__) {

  /**
   * Copyright 2015-present, Facebook, Inc.
   * All rights reserved.
   *
   * This source code is licensed under the BSD-style license found in the
   * LICENSE file in the root directory of this source tree. An additional grant
   * of patent rights can be found in the PATENTS file in the same directory.
   */

  'use strict';

  var React = __webpack_require__(385);

  var REACT_ELEMENT_TYPE = (typeof Symbol === 'function' &&
    Symbol.for &&
    Symbol.for('react.element')) ||
    0xeac7;

  var emptyFunction = __webpack_require__(395);
  var invariant = __webpack_require__(391);
  var warning = __webpack_require__(394);

  var SEPARATOR = '.';
  var SUBSEPARATOR = ':';

  var didWarnAboutMaps = false;

  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.

  function getIteratorFn(maybeIterable) {
    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
    if (typeof iteratorFn === 'function') {
      return iteratorFn;
    }
  }

  function escape(key) {
    var escapeRegex = /[=:]/g;
    var escaperLookup = {
      '=': '=0',
      ':': '=2'
    };
    var escapedString = ('' + key).replace(escapeRegex, function(match) {
      return escaperLookup[match];
    });

    return '$' + escapedString;
  }

  function getComponentKey(component, index) {
    // Do some typechecking here since we call this blindly. We want to ensure
    // that we don't block potential future ES APIs.
    if (component && typeof component === 'object' && component.key != null) {
      // Explicit key
      return escape(component.key);
    }
    // Implicit key determined by the index in the set
    return index.toString(36);
  }

  function traverseAllChildrenImpl(
    children,
    nameSoFar,
    callback,
    traverseContext
  ) {
    var type = typeof children;

    if (type === 'undefined' || type === 'boolean') {
      // All of the above are perceived as null.
      children = null;
    }

    if (
      children === null ||
      type === 'string' ||
      type === 'number' ||
      // The following is inlined from ReactElement. This means we can optimize
      // some checks. React Fiber also inlines this logic for similar purposes.
      (type === 'object' && children.$$typeof === REACT_ELEMENT_TYPE)
    ) {
      callback(
        traverseContext,
        children,
        // If it's the only child, treat the name as if it was wrapped in an array
        // so that it's consistent if the number of children grows.
        nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar
      );
      return 1;
    }

    var child;
    var nextName;
    var subtreeCount = 0; // Count of children found in the current subtree.
    var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;

    if (Array.isArray(children)) {
      for (var i = 0; i < children.length; i++) {
        child = children[i];
        nextName = nextNamePrefix + getComponentKey(child, i);
        subtreeCount += traverseAllChildrenImpl(
          child,
          nextName,
          callback,
          traverseContext
        );
      }
    } else {
      var iteratorFn = getIteratorFn(children);
      if (iteratorFn) {
        if (true) {
          // Warn about using Maps as children
          if (iteratorFn === children.entries) {
            warning(
              didWarnAboutMaps,
              'Using Maps as children is unsupported and will likely yield ' +
                'unexpected results. Convert it to a sequence/iterable of keyed ' +
                'ReactElements instead.'
            );
            didWarnAboutMaps = true;
          }
        }

        var iterator = iteratorFn.call(children);
        var step;
        var ii = 0;
        while (!(step = iterator.next()).done) {
          child = step.value;
          nextName = nextNamePrefix + getComponentKey(child, ii++);
          subtreeCount += traverseAllChildrenImpl(
            child,
            nextName,
            callback,
            traverseContext
          );
        }
      } else if (type === 'object') {
        var addendum = '';
        if (true) {
          addendum = ' If you meant to render a collection of children, use an array ' +
            'instead or wrap the object using createFragment(object) from the ' +
            'React add-ons.';
        }
        var childrenString = '' + children;
        invariant(
          false,
          'Objects are not valid as a React child (found: %s).%s',
          childrenString === '[object Object]'
            ? 'object with keys {' + Object.keys(children).join(', ') + '}'
            : childrenString,
          addendum
        );
      }
    }

    return subtreeCount;
  }

  function traverseAllChildren(children, callback, traverseContext) {
    if (children == null) {
      return 0;
    }

    return traverseAllChildrenImpl(children, '', callback, traverseContext);
  }

  var userProvidedKeyEscapeRegex = /\/+/g;
  function escapeUserProvidedKey(text) {
    return ('' + text).replace(userProvidedKeyEscapeRegex, '$&/');
  }

  function cloneAndReplaceKey(oldElement, newKey) {
    return React.cloneElement(
      oldElement,
      { key: newKey },
      oldElement.props !== undefined
        ? oldElement.props.children
        : undefined
    );
  };

  var DEFAULT_POOL_SIZE = 10;
  var DEFAULT_POOLER = oneArgumentPooler;

  var oneArgumentPooler = function(copyFieldsFrom) {
    var Klass = this;
    if (Klass.instancePool.length) {
      var instance = Klass.instancePool.pop();
      Klass.call(instance, copyFieldsFrom);
      return instance;
    } else {
      return new Klass(copyFieldsFrom);
    }
  };

  var addPoolingTo = function addPoolingTo(
    CopyConstructor,
    pooler
  ) {
    // Casting as any so that flow ignores the actual implementation and trusts
    // it to match the type we declared
    var NewKlass = CopyConstructor;
    NewKlass.instancePool = [];
    NewKlass.getPooled = pooler || DEFAULT_POOLER;
    if (!NewKlass.poolSize) {
      NewKlass.poolSize = DEFAULT_POOL_SIZE;
    }
    NewKlass.release = standardReleaser;
    return NewKlass;
  };

  var standardReleaser = function standardReleaser(instance) {
    var Klass = this;
    invariant(
      instance instanceof Klass,
      'Trying to release an instance into a pool of a different type.'
    );
    instance.destructor();
    if (Klass.instancePool.length < Klass.poolSize) {
      Klass.instancePool.push(instance);
    }
  };

  var fourArgumentPooler = function fourArgumentPooler(a1, a2, a3, a4) {
    var Klass = this;
    if (Klass.instancePool.length) {
      var instance = Klass.instancePool.pop();
      Klass.call(instance, a1, a2, a3, a4);
      return instance;
    } else {
      return new Klass(a1, a2, a3, a4);
    }
  };

  function MapBookKeeping(mapResult, keyPrefix, mapFunction, mapContext) {
    this.result = mapResult;
    this.keyPrefix = keyPrefix;
    this.func = mapFunction;
    this.context = mapContext;
    this.count = 0;
  }
  MapBookKeeping.prototype.destructor = function() {
    this.result = null;
    this.keyPrefix = null;
    this.func = null;
    this.context = null;
    this.count = 0;
  };
  addPoolingTo(MapBookKeeping, fourArgumentPooler);

  function mapSingleChildIntoContext(bookKeeping, child, childKey) {
    var result = bookKeeping.result;
    var keyPrefix = bookKeeping.keyPrefix;
    var func = bookKeeping.func;
    var context = bookKeeping.context;

    var mappedChild = func.call(context, child, bookKeeping.count++);
    if (Array.isArray(mappedChild)) {
      mapIntoWithKeyPrefixInternal(
        mappedChild,
        result,
        childKey,
        emptyFunction.thatReturnsArgument
      );
    } else if (mappedChild != null) {
      if (React.isValidElement(mappedChild)) {
        mappedChild = cloneAndReplaceKey(
          mappedChild,
          // Keep both the (mapped) and old keys if they differ, just as
          // traverseAllChildren used to do for objects as children
          keyPrefix +
            (mappedChild.key && (!child || child.key !== mappedChild.key)
              ? escapeUserProvidedKey(mappedChild.key) + '/'
              : '') +
            childKey
        );
      }
      result.push(mappedChild);
    }
  }

  function mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {
    var escapedPrefix = '';
    if (prefix != null) {
      escapedPrefix = escapeUserProvidedKey(prefix) + '/';
    }
    var traverseContext = MapBookKeeping.getPooled(
      array,
      escapedPrefix,
      func,
      context
    );
    traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);
    MapBookKeeping.release(traverseContext);
  }

  var numericPropertyRegex = /^\d+$/;

  var warnedAboutNumeric = false;

  function createReactFragment(object) {
    if (typeof object !== 'object' || !object || Array.isArray(object)) {
      warning(
        false,
        'React.addons.createFragment only accepts a single object. Got: %s',
        object
      );
      return object;
    }
    if (React.isValidElement(object)) {
      warning(
        false,
        'React.addons.createFragment does not accept a ReactElement ' +
          'without a wrapper object.'
      );
      return object;
    }

    invariant(
      object.nodeType !== 1,
      'React.addons.createFragment(...): Encountered an invalid child; DOM ' +
        'elements are not valid children of React components.'
    );

    var result = [];

    for (var key in object) {
      if (true) {
        if (!warnedAboutNumeric && numericPropertyRegex.test(key)) {
          warning(
            false,
            'React.addons.createFragment(...): Child objects should have ' +
              'non-numeric keys so ordering is preserved.'
          );
          warnedAboutNumeric = true;
        }
      }
      mapIntoWithKeyPrefixInternal(
        object[key],
        result,
        key,
        emptyFunction.thatReturnsArgument
      );
    }

    return result;
  }

  module.exports = createReactFragment;


/***/ },
/* 1261 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

  function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

  var PageView = function (_React$Component) {
    _inherits(PageView, _React$Component);

    function PageView() {
      _classCallCheck(this, PageView);

      return _possibleConstructorReturn(this, Object.getPrototypeOf(PageView).apply(this, arguments));
    }

    _createClass(PageView, [{
      key: 'render',
      value: function render() {
        var cssClassName = this.props.pageClassName;
        var linkClassName = this.props.pageLinkClassName;
        var onClick = this.props.onClick;
        var href = this.props.href;
        var ariaLabel = 'Page ' + this.props.page + (this.props.extraAriaContext ? ' ' + this.props.extraAriaContext : '');
        var ariaCurrent = null;

        if (this.props.selected) {
          ariaCurrent = 'page';
          ariaLabel = 'Page ' + this.props.page + ' is your current page';
          if (typeof cssClassName !== 'undefined') {
            cssClassName = cssClassName + ' ' + this.props.activeClassName;
          } else {
            cssClassName = this.props.activeClassName;
          }
        }

        return _react2.default.createElement(
          'li',
          { className: cssClassName },
          _react2.default.createElement(
            'a',
            { onClick: onClick,
              className: linkClassName,
              href: href,
              tabIndex: '0',
              'aria-label': ariaLabel,
              'aria-current': ariaCurrent,
              onKeyPress: onClick },
            this.props.page
          )
        );
      }
    }]);

    return PageView;
  }(_react2.default.Component);

  exports.default = PageView;
  ;
  //# sourceMappingURL=PageView.js.map

/***/ },
/* 1262 */
/***/ function(module, exports, __webpack_require__) {

  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

  var _react = __webpack_require__(385);

  var _react2 = _interopRequireDefault(_react);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

  function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

  var BreakView = function (_React$Component) {
    _inherits(BreakView, _React$Component);

    function BreakView() {
      _classCallCheck(this, BreakView);

      return _possibleConstructorReturn(this, Object.getPrototypeOf(BreakView).apply(this, arguments));
    }

    _createClass(BreakView, [{
      key: 'render',
      value: function render() {
        var label = this.props.breakLabel;
        var className = this.props.breakClassName || 'break';

        return _react2.default.createElement(
          'li',
          { className: className },
          label
        );
      }
    }]);

    return BreakView;
  }(_react2.default.Component);

  exports.default = BreakView;
  ;
  //# sourceMappingURL=BreakView.js.map

/***/ },
/* 1263 */,
/* 1264 */,
/* 1265 */,
/* 1266 */,
/* 1267 */,
/* 1268 */
/***/ function(module, exports, __webpack_require__) {

  var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/*! @preserve
   * numeral.js
   * version : 2.0.6
   * author : Adam Draper
   * license : MIT
   * http://adamwdraper.github.com/Numeral-js/
   */

  (function (global, factory) {
      if (true) {
          !(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
      } else if (typeof module === 'object' && module.exports) {
          module.exports = factory();
      } else {
          global.numeral = factory();
      }
  }(this, function () {
      /************************************
          Variables
      ************************************/

      var numeral,
          _,
          VERSION = '2.0.6',
          formats = {},
          locales = {},
          defaults = {
              currentLocale: 'en',
              zeroFormat: null,
              nullFormat: null,
              defaultFormat: '0,0',
              scalePercentBy100: true
          },
          options = {
              currentLocale: defaults.currentLocale,
              zeroFormat: defaults.zeroFormat,
              nullFormat: defaults.nullFormat,
              defaultFormat: defaults.defaultFormat,
              scalePercentBy100: defaults.scalePercentBy100
          };


      /************************************
          Constructors
      ************************************/

      // Numeral prototype object
      function Numeral(input, number) {
          this._input = input;

          this._value = number;
      }

      numeral = function(input) {
          var value,
              kind,
              unformatFunction,
              regexp;

          if (numeral.isNumeral(input)) {
              value = input.value();
          } else if (input === 0 || typeof input === 'undefined') {
              value = 0;
          } else if (input === null || _.isNaN(input)) {
              value = null;
          } else if (typeof input === 'string') {
              if (options.zeroFormat && input === options.zeroFormat) {
                  value = 0;
              } else if (options.nullFormat && input === options.nullFormat || !input.replace(/[^0-9]+/g, '').length) {
                  value = null;
              } else {
                  for (kind in formats) {
                      regexp = typeof formats[kind].regexps.unformat === 'function' ? formats[kind].regexps.unformat() : formats[kind].regexps.unformat;

                      if (regexp && input.match(regexp)) {
                          unformatFunction = formats[kind].unformat;

                          break;
                      }
                  }

                  unformatFunction = unformatFunction || numeral._.stringToNumber;

                  value = unformatFunction(input);
              }
          } else {
              value = Number(input)|| null;
          }

          return new Numeral(input, value);
      };

      // version number
      numeral.version = VERSION;

      // compare numeral object
      numeral.isNumeral = function(obj) {
          return obj instanceof Numeral;
      };

      // helper functions
      numeral._ = _ = {
          // formats numbers separators, decimals places, signs, abbreviations
          numberToFormat: function(value, format, roundingFunction) {
              var locale = locales[numeral.options.currentLocale],
                  negP = false,
                  optDec = false,
                  leadingCount = 0,
                  abbr = '',
                  trillion = 1000000000000,
                  billion = 1000000000,
                  million = 1000000,
                  thousand = 1000,
                  decimal = '',
                  neg = false,
                  abbrForce, // force abbreviation
                  abs,
                  min,
                  max,
                  power,
                  int,
                  precision,
                  signed,
                  thousands,
                  output;

              // make sure we never format a null value
              value = value || 0;

              abs = Math.abs(value);

              // see if we should use parentheses for negative number or if we should prefix with a sign
              // if both are present we default to parentheses
              if (numeral._.includes(format, '(')) {
                  negP = true;
                  format = format.replace(/[\(|\)]/g, '');
              } else if (numeral._.includes(format, '+') || numeral._.includes(format, '-')) {
                  signed = numeral._.includes(format, '+') ? format.indexOf('+') : value < 0 ? format.indexOf('-') : -1;
                  format = format.replace(/[\+|\-]/g, '');
              }

              // see if abbreviation is wanted
              if (numeral._.includes(format, 'a')) {
                  abbrForce = format.match(/a(k|m|b|t)?/);

                  abbrForce = abbrForce ? abbrForce[1] : false;

                  // check for space before abbreviation
                  if (numeral._.includes(format, ' a')) {
                      abbr = ' ';
                  }

                  format = format.replace(new RegExp(abbr + 'a[kmbt]?'), '');

                  if (abs >= trillion && !abbrForce || abbrForce === 't') {
                      // trillion
                      abbr += locale.abbreviations.trillion;
                      value = value / trillion;
                  } else if (abs < trillion && abs >= billion && !abbrForce || abbrForce === 'b') {
                      // billion
                      abbr += locale.abbreviations.billion;
                      value = value / billion;
                  } else if (abs < billion && abs >= million && !abbrForce || abbrForce === 'm') {
                      // million
                      abbr += locale.abbreviations.million;
                      value = value / million;
                  } else if (abs < million && abs >= thousand && !abbrForce || abbrForce === 'k') {
                      // thousand
                      abbr += locale.abbreviations.thousand;
                      value = value / thousand;
                  }
              }

              // check for optional decimals
              if (numeral._.includes(format, '[.]')) {
                  optDec = true;
                  format = format.replace('[.]', '.');
              }

              // break number and format
              int = value.toString().split('.')[0];
              precision = format.split('.')[1];
              thousands = format.indexOf(',');
              leadingCount = (format.split('.')[0].split(',')[0].match(/0/g) || []).length;

              if (precision) {
                  if (numeral._.includes(precision, '[')) {
                      precision = precision.replace(']', '');
                      precision = precision.split('[');
                      decimal = numeral._.toFixed(value, (precision[0].length + precision[1].length), roundingFunction, precision[1].length);
                  } else {
                      decimal = numeral._.toFixed(value, precision.length, roundingFunction);
                  }

                  int = decimal.split('.')[0];

                  if (numeral._.includes(decimal, '.')) {
                      decimal = locale.delimiters.decimal + decimal.split('.')[1];
                  } else {
                      decimal = '';
                  }

                  if (optDec && Number(decimal.slice(1)) === 0) {
                      decimal = '';
                  }
              } else {
                  int = numeral._.toFixed(value, 0, roundingFunction);
              }

              // check abbreviation again after rounding
              if (abbr && !abbrForce && Number(int) >= 1000 && abbr !== locale.abbreviations.trillion) {
                  int = String(Number(int) / 1000);

                  switch (abbr) {
                      case locale.abbreviations.thousand:
                          abbr = locale.abbreviations.million;
                          break;
                      case locale.abbreviations.million:
                          abbr = locale.abbreviations.billion;
                          break;
                      case locale.abbreviations.billion:
                          abbr = locale.abbreviations.trillion;
                          break;
                  }
              }


              // format number
              if (numeral._.includes(int, '-')) {
                  int = int.slice(1);
                  neg = true;
              }

              if (int.length < leadingCount) {
                  for (var i = leadingCount - int.length; i > 0; i--) {
                      int = '0' + int;
                  }
              }

              if (thousands > -1) {
                  int = int.toString().replace(/(\d)(?=(\d{3})+(?!\d))/g, '$1' + locale.delimiters.thousands);
              }

              if (format.indexOf('.') === 0) {
                  int = '';
              }

              output = int + decimal + (abbr ? abbr : '');

              if (negP) {
                  output = (negP && neg ? '(' : '') + output + (negP && neg ? ')' : '');
              } else {
                  if (signed >= 0) {
                      output = signed === 0 ? (neg ? '-' : '+') + output : output + (neg ? '-' : '+');
                  } else if (neg) {
                      output = '-' + output;
                  }
              }

              return output;
          },
          // unformats numbers separators, decimals places, signs, abbreviations
          stringToNumber: function(string) {
              var locale = locales[options.currentLocale],
                  stringOriginal = string,
                  abbreviations = {
                      thousand: 3,
                      million: 6,
                      billion: 9,
                      trillion: 12
                  },
                  abbreviation,
                  value,
                  i,
                  regexp;

              if (options.zeroFormat && string === options.zeroFormat) {
                  value = 0;
              } else if (options.nullFormat && string === options.nullFormat || !string.replace(/[^0-9]+/g, '').length) {
                  value = null;
              } else {
                  value = 1;

                  if (locale.delimiters.decimal !== '.') {
                      string = string.replace(/\./g, '').replace(locale.delimiters.decimal, '.');
                  }

                  for (abbreviation in abbreviations) {
                      regexp = new RegExp('[^a-zA-Z]' + locale.abbreviations[abbreviation] + '(?:\\)|(\\' + locale.currency.symbol + ')?(?:\\))?)?$');

                      if (stringOriginal.match(regexp)) {
                          value *= Math.pow(10, abbreviations[abbreviation]);
                          break;
                      }
                  }

                  // check for negative number
                  value *= (string.split('-').length + Math.min(string.split('(').length - 1, string.split(')').length - 1)) % 2 ? 1 : -1;

                  // remove non numbers
                  string = string.replace(/[^0-9\.]+/g, '');

                  value *= Number(string);
              }

              return value;
          },
          isNaN: function(value) {
              return typeof value === 'number' && isNaN(value);
          },
          includes: function(string, search) {
              return string.indexOf(search) !== -1;
          },
          insert: function(string, subString, start) {
              return string.slice(0, start) + subString + string.slice(start);
          },
          reduce: function(array, callback /*, initialValue*/) {
              if (this === null) {
                  throw new TypeError('Array.prototype.reduce called on null or undefined');
              }

              if (typeof callback !== 'function') {
                  throw new TypeError(callback + ' is not a function');
              }

              var t = Object(array),
                  len = t.length >>> 0,
                  k = 0,
                  value;

              if (arguments.length === 3) {
                  value = arguments[2];
              } else {
                  while (k < len && !(k in t)) {
                      k++;
                  }

                  if (k >= len) {
                      throw new TypeError('Reduce of empty array with no initial value');
                  }

                  value = t[k++];
              }
              for (; k < len; k++) {
                  if (k in t) {
                      value = callback(value, t[k], k, t);
                  }
              }
              return value;
          },
          /**
           * Computes the multiplier necessary to make x >= 1,
           * effectively eliminating miscalculations caused by
           * finite precision.
           */
          multiplier: function (x) {
              var parts = x.toString().split('.');

              return parts.length < 2 ? 1 : Math.pow(10, parts[1].length);
          },
          /**
           * Given a variable number of arguments, returns the maximum
           * multiplier that must be used to normalize an operation involving
           * all of them.
           */
          correctionFactor: function () {
              var args = Array.prototype.slice.call(arguments);

              return args.reduce(function(accum, next) {
                  var mn = _.multiplier(next);
                  return accum > mn ? accum : mn;
              }, 1);
          },
          /**
           * Implementation of toFixed() that treats floats more like decimals
           *
           * Fixes binary rounding issues (eg. (0.615).toFixed(2) === '0.61') that present
           * problems for accounting- and finance-related software.
           */
          toFixed: function(value, maxDecimals, roundingFunction, optionals) {
              var splitValue = value.toString().split('.'),
                  minDecimals = maxDecimals - (optionals || 0),
                  boundedPrecision,
                  optionalsRegExp,
                  power,
                  output;

              // Use the smallest precision value possible to avoid errors from floating point representation
              if (splitValue.length === 2) {
                boundedPrecision = Math.min(Math.max(splitValue[1].length, minDecimals), maxDecimals);
              } else {
                boundedPrecision = minDecimals;
              }

              power = Math.pow(10, boundedPrecision);

              // Multiply up by precision, round accurately, then divide and use native toFixed():
              output = (roundingFunction(value + 'e+' + boundedPrecision) / power).toFixed(boundedPrecision);

              if (optionals > maxDecimals - boundedPrecision) {
                  optionalsRegExp = new RegExp('\\.?0{1,' + (optionals - (maxDecimals - boundedPrecision)) + '}$');
                  output = output.replace(optionalsRegExp, '');
              }

              return output;
          }
      };

      // avaliable options
      numeral.options = options;

      // avaliable formats
      numeral.formats = formats;

      // avaliable formats
      numeral.locales = locales;

      // This function sets the current locale.  If
      // no arguments are passed in, it will simply return the current global
      // locale key.
      numeral.locale = function(key) {
          if (key) {
              options.currentLocale = key.toLowerCase();
          }

          return options.currentLocale;
      };

      // This function provides access to the loaded locale data.  If
      // no arguments are passed in, it will simply return the current
      // global locale object.
      numeral.localeData = function(key) {
          if (!key) {
              return locales[options.currentLocale];
          }

          key = key.toLowerCase();

          if (!locales[key]) {
              throw new Error('Unknown locale : ' + key);
          }

          return locales[key];
      };

      numeral.reset = function() {
          for (var property in defaults) {
              options[property] = defaults[property];
          }
      };

      numeral.zeroFormat = function(format) {
          options.zeroFormat = typeof(format) === 'string' ? format : null;
      };

      numeral.nullFormat = function (format) {
          options.nullFormat = typeof(format) === 'string' ? format : null;
      };

      numeral.defaultFormat = function(format) {
          options.defaultFormat = typeof(format) === 'string' ? format : '0.0';
      };

      numeral.register = function(type, name, format) {
          name = name.toLowerCase();

          if (this[type + 's'][name]) {
              throw new TypeError(name + ' ' + type + ' already registered.');
          }

          this[type + 's'][name] = format;

          return format;
      };


      numeral.validate = function(val, culture) {
          var _decimalSep,
              _thousandSep,
              _currSymbol,
              _valArray,
              _abbrObj,
              _thousandRegEx,
              localeData,
              temp;

          //coerce val to string
          if (typeof val !== 'string') {
              val += '';

              if (console.warn) {
                  console.warn('Numeral.js: Value is not string. It has been co-erced to: ', val);
              }
          }

          //trim whitespaces from either sides
          val = val.trim();

          //if val is just digits return true
          if (!!val.match(/^\d+$/)) {
              return true;
          }

          //if val is empty return false
          if (val === '') {
              return false;
          }

          //get the decimal and thousands separator from numeral.localeData
          try {
              //check if the culture is understood by numeral. if not, default it to current locale
              localeData = numeral.localeData(culture);
          } catch (e) {
              localeData = numeral.localeData(numeral.locale());
          }

          //setup the delimiters and currency symbol based on culture/locale
          _currSymbol = localeData.currency.symbol;
          _abbrObj = localeData.abbreviations;
          _decimalSep = localeData.delimiters.decimal;
          if (localeData.delimiters.thousands === '.') {
              _thousandSep = '\\.';
          } else {
              _thousandSep = localeData.delimiters.thousands;
          }

          // validating currency symbol
          temp = val.match(/^[^\d]+/);
          if (temp !== null) {
              val = val.substr(1);
              if (temp[0] !== _currSymbol) {
                  return false;
              }
          }

          //validating abbreviation symbol
          temp = val.match(/[^\d]+$/);
          if (temp !== null) {
              val = val.slice(0, -1);
              if (temp[0] !== _abbrObj.thousand && temp[0] !== _abbrObj.million && temp[0] !== _abbrObj.billion && temp[0] !== _abbrObj.trillion) {
                  return false;
              }
          }

          _thousandRegEx = new RegExp(_thousandSep + '{2}');

          if (!val.match(/[^\d.,]/g)) {
              _valArray = val.split(_decimalSep);
              if (_valArray.length > 2) {
                  return false;
              } else {
                  if (_valArray.length < 2) {
                      return ( !! _valArray[0].match(/^\d+.*\d$/) && !_valArray[0].match(_thousandRegEx));
                  } else {
                      if (_valArray[0].length === 1) {
                          return ( !! _valArray[0].match(/^\d+$/) && !_valArray[0].match(_thousandRegEx) && !! _valArray[1].match(/^\d+$/));
                      } else {
                          return ( !! _valArray[0].match(/^\d+.*\d$/) && !_valArray[0].match(_thousandRegEx) && !! _valArray[1].match(/^\d+$/));
                      }
                  }
              }
          }

          return false;
      };


      /************************************
          Numeral Prototype
      ************************************/

      numeral.fn = Numeral.prototype = {
          clone: function() {
              return numeral(this);
          },
          format: function(inputString, roundingFunction) {
              var value = this._value,
                  format = inputString || options.defaultFormat,
                  kind,
                  output,
                  formatFunction;

              // make sure we have a roundingFunction
              roundingFunction = roundingFunction || Math.round;

              // format based on value
              if (value === 0 && options.zeroFormat !== null) {
                  output = options.zeroFormat;
              } else if (value === null && options.nullFormat !== null) {
                  output = options.nullFormat;
              } else {
                  for (kind in formats) {
                      if (format.match(formats[kind].regexps.format)) {
                          formatFunction = formats[kind].format;

                          break;
                      }
                  }

                  formatFunction = formatFunction || numeral._.numberToFormat;

                  output = formatFunction(value, format, roundingFunction);
              }

              return output;
          },
          value: function() {
              return this._value;
          },
          input: function() {
              return this._input;
          },
          set: function(value) {
              this._value = Number(value);

              return this;
          },
          add: function(value) {
              var corrFactor = _.correctionFactor.call(null, this._value, value);

              function cback(accum, curr, currI, O) {
                  return accum + Math.round(corrFactor * curr);
              }

              this._value = _.reduce([this._value, value], cback, 0) / corrFactor;

              return this;
          },
          subtract: function(value) {
              var corrFactor = _.correctionFactor.call(null, this._value, value);

              function cback(accum, curr, currI, O) {
                  return accum - Math.round(corrFactor * curr);
              }

              this._value = _.reduce([value], cback, Math.round(this._value * corrFactor)) / corrFactor;

              return this;
          },
          multiply: function(value) {
              function cback(accum, curr, currI, O) {
                  var corrFactor = _.correctionFactor(accum, curr);
                  return Math.round(accum * corrFactor) * Math.round(curr * corrFactor) / Math.round(corrFactor * corrFactor);
              }

              this._value = _.reduce([this._value, value], cback, 1);

              return this;
          },
          divide: function(value) {
              function cback(accum, curr, currI, O) {
                  var corrFactor = _.correctionFactor(accum, curr);
                  return Math.round(accum * corrFactor) / Math.round(curr * corrFactor);
              }

              this._value = _.reduce([this._value, value], cback);

              return this;
          },
          difference: function(value) {
              return Math.abs(numeral(this._value).subtract(value).value());
          }
      };

      /************************************
          Default Locale && Format
      ************************************/

      numeral.register('locale', 'en', {
          delimiters: {
              thousands: ',',
              decimal: '.'
          },
          abbreviations: {
              thousand: 'k',
              million: 'm',
              billion: 'b',
              trillion: 't'
          },
          ordinal: function(number) {
              var b = number % 10;
              return (~~(number % 100 / 10) === 1) ? 'th' :
                  (b === 1) ? 'st' :
                  (b === 2) ? 'nd' :
                  (b === 3) ? 'rd' : 'th';
          },
          currency: {
              symbol: '$'
          }
      });

      

  (function() {
          numeral.register('format', 'bps', {
              regexps: {
                  format: /(BPS)/,
                  unformat: /(BPS)/
              },
              format: function(value, format, roundingFunction) {
                  var space = numeral._.includes(format, ' BPS') ? ' ' : '',
                      output;

                  value = value * 10000;

                  // check for space before BPS
                  format = format.replace(/\s?BPS/, '');

                  output = numeral._.numberToFormat(value, format, roundingFunction);

                  if (numeral._.includes(output, ')')) {
                      output = output.split('');

                      output.splice(-1, 0, space + 'BPS');

                      output = output.join('');
                  } else {
                      output = output + space + 'BPS';
                  }

                  return output;
              },
              unformat: function(string) {
                  return +(numeral._.stringToNumber(string) * 0.0001).toFixed(15);
              }
          });
  })();


  (function() {
          var decimal = {
              base: 1000,
              suffixes: ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB']
          },
          binary = {
              base: 1024,
              suffixes: ['B', 'KiB', 'MiB', 'GiB', 'TiB', 'PiB', 'EiB', 'ZiB', 'YiB']
          };

      var allSuffixes =  decimal.suffixes.concat(binary.suffixes.filter(function (item) {
              return decimal.suffixes.indexOf(item) < 0;
          }));
          var unformatRegex = allSuffixes.join('|');
          // Allow support for BPS (http://www.investopedia.com/terms/b/basispoint.asp)
          unformatRegex = '(' + unformatRegex.replace('B', 'B(?!PS)') + ')';

      numeral.register('format', 'bytes', {
          regexps: {
              format: /([0\s]i?b)/,
              unformat: new RegExp(unformatRegex)
          },
          format: function(value, format, roundingFunction) {
              var output,
                  bytes = numeral._.includes(format, 'ib') ? binary : decimal,
                  suffix = numeral._.includes(format, ' b') || numeral._.includes(format, ' ib') ? ' ' : '',
                  power,
                  min,
                  max;

              // check for space before
              format = format.replace(/\s?i?b/, '');

              for (power = 0; power <= bytes.suffixes.length; power++) {
                  min = Math.pow(bytes.base, power);
                  max = Math.pow(bytes.base, power + 1);

                  if (value === null || value === 0 || value >= min && value < max) {
                      suffix += bytes.suffixes[power];

                      if (min > 0) {
                          value = value / min;
                      }

                      break;
                  }
              }

              output = numeral._.numberToFormat(value, format, roundingFunction);

              return output + suffix;
          },
          unformat: function(string) {
              var value = numeral._.stringToNumber(string),
                  power,
                  bytesMultiplier;

              if (value) {
                  for (power = decimal.suffixes.length - 1; power >= 0; power--) {
                      if (numeral._.includes(string, decimal.suffixes[power])) {
                          bytesMultiplier = Math.pow(decimal.base, power);

                          break;
                      }

                      if (numeral._.includes(string, binary.suffixes[power])) {
                          bytesMultiplier = Math.pow(binary.base, power);

                          break;
                      }
                  }

                  value *= (bytesMultiplier || 1);
              }

              return value;
          }
      });
  })();


  (function() {
          numeral.register('format', 'currency', {
          regexps: {
              format: /(\$)/
          },
          format: function(value, format, roundingFunction) {
              var locale = numeral.locales[numeral.options.currentLocale],
                  symbols = {
                      before: format.match(/^([\+|\-|\(|\s|\$]*)/)[0],
                      after: format.match(/([\+|\-|\)|\s|\$]*)$/)[0]
                  },
                  output,
                  symbol,
                  i;

              // strip format of spaces and $
              format = format.replace(/\s?\$\s?/, '');

              // format the number
              output = numeral._.numberToFormat(value, format, roundingFunction);

              // update the before and after based on value
              if (value >= 0) {
                  symbols.before = symbols.before.replace(/[\-\(]/, '');
                  symbols.after = symbols.after.replace(/[\-\)]/, '');
              } else if (value < 0 && (!numeral._.includes(symbols.before, '-') && !numeral._.includes(symbols.before, '('))) {
                  symbols.before = '-' + symbols.before;
              }

              // loop through each before symbol
              for (i = 0; i < symbols.before.length; i++) {
                  symbol = symbols.before[i];

                  switch (symbol) {
                      case '$':
                          output = numeral._.insert(output, locale.currency.symbol, i);
                          break;
                      case ' ':
                          output = numeral._.insert(output, ' ', i + locale.currency.symbol.length - 1);
                          break;
                  }
              }

              // loop through each after symbol
              for (i = symbols.after.length - 1; i >= 0; i--) {
                  symbol = symbols.after[i];

                  switch (symbol) {
                      case '$':
                          output = i === symbols.after.length - 1 ? output + locale.currency.symbol : numeral._.insert(output, locale.currency.symbol, -(symbols.after.length - (1 + i)));
                          break;
                      case ' ':
                          output = i === symbols.after.length - 1 ? output + ' ' : numeral._.insert(output, ' ', -(symbols.after.length - (1 + i) + locale.currency.symbol.length - 1));
                          break;
                  }
              }


              return output;
          }
      });
  })();


  (function() {
          numeral.register('format', 'exponential', {
          regexps: {
              format: /(e\+|e-)/,
              unformat: /(e\+|e-)/
          },
          format: function(value, format, roundingFunction) {
              var output,
                  exponential = typeof value === 'number' && !numeral._.isNaN(value) ? value.toExponential() : '0e+0',
                  parts = exponential.split('e');

              format = format.replace(/e[\+|\-]{1}0/, '');

              output = numeral._.numberToFormat(Number(parts[0]), format, roundingFunction);

              return output + 'e' + parts[1];
          },
          unformat: function(string) {
              var parts = numeral._.includes(string, 'e+') ? string.split('e+') : string.split('e-'),
                  value = Number(parts[0]),
                  power = Number(parts[1]);

              power = numeral._.includes(string, 'e-') ? power *= -1 : power;

              function cback(accum, curr, currI, O) {
                  var corrFactor = numeral._.correctionFactor(accum, curr),
                      num = (accum * corrFactor) * (curr * corrFactor) / (corrFactor * corrFactor);
                  return num;
              }

              return numeral._.reduce([value, Math.pow(10, power)], cback, 1);
          }
      });
  })();


  (function() {
          numeral.register('format', 'ordinal', {
          regexps: {
              format: /(o)/
          },
          format: function(value, format, roundingFunction) {
              var locale = numeral.locales[numeral.options.currentLocale],
                  output,
                  ordinal = numeral._.includes(format, ' o') ? ' ' : '';

              // check for space before
              format = format.replace(/\s?o/, '');

              ordinal += locale.ordinal(value);

              output = numeral._.numberToFormat(value, format, roundingFunction);

              return output + ordinal;
          }
      });
  })();


  (function() {
          numeral.register('format', 'percentage', {
          regexps: {
              format: /(%)/,
              unformat: /(%)/
          },
          format: function(value, format, roundingFunction) {
              var space = numeral._.includes(format, ' %') ? ' ' : '',
                  output;

              if (numeral.options.scalePercentBy100) {
                  value = value * 100;
              }

              // check for space before %
              format = format.replace(/\s?\%/, '');

              output = numeral._.numberToFormat(value, format, roundingFunction);

              if (numeral._.includes(output, ')')) {
                  output = output.split('');

                  output.splice(-1, 0, space + '%');

                  output = output.join('');
              } else {
                  output = output + space + '%';
              }

              return output;
          },
          unformat: function(string) {
              var number = numeral._.stringToNumber(string);
              if (numeral.options.scalePercentBy100) {
                  return number * 0.01;
              }
              return number;
          }
      });
  })();


  (function() {
          numeral.register('format', 'time', {
          regexps: {
              format: /(:)/,
              unformat: /(:)/
          },
          format: function(value, format, roundingFunction) {
              var hours = Math.floor(value / 60 / 60),
                  minutes = Math.floor((value - (hours * 60 * 60)) / 60),
                  seconds = Math.round(value - (hours * 60 * 60) - (minutes * 60));

              return hours + ':' + (minutes < 10 ? '0' + minutes : minutes) + ':' + (seconds < 10 ? '0' + seconds : seconds);
          },
          unformat: function(string) {
              var timeArray = string.split(':'),
                  seconds = 0;

              // turn hours and minutes into seconds and add them all up
              if (timeArray.length === 3) {
                  // hours
                  seconds = seconds + (Number(timeArray[0]) * 60 * 60);
                  // minutes
                  seconds = seconds + (Number(timeArray[1]) * 60);
                  // seconds
                  seconds = seconds + Number(timeArray[2]);
              } else if (timeArray.length === 2) {
                  // minutes
                  seconds = seconds + (Number(timeArray[0]) * 60);
                  // seconds
                  seconds = seconds + Number(timeArray[1]);
              }
              return Number(seconds);
          }
      });
  })();

  return numeral;
  }));


/***/ },
/* 1269 */
/***/ function(module, exports, __webpack_require__) {

  /* WEBPACK VAR INJECTION */(function(module) {//! moment.js
  //! version : 2.17.1
  //! authors : Tim Wood, Iskren Chernev, Moment.js contributors
  //! license : MIT
  //! momentjs.com

  ;(function (global, factory) {
       true ? module.exports = factory() :
      typeof define === 'function' && define.amd ? define(factory) :
      global.moment = factory()
  }(this, (function () { 'use strict';

  var hookCallback;

  function hooks () {
      return hookCallback.apply(null, arguments);
  }

  // This is done to register the method called with moment()
  // without creating circular dependencies.
  function setHookCallback (callback) {
      hookCallback = callback;
  }

  function isArray(input) {
      return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';
  }

  function isObject(input) {
      // IE8 will treat undefined and null as object if it wasn't for
      // input != null
      return input != null && Object.prototype.toString.call(input) === '[object Object]';
  }

  function isObjectEmpty(obj) {
      var k;
      for (k in obj) {
          // even if its not own property I'd still call it non-empty
          return false;
      }
      return true;
  }

  function isNumber(input) {
      return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]';
  }

  function isDate(input) {
      return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';
  }

  function map(arr, fn) {
      var res = [], i;
      for (i = 0; i < arr.length; ++i) {
          res.push(fn(arr[i], i));
      }
      return res;
  }

  function hasOwnProp(a, b) {
      return Object.prototype.hasOwnProperty.call(a, b);
  }

  function extend(a, b) {
      for (var i in b) {
          if (hasOwnProp(b, i)) {
              a[i] = b[i];
          }
      }

      if (hasOwnProp(b, 'toString')) {
          a.toString = b.toString;
      }

      if (hasOwnProp(b, 'valueOf')) {
          a.valueOf = b.valueOf;
      }

      return a;
  }

  function createUTC (input, format, locale, strict) {
      return createLocalOrUTC(input, format, locale, strict, true).utc();
  }

  function defaultParsingFlags() {
      // We need to deep clone this object.
      return {
          empty           : false,
          unusedTokens    : [],
          unusedInput     : [],
          overflow        : -2,
          charsLeftOver   : 0,
          nullInput       : false,
          invalidMonth    : null,
          invalidFormat   : false,
          userInvalidated : false,
          iso             : false,
          parsedDateParts : [],
          meridiem        : null
      };
  }

  function getParsingFlags(m) {
      if (m._pf == null) {
          m._pf = defaultParsingFlags();
      }
      return m._pf;
  }

  var some;
  if (Array.prototype.some) {
      some = Array.prototype.some;
  } else {
      some = function (fun) {
          var t = Object(this);
          var len = t.length >>> 0;

          for (var i = 0; i < len; i++) {
              if (i in t && fun.call(this, t[i], i, t)) {
                  return true;
              }
          }

          return false;
      };
  }

  var some$1 = some;

  function isValid(m) {
      if (m._isValid == null) {
          var flags = getParsingFlags(m);
          var parsedParts = some$1.call(flags.parsedDateParts, function (i) {
              return i != null;
          });
          var isNowValid = !isNaN(m._d.getTime()) &&
              flags.overflow < 0 &&
              !flags.empty &&
              !flags.invalidMonth &&
              !flags.invalidWeekday &&
              !flags.nullInput &&
              !flags.invalidFormat &&
              !flags.userInvalidated &&
              (!flags.meridiem || (flags.meridiem && parsedParts));

          if (m._strict) {
              isNowValid = isNowValid &&
                  flags.charsLeftOver === 0 &&
                  flags.unusedTokens.length === 0 &&
                  flags.bigHour === undefined;
          }

          if (Object.isFrozen == null || !Object.isFrozen(m)) {
              m._isValid = isNowValid;
          }
          else {
              return isNowValid;
          }
      }
      return m._isValid;
  }

  function createInvalid (flags) {
      var m = createUTC(NaN);
      if (flags != null) {
          extend(getParsingFlags(m), flags);
      }
      else {
          getParsingFlags(m).userInvalidated = true;
      }

      return m;
  }

  function isUndefined(input) {
      return input === void 0;
  }

  // Plugins that add properties should also add the key here (null value),
  // so we can properly clone ourselves.
  var momentProperties = hooks.momentProperties = [];

  function copyConfig(to, from) {
      var i, prop, val;

      if (!isUndefined(from._isAMomentObject)) {
          to._isAMomentObject = from._isAMomentObject;
      }
      if (!isUndefined(from._i)) {
          to._i = from._i;
      }
      if (!isUndefined(from._f)) {
          to._f = from._f;
      }
      if (!isUndefined(from._l)) {
          to._l = from._l;
      }
      if (!isUndefined(from._strict)) {
          to._strict = from._strict;
      }
      if (!isUndefined(from._tzm)) {
          to._tzm = from._tzm;
      }
      if (!isUndefined(from._isUTC)) {
          to._isUTC = from._isUTC;
      }
      if (!isUndefined(from._offset)) {
          to._offset = from._offset;
      }
      if (!isUndefined(from._pf)) {
          to._pf = getParsingFlags(from);
      }
      if (!isUndefined(from._locale)) {
          to._locale = from._locale;
      }

      if (momentProperties.length > 0) {
          for (i in momentProperties) {
              prop = momentProperties[i];
              val = from[prop];
              if (!isUndefined(val)) {
                  to[prop] = val;
              }
          }
      }

      return to;
  }

  var updateInProgress = false;

  // Moment prototype object
  function Moment(config) {
      copyConfig(this, config);
      this._d = new Date(config._d != null ? config._d.getTime() : NaN);
      if (!this.isValid()) {
          this._d = new Date(NaN);
      }
      // Prevent infinite loop in case updateOffset creates new moment
      // objects.
      if (updateInProgress === false) {
          updateInProgress = true;
          hooks.updateOffset(this);
          updateInProgress = false;
      }
  }

  function isMoment (obj) {
      return obj instanceof Moment || (obj != null && obj._isAMomentObject != null);
  }

  function absFloor (number) {
      if (number < 0) {
          // -0 -> 0
          return Math.ceil(number) || 0;
      } else {
          return Math.floor(number);
      }
  }

  function toInt(argumentForCoercion) {
      var coercedNumber = +argumentForCoercion,
          value = 0;

      if (coercedNumber !== 0 && isFinite(coercedNumber)) {
          value = absFloor(coercedNumber);
      }

      return value;
  }

  // compare two arrays, return the number of differences
  function compareArrays(array1, array2, dontConvert) {
      var len = Math.min(array1.length, array2.length),
          lengthDiff = Math.abs(array1.length - array2.length),
          diffs = 0,
          i;
      for (i = 0; i < len; i++) {
          if ((dontConvert && array1[i] !== array2[i]) ||
              (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {
              diffs++;
          }
      }
      return diffs + lengthDiff;
  }

  function warn(msg) {
      if (hooks.suppressDeprecationWarnings === false &&
              (typeof console !==  'undefined') && console.warn) {
          console.warn('Deprecation warning: ' + msg);
      }
  }

  function deprecate(msg, fn) {
      var firstTime = true;

      return extend(function () {
          if (hooks.deprecationHandler != null) {
              hooks.deprecationHandler(null, msg);
          }
          if (firstTime) {
              var args = [];
              var arg;
              for (var i = 0; i < arguments.length; i++) {
                  arg = '';
                  if (typeof arguments[i] === 'object') {
                      arg += '\n[' + i + '] ';
                      for (var key in arguments[0]) {
                          arg += key + ': ' + arguments[0][key] + ', ';
                      }
                      arg = arg.slice(0, -2); // Remove trailing comma and space
                  } else {
                      arg = arguments[i];
                  }
                  args.push(arg);
              }
              warn(msg + '\nArguments: ' + Array.prototype.slice.call(args).join('') + '\n' + (new Error()).stack);
              firstTime = false;
          }
          return fn.apply(this, arguments);
      }, fn);
  }

  var deprecations = {};

  function deprecateSimple(name, msg) {
      if (hooks.deprecationHandler != null) {
          hooks.deprecationHandler(name, msg);
      }
      if (!deprecations[name]) {
          warn(msg);
          deprecations[name] = true;
      }
  }

  hooks.suppressDeprecationWarnings = false;
  hooks.deprecationHandler = null;

  function isFunction(input) {
      return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';
  }

  function set (config) {
      var prop, i;
      for (i in config) {
          prop = config[i];
          if (isFunction(prop)) {
              this[i] = prop;
          } else {
              this['_' + i] = prop;
          }
      }
      this._config = config;
      // Lenient ordinal parsing accepts just a number in addition to
      // number + (possibly) stuff coming from _ordinalParseLenient.
      this._ordinalParseLenient = new RegExp(this._ordinalParse.source + '|' + (/\d{1,2}/).source);
  }

  function mergeConfigs(parentConfig, childConfig) {
      var res = extend({}, parentConfig), prop;
      for (prop in childConfig) {
          if (hasOwnProp(childConfig, prop)) {
              if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {
                  res[prop] = {};
                  extend(res[prop], parentConfig[prop]);
                  extend(res[prop], childConfig[prop]);
              } else if (childConfig[prop] != null) {
                  res[prop] = childConfig[prop];
              } else {
                  delete res[prop];
              }
          }
      }
      for (prop in parentConfig) {
          if (hasOwnProp(parentConfig, prop) &&
                  !hasOwnProp(childConfig, prop) &&
                  isObject(parentConfig[prop])) {
              // make sure changes to properties don't modify parent config
              res[prop] = extend({}, res[prop]);
          }
      }
      return res;
  }

  function Locale(config) {
      if (config != null) {
          this.set(config);
      }
  }

  var keys;

  if (Object.keys) {
      keys = Object.keys;
  } else {
      keys = function (obj) {
          var i, res = [];
          for (i in obj) {
              if (hasOwnProp(obj, i)) {
                  res.push(i);
              }
          }
          return res;
      };
  }

  var keys$1 = keys;

  var defaultCalendar = {
      sameDay : '[Today at] LT',
      nextDay : '[Tomorrow at] LT',
      nextWeek : 'dddd [at] LT',
      lastDay : '[Yesterday at] LT',
      lastWeek : '[Last] dddd [at] LT',
      sameElse : 'L'
  };

  function calendar (key, mom, now) {
      var output = this._calendar[key] || this._calendar['sameElse'];
      return isFunction(output) ? output.call(mom, now) : output;
  }

  var defaultLongDateFormat = {
      LTS  : 'h:mm:ss A',
      LT   : 'h:mm A',
      L    : 'MM/DD/YYYY',
      LL   : 'MMMM D, YYYY',
      LLL  : 'MMMM D, YYYY h:mm A',
      LLLL : 'dddd, MMMM D, YYYY h:mm A'
  };

  function longDateFormat (key) {
      var format = this._longDateFormat[key],
          formatUpper = this._longDateFormat[key.toUpperCase()];

      if (format || !formatUpper) {
          return format;
      }

      this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {
          return val.slice(1);
      });

      return this._longDateFormat[key];
  }

  var defaultInvalidDate = 'Invalid date';

  function invalidDate () {
      return this._invalidDate;
  }

  var defaultOrdinal = '%d';
  var defaultOrdinalParse = /\d{1,2}/;

  function ordinal (number) {
      return this._ordinal.replace('%d', number);
  }

  var defaultRelativeTime = {
      future : 'in %s',
      past   : '%s ago',
      s  : 'a few seconds',
      m  : 'a minute',
      mm : '%d minutes',
      h  : 'an hour',
      hh : '%d hours',
      d  : 'a day',
      dd : '%d days',
      M  : 'a month',
      MM : '%d months',
      y  : 'a year',
      yy : '%d years'
  };

  function relativeTime (number, withoutSuffix, string, isFuture) {
      var output = this._relativeTime[string];
      return (isFunction(output)) ?
          output(number, withoutSuffix, string, isFuture) :
          output.replace(/%d/i, number);
  }

  function pastFuture (diff, output) {
      var format = this._relativeTime[diff > 0 ? 'future' : 'past'];
      return isFunction(format) ? format(output) : format.replace(/%s/i, output);
  }

  var aliases = {};

  function addUnitAlias (unit, shorthand) {
      var lowerCase = unit.toLowerCase();
      aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;
  }

  function normalizeUnits(units) {
      return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;
  }

  function normalizeObjectUnits(inputObject) {
      var normalizedInput = {},
          normalizedProp,
          prop;

      for (prop in inputObject) {
          if (hasOwnProp(inputObject, prop)) {
              normalizedProp = normalizeUnits(prop);
              if (normalizedProp) {
                  normalizedInput[normalizedProp] = inputObject[prop];
              }
          }
      }

      return normalizedInput;
  }

  var priorities = {};

  function addUnitPriority(unit, priority) {
      priorities[unit] = priority;
  }

  function getPrioritizedUnits(unitsObj) {
      var units = [];
      for (var u in unitsObj) {
          units.push({unit: u, priority: priorities[u]});
      }
      units.sort(function (a, b) {
          return a.priority - b.priority;
      });
      return units;
  }

  function makeGetSet (unit, keepTime) {
      return function (value) {
          if (value != null) {
              set$1(this, unit, value);
              hooks.updateOffset(this, keepTime);
              return this;
          } else {
              return get(this, unit);
          }
      };
  }

  function get (mom, unit) {
      return mom.isValid() ?
          mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;
  }

  function set$1 (mom, unit, value) {
      if (mom.isValid()) {
          mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);
      }
  }

  // MOMENTS

  function stringGet (units) {
      units = normalizeUnits(units);
      if (isFunction(this[units])) {
          return this[units]();
      }
      return this;
  }


  function stringSet (units, value) {
      if (typeof units === 'object') {
          units = normalizeObjectUnits(units);
          var prioritized = getPrioritizedUnits(units);
          for (var i = 0; i < prioritized.length; i++) {
              this[prioritized[i].unit](units[prioritized[i].unit]);
          }
      } else {
          units = normalizeUnits(units);
          if (isFunction(this[units])) {
              return this[units](value);
          }
      }
      return this;
  }

  function zeroFill(number, targetLength, forceSign) {
      var absNumber = '' + Math.abs(number),
          zerosToFill = targetLength - absNumber.length,
          sign = number >= 0;
      return (sign ? (forceSign ? '+' : '') : '-') +
          Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;
  }

  var formattingTokens = /(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;

  var localFormattingTokens = /(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g;

  var formatFunctions = {};

  var formatTokenFunctions = {};

  // token:    'M'
  // padded:   ['MM', 2]
  // ordinal:  'Mo'
  // callback: function () { this.month() + 1 }
  function addFormatToken (token, padded, ordinal, callback) {
      var func = callback;
      if (typeof callback === 'string') {
          func = function () {
              return this[callback]();
          };
      }
      if (token) {
          formatTokenFunctions[token] = func;
      }
      if (padded) {
          formatTokenFunctions[padded[0]] = function () {
              return zeroFill(func.apply(this, arguments), padded[1], padded[2]);
          };
      }
      if (ordinal) {
          formatTokenFunctions[ordinal] = function () {
              return this.localeData().ordinal(func.apply(this, arguments), token);
          };
      }
  }

  function removeFormattingTokens(input) {
      if (input.match(/\[[\s\S]/)) {
          return input.replace(/^\[|\]$/g, '');
      }
      return input.replace(/\\/g, '');
  }

  function makeFormatFunction(format) {
      var array = format.match(formattingTokens), i, length;

      for (i = 0, length = array.length; i < length; i++) {
          if (formatTokenFunctions[array[i]]) {
              array[i] = formatTokenFunctions[array[i]];
          } else {
              array[i] = removeFormattingTokens(array[i]);
          }
      }

      return function (mom) {
          var output = '', i;
          for (i = 0; i < length; i++) {
              output += array[i] instanceof Function ? array[i].call(mom, format) : array[i];
          }
          return output;
      };
  }

  // format date using native date object
  function formatMoment(m, format) {
      if (!m.isValid()) {
          return m.localeData().invalidDate();
      }

      format = expandFormat(format, m.localeData());
      formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);

      return formatFunctions[format](m);
  }

  function expandFormat(format, locale) {
      var i = 5;

      function replaceLongDateFormatTokens(input) {
          return locale.longDateFormat(input) || input;
      }

      localFormattingTokens.lastIndex = 0;
      while (i >= 0 && localFormattingTokens.test(format)) {
          format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);
          localFormattingTokens.lastIndex = 0;
          i -= 1;
      }

      return format;
  }

  var match1         = /\d/;            //       0 - 9
  var match2         = /\d\d/;          //      00 - 99
  var match3         = /\d{3}/;         //     000 - 999
  var match4         = /\d{4}/;         //    0000 - 9999
  var match6         = /[+-]?\d{6}/;    // -999999 - 999999
  var match1to2      = /\d\d?/;         //       0 - 99
  var match3to4      = /\d\d\d\d?/;     //     999 - 9999
  var match5to6      = /\d\d\d\d\d\d?/; //   99999 - 999999
  var match1to3      = /\d{1,3}/;       //       0 - 999
  var match1to4      = /\d{1,4}/;       //       0 - 9999
  var match1to6      = /[+-]?\d{1,6}/;  // -999999 - 999999

  var matchUnsigned  = /\d+/;           //       0 - inf
  var matchSigned    = /[+-]?\d+/;      //    -inf - inf

  var matchOffset    = /Z|[+-]\d\d:?\d\d/gi; // +00:00 -00:00 +0000 -0000 or Z
  var matchShortOffset = /Z|[+-]\d\d(?::?\d\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z

  var matchTimestamp = /[+-]?\d+(\.\d{1,3})?/; // 123456789 123456789.123

  // any word (or two) characters or numbers including two/three word month in arabic.
  // includes scottish gaelic two word and hyphenated months
  var matchWord = /[0-9]*['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+|[\u0600-\u06FF\/]+(\s*?[\u0600-\u06FF]+){1,2}/i;


  var regexes = {};

  function addRegexToken (token, regex, strictRegex) {
      regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {
          return (isStrict && strictRegex) ? strictRegex : regex;
      };
  }

  function getParseRegexForToken (token, config) {
      if (!hasOwnProp(regexes, token)) {
          return new RegExp(unescapeFormat(token));
      }

      return regexes[token](config._strict, config._locale);
  }

  // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript
  function unescapeFormat(s) {
      return regexEscape(s.replace('\\', '').replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g, function (matched, p1, p2, p3, p4) {
          return p1 || p2 || p3 || p4;
      }));
  }

  function regexEscape(s) {
      return s.replace(/[-\/\\^$*+?.()|[\]{}]/g, '\\$&');
  }

  var tokens = {};

  function addParseToken (token, callback) {
      var i, func = callback;
      if (typeof token === 'string') {
          token = [token];
      }
      if (isNumber(callback)) {
          func = function (input, array) {
              array[callback] = toInt(input);
          };
      }
      for (i = 0; i < token.length; i++) {
          tokens[token[i]] = func;
      }
  }

  function addWeekParseToken (token, callback) {
      addParseToken(token, function (input, array, config, token) {
          config._w = config._w || {};
          callback(input, config._w, config, token);
      });
  }

  function addTimeToArrayFromToken(token, input, config) {
      if (input != null && hasOwnProp(tokens, token)) {
          tokens[token](input, config._a, config, token);
      }
  }

  var YEAR = 0;
  var MONTH = 1;
  var DATE = 2;
  var HOUR = 3;
  var MINUTE = 4;
  var SECOND = 5;
  var MILLISECOND = 6;
  var WEEK = 7;
  var WEEKDAY = 8;

  var indexOf;

  if (Array.prototype.indexOf) {
      indexOf = Array.prototype.indexOf;
  } else {
      indexOf = function (o) {
          // I know
          var i;
          for (i = 0; i < this.length; ++i) {
              if (this[i] === o) {
                  return i;
              }
          }
          return -1;
      };
  }

  var indexOf$1 = indexOf;

  function daysInMonth(year, month) {
      return new Date(Date.UTC(year, month + 1, 0)).getUTCDate();
  }

  // FORMATTING

  addFormatToken('M', ['MM', 2], 'Mo', function () {
      return this.month() + 1;
  });

  addFormatToken('MMM', 0, 0, function (format) {
      return this.localeData().monthsShort(this, format);
  });

  addFormatToken('MMMM', 0, 0, function (format) {
      return this.localeData().months(this, format);
  });

  // ALIASES

  addUnitAlias('month', 'M');

  // PRIORITY

  addUnitPriority('month', 8);

  // PARSING

  addRegexToken('M',    match1to2);
  addRegexToken('MM',   match1to2, match2);
  addRegexToken('MMM',  function (isStrict, locale) {
      return locale.monthsShortRegex(isStrict);
  });
  addRegexToken('MMMM', function (isStrict, locale) {
      return locale.monthsRegex(isStrict);
  });

  addParseToken(['M', 'MM'], function (input, array) {
      array[MONTH] = toInt(input) - 1;
  });

  addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {
      var month = config._locale.monthsParse(input, token, config._strict);
      // if we didn't find a month name, mark the date as invalid.
      if (month != null) {
          array[MONTH] = month;
      } else {
          getParsingFlags(config).invalidMonth = input;
      }
  });

  // LOCALES

  var MONTHS_IN_FORMAT = /D[oD]?(\[[^\[\]]*\]|\s)+MMMM?/;
  var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');
  function localeMonths (m, format) {
      if (!m) {
          return this._months;
      }
      return isArray(this._months) ? this._months[m.month()] :
          this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];
  }

  var defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');
  function localeMonthsShort (m, format) {
      if (!m) {
          return this._monthsShort;
      }
      return isArray(this._monthsShort) ? this._monthsShort[m.month()] :
          this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];
  }

  function handleStrictParse(monthName, format, strict) {
      var i, ii, mom, llc = monthName.toLocaleLowerCase();
      if (!this._monthsParse) {
          // this is not used
          this._monthsParse = [];
          this._longMonthsParse = [];
          this._shortMonthsParse = [];
          for (i = 0; i < 12; ++i) {
              mom = createUTC([2000, i]);
              this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();
              this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();
          }
      }

      if (strict) {
          if (format === 'MMM') {
              ii = indexOf$1.call(this._shortMonthsParse, llc);
              return ii !== -1 ? ii : null;
          } else {
              ii = indexOf$1.call(this._longMonthsParse, llc);
              return ii !== -1 ? ii : null;
          }
      } else {
          if (format === 'MMM') {
              ii = indexOf$1.call(this._shortMonthsParse, llc);
              if (ii !== -1) {
                  return ii;
              }
              ii = indexOf$1.call(this._longMonthsParse, llc);
              return ii !== -1 ? ii : null;
          } else {
              ii = indexOf$1.call(this._longMonthsParse, llc);
              if (ii !== -1) {
                  return ii;
              }
              ii = indexOf$1.call(this._shortMonthsParse, llc);
              return ii !== -1 ? ii : null;
          }
      }
  }

  function localeMonthsParse (monthName, format, strict) {
      var i, mom, regex;

      if (this._monthsParseExact) {
          return handleStrictParse.call(this, monthName, format, strict);
      }

      if (!this._monthsParse) {
          this._monthsParse = [];
          this._longMonthsParse = [];
          this._shortMonthsParse = [];
      }

      // TODO: add sorting
      // Sorting makes sure if one month (or abbr) is a prefix of another
      // see sorting in computeMonthsParse
      for (i = 0; i < 12; i++) {
          // make the regex if we don't have it already
          mom = createUTC([2000, i]);
          if (strict && !this._longMonthsParse[i]) {
              this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');
              this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');
          }
          if (!strict && !this._monthsParse[i]) {
              regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');
              this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');
          }
          // test the regex
          if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {
              return i;
          } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {
              return i;
          } else if (!strict && this._monthsParse[i].test(monthName)) {
              return i;
          }
      }
  }

  // MOMENTS

  function setMonth (mom, value) {
      var dayOfMonth;

      if (!mom.isValid()) {
          // No op
          return mom;
      }

      if (typeof value === 'string') {
          if (/^\d+$/.test(value)) {
              value = toInt(value);
          } else {
              value = mom.localeData().monthsParse(value);
              // TODO: Another silent failure?
              if (!isNumber(value)) {
                  return mom;
              }
          }
      }

      dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));
      mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);
      return mom;
  }

  function getSetMonth (value) {
      if (value != null) {
          setMonth(this, value);
          hooks.updateOffset(this, true);
          return this;
      } else {
          return get(this, 'Month');
      }
  }

  function getDaysInMonth () {
      return daysInMonth(this.year(), this.month());
  }

  var defaultMonthsShortRegex = matchWord;
  function monthsShortRegex (isStrict) {
      if (this._monthsParseExact) {
          if (!hasOwnProp(this, '_monthsRegex')) {
              computeMonthsParse.call(this);
          }
          if (isStrict) {
              return this._monthsShortStrictRegex;
          } else {
              return this._monthsShortRegex;
          }
      } else {
          if (!hasOwnProp(this, '_monthsShortRegex')) {
              this._monthsShortRegex = defaultMonthsShortRegex;
          }
          return this._monthsShortStrictRegex && isStrict ?
              this._monthsShortStrictRegex : this._monthsShortRegex;
      }
  }

  var defaultMonthsRegex = matchWord;
  function monthsRegex (isStrict) {
      if (this._monthsParseExact) {
          if (!hasOwnProp(this, '_monthsRegex')) {
              computeMonthsParse.call(this);
          }
          if (isStrict) {
              return this._monthsStrictRegex;
          } else {
              return this._monthsRegex;
          }
      } else {
          if (!hasOwnProp(this, '_monthsRegex')) {
              this._monthsRegex = defaultMonthsRegex;
          }
          return this._monthsStrictRegex && isStrict ?
              this._monthsStrictRegex : this._monthsRegex;
      }
  }

  function computeMonthsParse () {
      function cmpLenRev(a, b) {
          return b.length - a.length;
      }

      var shortPieces = [], longPieces = [], mixedPieces = [],
          i, mom;
      for (i = 0; i < 12; i++) {
          // make the regex if we don't have it already
          mom = createUTC([2000, i]);
          shortPieces.push(this.monthsShort(mom, ''));
          longPieces.push(this.months(mom, ''));
          mixedPieces.push(this.months(mom, ''));
          mixedPieces.push(this.monthsShort(mom, ''));
      }
      // Sorting makes sure if one month (or abbr) is a prefix of another it
      // will match the longer piece.
      shortPieces.sort(cmpLenRev);
      longPieces.sort(cmpLenRev);
      mixedPieces.sort(cmpLenRev);
      for (i = 0; i < 12; i++) {
          shortPieces[i] = regexEscape(shortPieces[i]);
          longPieces[i] = regexEscape(longPieces[i]);
      }
      for (i = 0; i < 24; i++) {
          mixedPieces[i] = regexEscape(mixedPieces[i]);
      }

      this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');
      this._monthsShortRegex = this._monthsRegex;
      this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');
      this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');
  }

  // FORMATTING

  addFormatToken('Y', 0, 0, function () {
      var y = this.year();
      return y <= 9999 ? '' + y : '+' + y;
  });

  addFormatToken(0, ['YY', 2], 0, function () {
      return this.year() % 100;
  });

  addFormatToken(0, ['YYYY',   4],       0, 'year');
  addFormatToken(0, ['YYYYY',  5],       0, 'year');
  addFormatToken(0, ['YYYYYY', 6, true], 0, 'year');

  // ALIASES

  addUnitAlias('year', 'y');

  // PRIORITIES

  addUnitPriority('year', 1);

  // PARSING

  addRegexToken('Y',      matchSigned);
  addRegexToken('YY',     match1to2, match2);
  addRegexToken('YYYY',   match1to4, match4);
  addRegexToken('YYYYY',  match1to6, match6);
  addRegexToken('YYYYYY', match1to6, match6);

  addParseToken(['YYYYY', 'YYYYYY'], YEAR);
  addParseToken('YYYY', function (input, array) {
      array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);
  });
  addParseToken('YY', function (input, array) {
      array[YEAR] = hooks.parseTwoDigitYear(input);
  });
  addParseToken('Y', function (input, array) {
      array[YEAR] = parseInt(input, 10);
  });

  // HELPERS

  function daysInYear(year) {
      return isLeapYear(year) ? 366 : 365;
  }

  function isLeapYear(year) {
      return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;
  }

  // HOOKS

  hooks.parseTwoDigitYear = function (input) {
      return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);
  };

  // MOMENTS

  var getSetYear = makeGetSet('FullYear', true);

  function getIsLeapYear () {
      return isLeapYear(this.year());
  }

  function createDate (y, m, d, h, M, s, ms) {
      //can't just apply() to create a date:
      //http://stackoverflow.com/questions/181348/instantiating-a-javascript-object-by-calling-prototype-constructor-apply
      var date = new Date(y, m, d, h, M, s, ms);

      //the date constructor remaps years 0-99 to 1900-1999
      if (y < 100 && y >= 0 && isFinite(date.getFullYear())) {
          date.setFullYear(y);
      }
      return date;
  }

  function createUTCDate (y) {
      var date = new Date(Date.UTC.apply(null, arguments));

      //the Date.UTC function remaps years 0-99 to 1900-1999
      if (y < 100 && y >= 0 && isFinite(date.getUTCFullYear())) {
          date.setUTCFullYear(y);
      }
      return date;
  }

  // start-of-first-week - start-of-year
  function firstWeekOffset(year, dow, doy) {
      var // first-week day -- which january is always in the first week (4 for iso, 1 for other)
          fwd = 7 + dow - doy,
          // first-week day local weekday -- which local weekday is fwd
          fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;

      return -fwdlw + fwd - 1;
  }

  //http://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday
  function dayOfYearFromWeeks(year, week, weekday, dow, doy) {
      var localWeekday = (7 + weekday - dow) % 7,
          weekOffset = firstWeekOffset(year, dow, doy),
          dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,
          resYear, resDayOfYear;

      if (dayOfYear <= 0) {
          resYear = year - 1;
          resDayOfYear = daysInYear(resYear) + dayOfYear;
      } else if (dayOfYear > daysInYear(year)) {
          resYear = year + 1;
          resDayOfYear = dayOfYear - daysInYear(year);
      } else {
          resYear = year;
          resDayOfYear = dayOfYear;
      }

      return {
          year: resYear,
          dayOfYear: resDayOfYear
      };
  }

  function weekOfYear(mom, dow, doy) {
      var weekOffset = firstWeekOffset(mom.year(), dow, doy),
          week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,
          resWeek, resYear;

      if (week < 1) {
          resYear = mom.year() - 1;
          resWeek = week + weeksInYear(resYear, dow, doy);
      } else if (week > weeksInYear(mom.year(), dow, doy)) {
          resWeek = week - weeksInYear(mom.year(), dow, doy);
          resYear = mom.year() + 1;
      } else {
          resYear = mom.year();
          resWeek = week;
      }

      return {
          week: resWeek,
          year: resYear
      };
  }

  function weeksInYear(year, dow, doy) {
      var weekOffset = firstWeekOffset(year, dow, doy),
          weekOffsetNext = firstWeekOffset(year + 1, dow, doy);
      return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;
  }

  // FORMATTING

  addFormatToken('w', ['ww', 2], 'wo', 'week');
  addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');

  // ALIASES

  addUnitAlias('week', 'w');
  addUnitAlias('isoWeek', 'W');

  // PRIORITIES

  addUnitPriority('week', 5);
  addUnitPriority('isoWeek', 5);

  // PARSING

  addRegexToken('w',  match1to2);
  addRegexToken('ww', match1to2, match2);
  addRegexToken('W',  match1to2);
  addRegexToken('WW', match1to2, match2);

  addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {
      week[token.substr(0, 1)] = toInt(input);
  });

  // HELPERS

  // LOCALES

  function localeWeek (mom) {
      return weekOfYear(mom, this._week.dow, this._week.doy).week;
  }

  var defaultLocaleWeek = {
      dow : 0, // Sunday is the first day of the week.
      doy : 6  // The week that contains Jan 1st is the first week of the year.
  };

  function localeFirstDayOfWeek () {
      return this._week.dow;
  }

  function localeFirstDayOfYear () {
      return this._week.doy;
  }

  // MOMENTS

  function getSetWeek (input) {
      var week = this.localeData().week(this);
      return input == null ? week : this.add((input - week) * 7, 'd');
  }

  function getSetISOWeek (input) {
      var week = weekOfYear(this, 1, 4).week;
      return input == null ? week : this.add((input - week) * 7, 'd');
  }

  // FORMATTING

  addFormatToken('d', 0, 'do', 'day');

  addFormatToken('dd', 0, 0, function (format) {
      return this.localeData().weekdaysMin(this, format);
  });

  addFormatToken('ddd', 0, 0, function (format) {
      return this.localeData().weekdaysShort(this, format);
  });

  addFormatToken('dddd', 0, 0, function (format) {
      return this.localeData().weekdays(this, format);
  });

  addFormatToken('e', 0, 0, 'weekday');
  addFormatToken('E', 0, 0, 'isoWeekday');

  // ALIASES

  addUnitAlias('day', 'd');
  addUnitAlias('weekday', 'e');
  addUnitAlias('isoWeekday', 'E');

  // PRIORITY
  addUnitPriority('day', 11);
  addUnitPriority('weekday', 11);
  addUnitPriority('isoWeekday', 11);

  // PARSING

  addRegexToken('d',    match1to2);
  addRegexToken('e',    match1to2);
  addRegexToken('E',    match1to2);
  addRegexToken('dd',   function (isStrict, locale) {
      return locale.weekdaysMinRegex(isStrict);
  });
  addRegexToken('ddd',   function (isStrict, locale) {
      return locale.weekdaysShortRegex(isStrict);
  });
  addRegexToken('dddd',   function (isStrict, locale) {
      return locale.weekdaysRegex(isStrict);
  });

  addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {
      var weekday = config._locale.weekdaysParse(input, token, config._strict);
      // if we didn't get a weekday name, mark the date as invalid
      if (weekday != null) {
          week.d = weekday;
      } else {
          getParsingFlags(config).invalidWeekday = input;
      }
  });

  addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {
      week[token] = toInt(input);
  });

  // HELPERS

  function parseWeekday(input, locale) {
      if (typeof input !== 'string') {
          return input;
      }

      if (!isNaN(input)) {
          return parseInt(input, 10);
      }

      input = locale.weekdaysParse(input);
      if (typeof input === 'number') {
          return input;
      }

      return null;
  }

  function parseIsoWeekday(input, locale) {
      if (typeof input === 'string') {
          return locale.weekdaysParse(input) % 7 || 7;
      }
      return isNaN(input) ? null : input;
  }

  // LOCALES

  var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');
  function localeWeekdays (m, format) {
      if (!m) {
          return this._weekdays;
      }
      return isArray(this._weekdays) ? this._weekdays[m.day()] :
          this._weekdays[this._weekdays.isFormat.test(format) ? 'format' : 'standalone'][m.day()];
  }

  var defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');
  function localeWeekdaysShort (m) {
      return (m) ? this._weekdaysShort[m.day()] : this._weekdaysShort;
  }

  var defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');
  function localeWeekdaysMin (m) {
      return (m) ? this._weekdaysMin[m.day()] : this._weekdaysMin;
  }

  function handleStrictParse$1(weekdayName, format, strict) {
      var i, ii, mom, llc = weekdayName.toLocaleLowerCase();
      if (!this._weekdaysParse) {
          this._weekdaysParse = [];
          this._shortWeekdaysParse = [];
          this._minWeekdaysParse = [];

          for (i = 0; i < 7; ++i) {
              mom = createUTC([2000, 1]).day(i);
              this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();
              this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();
              this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();
          }
      }

      if (strict) {
          if (format === 'dddd') {
              ii = indexOf$1.call(this._weekdaysParse, llc);
              return ii !== -1 ? ii : null;
          } else if (format === 'ddd') {
              ii = indexOf$1.call(this._shortWeekdaysParse, llc);
              return ii !== -1 ? ii : null;
          } else {
              ii = indexOf$1.call(this._minWeekdaysParse, llc);
              return ii !== -1 ? ii : null;
          }
      } else {
          if (format === 'dddd') {
              ii = indexOf$1.call(this._weekdaysParse, llc);
              if (ii !== -1) {
                  return ii;
              }
              ii = indexOf$1.call(this._shortWeekdaysParse, llc);
              if (ii !== -1) {
                  return ii;
              }
              ii = indexOf$1.call(this._minWeekdaysParse, llc);
              return ii !== -1 ? ii : null;
          } else if (format === 'ddd') {
              ii = indexOf$1.call(this._shortWeekdaysParse, llc);
              if (ii !== -1) {
                  return ii;
              }
              ii = indexOf$1.call(this._weekdaysParse, llc);
              if (ii !== -1) {
                  return ii;
              }
              ii = indexOf$1.call(this._minWeekdaysParse, llc);
              return ii !== -1 ? ii : null;
          } else {
              ii = indexOf$1.call(this._minWeekdaysParse, llc);
              if (ii !== -1) {
                  return ii;
              }
              ii = indexOf$1.call(this._weekdaysParse, llc);
              if (ii !== -1) {
                  return ii;
              }
              ii = indexOf$1.call(this._shortWeekdaysParse, llc);
              return ii !== -1 ? ii : null;
          }
      }
  }

  function localeWeekdaysParse (weekdayName, format, strict) {
      var i, mom, regex;

      if (this._weekdaysParseExact) {
          return handleStrictParse$1.call(this, weekdayName, format, strict);
      }

      if (!this._weekdaysParse) {
          this._weekdaysParse = [];
          this._minWeekdaysParse = [];
          this._shortWeekdaysParse = [];
          this._fullWeekdaysParse = [];
      }

      for (i = 0; i < 7; i++) {
          // make the regex if we don't have it already

          mom = createUTC([2000, 1]).day(i);
          if (strict && !this._fullWeekdaysParse[i]) {
              this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\.?') + '$', 'i');
              this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\.?') + '$', 'i');
              this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\.?') + '$', 'i');
          }
          if (!this._weekdaysParse[i]) {
              regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');
              this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');
          }
          // test the regex
          if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {
              return i;
          } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {
              return i;
          } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {
              return i;
          } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {
              return i;
          }
      }
  }

  // MOMENTS

  function getSetDayOfWeek (input) {
      if (!this.isValid()) {
          return input != null ? this : NaN;
      }
      var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();
      if (input != null) {
          input = parseWeekday(input, this.localeData());
          return this.add(input - day, 'd');
      } else {
          return day;
      }
  }

  function getSetLocaleDayOfWeek (input) {
      if (!this.isValid()) {
          return input != null ? this : NaN;
      }
      var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;
      return input == null ? weekday : this.add(input - weekday, 'd');
  }

  function getSetISODayOfWeek (input) {
      if (!this.isValid()) {
          return input != null ? this : NaN;
      }

      // behaves the same as moment#day except
      // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)
      // as a setter, sunday should belong to the previous week.

      if (input != null) {
          var weekday = parseIsoWeekday(input, this.localeData());
          return this.day(this.day() % 7 ? weekday : weekday - 7);
      } else {
          return this.day() || 7;
      }
  }

  var defaultWeekdaysRegex = matchWord;
  function weekdaysRegex (isStrict) {
      if (this._weekdaysParseExact) {
          if (!hasOwnProp(this, '_weekdaysRegex')) {
              computeWeekdaysParse.call(this);
          }
          if (isStrict) {
              return this._weekdaysStrictRegex;
          } else {
              return this._weekdaysRegex;
          }
      } else {
          if (!hasOwnProp(this, '_weekdaysRegex')) {
              this._weekdaysRegex = defaultWeekdaysRegex;
          }
          return this._weekdaysStrictRegex && isStrict ?
              this._weekdaysStrictRegex : this._weekdaysRegex;
      }
  }

  var defaultWeekdaysShortRegex = matchWord;
  function weekdaysShortRegex (isStrict) {
      if (this._weekdaysParseExact) {
          if (!hasOwnProp(this, '_weekdaysRegex')) {
              computeWeekdaysParse.call(this);
          }
          if (isStrict) {
              return this._weekdaysShortStrictRegex;
          } else {
              return this._weekdaysShortRegex;
          }
      } else {
          if (!hasOwnProp(this, '_weekdaysShortRegex')) {
              this._weekdaysShortRegex = defaultWeekdaysShortRegex;
          }
          return this._weekdaysShortStrictRegex && isStrict ?
              this._weekdaysShortStrictRegex : this._weekdaysShortRegex;
      }
  }

  var defaultWeekdaysMinRegex = matchWord;
  function weekdaysMinRegex (isStrict) {
      if (this._weekdaysParseExact) {
          if (!hasOwnProp(this, '_weekdaysRegex')) {
              computeWeekdaysParse.call(this);
          }
          if (isStrict) {
              return this._weekdaysMinStrictRegex;
          } else {
              return this._weekdaysMinRegex;
          }
      } else {
          if (!hasOwnProp(this, '_weekdaysMinRegex')) {
              this._weekdaysMinRegex = defaultWeekdaysMinRegex;
          }
          return this._weekdaysMinStrictRegex && isStrict ?
              this._weekdaysMinStrictRegex : this._weekdaysMinRegex;
      }
  }


  function computeWeekdaysParse () {
      function cmpLenRev(a, b) {
          return b.length - a.length;
      }

      var minPieces = [], shortPieces = [], longPieces = [], mixedPieces = [],
          i, mom, minp, shortp, longp;
      for (i = 0; i < 7; i++) {
          // make the regex if we don't have it already
          mom = createUTC([2000, 1]).day(i);
          minp = this.weekdaysMin(mom, '');
          shortp = this.weekdaysShort(mom, '');
          longp = this.weekdays(mom, '');
          minPieces.push(minp);
          shortPieces.push(shortp);
          longPieces.push(longp);
          mixedPieces.push(minp);
          mixedPieces.push(shortp);
          mixedPieces.push(longp);
      }
      // Sorting makes sure if one weekday (or abbr) is a prefix of another it
      // will match the longer piece.
      minPieces.sort(cmpLenRev);
      shortPieces.sort(cmpLenRev);
      longPieces.sort(cmpLenRev);
      mixedPieces.sort(cmpLenRev);
      for (i = 0; i < 7; i++) {
          shortPieces[i] = regexEscape(shortPieces[i]);
          longPieces[i] = regexEscape(longPieces[i]);
          mixedPieces[i] = regexEscape(mixedPieces[i]);
      }

      this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');
      this._weekdaysShortRegex = this._weekdaysRegex;
      this._weekdaysMinRegex = this._weekdaysRegex;

      this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');
      this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');
      this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');
  }

  // FORMATTING

  function hFormat() {
      return this.hours() % 12 || 12;
  }

  function kFormat() {
      return this.hours() || 24;
  }

  addFormatToken('H', ['HH', 2], 0, 'hour');
  addFormatToken('h', ['hh', 2], 0, hFormat);
  addFormatToken('k', ['kk', 2], 0, kFormat);

  addFormatToken('hmm', 0, 0, function () {
      return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);
  });

  addFormatToken('hmmss', 0, 0, function () {
      return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) +
          zeroFill(this.seconds(), 2);
  });

  addFormatToken('Hmm', 0, 0, function () {
      return '' + this.hours() + zeroFill(this.minutes(), 2);
  });

  addFormatToken('Hmmss', 0, 0, function () {
      return '' + this.hours() + zeroFill(this.minutes(), 2) +
          zeroFill(this.seconds(), 2);
  });

  function meridiem (token, lowercase) {
      addFormatToken(token, 0, 0, function () {
          return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);
      });
  }

  meridiem('a', true);
  meridiem('A', false);

  // ALIASES

  addUnitAlias('hour', 'h');

  // PRIORITY
  addUnitPriority('hour', 13);

  // PARSING

  function matchMeridiem (isStrict, locale) {
      return locale._meridiemParse;
  }

  addRegexToken('a',  matchMeridiem);
  addRegexToken('A',  matchMeridiem);
  addRegexToken('H',  match1to2);
  addRegexToken('h',  match1to2);
  addRegexToken('HH', match1to2, match2);
  addRegexToken('hh', match1to2, match2);

  addRegexToken('hmm', match3to4);
  addRegexToken('hmmss', match5to6);
  addRegexToken('Hmm', match3to4);
  addRegexToken('Hmmss', match5to6);

  addParseToken(['H', 'HH'], HOUR);
  addParseToken(['a', 'A'], function (input, array, config) {
      config._isPm = config._locale.isPM(input);
      config._meridiem = input;
  });
  addParseToken(['h', 'hh'], function (input, array, config) {
      array[HOUR] = toInt(input);
      getParsingFlags(config).bigHour = true;
  });
  addParseToken('hmm', function (input, array, config) {
      var pos = input.length - 2;
      array[HOUR] = toInt(input.substr(0, pos));
      array[MINUTE] = toInt(input.substr(pos));
      getParsingFlags(config).bigHour = true;
  });
  addParseToken('hmmss', function (input, array, config) {
      var pos1 = input.length - 4;
      var pos2 = input.length - 2;
      array[HOUR] = toInt(input.substr(0, pos1));
      array[MINUTE] = toInt(input.substr(pos1, 2));
      array[SECOND] = toInt(input.substr(pos2));
      getParsingFlags(config).bigHour = true;
  });
  addParseToken('Hmm', function (input, array, config) {
      var pos = input.length - 2;
      array[HOUR] = toInt(input.substr(0, pos));
      array[MINUTE] = toInt(input.substr(pos));
  });
  addParseToken('Hmmss', function (input, array, config) {
      var pos1 = input.length - 4;
      var pos2 = input.length - 2;
      array[HOUR] = toInt(input.substr(0, pos1));
      array[MINUTE] = toInt(input.substr(pos1, 2));
      array[SECOND] = toInt(input.substr(pos2));
  });

  // LOCALES

  function localeIsPM (input) {
      // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays
      // Using charAt should be more compatible.
      return ((input + '').toLowerCase().charAt(0) === 'p');
  }

  var defaultLocaleMeridiemParse = /[ap]\.?m?\.?/i;
  function localeMeridiem (hours, minutes, isLower) {
      if (hours > 11) {
          return isLower ? 'pm' : 'PM';
      } else {
          return isLower ? 'am' : 'AM';
      }
  }


  // MOMENTS

  // Setting the hour should keep the time, because the user explicitly
  // specified which hour he wants. So trying to maintain the same hour (in
  // a new timezone) makes sense. Adding/subtracting hours does not follow
  // this rule.
  var getSetHour = makeGetSet('Hours', true);

  // months
  // week
  // weekdays
  // meridiem
  var baseConfig = {
      calendar: defaultCalendar,
      longDateFormat: defaultLongDateFormat,
      invalidDate: defaultInvalidDate,
      ordinal: defaultOrdinal,
      ordinalParse: defaultOrdinalParse,
      relativeTime: defaultRelativeTime,

      months: defaultLocaleMonths,
      monthsShort: defaultLocaleMonthsShort,

      week: defaultLocaleWeek,

      weekdays: defaultLocaleWeekdays,
      weekdaysMin: defaultLocaleWeekdaysMin,
      weekdaysShort: defaultLocaleWeekdaysShort,

      meridiemParse: defaultLocaleMeridiemParse
  };

  // internal storage for locale config files
  var locales = {};
  var localeFamilies = {};
  var globalLocale;

  function normalizeLocale(key) {
      return key ? key.toLowerCase().replace('_', '-') : key;
  }

  // pick the locale from the array
  // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each
  // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root
  function chooseLocale(names) {
      var i = 0, j, next, locale, split;

      while (i < names.length) {
          split = normalizeLocale(names[i]).split('-');
          j = split.length;
          next = normalizeLocale(names[i + 1]);
          next = next ? next.split('-') : null;
          while (j > 0) {
              locale = loadLocale(split.slice(0, j).join('-'));
              if (locale) {
                  return locale;
              }
              if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {
                  //the next array item is better than a shallower substring of this one
                  break;
              }
              j--;
          }
          i++;
      }
      return null;
  }

  function loadLocale(name) {
      var oldLocale = null;
      // TODO: Find a better way to register and load all the locales in Node
      if (!locales[name] && (typeof module !== 'undefined') &&
              module && module.exports) {
          try {
              oldLocale = globalLocale._abbr;
              __webpack_require__(1270)("./" + name);
              // because defineLocale currently also sets the global locale, we
              // want to undo that for lazy loaded locales
              getSetGlobalLocale(oldLocale);
          } catch (e) { }
      }
      return locales[name];
  }

  // This function will load locale and then set the global locale.  If
  // no arguments are passed in, it will simply return the current global
  // locale key.
  function getSetGlobalLocale (key, values) {
      var data;
      if (key) {
          if (isUndefined(values)) {
              data = getLocale(key);
          }
          else {
              data = defineLocale(key, values);
          }

          if (data) {
              // moment.duration._locale = moment._locale = data;
              globalLocale = data;
          }
      }

      return globalLocale._abbr;
  }

  function defineLocale (name, config) {
      if (config !== null) {
          var parentConfig = baseConfig;
          config.abbr = name;
          if (locales[name] != null) {
              deprecateSimple('defineLocaleOverride',
                      'use moment.updateLocale(localeName, config) to change ' +
                      'an existing locale. moment.defineLocale(localeName, ' +
                      'config) should only be used for creating a new locale ' +
                      'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');
              parentConfig = locales[name]._config;
          } else if (config.parentLocale != null) {
              if (locales[config.parentLocale] != null) {
                  parentConfig = locales[config.parentLocale]._config;
              } else {
                  if (!localeFamilies[config.parentLocale]) {
                      localeFamilies[config.parentLocale] = [];
                  }
                  localeFamilies[config.parentLocale].push({
                      name: name,
                      config: config
                  });
                  return null;
              }
          }
          locales[name] = new Locale(mergeConfigs(parentConfig, config));

          if (localeFamilies[name]) {
              localeFamilies[name].forEach(function (x) {
                  defineLocale(x.name, x.config);
              });
          }

          // backwards compat for now: also set the locale
          // make sure we set the locale AFTER all child locales have been
          // created, so we won't end up with the child locale set.
          getSetGlobalLocale(name);


          return locales[name];
      } else {
          // useful for testing
          delete locales[name];
          return null;
      }
  }

  function updateLocale(name, config) {
      if (config != null) {
          var locale, parentConfig = baseConfig;
          // MERGE
          if (locales[name] != null) {
              parentConfig = locales[name]._config;
          }
          config = mergeConfigs(parentConfig, config);
          locale = new Locale(config);
          locale.parentLocale = locales[name];
          locales[name] = locale;

          // backwards compat for now: also set the locale
          getSetGlobalLocale(name);
      } else {
          // pass null for config to unupdate, useful for tests
          if (locales[name] != null) {
              if (locales[name].parentLocale != null) {
                  locales[name] = locales[name].parentLocale;
              } else if (locales[name] != null) {
                  delete locales[name];
              }
          }
      }
      return locales[name];
  }

  // returns locale data
  function getLocale (key) {
      var locale;

      if (key && key._locale && key._locale._abbr) {
          key = key._locale._abbr;
      }

      if (!key) {
          return globalLocale;
      }

      if (!isArray(key)) {
          //short-circuit everything else
          locale = loadLocale(key);
          if (locale) {
              return locale;
          }
          key = [key];
      }

      return chooseLocale(key);
  }

  function listLocales() {
      return keys$1(locales);
  }

  function checkOverflow (m) {
      var overflow;
      var a = m._a;

      if (a && getParsingFlags(m).overflow === -2) {
          overflow =
              a[MONTH]       < 0 || a[MONTH]       > 11  ? MONTH :
              a[DATE]        < 1 || a[DATE]        > daysInMonth(a[YEAR], a[MONTH]) ? DATE :
              a[HOUR]        < 0 || a[HOUR]        > 24 || (a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0)) ? HOUR :
              a[MINUTE]      < 0 || a[MINUTE]      > 59  ? MINUTE :
              a[SECOND]      < 0 || a[SECOND]      > 59  ? SECOND :
              a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND :
              -1;

          if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {
              overflow = DATE;
          }
          if (getParsingFlags(m)._overflowWeeks && overflow === -1) {
              overflow = WEEK;
          }
          if (getParsingFlags(m)._overflowWeekday && overflow === -1) {
              overflow = WEEKDAY;
          }

          getParsingFlags(m).overflow = overflow;
      }

      return m;
  }

  // iso 8601 regex
  // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)
  var extendedIsoRegex = /^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/;
  var basicIsoRegex = /^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/;

  var tzRegex = /Z|[+-]\d\d(?::?\d\d)?/;

  var isoDates = [
      ['YYYYYY-MM-DD', /[+-]\d{6}-\d\d-\d\d/],
      ['YYYY-MM-DD', /\d{4}-\d\d-\d\d/],
      ['GGGG-[W]WW-E', /\d{4}-W\d\d-\d/],
      ['GGGG-[W]WW', /\d{4}-W\d\d/, false],
      ['YYYY-DDD', /\d{4}-\d{3}/],
      ['YYYY-MM', /\d{4}-\d\d/, false],
      ['YYYYYYMMDD', /[+-]\d{10}/],
      ['YYYYMMDD', /\d{8}/],
      // YYYYMM is NOT allowed by the standard
      ['GGGG[W]WWE', /\d{4}W\d{3}/],
      ['GGGG[W]WW', /\d{4}W\d{2}/, false],
      ['YYYYDDD', /\d{7}/]
  ];

  // iso time formats and regexes
  var isoTimes = [
      ['HH:mm:ss.SSSS', /\d\d:\d\d:\d\d\.\d+/],
      ['HH:mm:ss,SSSS', /\d\d:\d\d:\d\d,\d+/],
      ['HH:mm:ss', /\d\d:\d\d:\d\d/],
      ['HH:mm', /\d\d:\d\d/],
      ['HHmmss.SSSS', /\d\d\d\d\d\d\.\d+/],
      ['HHmmss,SSSS', /\d\d\d\d\d\d,\d+/],
      ['HHmmss', /\d\d\d\d\d\d/],
      ['HHmm', /\d\d\d\d/],
      ['HH', /\d\d/]
  ];

  var aspNetJsonRegex = /^\/?Date\((\-?\d+)/i;

  // date from iso format
  function configFromISO(config) {
      var i, l,
          string = config._i,
          match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),
          allowTime, dateFormat, timeFormat, tzFormat;

      if (match) {
          getParsingFlags(config).iso = true;

          for (i = 0, l = isoDates.length; i < l; i++) {
              if (isoDates[i][1].exec(match[1])) {
                  dateFormat = isoDates[i][0];
                  allowTime = isoDates[i][2] !== false;
                  break;
              }
          }
          if (dateFormat == null) {
              config._isValid = false;
              return;
          }
          if (match[3]) {
              for (i = 0, l = isoTimes.length; i < l; i++) {
                  if (isoTimes[i][1].exec(match[3])) {
                      // match[2] should be 'T' or space
                      timeFormat = (match[2] || ' ') + isoTimes[i][0];
                      break;
                  }
              }
              if (timeFormat == null) {
                  config._isValid = false;
                  return;
              }
          }
          if (!allowTime && timeFormat != null) {
              config._isValid = false;
              return;
          }
          if (match[4]) {
              if (tzRegex.exec(match[4])) {
                  tzFormat = 'Z';
              } else {
                  config._isValid = false;
                  return;
              }
          }
          config._f = dateFormat + (timeFormat || '') + (tzFormat || '');
          configFromStringAndFormat(config);
      } else {
          config._isValid = false;
      }
  }

  // date from iso format or fallback
  function configFromString(config) {
      var matched = aspNetJsonRegex.exec(config._i);

      if (matched !== null) {
          config._d = new Date(+matched[1]);
          return;
      }

      configFromISO(config);
      if (config._isValid === false) {
          delete config._isValid;
          hooks.createFromInputFallback(config);
      }
  }

  hooks.createFromInputFallback = deprecate(
      'value provided is not in a recognized ISO format. moment construction falls back to js Date(), ' +
      'which is not reliable across all browsers and versions. Non ISO date formats are ' +
      'discouraged and will be removed in an upcoming major release. Please refer to ' +
      'http://momentjs.com/guides/#/warnings/js-date/ for more info.',
      function (config) {
          config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));
      }
  );

  // Pick the first defined of two or three arguments.
  function defaults(a, b, c) {
      if (a != null) {
          return a;
      }
      if (b != null) {
          return b;
      }
      return c;
  }

  function currentDateArray(config) {
      // hooks is actually the exported moment object
      var nowValue = new Date(hooks.now());
      if (config._useUTC) {
          return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];
      }
      return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];
  }

  // convert an array to a date.
  // the array should mirror the parameters below
  // note: all values past the year are optional and will default to the lowest possible value.
  // [year, month, day , hour, minute, second, millisecond]
  function configFromArray (config) {
      var i, date, input = [], currentDate, yearToUse;

      if (config._d) {
          return;
      }

      currentDate = currentDateArray(config);

      //compute day of the year from weeks and weekdays
      if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {
          dayOfYearFromWeekInfo(config);
      }

      //if the day of the year is set, figure out what it is
      if (config._dayOfYear) {
          yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);

          if (config._dayOfYear > daysInYear(yearToUse)) {
              getParsingFlags(config)._overflowDayOfYear = true;
          }

          date = createUTCDate(yearToUse, 0, config._dayOfYear);
          config._a[MONTH] = date.getUTCMonth();
          config._a[DATE] = date.getUTCDate();
      }

      // Default to current date.
      // * if no year, month, day of month are given, default to today
      // * if day of month is given, default month and year
      // * if month is given, default only year
      // * if year is given, don't default anything
      for (i = 0; i < 3 && config._a[i] == null; ++i) {
          config._a[i] = input[i] = currentDate[i];
      }

      // Zero out whatever was not defaulted, including time
      for (; i < 7; i++) {
          config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];
      }

      // Check for 24:00:00.000
      if (config._a[HOUR] === 24 &&
              config._a[MINUTE] === 0 &&
              config._a[SECOND] === 0 &&
              config._a[MILLISECOND] === 0) {
          config._nextDay = true;
          config._a[HOUR] = 0;
      }

      config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);
      // Apply timezone offset from input. The actual utcOffset can be changed
      // with parseZone.
      if (config._tzm != null) {
          config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);
      }

      if (config._nextDay) {
          config._a[HOUR] = 24;
      }
  }

  function dayOfYearFromWeekInfo(config) {
      var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;

      w = config._w;
      if (w.GG != null || w.W != null || w.E != null) {
          dow = 1;
          doy = 4;

          // TODO: We need to take the current isoWeekYear, but that depends on
          // how we interpret now (local, utc, fixed offset). So create
          // a now version of current config (take local/utc/offset flags, and
          // create now).
          weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);
          week = defaults(w.W, 1);
          weekday = defaults(w.E, 1);
          if (weekday < 1 || weekday > 7) {
              weekdayOverflow = true;
          }
      } else {
          dow = config._locale._week.dow;
          doy = config._locale._week.doy;

          var curWeek = weekOfYear(createLocal(), dow, doy);

          weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);

          // Default to current week.
          week = defaults(w.w, curWeek.week);

          if (w.d != null) {
              // weekday -- low day numbers are considered next week
              weekday = w.d;
              if (weekday < 0 || weekday > 6) {
                  weekdayOverflow = true;
              }
          } else if (w.e != null) {
              // local weekday -- counting starts from begining of week
              weekday = w.e + dow;
              if (w.e < 0 || w.e > 6) {
                  weekdayOverflow = true;
              }
          } else {
              // default to begining of week
              weekday = dow;
          }
      }
      if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {
          getParsingFlags(config)._overflowWeeks = true;
      } else if (weekdayOverflow != null) {
          getParsingFlags(config)._overflowWeekday = true;
      } else {
          temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);
          config._a[YEAR] = temp.year;
          config._dayOfYear = temp.dayOfYear;
      }
  }

  // constant that refers to the ISO standard
  hooks.ISO_8601 = function () {};

  // date from string and format string
  function configFromStringAndFormat(config) {
      // TODO: Move this to another part of the creation flow to prevent circular deps
      if (config._f === hooks.ISO_8601) {
          configFromISO(config);
          return;
      }

      config._a = [];
      getParsingFlags(config).empty = true;

      // This array is used to make a Date, either with `new Date` or `Date.UTC`
      var string = '' + config._i,
          i, parsedInput, tokens, token, skipped,
          stringLength = string.length,
          totalParsedInputLength = 0;

      tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];

      for (i = 0; i < tokens.length; i++) {
          token = tokens[i];
          parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];
          // console.log('token', token, 'parsedInput', parsedInput,
          //         'regex', getParseRegexForToken(token, config));
          if (parsedInput) {
              skipped = string.substr(0, string.indexOf(parsedInput));
              if (skipped.length > 0) {
                  getParsingFlags(config).unusedInput.push(skipped);
              }
              string = string.slice(string.indexOf(parsedInput) + parsedInput.length);
              totalParsedInputLength += parsedInput.length;
          }
          // don't parse if it's not a known token
          if (formatTokenFunctions[token]) {
              if (parsedInput) {
                  getParsingFlags(config).empty = false;
              }
              else {
                  getParsingFlags(config).unusedTokens.push(token);
              }
              addTimeToArrayFromToken(token, parsedInput, config);
          }
          else if (config._strict && !parsedInput) {
              getParsingFlags(config).unusedTokens.push(token);
          }
      }

      // add remaining unparsed input length to the string
      getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;
      if (string.length > 0) {
          getParsingFlags(config).unusedInput.push(string);
      }

      // clear _12h flag if hour is <= 12
      if (config._a[HOUR] <= 12 &&
          getParsingFlags(config).bigHour === true &&
          config._a[HOUR] > 0) {
          getParsingFlags(config).bigHour = undefined;
      }

      getParsingFlags(config).parsedDateParts = config._a.slice(0);
      getParsingFlags(config).meridiem = config._meridiem;
      // handle meridiem
      config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);

      configFromArray(config);
      checkOverflow(config);
  }


  function meridiemFixWrap (locale, hour, meridiem) {
      var isPm;

      if (meridiem == null) {
          // nothing to do
          return hour;
      }
      if (locale.meridiemHour != null) {
          return locale.meridiemHour(hour, meridiem);
      } else if (locale.isPM != null) {
          // Fallback
          isPm = locale.isPM(meridiem);
          if (isPm && hour < 12) {
              hour += 12;
          }
          if (!isPm && hour === 12) {
              hour = 0;
          }
          return hour;
      } else {
          // this is not supposed to happen
          return hour;
      }
  }

  // date from string and array of format strings
  function configFromStringAndArray(config) {
      var tempConfig,
          bestMoment,

          scoreToBeat,
          i,
          currentScore;

      if (config._f.length === 0) {
          getParsingFlags(config).invalidFormat = true;
          config._d = new Date(NaN);
          return;
      }

      for (i = 0; i < config._f.length; i++) {
          currentScore = 0;
          tempConfig = copyConfig({}, config);
          if (config._useUTC != null) {
              tempConfig._useUTC = config._useUTC;
          }
          tempConfig._f = config._f[i];
          configFromStringAndFormat(tempConfig);

          if (!isValid(tempConfig)) {
              continue;
          }

          // if there is any input that was not parsed add a penalty for that format
          currentScore += getParsingFlags(tempConfig).charsLeftOver;

          //or tokens
          currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;

          getParsingFlags(tempConfig).score = currentScore;

          if (scoreToBeat == null || currentScore < scoreToBeat) {
              scoreToBeat = currentScore;
              bestMoment = tempConfig;
          }
      }

      extend(config, bestMoment || tempConfig);
  }

  function configFromObject(config) {
      if (config._d) {
          return;
      }

      var i = normalizeObjectUnits(config._i);
      config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {
          return obj && parseInt(obj, 10);
      });

      configFromArray(config);
  }

  function createFromConfig (config) {
      var res = new Moment(checkOverflow(prepareConfig(config)));
      if (res._nextDay) {
          // Adding is smart enough around DST
          res.add(1, 'd');
          res._nextDay = undefined;
      }

      return res;
  }

  function prepareConfig (config) {
      var input = config._i,
          format = config._f;

      config._locale = config._locale || getLocale(config._l);

      if (input === null || (format === undefined && input === '')) {
          return createInvalid({nullInput: true});
      }

      if (typeof input === 'string') {
          config._i = input = config._locale.preparse(input);
      }

      if (isMoment(input)) {
          return new Moment(checkOverflow(input));
      } else if (isDate(input)) {
          config._d = input;
      } else if (isArray(format)) {
          configFromStringAndArray(config);
      } else if (format) {
          configFromStringAndFormat(config);
      }  else {
          configFromInput(config);
      }

      if (!isValid(config)) {
          config._d = null;
      }

      return config;
  }

  function configFromInput(config) {
      var input = config._i;
      if (input === undefined) {
          config._d = new Date(hooks.now());
      } else if (isDate(input)) {
          config._d = new Date(input.valueOf());
      } else if (typeof input === 'string') {
          configFromString(config);
      } else if (isArray(input)) {
          config._a = map(input.slice(0), function (obj) {
              return parseInt(obj, 10);
          });
          configFromArray(config);
      } else if (typeof(input) === 'object') {
          configFromObject(config);
      } else if (isNumber(input)) {
          // from milliseconds
          config._d = new Date(input);
      } else {
          hooks.createFromInputFallback(config);
      }
  }

  function createLocalOrUTC (input, format, locale, strict, isUTC) {
      var c = {};

      if (locale === true || locale === false) {
          strict = locale;
          locale = undefined;
      }

      if ((isObject(input) && isObjectEmpty(input)) ||
              (isArray(input) && input.length === 0)) {
          input = undefined;
      }
      // object construction must be done this way.
      // https://github.com/moment/moment/issues/1423
      c._isAMomentObject = true;
      c._useUTC = c._isUTC = isUTC;
      c._l = locale;
      c._i = input;
      c._f = format;
      c._strict = strict;

      return createFromConfig(c);
  }

  function createLocal (input, format, locale, strict) {
      return createLocalOrUTC(input, format, locale, strict, false);
  }

  var prototypeMin = deprecate(
      'moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',
      function () {
          var other = createLocal.apply(null, arguments);
          if (this.isValid() && other.isValid()) {
              return other < this ? this : other;
          } else {
              return createInvalid();
          }
      }
  );

  var prototypeMax = deprecate(
      'moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',
      function () {
          var other = createLocal.apply(null, arguments);
          if (this.isValid() && other.isValid()) {
              return other > this ? this : other;
          } else {
              return createInvalid();
          }
      }
  );

  // Pick a moment m from moments so that m[fn](other) is true for all
  // other. This relies on the function fn to be transitive.
  //
  // moments should either be an array of moment objects or an array, whose
  // first element is an array of moment objects.
  function pickBy(fn, moments) {
      var res, i;
      if (moments.length === 1 && isArray(moments[0])) {
          moments = moments[0];
      }
      if (!moments.length) {
          return createLocal();
      }
      res = moments[0];
      for (i = 1; i < moments.length; ++i) {
          if (!moments[i].isValid() || moments[i][fn](res)) {
              res = moments[i];
          }
      }
      return res;
  }

  // TODO: Use [].sort instead?
  function min () {
      var args = [].slice.call(arguments, 0);

      return pickBy('isBefore', args);
  }

  function max () {
      var args = [].slice.call(arguments, 0);

      return pickBy('isAfter', args);
  }

  var now = function () {
      return Date.now ? Date.now() : +(new Date());
  };

  function Duration (duration) {
      var normalizedInput = normalizeObjectUnits(duration),
          years = normalizedInput.year || 0,
          quarters = normalizedInput.quarter || 0,
          months = normalizedInput.month || 0,
          weeks = normalizedInput.week || 0,
          days = normalizedInput.day || 0,
          hours = normalizedInput.hour || 0,
          minutes = normalizedInput.minute || 0,
          seconds = normalizedInput.second || 0,
          milliseconds = normalizedInput.millisecond || 0;

      // representation for dateAddRemove
      this._milliseconds = +milliseconds +
          seconds * 1e3 + // 1000
          minutes * 6e4 + // 1000 * 60
          hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978
      // Because of dateAddRemove treats 24 hours as different from a
      // day when working around DST, we need to store them separately
      this._days = +days +
          weeks * 7;
      // It is impossible translate months into days without knowing
      // which months you are are talking about, so we have to store
      // it separately.
      this._months = +months +
          quarters * 3 +
          years * 12;

      this._data = {};

      this._locale = getLocale();

      this._bubble();
  }

  function isDuration (obj) {
      return obj instanceof Duration;
  }

  function absRound (number) {
      if (number < 0) {
          return Math.round(-1 * number) * -1;
      } else {
          return Math.round(number);
      }
  }

  // FORMATTING

  function offset (token, separator) {
      addFormatToken(token, 0, 0, function () {
          var offset = this.utcOffset();
          var sign = '+';
          if (offset < 0) {
              offset = -offset;
              sign = '-';
          }
          return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~(offset) % 60, 2);
      });
  }

  offset('Z', ':');
  offset('ZZ', '');

  // PARSING

  addRegexToken('Z',  matchShortOffset);
  addRegexToken('ZZ', matchShortOffset);
  addParseToken(['Z', 'ZZ'], function (input, array, config) {
      config._useUTC = true;
      config._tzm = offsetFromString(matchShortOffset, input);
  });

  // HELPERS

  // timezone chunker
  // '+10:00' > ['10',  '00']
  // '-1530'  > ['-15', '30']
  var chunkOffset = /([\+\-]|\d\d)/gi;

  function offsetFromString(matcher, string) {
      var matches = (string || '').match(matcher);

      if (matches === null) {
          return null;
      }

      var chunk   = matches[matches.length - 1] || [];
      var parts   = (chunk + '').match(chunkOffset) || ['-', 0, 0];
      var minutes = +(parts[1] * 60) + toInt(parts[2]);

      return minutes === 0 ?
        0 :
        parts[0] === '+' ? minutes : -minutes;
  }

  // Return a moment from input, that is local/utc/zone equivalent to model.
  function cloneWithOffset(input, model) {
      var res, diff;
      if (model._isUTC) {
          res = model.clone();
          diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf();
          // Use low-level api, because this fn is low-level api.
          res._d.setTime(res._d.valueOf() + diff);
          hooks.updateOffset(res, false);
          return res;
      } else {
          return createLocal(input).local();
      }
  }

  function getDateOffset (m) {
      // On Firefox.24 Date#getTimezoneOffset returns a floating point.
      // https://github.com/moment/moment/pull/1871
      return -Math.round(m._d.getTimezoneOffset() / 15) * 15;
  }

  // HOOKS

  // This function will be called whenever a moment is mutated.
  // It is intended to keep the offset in sync with the timezone.
  hooks.updateOffset = function () {};

  // MOMENTS

  // keepLocalTime = true means only change the timezone, without
  // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->
  // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset
  // +0200, so we adjust the time as needed, to be valid.
  //
  // Keeping the time actually adds/subtracts (one hour)
  // from the actual represented time. That is why we call updateOffset
  // a second time. In case it wants us to change the offset again
  // _changeInProgress == true case, then we have to adjust, because
  // there is no such time in the given timezone.
  function getSetOffset (input, keepLocalTime) {
      var offset = this._offset || 0,
          localAdjust;
      if (!this.isValid()) {
          return input != null ? this : NaN;
      }
      if (input != null) {
          if (typeof input === 'string') {
              input = offsetFromString(matchShortOffset, input);
              if (input === null) {
                  return this;
              }
          } else if (Math.abs(input) < 16) {
              input = input * 60;
          }
          if (!this._isUTC && keepLocalTime) {
              localAdjust = getDateOffset(this);
          }
          this._offset = input;
          this._isUTC = true;
          if (localAdjust != null) {
              this.add(localAdjust, 'm');
          }
          if (offset !== input) {
              if (!keepLocalTime || this._changeInProgress) {
                  addSubtract(this, createDuration(input - offset, 'm'), 1, false);
              } else if (!this._changeInProgress) {
                  this._changeInProgress = true;
                  hooks.updateOffset(this, true);
                  this._changeInProgress = null;
              }
          }
          return this;
      } else {
          return this._isUTC ? offset : getDateOffset(this);
      }
  }

  function getSetZone (input, keepLocalTime) {
      if (input != null) {
          if (typeof input !== 'string') {
              input = -input;
          }

          this.utcOffset(input, keepLocalTime);

          return this;
      } else {
          return -this.utcOffset();
      }
  }

  function setOffsetToUTC (keepLocalTime) {
      return this.utcOffset(0, keepLocalTime);
  }

  function setOffsetToLocal (keepLocalTime) {
      if (this._isUTC) {
          this.utcOffset(0, keepLocalTime);
          this._isUTC = false;

          if (keepLocalTime) {
              this.subtract(getDateOffset(this), 'm');
          }
      }
      return this;
  }

  function setOffsetToParsedOffset () {
      if (this._tzm != null) {
          this.utcOffset(this._tzm);
      } else if (typeof this._i === 'string') {
          var tZone = offsetFromString(matchOffset, this._i);
          if (tZone != null) {
              this.utcOffset(tZone);
          }
          else {
              this.utcOffset(0, true);
          }
      }
      return this;
  }

  function hasAlignedHourOffset (input) {
      if (!this.isValid()) {
          return false;
      }
      input = input ? createLocal(input).utcOffset() : 0;

      return (this.utcOffset() - input) % 60 === 0;
  }

  function isDaylightSavingTime () {
      return (
          this.utcOffset() > this.clone().month(0).utcOffset() ||
          this.utcOffset() > this.clone().month(5).utcOffset()
      );
  }

  function isDaylightSavingTimeShifted () {
      if (!isUndefined(this._isDSTShifted)) {
          return this._isDSTShifted;
      }

      var c = {};

      copyConfig(c, this);
      c = prepareConfig(c);

      if (c._a) {
          var other = c._isUTC ? createUTC(c._a) : createLocal(c._a);
          this._isDSTShifted = this.isValid() &&
              compareArrays(c._a, other.toArray()) > 0;
      } else {
          this._isDSTShifted = false;
      }

      return this._isDSTShifted;
  }

  function isLocal () {
      return this.isValid() ? !this._isUTC : false;
  }

  function isUtcOffset () {
      return this.isValid() ? this._isUTC : false;
  }

  function isUtc () {
      return this.isValid() ? this._isUTC && this._offset === 0 : false;
  }

  // ASP.NET json date format regex
  var aspNetRegex = /^(\-)?(?:(\d*)[. ])?(\d+)\:(\d+)(?:\:(\d+)(\.\d*)?)?$/;

  // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html
  // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere
  // and further modified to allow for strings containing both week and day
  var isoRegex = /^(-)?P(?:(-?[0-9,.]*)Y)?(?:(-?[0-9,.]*)M)?(?:(-?[0-9,.]*)W)?(?:(-?[0-9,.]*)D)?(?:T(?:(-?[0-9,.]*)H)?(?:(-?[0-9,.]*)M)?(?:(-?[0-9,.]*)S)?)?$/;

  function createDuration (input, key) {
      var duration = input,
          // matching against regexp is expensive, do it on demand
          match = null,
          sign,
          ret,
          diffRes;

      if (isDuration(input)) {
          duration = {
              ms : input._milliseconds,
              d  : input._days,
              M  : input._months
          };
      } else if (isNumber(input)) {
          duration = {};
          if (key) {
              duration[key] = input;
          } else {
              duration.milliseconds = input;
          }
      } else if (!!(match = aspNetRegex.exec(input))) {
          sign = (match[1] === '-') ? -1 : 1;
          duration = {
              y  : 0,
              d  : toInt(match[DATE])                         * sign,
              h  : toInt(match[HOUR])                         * sign,
              m  : toInt(match[MINUTE])                       * sign,
              s  : toInt(match[SECOND])                       * sign,
              ms : toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match
          };
      } else if (!!(match = isoRegex.exec(input))) {
          sign = (match[1] === '-') ? -1 : 1;
          duration = {
              y : parseIso(match[2], sign),
              M : parseIso(match[3], sign),
              w : parseIso(match[4], sign),
              d : parseIso(match[5], sign),
              h : parseIso(match[6], sign),
              m : parseIso(match[7], sign),
              s : parseIso(match[8], sign)
          };
      } else if (duration == null) {// checks for null or undefined
          duration = {};
      } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {
          diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));

          duration = {};
          duration.ms = diffRes.milliseconds;
          duration.M = diffRes.months;
      }

      ret = new Duration(duration);

      if (isDuration(input) && hasOwnProp(input, '_locale')) {
          ret._locale = input._locale;
      }

      return ret;
  }

  createDuration.fn = Duration.prototype;

  function parseIso (inp, sign) {
      // We'd normally use ~~inp for this, but unfortunately it also
      // converts floats to ints.
      // inp may be undefined, so careful calling replace on it.
      var res = inp && parseFloat(inp.replace(',', '.'));
      // apply sign while we're at it
      return (isNaN(res) ? 0 : res) * sign;
  }

  function positiveMomentsDifference(base, other) {
      var res = {milliseconds: 0, months: 0};

      res.months = other.month() - base.month() +
          (other.year() - base.year()) * 12;
      if (base.clone().add(res.months, 'M').isAfter(other)) {
          --res.months;
      }

      res.milliseconds = +other - +(base.clone().add(res.months, 'M'));

      return res;
  }

  function momentsDifference(base, other) {
      var res;
      if (!(base.isValid() && other.isValid())) {
          return {milliseconds: 0, months: 0};
      }

      other = cloneWithOffset(other, base);
      if (base.isBefore(other)) {
          res = positiveMomentsDifference(base, other);
      } else {
          res = positiveMomentsDifference(other, base);
          res.milliseconds = -res.milliseconds;
          res.months = -res.months;
      }

      return res;
  }

  // TODO: remove 'name' arg after deprecation is removed
  function createAdder(direction, name) {
      return function (val, period) {
          var dur, tmp;
          //invert the arguments, but complain about it
          if (period !== null && !isNaN(+period)) {
              deprecateSimple(name, 'moment().' + name  + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' +
              'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');
              tmp = val; val = period; period = tmp;
          }

          val = typeof val === 'string' ? +val : val;
          dur = createDuration(val, period);
          addSubtract(this, dur, direction);
          return this;
      };
  }

  function addSubtract (mom, duration, isAdding, updateOffset) {
      var milliseconds = duration._milliseconds,
          days = absRound(duration._days),
          months = absRound(duration._months);

      if (!mom.isValid()) {
          // No op
          return;
      }

      updateOffset = updateOffset == null ? true : updateOffset;

      if (milliseconds) {
          mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);
      }
      if (days) {
          set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);
      }
      if (months) {
          setMonth(mom, get(mom, 'Month') + months * isAdding);
      }
      if (updateOffset) {
          hooks.updateOffset(mom, days || months);
      }
  }

  var add      = createAdder(1, 'add');
  var subtract = createAdder(-1, 'subtract');

  function getCalendarFormat(myMoment, now) {
      var diff = myMoment.diff(now, 'days', true);
      return diff < -6 ? 'sameElse' :
              diff < -1 ? 'lastWeek' :
              diff < 0 ? 'lastDay' :
              diff < 1 ? 'sameDay' :
              diff < 2 ? 'nextDay' :
              diff < 7 ? 'nextWeek' : 'sameElse';
  }

  function calendar$1 (time, formats) {
      // We want to compare the start of today, vs this.
      // Getting start-of-today depends on whether we're local/utc/offset or not.
      var now = time || createLocal(),
          sod = cloneWithOffset(now, this).startOf('day'),
          format = hooks.calendarFormat(this, sod) || 'sameElse';

      var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);

      return this.format(output || this.localeData().calendar(format, this, createLocal(now)));
  }

  function clone () {
      return new Moment(this);
  }

  function isAfter (input, units) {
      var localInput = isMoment(input) ? input : createLocal(input);
      if (!(this.isValid() && localInput.isValid())) {
          return false;
      }
      units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');
      if (units === 'millisecond') {
          return this.valueOf() > localInput.valueOf();
      } else {
          return localInput.valueOf() < this.clone().startOf(units).valueOf();
      }
  }

  function isBefore (input, units) {
      var localInput = isMoment(input) ? input : createLocal(input);
      if (!(this.isValid() && localInput.isValid())) {
          return false;
      }
      units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');
      if (units === 'millisecond') {
          return this.valueOf() < localInput.valueOf();
      } else {
          return this.clone().endOf(units).valueOf() < localInput.valueOf();
      }
  }

  function isBetween (from, to, units, inclusivity) {
      inclusivity = inclusivity || '()';
      return (inclusivity[0] === '(' ? this.isAfter(from, units) : !this.isBefore(from, units)) &&
          (inclusivity[1] === ')' ? this.isBefore(to, units) : !this.isAfter(to, units));
  }

  function isSame (input, units) {
      var localInput = isMoment(input) ? input : createLocal(input),
          inputMs;
      if (!(this.isValid() && localInput.isValid())) {
          return false;
      }
      units = normalizeUnits(units || 'millisecond');
      if (units === 'millisecond') {
          return this.valueOf() === localInput.valueOf();
      } else {
          inputMs = localInput.valueOf();
          return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();
      }
  }

  function isSameOrAfter (input, units) {
      return this.isSame(input, units) || this.isAfter(input,units);
  }

  function isSameOrBefore (input, units) {
      return this.isSame(input, units) || this.isBefore(input,units);
  }

  function diff (input, units, asFloat) {
      var that,
          zoneDelta,
          delta, output;

      if (!this.isValid()) {
          return NaN;
      }

      that = cloneWithOffset(input, this);

      if (!that.isValid()) {
          return NaN;
      }

      zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;

      units = normalizeUnits(units);

      if (units === 'year' || units === 'month' || units === 'quarter') {
          output = monthDiff(this, that);
          if (units === 'quarter') {
              output = output / 3;
          } else if (units === 'year') {
              output = output / 12;
          }
      } else {
          delta = this - that;
          output = units === 'second' ? delta / 1e3 : // 1000
              units === 'minute' ? delta / 6e4 : // 1000 * 60
              units === 'hour' ? delta / 36e5 : // 1000 * 60 * 60
              units === 'day' ? (delta - zoneDelta) / 864e5 : // 1000 * 60 * 60 * 24, negate dst
              units === 'week' ? (delta - zoneDelta) / 6048e5 : // 1000 * 60 * 60 * 24 * 7, negate dst
              delta;
      }
      return asFloat ? output : absFloor(output);
  }

  function monthDiff (a, b) {
      // difference in months
      var wholeMonthDiff = ((b.year() - a.year()) * 12) + (b.month() - a.month()),
          // b is in (anchor - 1 month, anchor + 1 month)
          anchor = a.clone().add(wholeMonthDiff, 'months'),
          anchor2, adjust;

      if (b - anchor < 0) {
          anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');
          // linear across the month
          adjust = (b - anchor) / (anchor - anchor2);
      } else {
          anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');
          // linear across the month
          adjust = (b - anchor) / (anchor2 - anchor);
      }

      //check for negative zero, return zero if negative zero
      return -(wholeMonthDiff + adjust) || 0;
  }

  hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';
  hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';

  function toString () {
      return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');
  }

  function toISOString () {
      var m = this.clone().utc();
      if (0 < m.year() && m.year() <= 9999) {
          if (isFunction(Date.prototype.toISOString)) {
              // native implementation is ~50x faster, use it when we can
              return this.toDate().toISOString();
          } else {
              return formatMoment(m, 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]');
          }
      } else {
          return formatMoment(m, 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]');
      }
  }

  /**
   * Return a human readable representation of a moment that can
   * also be evaluated to get a new moment which is the same
   *
   * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects
   */
  function inspect () {
      if (!this.isValid()) {
          return 'moment.invalid(/* ' + this._i + ' */)';
      }
      var func = 'moment';
      var zone = '';
      if (!this.isLocal()) {
          func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';
          zone = 'Z';
      }
      var prefix = '[' + func + '("]';
      var year = (0 < this.year() && this.year() <= 9999) ? 'YYYY' : 'YYYYYY';
      var datetime = '-MM-DD[T]HH:mm:ss.SSS';
      var suffix = zone + '[")]';

      return this.format(prefix + year + datetime + suffix);
  }

  function format (inputString) {
      if (!inputString) {
          inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;
      }
      var output = formatMoment(this, inputString);
      return this.localeData().postformat(output);
  }

  function from (time, withoutSuffix) {
      if (this.isValid() &&
              ((isMoment(time) && time.isValid()) ||
               createLocal(time).isValid())) {
          return createDuration({to: this, from: time}).locale(this.locale()).humanize(!withoutSuffix);
      } else {
          return this.localeData().invalidDate();
      }
  }

  function fromNow (withoutSuffix) {
      return this.from(createLocal(), withoutSuffix);
  }

  function to (time, withoutSuffix) {
      if (this.isValid() &&
              ((isMoment(time) && time.isValid()) ||
               createLocal(time).isValid())) {
          return createDuration({from: this, to: time}).locale(this.locale()).humanize(!withoutSuffix);
      } else {
          return this.localeData().invalidDate();
      }
  }

  function toNow (withoutSuffix) {
      return this.to(createLocal(), withoutSuffix);
  }

  // If passed a locale key, it will set the locale for this
  // instance.  Otherwise, it will return the locale configuration
  // variables for this instance.
  function locale (key) {
      var newLocaleData;

      if (key === undefined) {
          return this._locale._abbr;
      } else {
          newLocaleData = getLocale(key);
          if (newLocaleData != null) {
              this._locale = newLocaleData;
          }
          return this;
      }
  }

  var lang = deprecate(
      'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',
      function (key) {
          if (key === undefined) {
              return this.localeData();
          } else {
              return this.locale(key);
          }
      }
  );

  function localeData () {
      return this._locale;
  }

  function startOf (units) {
      units = normalizeUnits(units);
      // the following switch intentionally omits break keywords
      // to utilize falling through the cases.
      switch (units) {
          case 'year':
              this.month(0);
              /* falls through */
          case 'quarter':
          case 'month':
              this.date(1);
              /* falls through */
          case 'week':
          case 'isoWeek':
          case 'day':
          case 'date':
              this.hours(0);
              /* falls through */
          case 'hour':
              this.minutes(0);
              /* falls through */
          case 'minute':
              this.seconds(0);
              /* falls through */
          case 'second':
              this.milliseconds(0);
      }

      // weeks are a special case
      if (units === 'week') {
          this.weekday(0);
      }
      if (units === 'isoWeek') {
          this.isoWeekday(1);
      }

      // quarters are also special
      if (units === 'quarter') {
          this.month(Math.floor(this.month() / 3) * 3);
      }

      return this;
  }

  function endOf (units) {
      units = normalizeUnits(units);
      if (units === undefined || units === 'millisecond') {
          return this;
      }

      // 'date' is an alias for 'day', so it should be considered as such.
      if (units === 'date') {
          units = 'day';
      }

      return this.startOf(units).add(1, (units === 'isoWeek' ? 'week' : units)).subtract(1, 'ms');
  }

  function valueOf () {
      return this._d.valueOf() - ((this._offset || 0) * 60000);
  }

  function unix () {
      return Math.floor(this.valueOf() / 1000);
  }

  function toDate () {
      return new Date(this.valueOf());
  }

  function toArray () {
      var m = this;
      return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];
  }

  function toObject () {
      var m = this;
      return {
          years: m.year(),
          months: m.month(),
          date: m.date(),
          hours: m.hours(),
          minutes: m.minutes(),
          seconds: m.seconds(),
          milliseconds: m.milliseconds()
      };
  }

  function toJSON () {
      // new Date(NaN).toJSON() === null
      return this.isValid() ? this.toISOString() : null;
  }

  function isValid$1 () {
      return isValid(this);
  }

  function parsingFlags () {
      return extend({}, getParsingFlags(this));
  }

  function invalidAt () {
      return getParsingFlags(this).overflow;
  }

  function creationData() {
      return {
          input: this._i,
          format: this._f,
          locale: this._locale,
          isUTC: this._isUTC,
          strict: this._strict
      };
  }

  // FORMATTING

  addFormatToken(0, ['gg', 2], 0, function () {
      return this.weekYear() % 100;
  });

  addFormatToken(0, ['GG', 2], 0, function () {
      return this.isoWeekYear() % 100;
  });

  function addWeekYearFormatToken (token, getter) {
      addFormatToken(0, [token, token.length], 0, getter);
  }

  addWeekYearFormatToken('gggg',     'weekYear');
  addWeekYearFormatToken('ggggg',    'weekYear');
  addWeekYearFormatToken('GGGG',  'isoWeekYear');
  addWeekYearFormatToken('GGGGG', 'isoWeekYear');

  // ALIASES

  addUnitAlias('weekYear', 'gg');
  addUnitAlias('isoWeekYear', 'GG');

  // PRIORITY

  addUnitPriority('weekYear', 1);
  addUnitPriority('isoWeekYear', 1);


  // PARSING

  addRegexToken('G',      matchSigned);
  addRegexToken('g',      matchSigned);
  addRegexToken('GG',     match1to2, match2);
  addRegexToken('gg',     match1to2, match2);
  addRegexToken('GGGG',   match1to4, match4);
  addRegexToken('gggg',   match1to4, match4);
  addRegexToken('GGGGG',  match1to6, match6);
  addRegexToken('ggggg',  match1to6, match6);

  addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {
      week[token.substr(0, 2)] = toInt(input);
  });

  addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {
      week[token] = hooks.parseTwoDigitYear(input);
  });

  // MOMENTS

  function getSetWeekYear (input) {
      return getSetWeekYearHelper.call(this,
              input,
              this.week(),
              this.weekday(),
              this.localeData()._week.dow,
              this.localeData()._week.doy);
  }

  function getSetISOWeekYear (input) {
      return getSetWeekYearHelper.call(this,
              input, this.isoWeek(), this.isoWeekday(), 1, 4);
  }

  function getISOWeeksInYear () {
      return weeksInYear(this.year(), 1, 4);
  }

  function getWeeksInYear () {
      var weekInfo = this.localeData()._week;
      return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);
  }

  function getSetWeekYearHelper(input, week, weekday, dow, doy) {
      var weeksTarget;
      if (input == null) {
          return weekOfYear(this, dow, doy).year;
      } else {
          weeksTarget = weeksInYear(input, dow, doy);
          if (week > weeksTarget) {
              week = weeksTarget;
          }
          return setWeekAll.call(this, input, week, weekday, dow, doy);
      }
  }

  function setWeekAll(weekYear, week, weekday, dow, doy) {
      var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),
          date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);

      this.year(date.getUTCFullYear());
      this.month(date.getUTCMonth());
      this.date(date.getUTCDate());
      return this;
  }

  // FORMATTING

  addFormatToken('Q', 0, 'Qo', 'quarter');

  // ALIASES

  addUnitAlias('quarter', 'Q');

  // PRIORITY

  addUnitPriority('quarter', 7);

  // PARSING

  addRegexToken('Q', match1);
  addParseToken('Q', function (input, array) {
      array[MONTH] = (toInt(input) - 1) * 3;
  });

  // MOMENTS

  function getSetQuarter (input) {
      return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);
  }

  // FORMATTING

  addFormatToken('D', ['DD', 2], 'Do', 'date');

  // ALIASES

  addUnitAlias('date', 'D');

  // PRIOROITY
  addUnitPriority('date', 9);

  // PARSING

  addRegexToken('D',  match1to2);
  addRegexToken('DD', match1to2, match2);
  addRegexToken('Do', function (isStrict, locale) {
      return isStrict ? locale._ordinalParse : locale._ordinalParseLenient;
  });

  addParseToken(['D', 'DD'], DATE);
  addParseToken('Do', function (input, array) {
      array[DATE] = toInt(input.match(match1to2)[0], 10);
  });

  // MOMENTS

  var getSetDayOfMonth = makeGetSet('Date', true);

  // FORMATTING

  addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');

  // ALIASES

  addUnitAlias('dayOfYear', 'DDD');

  // PRIORITY
  addUnitPriority('dayOfYear', 4);

  // PARSING

  addRegexToken('DDD',  match1to3);
  addRegexToken('DDDD', match3);
  addParseToken(['DDD', 'DDDD'], function (input, array, config) {
      config._dayOfYear = toInt(input);
  });

  // HELPERS

  // MOMENTS

  function getSetDayOfYear (input) {
      var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;
      return input == null ? dayOfYear : this.add((input - dayOfYear), 'd');
  }

  // FORMATTING

  addFormatToken('m', ['mm', 2], 0, 'minute');

  // ALIASES

  addUnitAlias('minute', 'm');

  // PRIORITY

  addUnitPriority('minute', 14);

  // PARSING

  addRegexToken('m',  match1to2);
  addRegexToken('mm', match1to2, match2);
  addParseToken(['m', 'mm'], MINUTE);

  // MOMENTS

  var getSetMinute = makeGetSet('Minutes', false);

  // FORMATTING

  addFormatToken('s', ['ss', 2], 0, 'second');

  // ALIASES

  addUnitAlias('second', 's');

  // PRIORITY

  addUnitPriority('second', 15);

  // PARSING

  addRegexToken('s',  match1to2);
  addRegexToken('ss', match1to2, match2);
  addParseToken(['s', 'ss'], SECOND);

  // MOMENTS

  var getSetSecond = makeGetSet('Seconds', false);

  // FORMATTING

  addFormatToken('S', 0, 0, function () {
      return ~~(this.millisecond() / 100);
  });

  addFormatToken(0, ['SS', 2], 0, function () {
      return ~~(this.millisecond() / 10);
  });

  addFormatToken(0, ['SSS', 3], 0, 'millisecond');
  addFormatToken(0, ['SSSS', 4], 0, function () {
      return this.millisecond() * 10;
  });
  addFormatToken(0, ['SSSSS', 5], 0, function () {
      return this.millisecond() * 100;
  });
  addFormatToken(0, ['SSSSSS', 6], 0, function () {
      return this.millisecond() * 1000;
  });
  addFormatToken(0, ['SSSSSSS', 7], 0, function () {
      return this.millisecond() * 10000;
  });
  addFormatToken(0, ['SSSSSSSS', 8], 0, function () {
      return this.millisecond() * 100000;
  });
  addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {
      return this.millisecond() * 1000000;
  });


  // ALIASES

  addUnitAlias('millisecond', 'ms');

  // PRIORITY

  addUnitPriority('millisecond', 16);

  // PARSING

  addRegexToken('S',    match1to3, match1);
  addRegexToken('SS',   match1to3, match2);
  addRegexToken('SSS',  match1to3, match3);

  var token;
  for (token = 'SSSS'; token.length <= 9; token += 'S') {
      addRegexToken(token, matchUnsigned);
  }

  function parseMs(input, array) {
      array[MILLISECOND] = toInt(('0.' + input) * 1000);
  }

  for (token = 'S'; token.length <= 9; token += 'S') {
      addParseToken(token, parseMs);
  }
  // MOMENTS

  var getSetMillisecond = makeGetSet('Milliseconds', false);

  // FORMATTING

  addFormatToken('z',  0, 0, 'zoneAbbr');
  addFormatToken('zz', 0, 0, 'zoneName');

  // MOMENTS

  function getZoneAbbr () {
      return this._isUTC ? 'UTC' : '';
  }

  function getZoneName () {
      return this._isUTC ? 'Coordinated Universal Time' : '';
  }

  var proto = Moment.prototype;

  proto.add               = add;
  proto.calendar          = calendar$1;
  proto.clone             = clone;
  proto.diff              = diff;
  proto.endOf             = endOf;
  proto.format            = format;
  proto.from              = from;
  proto.fromNow           = fromNow;
  proto.to                = to;
  proto.toNow             = toNow;
  proto.get               = stringGet;
  proto.invalidAt         = invalidAt;
  proto.isAfter           = isAfter;
  proto.isBefore          = isBefore;
  proto.isBetween         = isBetween;
  proto.isSame            = isSame;
  proto.isSameOrAfter     = isSameOrAfter;
  proto.isSameOrBefore    = isSameOrBefore;
  proto.isValid           = isValid$1;
  proto.lang              = lang;
  proto.locale            = locale;
  proto.localeData        = localeData;
  proto.max               = prototypeMax;
  proto.min               = prototypeMin;
  proto.parsingFlags      = parsingFlags;
  proto.set               = stringSet;
  proto.startOf           = startOf;
  proto.subtract          = subtract;
  proto.toArray           = toArray;
  proto.toObject          = toObject;
  proto.toDate            = toDate;
  proto.toISOString       = toISOString;
  proto.inspect           = inspect;
  proto.toJSON            = toJSON;
  proto.toString          = toString;
  proto.unix              = unix;
  proto.valueOf           = valueOf;
  proto.creationData      = creationData;

  // Year
  proto.year       = getSetYear;
  proto.isLeapYear = getIsLeapYear;

  // Week Year
  proto.weekYear    = getSetWeekYear;
  proto.isoWeekYear = getSetISOWeekYear;

  // Quarter
  proto.quarter = proto.quarters = getSetQuarter;

  // Month
  proto.month       = getSetMonth;
  proto.daysInMonth = getDaysInMonth;

  // Week
  proto.week           = proto.weeks        = getSetWeek;
  proto.isoWeek        = proto.isoWeeks     = getSetISOWeek;
  proto.weeksInYear    = getWeeksInYear;
  proto.isoWeeksInYear = getISOWeeksInYear;

  // Day
  proto.date       = getSetDayOfMonth;
  proto.day        = proto.days             = getSetDayOfWeek;
  proto.weekday    = getSetLocaleDayOfWeek;
  proto.isoWeekday = getSetISODayOfWeek;
  proto.dayOfYear  = getSetDayOfYear;

  // Hour
  proto.hour = proto.hours = getSetHour;

  // Minute
  proto.minute = proto.minutes = getSetMinute;

  // Second
  proto.second = proto.seconds = getSetSecond;

  // Millisecond
  proto.millisecond = proto.milliseconds = getSetMillisecond;

  // Offset
  proto.utcOffset            = getSetOffset;
  proto.utc                  = setOffsetToUTC;
  proto.local                = setOffsetToLocal;
  proto.parseZone            = setOffsetToParsedOffset;
  proto.hasAlignedHourOffset = hasAlignedHourOffset;
  proto.isDST                = isDaylightSavingTime;
  proto.isLocal              = isLocal;
  proto.isUtcOffset          = isUtcOffset;
  proto.isUtc                = isUtc;
  proto.isUTC                = isUtc;

  // Timezone
  proto.zoneAbbr = getZoneAbbr;
  proto.zoneName = getZoneName;

  // Deprecations
  proto.dates  = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);
  proto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);
  proto.years  = deprecate('years accessor is deprecated. Use year instead', getSetYear);
  proto.zone   = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);
  proto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);

  function createUnix (input) {
      return createLocal(input * 1000);
  }

  function createInZone () {
      return createLocal.apply(null, arguments).parseZone();
  }

  function preParsePostFormat (string) {
      return string;
  }

  var proto$1 = Locale.prototype;

  proto$1.calendar        = calendar;
  proto$1.longDateFormat  = longDateFormat;
  proto$1.invalidDate     = invalidDate;
  proto$1.ordinal         = ordinal;
  proto$1.preparse        = preParsePostFormat;
  proto$1.postformat      = preParsePostFormat;
  proto$1.relativeTime    = relativeTime;
  proto$1.pastFuture      = pastFuture;
  proto$1.set             = set;

  // Month
  proto$1.months            =        localeMonths;
  proto$1.monthsShort       =        localeMonthsShort;
  proto$1.monthsParse       =        localeMonthsParse;
  proto$1.monthsRegex       = monthsRegex;
  proto$1.monthsShortRegex  = monthsShortRegex;

  // Week
  proto$1.week = localeWeek;
  proto$1.firstDayOfYear = localeFirstDayOfYear;
  proto$1.firstDayOfWeek = localeFirstDayOfWeek;

  // Day of Week
  proto$1.weekdays       =        localeWeekdays;
  proto$1.weekdaysMin    =        localeWeekdaysMin;
  proto$1.weekdaysShort  =        localeWeekdaysShort;
  proto$1.weekdaysParse  =        localeWeekdaysParse;

  proto$1.weekdaysRegex       =        weekdaysRegex;
  proto$1.weekdaysShortRegex  =        weekdaysShortRegex;
  proto$1.weekdaysMinRegex    =        weekdaysMinRegex;

  // Hours
  proto$1.isPM = localeIsPM;
  proto$1.meridiem = localeMeridiem;

  function get$1 (format, index, field, setter) {
      var locale = getLocale();
      var utc = createUTC().set(setter, index);
      return locale[field](utc, format);
  }

  function listMonthsImpl (format, index, field) {
      if (isNumber(format)) {
          index = format;
          format = undefined;
      }

      format = format || '';

      if (index != null) {
          return get$1(format, index, field, 'month');
      }

      var i;
      var out = [];
      for (i = 0; i < 12; i++) {
          out[i] = get$1(format, i, field, 'month');
      }
      return out;
  }

  // ()
  // (5)
  // (fmt, 5)
  // (fmt)
  // (true)
  // (true, 5)
  // (true, fmt, 5)
  // (true, fmt)
  function listWeekdaysImpl (localeSorted, format, index, field) {
      if (typeof localeSorted === 'boolean') {
          if (isNumber(format)) {
              index = format;
              format = undefined;
          }

          format = format || '';
      } else {
          format = localeSorted;
          index = format;
          localeSorted = false;

          if (isNumber(format)) {
              index = format;
              format = undefined;
          }

          format = format || '';
      }

      var locale = getLocale(),
          shift = localeSorted ? locale._week.dow : 0;

      if (index != null) {
          return get$1(format, (index + shift) % 7, field, 'day');
      }

      var i;
      var out = [];
      for (i = 0; i < 7; i++) {
          out[i] = get$1(format, (i + shift) % 7, field, 'day');
      }
      return out;
  }

  function listMonths (format, index) {
      return listMonthsImpl(format, index, 'months');
  }

  function listMonthsShort (format, index) {
      return listMonthsImpl(format, index, 'monthsShort');
  }

  function listWeekdays (localeSorted, format, index) {
      return listWeekdaysImpl(localeSorted, format, index, 'weekdays');
  }

  function listWeekdaysShort (localeSorted, format, index) {
      return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');
  }

  function listWeekdaysMin (localeSorted, format, index) {
      return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');
  }

  getSetGlobalLocale('en', {
      ordinalParse: /\d{1,2}(th|st|nd|rd)/,
      ordinal : function (number) {
          var b = number % 10,
              output = (toInt(number % 100 / 10) === 1) ? 'th' :
              (b === 1) ? 'st' :
              (b === 2) ? 'nd' :
              (b === 3) ? 'rd' : 'th';
          return number + output;
      }
  });

  // Side effect imports
  hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);
  hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);

  var mathAbs = Math.abs;

  function abs () {
      var data           = this._data;

      this._milliseconds = mathAbs(this._milliseconds);
      this._days         = mathAbs(this._days);
      this._months       = mathAbs(this._months);

      data.milliseconds  = mathAbs(data.milliseconds);
      data.seconds       = mathAbs(data.seconds);
      data.minutes       = mathAbs(data.minutes);
      data.hours         = mathAbs(data.hours);
      data.months        = mathAbs(data.months);
      data.years         = mathAbs(data.years);

      return this;
  }

  function addSubtract$1 (duration, input, value, direction) {
      var other = createDuration(input, value);

      duration._milliseconds += direction * other._milliseconds;
      duration._days         += direction * other._days;
      duration._months       += direction * other._months;

      return duration._bubble();
  }

  // supports only 2.0-style add(1, 's') or add(duration)
  function add$1 (input, value) {
      return addSubtract$1(this, input, value, 1);
  }

  // supports only 2.0-style subtract(1, 's') or subtract(duration)
  function subtract$1 (input, value) {
      return addSubtract$1(this, input, value, -1);
  }

  function absCeil (number) {
      if (number < 0) {
          return Math.floor(number);
      } else {
          return Math.ceil(number);
      }
  }

  function bubble () {
      var milliseconds = this._milliseconds;
      var days         = this._days;
      var months       = this._months;
      var data         = this._data;
      var seconds, minutes, hours, years, monthsFromDays;

      // if we have a mix of positive and negative values, bubble down first
      // check: https://github.com/moment/moment/issues/2166
      if (!((milliseconds >= 0 && days >= 0 && months >= 0) ||
              (milliseconds <= 0 && days <= 0 && months <= 0))) {
          milliseconds += absCeil(monthsToDays(months) + days) * 864e5;
          days = 0;
          months = 0;
      }

      // The following code bubbles up values, see the tests for
      // examples of what that means.
      data.milliseconds = milliseconds % 1000;

      seconds           = absFloor(milliseconds / 1000);
      data.seconds      = seconds % 60;

      minutes           = absFloor(seconds / 60);
      data.minutes      = minutes % 60;

      hours             = absFloor(minutes / 60);
      data.hours        = hours % 24;

      days += absFloor(hours / 24);

      // convert days to months
      monthsFromDays = absFloor(daysToMonths(days));
      months += monthsFromDays;
      days -= absCeil(monthsToDays(monthsFromDays));

      // 12 months -> 1 year
      years = absFloor(months / 12);
      months %= 12;

      data.days   = days;
      data.months = months;
      data.years  = years;

      return this;
  }

  function daysToMonths (days) {
      // 400 years have 146097 days (taking into account leap year rules)
      // 400 years have 12 months === 4800
      return days * 4800 / 146097;
  }

  function monthsToDays (months) {
      // the reverse of daysToMonths
      return months * 146097 / 4800;
  }

  function as (units) {
      var days;
      var months;
      var milliseconds = this._milliseconds;

      units = normalizeUnits(units);

      if (units === 'month' || units === 'year') {
          days   = this._days   + milliseconds / 864e5;
          months = this._months + daysToMonths(days);
          return units === 'month' ? months : months / 12;
      } else {
          // handle milliseconds separately because of floating point math errors (issue #1867)
          days = this._days + Math.round(monthsToDays(this._months));
          switch (units) {
              case 'week'   : return days / 7     + milliseconds / 6048e5;
              case 'day'    : return days         + milliseconds / 864e5;
              case 'hour'   : return days * 24    + milliseconds / 36e5;
              case 'minute' : return days * 1440  + milliseconds / 6e4;
              case 'second' : return days * 86400 + milliseconds / 1000;
              // Math.floor prevents floating point math errors here
              case 'millisecond': return Math.floor(days * 864e5) + milliseconds;
              default: throw new Error('Unknown unit ' + units);
          }
      }
  }

  // TODO: Use this.as('ms')?
  function valueOf$1 () {
      return (
          this._milliseconds +
          this._days * 864e5 +
          (this._months % 12) * 2592e6 +
          toInt(this._months / 12) * 31536e6
      );
  }

  function makeAs (alias) {
      return function () {
          return this.as(alias);
      };
  }

  var asMilliseconds = makeAs('ms');
  var asSeconds      = makeAs('s');
  var asMinutes      = makeAs('m');
  var asHours        = makeAs('h');
  var asDays         = makeAs('d');
  var asWeeks        = makeAs('w');
  var asMonths       = makeAs('M');
  var asYears        = makeAs('y');

  function get$2 (units) {
      units = normalizeUnits(units);
      return this[units + 's']();
  }

  function makeGetter(name) {
      return function () {
          return this._data[name];
      };
  }

  var milliseconds = makeGetter('milliseconds');
  var seconds      = makeGetter('seconds');
  var minutes      = makeGetter('minutes');
  var hours        = makeGetter('hours');
  var days         = makeGetter('days');
  var months       = makeGetter('months');
  var years        = makeGetter('years');

  function weeks () {
      return absFloor(this.days() / 7);
  }

  var round = Math.round;
  var thresholds = {
      s: 45,  // seconds to minute
      m: 45,  // minutes to hour
      h: 22,  // hours to day
      d: 26,  // days to month
      M: 11   // months to year
  };

  // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize
  function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {
      return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);
  }

  function relativeTime$1 (posNegDuration, withoutSuffix, locale) {
      var duration = createDuration(posNegDuration).abs();
      var seconds  = round(duration.as('s'));
      var minutes  = round(duration.as('m'));
      var hours    = round(duration.as('h'));
      var days     = round(duration.as('d'));
      var months   = round(duration.as('M'));
      var years    = round(duration.as('y'));

      var a = seconds < thresholds.s && ['s', seconds]  ||
              minutes <= 1           && ['m']           ||
              minutes < thresholds.m && ['mm', minutes] ||
              hours   <= 1           && ['h']           ||
              hours   < thresholds.h && ['hh', hours]   ||
              days    <= 1           && ['d']           ||
              days    < thresholds.d && ['dd', days]    ||
              months  <= 1           && ['M']           ||
              months  < thresholds.M && ['MM', months]  ||
              years   <= 1           && ['y']           || ['yy', years];

      a[2] = withoutSuffix;
      a[3] = +posNegDuration > 0;
      a[4] = locale;
      return substituteTimeAgo.apply(null, a);
  }

  // This function allows you to set the rounding function for relative time strings
  function getSetRelativeTimeRounding (roundingFunction) {
      if (roundingFunction === undefined) {
          return round;
      }
      if (typeof(roundingFunction) === 'function') {
          round = roundingFunction;
          return true;
      }
      return false;
  }

  // This function allows you to set a threshold for relative time strings
  function getSetRelativeTimeThreshold (threshold, limit) {
      if (thresholds[threshold] === undefined) {
          return false;
      }
      if (limit === undefined) {
          return thresholds[threshold];
      }
      thresholds[threshold] = limit;
      return true;
  }

  function humanize (withSuffix) {
      var locale = this.localeData();
      var output = relativeTime$1(this, !withSuffix, locale);

      if (withSuffix) {
          output = locale.pastFuture(+this, output);
      }

      return locale.postformat(output);
  }

  var abs$1 = Math.abs;

  function toISOString$1() {
      // for ISO strings we do not use the normal bubbling rules:
      //  * milliseconds bubble up until they become hours
      //  * days do not bubble at all
      //  * months bubble up until they become years
      // This is because there is no context-free conversion between hours and days
      // (think of clock changes)
      // and also not between days and months (28-31 days per month)
      var seconds = abs$1(this._milliseconds) / 1000;
      var days         = abs$1(this._days);
      var months       = abs$1(this._months);
      var minutes, hours, years;

      // 3600 seconds -> 60 minutes -> 1 hour
      minutes           = absFloor(seconds / 60);
      hours             = absFloor(minutes / 60);
      seconds %= 60;
      minutes %= 60;

      // 12 months -> 1 year
      years  = absFloor(months / 12);
      months %= 12;


      // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js
      var Y = years;
      var M = months;
      var D = days;
      var h = hours;
      var m = minutes;
      var s = seconds;
      var total = this.asSeconds();

      if (!total) {
          // this is the same as C#'s (Noda) and python (isodate)...
          // but not other JS (goog.date)
          return 'P0D';
      }

      return (total < 0 ? '-' : '') +
          'P' +
          (Y ? Y + 'Y' : '') +
          (M ? M + 'M' : '') +
          (D ? D + 'D' : '') +
          ((h || m || s) ? 'T' : '') +
          (h ? h + 'H' : '') +
          (m ? m + 'M' : '') +
          (s ? s + 'S' : '');
  }

  var proto$2 = Duration.prototype;

  proto$2.abs            = abs;
  proto$2.add            = add$1;
  proto$2.subtract       = subtract$1;
  proto$2.as             = as;
  proto$2.asMilliseconds = asMilliseconds;
  proto$2.asSeconds      = asSeconds;
  proto$2.asMinutes      = asMinutes;
  proto$2.asHours        = asHours;
  proto$2.asDays         = asDays;
  proto$2.asWeeks        = asWeeks;
  proto$2.asMonths       = asMonths;
  proto$2.asYears        = asYears;
  proto$2.valueOf        = valueOf$1;
  proto$2._bubble        = bubble;
  proto$2.get            = get$2;
  proto$2.milliseconds   = milliseconds;
  proto$2.seconds        = seconds;
  proto$2.minutes        = minutes;
  proto$2.hours          = hours;
  proto$2.days           = days;
  proto$2.weeks          = weeks;
  proto$2.months         = months;
  proto$2.years          = years;
  proto$2.humanize       = humanize;
  proto$2.toISOString    = toISOString$1;
  proto$2.toString       = toISOString$1;
  proto$2.toJSON         = toISOString$1;
  proto$2.locale         = locale;
  proto$2.localeData     = localeData;

  // Deprecations
  proto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);
  proto$2.lang = lang;

  // Side effect imports

  // FORMATTING

  addFormatToken('X', 0, 0, 'unix');
  addFormatToken('x', 0, 0, 'valueOf');

  // PARSING

  addRegexToken('x', matchSigned);
  addRegexToken('X', matchTimestamp);
  addParseToken('X', function (input, array, config) {
      config._d = new Date(parseFloat(input, 10) * 1000);
  });
  addParseToken('x', function (input, array, config) {
      config._d = new Date(toInt(input));
  });

  // Side effect imports


  hooks.version = '2.17.1';

  setHookCallback(createLocal);

  hooks.fn                    = proto;
  hooks.min                   = min;
  hooks.max                   = max;
  hooks.now                   = now;
  hooks.utc                   = createUTC;
  hooks.unix                  = createUnix;
  hooks.months                = listMonths;
  hooks.isDate                = isDate;
  hooks.locale                = getSetGlobalLocale;
  hooks.invalid               = createInvalid;
  hooks.duration              = createDuration;
  hooks.isMoment              = isMoment;
  hooks.weekdays              = listWeekdays;
  hooks.parseZone             = createInZone;
  hooks.localeData            = getLocale;
  hooks.isDuration            = isDuration;
  hooks.monthsShort           = listMonthsShort;
  hooks.weekdaysMin           = listWeekdaysMin;
  hooks.defineLocale          = defineLocale;
  hooks.updateLocale          = updateLocale;
  hooks.locales               = listLocales;
  hooks.weekdaysShort         = listWeekdaysShort;
  hooks.normalizeUnits        = normalizeUnits;
  hooks.relativeTimeRounding = getSetRelativeTimeRounding;
  hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;
  hooks.calendarFormat        = getCalendarFormat;
  hooks.prototype             = proto;

  return hooks;

  })));

  /* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(730)(module)))

/***/ },
/* 1270 */,
/* 1271 */
/***/ function(module, exports, __webpack_require__) {

  //! moment.js locale configuration
  //! locale : Afrikaans [af]
  //! author : Werner Mollentze : https://github.com/wernerm

  ;(function (global, factory) {
      true ? factory(__webpack_require__(1269)) :
     typeof define === 'function' && define.amd ? define(['../moment'], factory) :
     factory(global.moment)
  }(this, (function (moment) { 'use strict';


  var af = moment.defineLocale('af', {
      months : 'Januarie_Februarie_Maart_April_Mei_Junie_Julie_Augustus_September_Oktober_November_Desember'.split('_'),
      monthsShort : 'Jan_Feb_Mrt_Apr_Mei_Jun_Jul_Aug_Sep_Okt_Nov_Des'.split('_'),
      weekdays : 'Sondag_Maandag_Dinsdag_Woensdag_Donderdag_Vrydag_Saterdag'.split('_'),
      weekdaysShort : 'Son_Maa_Din_Woe_Don_Vry_Sat'.split('_'),
      weekdaysMin : 'So_Ma_Di_Wo_Do_Vr_Sa'.split('_'),
      meridiemParse: /vm|nm/i,
      isPM : function (input) {
          return /^nm$/i.test(input);
      },
      meridiem : function (hours, minutes, isLower) {
          if (hours < 12) {
              return isLower ? 'vm' : 'VM';
          } else {
              return isLower ? 'nm' : 'NM';
          }
      },
      longDateFormat : {
          LT : 'HH:mm',
          LTS : 'HH:mm:ss',
          L : 'DD/MM/YYYY',
          LL : 'D MMMM YYYY',
          LLL : 'D MMMM YYYY HH:mm',
          LLLL : 'dddd, D MMMM YYYY HH:mm'
      },
      calendar : {
          sameDay : '[Vandag om] LT',
          nextDay : '[Môre om] LT',
          nextWeek : 'dddd [om] LT',
          lastDay : '[Gister om] LT',
          lastWeek : '[Laas] dddd [om] LT',
          sameElse : 'L'
      },
      relativeTime : {
          future : 'oor %s',
          past : '%s gelede',
          s : '\'n paar sekondes',
          m : '\'n minuut',
          mm : '%d minute',
          h : '\'n uur',
          hh : '%d ure',
          d : '\'n dag',
          dd : '%d dae',
          M : '\'n maand',
          MM : '%d maande',
          y : '\'n jaar',
          yy : '%d jaar'
      },
      ordinalParse: /\d{1,2}(ste|de)/,
      ordinal : function (number) {
          return number + ((number === 1 || number === 8 || number >= 20) ? 'ste' : 'de'); // Thanks to Joris Röling : https://github.com/jjupiter
      },
      week : {
          dow : 1, // Maandag is die eerste dag van die week.
          doy : 4  // Die week wat die 4de Januarie bevat is die eerste week van die jaar.
      }
  });

  return af;

  })));


/***/ },
/* 1272 */
/***/ function(module, exports, __webpack_require__) {

  //! moment.js locale configuration
  //! locale : Arabic [ar]
  //! author : Abdel Said: https://github.com/abdelsaid
  //! author : Ahmed Elkhatib
  //! author : forabi https://github.com/forabi

  ;(function (global, factory) {
      true ? factory(__webpack_require__(1269)) :
     typeof define === 'function' && define.amd ? define(['../moment'], factory) :
     factory(global.moment)
  }(this, (function (moment) { 'use strict';


  var symbolMap = {
      '1': '١',
      '2': '٢',
      '3': '٣',
      '4': '٤',
      '5': '٥',
      '6': '٦',
      '7': '٧',
      '8': '٨',
      '9': '٩',
      '0': '٠'
  };
  var numberMap = {
      '١': '1',
      '٢': '2',
      '٣': '3',
      '٤': '4',
      '٥': '5',
      '٦': '6',
      '٧': '7',
      '٨': '8',
      '٩': '9',
      '٠': '0'
  };
  var pluralForm = function (n) {
      return n === 0 ? 0 : n === 1 ? 1 : n === 2 ? 2 : n % 100 >= 3 && n % 100 <= 10 ? 3 : n % 100 >= 11 ? 4 : 5;
  };
  var plurals = {
      s : ['أقل من ثانية', 'ثانية واحدة', ['ثانيتان', 'ثانيتين'], '%d ثوان', '%d ثانية', '%d ثانية'],
      m : ['أقل من دقيقة', 'دقيقة واحدة', ['دقيقتان', 'دقيقتين'], '%d دقائق', '%d دقيقة', '%d دقيقة'],
      h : ['أقل من ساعة', 'ساعة واحدة', ['ساعتان', 'ساعتين'], '%d ساعات', '%d ساعة', '%d ساعة'],
      d : ['أقل من يوم', 'يوم واحد', ['يومان', 'يومين'], '%d أيام', '%d يومًا', '%d يوم'],
      M : ['أقل من شهر', 'شهر واحد', ['شهران', 'شهرين'], '%d أشهر', '%d شهرا', '%d شهر'],
      y : ['أقل من عام', 'عام واحد', ['عامان', 'عامين'], '%d أعوام', '%d عامًا', '%d عام']
  };
  var pluralize = function (u) {
      return function (number, withoutSuffix, string, isFuture) {
          var f = pluralForm(number),
              str = plurals[u][pluralForm(number)];
          if (f === 2) {
              str = str[withoutSuffix ? 0 : 1];
          }
          return str.replace(/%d/i, number);
      };
  };
  var months = [
      'كانون الثاني يناير',
      'شباط فبراير',
      'آذار مارس',
      'نيسان أبريل',
      'أيار مايو',
      'حزيران يونيو',
      'تموز يوليو',
      'آب أغسطس',
      'أيلول سبتمبر',
      'تشرين الأول أكتوبر',
      'تشرين الثاني نوفمبر',
      'كانون الأول ديسمبر'
  ];

  var ar = moment.defineLocale('ar', {
      months : months,
      monthsShort : months,
      weekdays : 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
      weekdaysShort : 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
      weekdaysMin : 'ح_ن_ث_ر_خ_ج_س'.split('_'),
      weekdaysParseExact : true,
      longDateFormat : {
          LT : 'HH:mm',
          LTS : 'HH:mm:ss',
          L : 'D/\u200FM/\u200FYYYY',
          LL : 'D MMMM YYYY',
          LLL : 'D MMMM YYYY HH:mm',
          LLLL : 'dddd D MMMM YYYY HH:mm'
      },
      meridiemParse: /ص|م/,
      isPM : function (input) {
          return 'م' === input;
      },
      meridiem : function (hour, minute, isLower) {
          if (hour < 12) {
              return 'ص';
          } else {
              return 'م';
          }
      },
      calendar : {
          sameDay: '[اليوم عند الساعة] LT',
          nextDay: '[غدًا عند الساعة] LT',
          nextWeek: 'dddd [عند الساعة] LT',
          lastDay: '[أمس عند الساعة] LT',
          lastWeek: 'dddd [عند الساعة] LT',
          sameElse: 'L'
      },
      relativeTime : {
          future : 'بعد %s',
          past : 'منذ %s',
          s : pluralize('s'),
          m : pluralize('m'),
          mm : pluralize('m'),
          h : pluralize('h'),
          hh : pluralize('h'),
          d : pluralize('d'),
          dd : pluralize('d'),
          M : pluralize('M'),
          MM : pluralize('M'),
          y : pluralize('y'),
          yy : pluralize('y')
      },
      preparse: function (string) {
          return string.replace(/\u200f/g, '').replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (match) {
              return numberMap[match];
          }).replace(/،/g, ',');
      },
      postformat: function (string) {
          return string.replace(/\d/g, function (match) {
              return symbolMap[match];
          }).replace(/,/g, '،');
      },
      week : {
          dow : 6, // Saturday is the first day of the week.
          doy : 12  // The week that contains Jan 1st is the first week of the year.
      }
  });

  return ar;

  })));


/***/ },
/* 1273 */
/***/ function(module, exports, __webpack_require__) {

  //! moment.js locale configuration
  //! locale : Arabic (Algeria) [ar-dz]
  //! author : Noureddine LOUAHEDJ : https://github.com/noureddineme

  ;(function (global, factory) {
      true ? factory(__webpack_require__(1269)) :
     typeof define === 'function' && define.amd ? define(['../moment'], factory) :
     factory(global.moment)
  }(this, (function (moment) { 'use strict';


  var arDz = moment.defineLocale('ar-dz', {
      months : 'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
      monthsShort : 'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
      weekdays : 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
      weekdaysShort : 'احد_اثنين_ثلاثاء_اربعاء_خميس_جمعة_سبت'.split('_'),
      weekdaysMin : 'أح_إث_ثلا_أر_خم_جم_سب'.split('_'),
      weekdaysParseExact : true,
      longDateFormat : {
          LT : 'HH:mm',
          LTS : 'HH:mm:ss',
          L : 'DD/MM/YYYY',
          LL : 'D MMMM YYYY',
          LLL : 'D MMMM YYYY HH:mm',
          LLLL : 'dddd D MMMM YYYY HH:mm'
      },
      calendar : {
          sameDay: '[اليوم على الساعة] LT',
          nextDay: '[غدا على الساعة] LT',
          nextWeek: 'dddd [على الساعة] LT',
          lastDay: '[أمس على الساعة] LT',
          lastWeek: 'dddd [على الساعة] LT',
          sameElse: 'L'
      },
      relativeTime : {
          future : 'في %s',
          past : 'منذ %s',
          s : 'ثوان',
          m : 'دقيقة',
          mm : '%d دقائق',
          h : 'ساعة',
          hh : '%d ساعات',
          d : 'يوم',
          dd : '%d أيام',
          M : 'شهر',
          MM : '%d أشهر',
          y : 'سنة',
          yy : '%d سنوات'
      },
      week : {
          dow : 0, // Sunday is the first day of the week.
          doy : 4  // The week that contains Jan 1st is the first week of the year.
      }
  });

  return arDz;

  })));


/***/ },
/* 1274 */
/***/ function(module, exports, __webpack_require__) {

  //! moment.js locale configuration
  //! locale : Arabic (Lybia) [ar-ly]
  //! author : Ali Hmer: https://github.com/kikoanis

  ;(function (global, factory) {
      true ? factory(__webpack_require__(1269)) :
     typeof define === 'function' && define.amd ? define(['../moment'], factory) :
     factory(global.moment)
  }(this, (function (moment) { 'use strict';


  var symbolMap = {
      '1': '1',
      '2': '2',
      '3': '3',
      '4': '4',
      '5': '5',
      '6': '6',
      '7': '7',
      '8': '8',
      '9': '9',
      '0': '0'
  };
  var pluralForm = function (n) {
      return n === 0 ? 0 : n === 1 ? 1 : n === 2 ? 2 : n % 100 >= 3 && n % 100 <= 10 ? 3 : n % 100 >= 11 ? 4 : 5;
  };
  var plurals = {
      s : ['أقل من ثانية', 'ثانية واحدة', ['ثانيتان', 'ثانيتين'], '%d ثوان', '%d ثانية', '%d ثانية'],
      m : ['أقل من دقيقة', 'دقيقة واحدة', ['دقيقتان', 'دقيقتين'], '%d دقائق', '%d دقيقة', '%d دقيقة'],
      h : ['أقل من ساعة', 'ساعة واحدة', ['ساعتان', 'ساعتين'], '%d ساعات', '%d ساعة', '%d ساعة'],
      d : ['أقل من يوم', 'يوم واحد', ['يومان', 'يومين'], '%d أيام', '%d يومًا', '%d يوم'],
      M : ['أقل من شهر', 'شهر واحد', ['شهران', 'شهرين'], '%d أشهر', '%d شهرا', '%d شهر'],
      y : ['أقل من عام', 'عام واحد', ['عامان', 'عامين'], '%d أعوام', '%d عامًا', '%d عام']
  };
  var pluralize = function (u) {
      return function (number, withoutSuffix, string, isFuture) {
          var f = pluralForm(number),
              str = plurals[u][pluralForm(number)];
          if (f === 2) {
              str = str[withoutSuffix ? 0 : 1];
          }
          return str.replace(/%d/i, number);
      };
  };
  var months = [
      'يناير',
      'فبراير',
      'مارس',
      'أبريل',
      'مايو',
      'يونيو',
      'يوليو',
      'أغسطس',
      'سبتمبر',
      'أكتوبر',
      'نوفمبر',
      'ديسمبر'
  ];

  var arLy = moment.defineLocale('ar-ly', {
      months : months,
      monthsShort : months,
      weekdays : 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
      weekdaysShort : 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
      weekdaysMin : 'ح_ن_ث_ر_خ_ج_س'.split('_'),
      weekdaysParseExact : true,
      longDateFormat : {
          LT : 'HH:mm',
          LTS : 'HH:mm:ss',
          L : 'D/\u200FM/\u200FYYYY',
          LL : 'D MMMM YYYY',
          LLL : 'D MMMM YYYY HH:mm',
          LLLL : 'dddd D MMMM YYYY HH:mm'
      },
      meridiemParse: /ص|م/,
      isPM : function (input) {
          return 'م' === input;
      },
      meridiem : function (hour, minute, isLower) {
          if (hour < 12) {
              return 'ص';
          } else {
              return 'م';
          }
      },
      calendar : {
          sameDay: '[اليوم عند الساعة] LT',
          nextDay: '[غدًا عند الساعة] LT',
          nextWeek: 'dddd [عند الساعة] LT',
          lastDay: '[أمس عند الساعة] LT',
          lastWeek: 'dddd [عند الساعة] LT',
          sameElse: 'L'
      },
      relativeTime : {
          future : 'بعد %s',
          past : 'منذ %s',
          s : pluralize('s'),
          m : pluralize('m'),
          mm : pluralize('m'),
          h : pluralize('h'),
          hh : pluralize('h'),
          d : pluralize('d'),
          dd : pluralize('d'),
          M : pluralize('M'),
          MM : pluralize('M'),
          y : pluralize('y'),
          yy : pluralize('y')
      },
      preparse: function (string) {
          return string.replace(/\u200f/g, '').replace(/،/g, ',');
      },
      postformat: function (string) {
          return string.replace(/\d/g, function (match) {
              return symbolMap[match];
          }).replace(/,/g, '،');
      },
      week : {
          dow : 6, // Saturday is the first day of the week.
          doy : 12  // The week that contains Jan 1st is the first week of the year.
      }
  });

  return arLy;

  })));


/***/ },
/* 1275 */
/***/ function(module, exports, __webpack_require__) {

  //! moment.js locale configuration
  //! locale : Arabic (Morocco) [ar-ma]
  //! author : ElFadili Yassine : https://github.com/ElFadiliY
  //! author : Abdel Said : https://github.com/abdelsaid

  ;(function (global, factory) {
      true ? factory(__webpack_require__(1269)) :
     typeof define === 'function' && define.amd ? define(['../moment'], factory) :
     factory(global.moment)
  }(this, (function (moment) { 'use strict';


  var arMa = moment.defineLocale('ar-ma', {
      months : 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split('_'),
      monthsShort : 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split('_'),
      weekdays : 'الأحد_الإتنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
      weekdaysShort : 'احد_اتنين_ثلاثاء_اربعاء_خميس_جمعة_سبت'.split('_'),
      weekdaysMin : 'ح_ن_ث_ر_خ_ج_س'.split('_'),
      weekdaysParseExact : true,
      longDateFormat : {
          LT : 'HH:mm',
          LTS : 'HH:mm:ss',
          L : 'DD/MM/YYYY',
          LL : 'D MMMM YYYY',
          LLL : 'D MMMM YYYY HH:mm',
          LLLL : 'dddd D MMMM YYYY HH:mm'
      },
      calendar : {
          sameDay: '[اليوم على الساعة] LT',
          nextDay: '[غدا على الساعة] LT',
          nextWeek: 'dddd [على الساعة] LT',
          lastDay: '[أمس على الساعة] LT',
          lastWeek: 'dddd [على الساعة] LT',
          sameElse: 'L'
      },
      relativeTime : {
          future : 'في %s',
          past : 'منذ %s',
          s : 'ثوان',
          m : 'دقيقة',
          mm : '%d دقائق',
          h : 'ساعة',
          hh : '%d ساعات',
          d : 'يوم',
          dd : '%d أيام',
          M : 'شهر',
          MM : '%d أشهر',
          y : 'سنة',
          yy : '%d سنوات'
      },
      week : {
          dow : 6, // Saturday is the first day of the week.
          doy : 12  // The week that contains Jan 1st is the first week of the year.
      }
  });

  return arMa;

  })));


/***/ },
/* 1276 */
/***/ function(module, exports, __webpack_require__) {

  //! moment.js locale configuration
  //! locale : Arabic (Saudi Arabia) [ar-sa]
  //! author : Suhail Alkowaileet : https://github.com/xsoh

  ;(function (global, factory) {
      true ? factory(__webpack_require__(1269)) :
     typeof define === 'function' && define.amd ? define(['../moment'], factory) :
     factory(global.moment)
  }(this, (function (moment) { 'use strict';


  var symbolMap = {
      '1': '١',
      '2': '٢',
      '3': '٣',
      '4': '٤',
      '5': '٥',
      '6': '٦',
      '7': '٧',
      '8': '٨',
      '9': '٩',
      '0': '٠'
  };
  var numberMap = {
      '١': '1',
      '٢': '2',
      '٣': '3',
      '٤': '4',
      '٥': '5',
      '٦': '6',
      '٧': '7',
      '٨': '8',
      '٩': '9',
      '٠': '0'
  };

  var arSa = moment.defineLocale('ar-sa', {
      months : 'يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
      monthsShort : 'يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
      weekdays : 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
      weekdaysShort : 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
      weekdaysMin : 'ح_ن_ث_ر_خ_ج_س'.split('_'),
      weekdaysParseExact : true,
      longDateFormat : {
          LT : 'HH:mm',
          LTS : 'HH:mm:ss',
          L : 'DD/MM/YYYY',
          LL : 'D MMMM YYYY',
          LLL : 'D MMMM YYYY HH:mm',
          LLLL : 'dddd D MMMM YYYY HH:mm'
      },
      meridiemParse: /ص|م/,
      isPM : function (input) {
          return 'م' === input;
      },
      meridiem : function (hour, minute, isLower) {
          if (hour < 12) {
              return 'ص';
          } else {
              return 'م';
          }
      },
      calendar : {
          sameDay: '[اليوم على الساعة] LT',
          nextDay: '[غدا على الساعة] LT',
          nextWeek: 'dddd [على الساعة] LT',
          lastDay: '[أمس على الساعة] LT',
          lastWeek: 'dddd [على الساعة] LT',
          sameElse: 'L'
      },
      relativeTime : {
          future : 'في %s',
          past : 'منذ %s',
          s : 'ثوان',
          m : 'دقيقة',
          mm : '%d دقائق',
          h : 'ساعة',
          hh : '%d ساعات',
          d : 'يوم',
          dd : '%d أيام',
          M : 'شهر',
          MM : '%d أشهر',
          y : 'سنة',
          yy : '%d سنوات'
      },
      preparse: function (string) {
          return string.replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (match) {
              return numberMap[match];
          }).replace(/،/g, ',');
      },
      postformat: function (string) {
          return string.replace(/\d/g, function (match) {
              return symbolMap[match];
          }).replace(/,/g, '،');
      },
      week : {
          dow : 0, // Sunday is the first day of the week.
          doy : 6  // The week that contains Jan 1st is the first week of the year.
      }
  });

  return arSa;

  })));


/***/ },
/* 1277 */
/***/ function(module, exports, __webpack_require__) {

  //! moment.js locale configuration
  //! locale  :  Arabic (Tunisia) [ar-tn]
  //! author : Nader Toukabri : https://github.com/naderio

  ;(function (global, factory) {
      true ? factory(__webpack_require__(1269)) :
     typeof define === 'function' && define.amd ? define(['../moment'], factory) :
     factory(global.moment)
  }(this, (function (moment) { 'use strict';


  var arTn = moment.defineLocale('ar-tn', {
      months: 'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
      monthsShort: 'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
      weekdays: 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
      weekdaysShort: 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
      weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),
      weekdaysParseExact : true,
      longDateFormat: {
          LT: 'HH:mm',
          LTS: 'HH:mm:ss',
          L: 'DD/MM/YYYY',
          LL: 'D MMMM YYYY',
          LLL: 'D MMMM YYYY HH:mm',
          LLLL: 'dddd D MMMM YYYY HH:mm'
      },
      calendar: {
          sameDay: '[اليوم على الساعة] LT',
          nextDay: '[غدا على الساعة] LT',
          nextWeek: 'dddd [على الساعة] LT',
          lastDay: '[أمس على الساعة] LT',
          lastWeek: 'dddd [على الساعة] LT',
          sameElse: 'L'
      },
      relativeTime: {
          future: 'في %s',
          past: 'منذ %s',
          s: 'ثوان',
          m: 'دقيقة',
          mm: '%d دقائق',
          h: 'ساعة',
          hh: '%d ساعات',
          d: 'يوم',
          dd: '%d أيام',
          M: 'شهر',
          MM: '%d أشهر',
          y: 'سنة',
          yy: '%d سنوات'
      },
      week: {
          dow: 1, // Monday is the first day of the week.
          doy: 4 // The week that contains Jan 4th is the first week of the year.
      }
  });

  return arTn;

  })));


/***/ },
/* 1278 */
/***/ function(module, exports, __webpack_require__) {

  //! moment.js locale configuration
  //! locale : Azerbaijani [az]
  //! author : topchiyev : https://github.com/topchiyev

  ;(function (global, factory) {
      true ? factory(__webpack_require__(1269)) :
     typeof define === 'function' && define.amd ? define(['../moment'], factory) :
     factory(global.moment)
  }(this, (function (moment) { 'use strict';


  var suffixes = {
      1: '-inci',
      5: '-inci',
      8: '-inci',
      70: '-inci',
      80: '-inci',
      2: '-nci',
      7: '-nci',
      20: '-nci',
      50: '-nci',
      3: '-üncü',
      4: '-üncü',
      100: '-üncü',
      6: '-ncı',
      9: '-uncu',
      10: '-uncu',
      30: '-uncu',
      60: '-ıncı',
      90: '-ıncı'
  };

  var az = moment.defineLocale('az', {
      months : 'yanvar_fevral_mart_aprel_may_iyun_iyul_avqust_sentyabr_oktyabr_noyabr_dekabr'.split('_'),
      monthsShort : 'yan_fev_mar_apr_may_iyn_iyl_avq_sen_okt_noy_dek'.split('_'),
      weekdays : 'Bazar_Bazar ertəsi_Çərşənbə axşamı_Çərşənbə_Cümə axşamı_Cümə_Şənbə'.split('_'),
      weekdaysShort : 'Baz_BzE_ÇAx_Çər_CAx_Cüm_Şən'.split('_'),
      weekdaysMin : 'Bz_BE_ÇA_Çə_CA_Cü_Şə'.split('_'),
      weekdaysParseExact : true,
      longDateFormat : {
          LT : 'HH:mm',
          LTS : 'HH:mm:ss',
          L : 'DD.MM.YYYY',
          LL : 'D MMMM YYYY',
          LLL : 'D MMMM YYYY HH:mm',
          LLLL : 'dddd, D MMMM YYYY HH:mm'
      },
      calendar : {
          sameDay : '[bugün saat] LT',
          nextDay : '[sabah saat] LT',
          nextWeek : '[gələn həftə] dddd [saat] LT',
          lastDay : '[dünən] LT',
          lastWeek : '[keçən həftə] dddd [saat] LT',
          sameElse : 'L'
      },
      relativeTime : {
          future : '%s sonra',
          past : '%s əvvəl',
          s : 'birneçə saniyyə',
          m : 'bir dəqiqə',
          mm : '%d dəqiqə',
          h : 'bir saat',
          hh : '%d saat',
          d : 'bir gün',
          dd : '%d gün',
          M : 'bir ay',
          MM : '%d ay',
          y : 'bir il',
          yy : '%d il'
      },
      meridiemParse: /gecə|səhər|gündüz|axşam/,
      isPM : function (input) {
          return /^(gündüz|axşam)$/.test(input);
      },
      meridiem : function (hour, minute, isLower) {
          if (hour < 4) {
              return 'gecə';
          } else if (hour < 12) {
              return 'səhər';
          } else if (hour < 17) {
              return 'gündüz';
          } else {
              return 'axşam';
          }
      },
      ordinalParse: /\d{1,2}-(ıncı|inci|nci|üncü|ncı|uncu)/,
      ordinal : function (number) {
          if (number === 0) {  // special case for zero
              return number + '-ıncı';
          }
          var a = number % 10,
              b = number % 100 - a,
              c = number >= 100 ? 100 : null;
          return number + (suffixes[a] || suffixes[b] || suffixes[c]);
      },
      week : {
          dow : 1, // Monday is the first day of the week.
          doy : 7  // The week that contains Jan 1st is the first week of the year.
      }
  });

  return az;

  })));


/***/ },
/* 1279 */
/***/ function(module, exports, __webpack_require__) {

  //! moment.js locale configuration
  //! locale : Belarusian [be]
  //! author : Dmitry Demidov : https://github.com/demidov91
  //! author: Praleska: http://praleska.pro/
  //! Author : Menelion Elensúle : https://github.com/Oire

  ;(function (global, factory) {
      true ? factory(__webpack_require__(1269)) :
     typeof define === 'function' && define.amd ? define(['../moment'], factory) :
     factory(global.moment)
  }(this, (function (moment) { 'use strict';


  function plural(word, num) {
      var forms = word.split('_');
      return num % 10 === 1 && num % 100 !== 11 ? forms[0] : (num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2]);
  }
  function relativeTimeWithPlural(number, withoutSuffix, key) {
      var format = {
          'mm': withoutSuffix ? 'хвіліна_хвіліны_хвілін' : 'хвіліну_хвіліны_хвілін',
          'hh': withoutSuffix ? 'гадзіна_гадзіны_гадзін' : 'гадзіну_гадзіны_гадзін',
          'dd': 'дзень_дні_дзён',
          'MM': 'месяц_месяцы_месяцаў',
          'yy': 'год_гады_гадоў'
      };
      if (key === 'm') {
          return withoutSuffix ? 'хвіліна' : 'хвіліну';
      }
      else if (key === 'h') {
          return withoutSuffix ? 'гадзіна' : 'гадзіну';
      }
      else {
          return number + ' ' + plural(format[key], +number);
      }
  }

  var be = moment.defineLocale('be', {
      months : {
          format: 'студзеня_лютага_сакавіка_красавіка_траўня_чэрвеня_ліпеня_жніўня_верасня_кастрычніка_лістапада_снежня'.split('_'),
          standalone: 'студзень_люты_сакавік_красавік_травень_чэрвень_ліпень_жнівень_верасень_кастрычнік_лістапад_снежань'.split('_')
      },
      monthsShort : 'студ_лют_сак_крас_трав_чэрв_ліп_жнів_вер_каст_ліст_снеж'.split('_'),
      weekdays : {
          format: 'нядзелю_панядзелак_аўторак_сераду_чацвер_пятніцу_суботу'.split('_'),
          standalone: 'нядзеля_панядзелак_аўторак_серада_чацвер_пятніца_субота'.split('_'),
          isFormat: /\[ ?[Вв] ?(?:мінулую|наступную)? ?\] ?dddd/
      },
      weekdaysShort : 'нд_пн_ат_ср_чц_пт_сб'.split('_'),
      weekdaysMin : 'нд_пн_ат_ср_чц_пт_сб'.split('_'),
      longDateFormat : {
          LT : 'HH:mm',
          LTS : 'HH:mm:ss',
          L : 'DD.MM.YYYY',
          LL : 'D MMMM YYYY г.',
          LLL : 'D MMMM YYYY г., HH:mm',
          LLLL : 'dddd, D MMMM YYYY г., HH:mm'
      },
      calendar : {
          sameDay: '[Сёння ў] LT',
          nextDay: '[Заўтра ў] LT',
          lastDay: '[Учора ў] LT',
          nextWeek: function () {
              return '[У] dddd [ў] LT';
          },
          lastWeek: function () {
              switch (this.day()) {
                  case 0:
                  case 3:
                  case 5:
                  case 6:
                      return '[У мінулую] dddd [ў] LT';
                  case 1:
                  case 2:
                  case 4:
                      return '[У мінулы] dddd [ў] LT';
              }
          },
          sameElse: 'L'
      },
      relativeTime : {
          future : 'праз %s',
          past : '%s таму',
          s : 'некалькі секунд',
          m : relativeTimeWithPlural,
          mm : relativeTimeWithPlural,
          h : relativeTimeWithPlural,
          hh : relativeTimeWithPlural,
          d : 'дзень',
          dd : relativeTimeWithPlural,
          M : 'месяц',
          MM : relativeTimeWithPlural,
          y : 'год',
          yy : relativeTimeWithPlural
      },
      meridiemParse: /ночы|раніцы|дня|вечара/,
      isPM : function (input) {
          return /^(дня|вечара)$/.test(input);
      },
      meridiem : function (hour, minute, isLower) {
          if (hour < 4) {
              return 'ночы';
          } else if (hour < 12) {
              return 'раніцы';
          } else if (hour < 17) {
              return 'дня';
          } else {
              return 'вечара';
          }
      },
      ordinalParse: /\d{1,2}-(і|ы|га)/,
      ordinal: function (number, period) {
          switch (period) {
              case 'M':
              case 'd':
              case 'DDD':
              case 'w':
              case 'W':
                  return (number % 10 === 2 || number % 10 === 3) && (number % 100 !== 12 && number % 100 !== 13) ? number + '-і' : number + '-ы';
              case 'D':
                  return number + '-га';
              default:
                  return number;
          }
      },
      week : {
          dow : 1, // Monday is the first day of the week.
          doy : 7  // The week that contains Jan 1st is the first week of the year.
      }
  });

  return be;

  })));


/***/ },
/* 1280 */
/***/ function(module, exports, __webpack_require__) {

  //! moment.js locale configuration
  //! locale : Bulgarian [bg]
  //! author : Krasen Borisov : https://github.com/kraz

  ;(function (global, factory) {
      true ? factory(__webpack_require__(1269)) :
     typeof define === 'function' && define.amd ? define(['../moment'], factory) :
     factory(global.moment)
  }(this, (function (moment) { 'use strict';


  var bg = moment.defineLocale('bg', {
      months : 'януари_февруари_март_април_май_юни_юли_август_септември_октомври_ноември_декември'.split('_'),
      monthsShort : 'янр_фев_мар_апр_май_юни_юли_авг_сеп_окт_ное_дек'.split('_'),
      weekdays : 'неделя_понеделник_вторник_сряда_четвъртък_петък_събота'.split('_'),
      weekdaysShort : 'нед_пон_вто_сря_чет_пет_съб'.split('_'),
      weekdaysMin : 'нд_пн_вт_ср_чт_пт_сб'.split('_'),
      longDateFormat : {
          LT : 'H:mm',
          LTS : 'H:mm:ss',
          L : 'D.MM.YYYY',
          LL : 'D MMMM YYYY',
          LLL : 'D MMMM YYYY H:mm',
          LLLL : 'dddd, D MMMM YYYY H:mm'
      },
      calendar : {
          sameDay : '[Днес в] LT',
          nextDay : '[Утре в] LT',
          nextWeek : 'dddd [в] LT',
          lastDay : '[Вчера в] LT',
          lastWeek : function () {
              switch (this.day()) {
                  case 0:
                  case 3:
                  case 6:
                      return '[В изминалата] dddd [в] LT';
                  case 1:
                  case 2:
                  case 4:
                  case 5:
                      return '[В изминалия] dddd [в] LT';
              }
          },
          sameElse : 'L'
      },
      relativeTime : {
          future : 'след %s',
          past : 'преди %s',
          s : 'няколко секунди',
          m : 'минута',
          mm : '%d минути',
          h : 'час',
          hh : '%d часа',
          d : 'ден',
          dd : '%d дни',
          M : 'месец',
          MM : '%d месеца',
          y : 'година',
          yy : '%d години'
      },
      ordinalParse: /\d{1,2}-(ев|ен|ти|ви|ри|ми)/,
      ordinal : function (number) {
          var lastDigit = number % 10,
              last2Digits = number % 100;
          if (number === 0) {
              return number + '-ев';
          } else if (last2Digits === 0) {
              return number + '-ен';
          } else if (last2Digits > 10 && last2Digits < 20) {
              return number + '-ти';
          } else if (lastDigit === 1) {
              return number + '-ви';
          } else if (lastDigit === 2) {
              return number + '-ри';
          } else if (lastDigit === 7 || lastDigit === 8) {
              return number + '-ми';
          } else {
              return number + '-ти';
          }
      },
      week : {
          dow : 1, // Monday is the first day of the week.
          doy : 7  // The week that contains Jan 1st is the first week of the year.
      }
  });

  return bg;

  })));


/***/ },
/* 1281 */
/***/ function(module, exports, __webpack_require__) {

  //! moment.js locale configuration
  //! locale : Bengali [bn]
  //! author : Kaushik Gandhi : https://github.com/kaushikgandhi

  ;(function (global, factory) {
      true ? factory(__webpack_require__(1269)) :
     typeof define === 'function' && define.amd ? define(['../moment'], factory) :
     factory(global.moment)
  }(this, (function (moment) { 'use strict';


  var symbolMap = {
      '1': '১',
      '2': '২',
      '3': '৩',
      '4': '৪',
      '5': '৫',
      '6': '৬',
      '7': '৭',
      '8': '৮',
      '9': '৯',
      '0': '০'
  };
  var numberMap = {
      '১': '1',
      '২': '2',
      '৩': '3',
      '৪': '4',
      '৫': '5',
      '৬': '6',
      '৭': '7',
      '৮': '8',
      '৯': '9',
      '০': '0'
  };

  var bn = moment.defineLocale('bn', {
      months : 'জানুয়ারী_ফেব্রুয়ারি_মার্চ_এপ্রিল_মে_জুন_জুলাই_আগস্ট_সেপ্টেম্বর_অক্টোবর_নভেম্বর_ডিসেম্বর'.split('_'),
      monthsShort : 'জানু_ফেব_মার্চ_এপ্র_মে_জুন_জুল_আগ_সেপ্ট_অক্টো_নভে_ডিসে'.split('_'),
      weekdays : 'রবিবার_সোমবার_মঙ্গলবার_বুধবার_বৃহস্পতিবার_শুক্রবার_শনিবার'.split('_'),
      weekdaysShort : 'রবি_সোম_মঙ্গল_বুধ_বৃহস্পতি_শুক্র_শনি'.split('_'),
      weekdaysMin : 'রবি_সোম_মঙ্গ_বুধ_বৃহঃ_শুক্র_শনি'.split('_'),
      longDateFormat : {
          LT : 'A h:mm সময়',
          LTS : 'A h:mm:ss সময়',
          L : 'DD/MM/YYYY',
          LL : 'D MMMM YYYY',
          LLL : 'D MMMM YYYY, A h:mm সময়',
          LLLL : 'dddd, D MMMM YYYY, A h:mm সময়'
      },
      calendar : {
          sameDay : '[আজ] LT',
          nextDay : '[আগামীকাল] LT',
          nextWeek : 'dddd, LT',
          lastDay : '[গতকাল] LT',
          lastWeek : '[গত] dddd, LT',
          sameElse : 'L'
      },
      relativeTime : {
          future : '%s পরে',
          past : '%s আগে',
          s : 'কয়েক সেকেন্ড',
          m : 'এক মিনিট',
          mm : '%d মিনিট',
          h : 'এক ঘন্টা',
          hh : '%d ঘন্টা',
          d : 'এক দিন',
          dd : '%d দিন',
          M : 'এক মাস',
          MM : '%d মাস',
          y : 'এক বছর',
          yy : '%d বছর'
      },
      preparse: function (string) {
          return string.replace(/[১২৩৪৫৬৭৮৯০]/g, function (match) {
              return numberMap[match];
          });
      },
      postformat: function (string) {
          return string.replace(/\d/g, function (match) {
              return symbolMap[match];
          });
      },
      meridiemParse: /রাত|সকাল|দুপুর|বিকাল|রাত/,
      meridiemHour : function (hour, meridiem) {
          if (hour === 12) {
              hour = 0;
          }
          if ((meridiem === 'রাত' && hour >= 4) ||
                  (meridiem === 'দুপুর' && hour < 5) ||
                  meridiem === 'বিকাল') {
              return hour + 12;
          } else {
              return hour;
          }
      },
      meridiem : function (hour, minute, isLower) {
          if (hour < 4) {
              return 'রাত';
          } else if (hour < 10) {
              return 'সকাল';
          } else if (hour < 17) {
              return 'দুপুর';
          } else if (hour < 20) {
              return 'বিকাল';
          } else {
              return 'রাত';
          }
      },
      week : {
          dow : 0, // Sunday is the first day of the week.
          doy : 6  // The week that contains Jan 1st is the first week of the year.
      }
  });

  return bn;

  })));


/***/ },
/* 1282 */
/***/ function(module, exports, __webpack_require__) {

  //! moment.js locale configuration
  //! locale : Tibetan [bo]
  //! author : Thupten N. Chakrishar : https://github.com/vajradog

  ;(function (global, factory) {
      true ? factory(__webpack_require__(1269)) :
     typeof define === 'function' && define.amd ? define(['../moment'], factory) :
     factory(global.moment)
  }(this, (function (moment) { 'use strict';


  var symbolMap = {
      '1': '༡',
      '2': '༢',
      '3': '༣',
      '4': '༤',
      '5': '༥',
      '6': '༦',
      '7': '༧',
      '8': '༨',
      '9': '༩',
      '0': '༠'
  };
  var numberMap = {
      '༡': '1',
      '༢': '2',
      '༣': '3',
      '༤': '4',
      '༥': '5',
      '༦': '6',
      '༧': '7',
      '༨': '8',
      '༩': '9',
      '༠': '0'
  };

  var bo = moment.defineLocale('bo', {
      months : 'ཟླ་བ་དང་པོ_ཟླ་བ་གཉིས་པ_ཟླ་བ་གསུམ་པ_ཟླ་བ་བཞི་པ_ཟླ་བ་ལྔ་པ_ཟླ་བ་དྲུག་པ_ཟླ་བ་བདུན་པ_ཟླ་བ་བརྒྱད་པ_ཟླ་བ་དགུ་པ_ཟླ་བ་བཅུ་པ_ཟླ་བ་བཅུ་གཅིག་པ_ཟླ་བ་བཅུ་གཉིས་པ'.split('_'),
      monthsShort : 'ཟླ་བ་དང་པོ_ཟླ་བ་གཉིས་པ_ཟླ་བ་གསུམ་པ_ཟླ་བ་བཞི་པ_ཟླ་བ་ལྔ་པ_ཟླ་བ་དྲུག་པ_ཟླ་བ་བདུན་པ_ཟླ་བ་བརྒྱད་པ_ཟླ་བ་དགུ་པ_ཟླ་བ་བཅུ་པ_ཟླ་བ་བཅུ་གཅིག་པ_ཟླ་བ་བཅུ་གཉིས་པ'.split('_'),
      weekdays : 'གཟའ་ཉི་མ་_གཟའ་ཟླ་བ་_གཟའ་མིག་དམར་_གཟའ་ལྷག་པ་_གཟའ་ཕུར་བུ_གཟའ་པ་སངས་_གཟའ་སྤེན་པ་'.split('_'),
      weekdaysShort : 'ཉི་མ་_ཟླ་བ་_མིག་དམར་_ལྷག་པ་_ཕུར་བུ_པ་སངས་_སྤེན་པ་'.split('_'),
      weekdaysMin : 'ཉི་མ་_ཟླ་བ་_མིག་དམར་_ལྷག་པ་_ཕུར་བུ_པ་སངས་_སྤེན་པ་'.split('_'),
      longDateFormat : {
          LT : 'A h:mm',
          LTS : 'A h:mm:ss',
          L : 'DD/MM/YYYY',
          LL : 'D MMMM YYYY',
          LLL : 'D MMMM YYYY, A h:mm',
          LLLL : 'dddd, D MMMM YYYY, A h:mm'
      },
      calendar : {
          sameDay : '[དི་རིང] LT',
          nextDay : '[སང་ཉིན] LT',
          nextWeek : '[བདུན་ཕྲག་རྗེས་མ], LT',
          lastDay : '[ཁ་སང] LT',
          lastWeek : '[བདུན་ཕྲག་མཐའ་མ] dddd, LT',
          sameElse : 'L'
      },
      relativeTime : {
          future : '%s ལ་',
          past : '%s སྔན་ལ',
          s : 'ལམ་སང',
          m : 'སྐར་མ་གཅིག',
          mm : '%d སྐར་མ',
          h : 'ཆུ་ཚོད་གཅིག',
          hh : '%d ཆུ་ཚོད',
          d : 'ཉིན་གཅིག',
          dd : '%d ཉིན་',
          M : 'ཟླ་བ་གཅིག',
          MM : '%d ཟླ་བ',
          y : 'ལོ་གཅིག',
          yy : '%d ལོ'
      },
      preparse: function (string) {
          return string.replace(/[༡༢༣༤༥༦༧༨༩༠]/g, function (match) {
              return numberMap[match];
          });
      },
      postformat: function (string) {
          return string.replace(/\d/g, function (match) {
              return symbolMap[match];
          });
      },
      meridiemParse: /མཚན་མོ|ཞོགས་ཀས|ཉིན་གུང|དགོང་དག|མཚན་མོ/,
      meridiemHour : function (hour, meridiem) {
          if (hour === 12) {
              hour = 0;
          }
          if ((meridiem === 'མཚན་མོ' && hour >= 4) ||
                  (meridiem === 'ཉིན་གུང' && hour < 5) ||
                  meridiem === 'དགོང་དག') {
              return hour + 12;
          } else {
              return hour;
          }
      },
      meridiem : function (hour, minute, isLower) {
          if (hour < 4) {
              return 'མཚན་མོ';
          } else if (hour < 10) {
              return 'ཞོགས་ཀས';
          } else if (hour < 17) {
              return 'ཉིན་གུང';
          } else if (hour < 20) {
              return 'དགོང་དག';
          } else {
              return 'མཚན་མོ';
          }
      },
      week : {
          dow : 0, // Sunday is the first day of the week.
          doy : 6  // The week that contains Jan 1st is the first week of the year.
      }
  });

  return bo;

  })));


/***/ },
/* 1283 */
/***/ function(module, exports, __webpack_require__) {

  //! moment.js locale configuration
  //! locale : Breton [br]
  //! author : Jean-Baptiste Le Duigou : https://github.com/jbleduigou

  ;(function (global, factory) {
      true ? factory(__webpack_require__(1269)) :
     typeof define === 'function' && define.amd ? define(['../moment'], factory) :
     factory(global.moment)
  }(this, (function (moment) { 'use strict';


  function relativeTimeWithMutation(number, withoutSuffix, key) {
      var format = {
          'mm': 'munutenn',
          'MM': 'miz',
          'dd': 'devezh'
      };
      return number + ' ' + mutation(format[key], number);
  }
  function specialMutationForYears(number) {
      switch (lastNumber(number)) {
          case 1:
          case 3:
          case 4:
          case 5:
          case 9:
              return number + ' bloaz';
          default:
              return number + ' vloaz';
      }
  }
  function lastNumber(number) {
      if (number > 9) {
          return lastNumber(number % 10);
      }
      return number;
  }
  function mutation(text, number) {
      if (number === 2) {
          return softMutation(text);
      }
      return text;
  }
  function softMutation(text) {
      var mutationTable = {
          'm': 'v',
          'b': 'v',
          'd': 'z'
      };
      if (mutationTable[text.charAt(0)] === undefined) {
          return text;
      }
      return mutationTable[text.charAt(0)] + text.substring(1);
  }

  var br = moment.defineLocale('br', {
      months : 'Genver_C\'hwevrer_Meurzh_Ebrel_Mae_Mezheven_Gouere_Eost_Gwengolo_Here_Du_Kerzu'.split('_'),
      monthsShort : 'Gen_C\'hwe_Meu_Ebr_Mae_Eve_Gou_Eos_Gwe_Her_Du_Ker'.split('_'),
      weekdays : 'Sul_Lun_Meurzh_Merc\'her_Yaou_Gwener_Sadorn'.split('_'),
      weekdaysShort : 'Sul_Lun_Meu_Mer_Yao_Gwe_Sad'.split('_'),
      weekdaysMin : 'Su_Lu_Me_Mer_Ya_Gw_Sa'.split('_'),
      weekdaysParseExact : true,
      longDateFormat : {
          LT : 'h[e]mm A',
          LTS : 'h[e]mm:ss A',
          L : 'DD/MM/YYYY',
          LL : 'D [a viz] MMMM YYYY',
          LLL : 'D [a viz] MMMM YYYY h[e]mm A',
          LLLL : 'dddd, D [a viz] MMMM YYYY h[e]mm A'
      },
      calendar : {
          sameDay : '[Hiziv da] LT',
          nextDay : '[Warc\'hoazh da] LT',
          nextWeek : 'dddd [da] LT',
          lastDay : '[Dec\'h da] LT',
          lastWeek : 'dddd [paset da] LT',
          sameElse : 'L'
      },
      relativeTime : {
          future : 'a-benn %s',
          past : '%s \'zo',
          s : 'un nebeud segondennoù',
          m : 'ur vunutenn',
          mm : relativeTimeWithMutation,
          h : 'un eur',
          hh : '%d eur',
          d : 'un devezh',
          dd : relativeTimeWithMutation,
          M : 'ur miz',
          MM : relativeTimeWithMutation,
          y : 'ur bloaz',
          yy : specialMutationForYears
      },
      ordinalParse: /\d{1,2}(añ|vet)/,
      ordinal : function (number) {
          var output = (number === 1) ? 'añ' : 'vet';
          return number + output;
      },
      week : {
          dow : 1, // Monday is the first day of the week.
          doy : 4  // The week that contains Jan 4th is the first week of the year.
      }
  });

  return br;

  })));


/***/ },
/* 1284 */
/***/ function(module, exports, __webpack_require__) {

  //! moment.js locale configuration
  //! locale : Bosnian [bs]
  //! author : Nedim Cholich : https://github.com/frontyard
  //! based on (hr) translation by Bojan Marković

  ;(function (global, factory) {
      true ? factory(__webpack_require__(1269)) :
     typeof define === 'function' && define.amd ? define(['../moment'], factory) :
     factory(global.moment)
  }(this, (function (moment) { 'use strict';


  function translate(number, withoutSuffix, key) {
      var result = number + ' ';
      switch (key) {
          case 'm':
              return withoutSuffix ? 'jedna minuta' : 'jedne minute';
          case 'mm':
              if (number === 1) {
                  result += 'minuta';
              } else if (number === 2 || number === 3 || number === 4) {
                  result += 'minute';
              } else {
                  result += 'minuta';
              }
              return result;
          case 'h':
              return withoutSuffix ? 'jedan sat' : 'jednog sata';
          case 'hh':
              if (number === 1) {
                  result += 'sat';
              } else if (number === 2 || number === 3 || number === 4) {
                  result += 'sata';
              } else {
                  result += 'sati';
              }
              return result;
          case 'dd':
              if (number === 1) {
                  result += 'dan';
              } else {
                  result += 'dana';
              }
              return result;
          case 'MM':
              if (number === 1) {
                  result += 'mjesec';
              } else if (number === 2 || number === 3 || number === 4) {
                  result += 'mjeseca';
              } else {
                  result += 'mjeseci';
              }
              return result;
          case 'yy':
              if (number === 1) {
                  result += 'godina';
              } else if (number === 2 || number === 3 || number === 4) {
                  result += 'godine';
              } else {
                  result += 'godina';
              }
              return result;
      }
  }

  var bs = moment.defineLocale('bs', {
      months : 'januar_februar_mart_april_maj_juni_juli_august_septembar_oktobar_novembar_decembar'.split('_'),
      monthsShort : 'jan._feb._mar._apr._maj._jun._jul._aug._sep._okt._nov._dec.'.split('_'),
      monthsParseExact: true,
      weekdays : 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split('_'),
      weekdaysShort : 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),
      weekdaysMin : 'ne_po_ut_sr_če_pe_su'.split('_'),
      weekdaysParseExact : true,
      longDateFormat : {
          LT : 'H:mm',
          LTS : 'H:mm:ss',
          L : 'DD.MM.YYYY',
          LL : 'D. MMMM YYYY',
          LLL : 'D. MMMM YYYY H:mm',
          LLLL : 'dddd, D. MMMM YYYY H:mm'
      },
      calendar : {
          sameDay  : '[danas u] LT',
          nextDay  : '[sutra u] LT',
          nextWeek : function () {
              switch (this.day()) {
                  case 0:
                      return '[u] [nedjelju] [u] LT';
                  case 3:
                      return '[u] [srijedu] [u] LT';
                  case 6:
                      return '[u] [subotu] [u] LT';
                  case 1:
                  case 2:
                  case 4:
                  case 5:
                      return '[u] dddd [u] LT';
              }
          },
          lastDay  : '[jučer u] LT',
          lastWeek : function () {
              switch (this.day()) {
                  case 0:
                  case 3:
                      return '[prošlu] dddd [u] LT';
                  case 6:
                      return '[prošle] [subote] [u] LT';
                  case 1:
                  case 2:
                  case 4:
                  case 5:
                      return '[prošli] dddd [u] LT';
              }
          },
          sameElse : 'L'
      },
      relativeTime : {
          future : 'za %s',
          past   : 'prije %s',
          s      : 'par sekundi',
          m      : translate,
          mm     : translate,
          h      : translate,
          hh     : translate,
          d      : 'dan',
          dd     : translate,
          M      : 'mjesec',
          MM     : translate,
          y      : 'godinu',
          yy     : translate
      },
      ordinalParse: /\d{1,2}\./,
      ordinal : '%d.',
      week : {
          dow : 1, // Monday is the first day of the week.
          doy : 7  // The week that contains Jan 1st is the first week of the year.
      }
  });

  return bs;

  })));


/***/ },
/* 1285 */
/***/ function(module, exports, __webpack_require__) {

  //! moment.js locale configuration
  //! locale : Catalan [ca]
  //! author : Juan G. Hurtado : https://github.com/juanghurtado

  ;(function (global, factory) {
      true ? factory(__webpack_require__(1269)) :
     typeof define === 'function' && define.amd ? define(['../moment'], factory) :
     factory(global.moment)
  }(this, (function (moment) { 'use strict';


  var ca = moment.defineLocale('ca', {
      months : 'gener_febrer_març_abril_maig_juny_juliol_agost_setembre_octubre_novembre_desembre'.split('_'),
      monthsShort : 'gen._febr._mar._abr._mai._jun._jul._ag._set._oct._nov._des.'.split('_'),
      monthsParseExact : true,
      weekdays : 'diumenge_dilluns_dimarts_dimecres_dijous_divendres_dissabte'.split('_'),
      weekdaysShort : 'dg._dl._dt._dc._dj._dv._ds.'.split('_'),
      weekdaysMin : 'Dg_Dl_Dt_Dc_Dj_Dv_Ds'.split('_'),
      weekdaysParseExact : true,
      longDateFormat : {
          LT : 'H:mm',
          LTS : 'H:mm:ss',
          L : 'DD/MM/YYYY',
          LL : 'D MMMM YYYY',
          LLL : 'D MMMM YYYY H:mm',
          LLLL : 'dddd D MMMM YYYY H:mm'
      },
      calendar : {
          sameDay : function () {
              return '[avui a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';
          },
          nextDay : function () {
              return '[demà a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';
          },
          nextWeek : function () {
              return 'dddd [a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';
          },
          lastDay : function () {
              return '[ahir a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';
          },
          lastWeek : function () {
              return '[el] dddd [passat a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';
          },
          sameElse : 'L'
      },
      relativeTime : {
          future : 'd\'aquí %s',
          past : 'fa %s',
          s : 'uns segons',
          m : 'un minut',
          mm : '%d minuts',
          h : 'una hora',
          hh : '%d hores',
          d : 'un dia',
          dd : '%d dies',
          M : 'un mes',
          MM : '%d mesos',
          y : 'un any',
          yy : '%d anys'
      },
      ordinalParse: /\d{1,2}(r|n|t|è|a)/,
      ordinal : function (number, period) {
          var output = (number === 1) ? 'r' :
              (number === 2) ? 'n' :
              (number === 3) ? 'r' :
              (number === 4) ? 't' : 'è';
          if (period === 'w' || period === 'W') {
              output = 'a';
          }
          return number + output;
      },
      week : {
          dow : 1, // Monday is the first day of the week.
          doy : 4  // The week that contains Jan 4th is the first week of the year.
      }
  });

  return ca;

  })));


/***/ },
/* 1286 */
/***/ function(module, exports, __webpack_require__) {

  //! moment.js locale configuration
  //! locale : Czech [cs]
  //! author : petrbela : https://github.com/petrbela

  ;(function (global, factory) {
      true ? factory(__webpack_require__(1269)) :
     typeof define === 'function' && define.amd ? define(['../moment'], factory) :
     factory(global.moment)
  }(this, (function (moment) { 'use strict';


  var months = 'leden_únor_březen_duben_květen_červen_červenec_srpen_září_říjen_listopad_prosinec'.split('_');
  var monthsShort = 'led_úno_bře_dub_kvě_čvn_čvc_srp_zář_říj_lis_pro'.split('_');
  function plural(n) {
      return (n > 1) && (n < 5) && (~~(n / 10) !== 1);
  }
  function translate(number, withoutSuffix, key, isFuture) {
      var result = number + ' ';
      switch (key) {
          case 's':  // a few seconds / in a few seconds / a few seconds ago
              return (withoutSuffix || isFuture) ? 'pár sekund' : 'pár sekundami';
          case 'm':  // a minute / in a minute / a minute ago
              return withoutSuffix ? 'minuta' : (isFuture ? 'minutu' : 'minutou');
          case 'mm': // 9 minutes / in 9 minutes / 9 minutes ago
              if (withoutSuffix || isFuture) {
                  return result + (plural(number) ? 'minuty' : 'minut');
              } else {
                  return result + 'minutami';
              }
              break;
          case 'h':  // an hour / in an hour / an hour ago
              return withoutSuffix ? 'hodina' : (isFuture ? 'hodinu' : 'hodinou');
          case 'hh': // 9 hours / in 9 hours / 9 hours ago
              if (withoutSuffix || isFuture) {
                  return result + (plural(number) ? 'hodiny' : 'hodin');
              } else {
                  return result + 'hodinami';
              }
              break;
          case 'd':  // a day / in a day / a day ago
              return (withoutSuffix || isFuture) ? 'den' : 'dnem';
          case 'dd': // 9 days / in 9 days / 9 days ago
              if (withoutSuffix || isFuture) {
                  return result + (plural(number) ? 'dny' : 'dní');
              } else {
                  return result + 'dny';
              }
              break;
          case 'M':  // a month / in a month / a month ago
              return (withoutSuffix || isFuture) ? 'měsíc' : 'měsícem';
          case 'MM': // 9 months / in 9 months / 9 months ago
              if (withoutSuffix || isFuture) {
                  return result + (plural(number) ? 'měsíce' : 'měsíců');
              } else {
                  return result + 'měsíci';
              }
              break;
          case 'y':  // a year / in a year / a year ago
              return (withoutSuffix || isFuture) ? 'rok' : 'rokem';
          case 'yy': // 9 years / in 9 years / 9 years ago
              if (withoutSuffix || isFuture) {
                  return result + (plural(number) ? 'roky' : 'let');
              } else {
                  return result + 'lety';
              }
              break;
      }
  }

  var cs = moment.defineLocale('cs', {
      months : months,
      monthsShort : monthsShort,
      monthsParse : (function (months, monthsShort) {
          var i, _monthsParse = [];
          for (i = 0; i < 12; i++) {
              // use custom parser to solve problem with July (červenec)
              _monthsParse[i] = new RegExp('^' + months[i] + '$|^' + monthsShort[i] + '$', 'i');
          }
          return _monthsParse;
      }(months, monthsShort)),
      shortMonthsParse : (function (monthsShort) {
          var i, _shortMonthsParse = [];
          for (i = 0; i < 12; i++) {
              _shortMonthsParse[i] = new RegExp('^' + monthsShort[i] + '$', 'i');
          }
          return _shortMonthsParse;
      }(monthsShort)),
      longMonthsParse : (function (months) {
          var i, _longMonthsParse = [];
          for (i = 0; i < 12; i++) {
              _longMonthsParse[i] = new RegExp('^' + months[i] + '$', 'i');
          }
          return _longMonthsParse;
      }(months)),
      weekdays : 'neděle_pondělí_úterý_středa_čtvrtek_pátek_sobota'.split('_'),
      weekdaysShort : 'ne_po_út_st_čt_pá_so'.split('_'),
      weekdaysMin : 'ne_po_út_st_čt_pá_so'.split('_'),
      longDateFormat : {
          LT: 'H:mm',
          LTS : 'H:mm:ss',
          L : 'DD.MM.YYYY',
          LL : 'D. MMMM YYYY',
          LLL : 'D. MMMM YYYY H:mm',
          LLLL : 'dddd D. MMMM YYYY H:mm',
          l : 'D. M. YYYY'
      },
      calendar : {
          sameDay: '[dnes v] LT',
          nextDay: '[zítra v] LT',
          nextWeek: function () {
              switch (this.day()) {
                  case 0:
                      return '[v neděli v] LT';
                  case 1:
                  case 2:
                      return '[v] dddd [v] LT';
                  case 3:
                      return '[ve středu v] LT';
                  case 4:
                      return '[ve čtvrtek v] LT';
                  case 5:
                      return '[v pátek v] LT';
                  case 6:
                      return '[v sobotu v] LT';
              }
          },
          lastDay: '[včera v] LT',
          lastWeek: function () {
              switch (this.day()) {
                  case 0:
                      return '[minulou neděli v] LT';
                  case 1:
                  case 2:
                      return '[minulé] dddd [v] LT';
                  case 3:
                      return '[minulou středu v] LT';
                  case 4:
                  case 5:
                      return '[minulý] dddd [v] LT';
                  case 6:
                      return '[minulou sobotu v] LT';
              }
          },
          sameElse: 'L'
      },
      relativeTime : {
          future : 'za %s',
          past : 'před %s',
          s : translate,
          m : translate,
          mm : translate,
          h : translate,
          hh : translate,
          d : translate,
          dd : translate,
          M : translate,
          MM : translate,
          y : translate,
          yy : translate
      },
      ordinalParse : /\d{1,2}\./,
      ordinal : '%d.',
      week : {
          dow : 1, // Monday is the first day of the week.
          doy : 4  // The week that contains Jan 4th is the first week of the year.
      }
  });

  return cs;

  })));


/***/ },
/* 1287 */
/***/ function(module, exports, __webpack_require__) {

  //! moment.js locale configuration
  //! locale : Chuvash [cv]
  //! author : Anatoly Mironov : https://github.com/mirontoli

  ;(function (global, factory) {
      true ? factory(__webpack_require__(1269)) :
     typeof define === 'function' && define.amd ? define(['../moment'], factory) :
     factory(global.moment)
  }(this, (function (moment) { 'use strict';


  var cv = moment.defineLocale('cv', {
      months : 'кӑрлач_нарӑс_пуш_ака_май_ҫӗртме_утӑ_ҫурла_авӑн_юпа_чӳк_раштав'.split('_'),
      monthsShort : 'кӑр_нар_пуш_ака_май_ҫӗр_утӑ_ҫур_авн_юпа_чӳк_раш'.split('_'),
      weekdays : 'вырсарникун_тунтикун_ытларикун_юнкун_кӗҫнерникун_эрнекун_шӑматкун'.split('_'),
      weekdaysShort : 'выр_тун_ытл_юн_кӗҫ_эрн_шӑм'.split('_'),
      weekdaysMin : 'вр_тн_ыт_юн_кҫ_эр_шм'.split('_'),
      longDateFormat : {
          LT : 'HH:mm',
          LTS : 'HH:mm:ss',
          L : 'DD-MM-YYYY',
          LL : 'YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ]',
          LLL : 'YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ], HH:mm',
          LLLL : 'dddd, YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ], HH:mm'
      },
      calendar : {
          sameDay: '[Паян] LT [сехетре]',
          nextDay: '[Ыран] LT [сехетре]',
          lastDay: '[Ӗнер] LT [сехетре]',
          nextWeek: '[Ҫитес] dddd LT [сехетре]',
          lastWeek: '[Иртнӗ] dddd LT [сехетре]',
          sameElse: 'L'
      },
      relativeTime : {
          future : function (output) {
              var affix = /сехет$/i.exec(output) ? 'рен' : /ҫул$/i.exec(output) ? 'тан' : 'ран';
              return output + affix;
          },
          past : '%s каялла',
          s : 'пӗр-ик ҫеккунт',
          m : 'пӗр минут',
          mm : '%d минут',
          h : 'пӗр сехет',
          hh : '%d сехет',
          d : 'пӗр кун',
          dd : '%d кун',
          M : 'пӗр уйӑх',
          MM : '%d уйӑх',
          y : 'пӗр ҫул',
          yy : '%d ҫул'
      },
      ordinalParse: /\d{1,2}-мӗш/,
      ordinal : '%d-мӗш',
      week : {
          dow : 1, // Monday is the first day of the week.
          doy : 7  // The week that contains Jan 1st is the first week of the year.
      }
  });

  return cv;

  })));


/***/ },
/* 1288 */
/***/ function(module, exports, __webpack_require__) {

  //! moment.js locale configuration
  //! locale : Welsh [cy]
  //! author : Robert Allen : https://github.com/robgallen
  //! author : https://github.com/ryangreaves

  ;(function (global, factory) {
      true ? factory(__webpack_require__(1269)) :
     typeof define === 'function' && define.amd ? define(['../moment'], factory) :
     factory(global.moment)
  }(this, (function (moment) { 'use strict';


  var cy = moment.defineLocale('cy', {
      months: 'Ionawr_Chwefror_Mawrth_Ebrill_Mai_Mehefin_Gorffennaf_Awst_Medi_Hydref_Tachwedd_Rhagfyr'.split('_'),
      monthsShort: 'Ion_Chwe_Maw_Ebr_Mai_Meh_Gor_Aws_Med_Hyd_Tach_Rhag'.split('_'),
      weekdays: 'Dydd Sul_Dydd Llun_Dydd Mawrth_Dydd Mercher_Dydd Iau_Dydd Gwener_Dydd Sadwrn'.split('_'),
      weekdaysShort: 'Sul_Llun_Maw_Mer_Iau_Gwe_Sad'.split('_'),
      weekdaysMin: 'Su_Ll_Ma_Me_Ia_Gw_Sa'.split('_'),
      weekdaysParseExact : true,
      // time formats are the same as en-gb
      longDateFormat: {
          LT: 'HH:mm',
          LTS : 'HH:mm:ss',
          L: 'DD/MM/YYYY',
          LL: 'D MMMM YYYY',
          LLL: 'D MMMM YYYY HH:mm',
          LLLL: 'dddd, D MMMM YYYY HH:mm'
      },
      calendar: {
          sameDay: '[Heddiw am] LT',
          nextDay: '[Yfory am] LT',
          nextWeek: 'dddd [am] LT',
          lastDay: '[Ddoe am] LT',
          lastWeek: 'dddd [diwethaf am] LT',
          sameElse: 'L'
      },
      relativeTime: {
          future: 'mewn %s',
          past: '%s yn ôl',
          s: 'ychydig eiliadau',
          m: 'munud',
          mm: '%d munud',
          h: 'awr',
          hh: '%d awr',
          d: 'diwrnod',
          dd: '%d diwrnod',
          M: 'mis',
          MM: '%d mis',
          y: 'blwyddyn',
          yy: '%d flynedd'
      },
      ordinalParse: /\d{1,2}(fed|ain|af|il|ydd|ed|eg)/,
      // traditional ordinal numbers above 31 are not commonly used in colloquial Welsh
      ordinal: function (number) {
          var b = number,
              output = '',
              lookup = [
                  '', 'af', 'il', 'ydd', 'ydd', 'ed', 'ed', 'ed', 'fed', 'fed', 'fed', // 1af to 10fed
                  'eg', 'fed', 'eg', 'eg', 'fed', 'eg', 'eg', 'fed', 'eg', 'fed' // 11eg to 20fed
              ];
          if (b > 20) {
              if (b === 40 || b === 50 || b === 60 || b === 80 || b === 100) {
                  output = 'fed'; // not 30ain, 70ain or 90ain
              } else {
                  output = 'ain';
              }
          } else if (b > 0) {
              output = lookup[b];
          }
          return number + output;
      },
      week : {
          dow : 1, // Monday is the first day of the week.
          doy : 4  // The week that contains Jan 4th is the first week of the year.
      }
  });

  return cy;

  })));


/***/ },
/* 1289 */
/***/ function(module, exports, __webpack_require__) {

  //! moment.js locale configuration
  //! locale : Danish [da]
  //! author : Ulrik Nielsen : https://github.com/mrbase

  ;(function (global, factory) {
      true ? factory(__webpack_require__(1269)) :
     typeof define === 'function' && define.amd ? define(['../moment'], factory) :
     factory(global.moment)
  }(this, (function (moment) { 'use strict';


  var da = moment.defineLocale('da', {
      months : 'januar_februar_marts_april_maj_juni_juli_august_september_oktober_november_december'.split('_'),
      monthsShort : 'jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec'.split('_'),
      weekdays : 'søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag'.split('_'),
      weekdaysShort : 'søn_man_tir_ons_tor_fre_lør'.split('_'),
      weekdaysMin : 'sø_ma_ti_on_to_fr_lø'.split('_'),
      longDateFormat : {
          LT : 'HH:mm',
          LTS : 'HH:mm:ss',
          L : 'DD/MM/YYYY',
          LL : 'D. MMMM YYYY',
          LLL : 'D. MMMM YYYY HH:mm',
          LLLL : 'dddd [d.] D. MMMM YYYY HH:mm'
      },
      calendar : {
          sameDay : '[I dag kl.] LT',
          nextDay : '[I morgen kl.] LT',
          nextWeek : 'dddd [kl.] LT',
          lastDay : '[I går kl.] LT',
          lastWeek : '[sidste] dddd [kl] LT',
          sameElse : 'L'
      },
      relativeTime : {
          future : 'om %s',
          past : '%s siden',
          s : 'få sekunder',
          m : 'et minut',
          mm : '%d minutter',
          h : 'en time',
          hh : '%d timer',
          d : 'en dag',
          dd : '%d dage',
          M : 'en måned',
          MM : '%d måneder',
          y : 'et år',
          yy : '%d år'
      },
      ordinalParse: /\d{1,2}\./,
      ordinal : '%d.',
      week : {
          dow : 1, // Monday is the first day of the week.
          doy : 4  // The week that contains Jan 4th is the first week of the year.
      }
  });

  return da;

  })));


/***/ },
/* 1290 */
/***/ function(module, exports, __webpack_require__) {

  //! moment.js locale configuration
  //! locale : German [de]
  //! author : lluchs : https://github.com/lluchs
  //! author: Menelion Elensúle: https://github.com/Oire
  //! author : Mikolaj Dadela : https://github.com/mik01aj

  ;(function (global, factory) {
      true ? factory(__webpack_require__(1269)) :
     typeof define === 'function' && define.amd ? define(['../moment'], factory) :
     factory(global.moment)
  }(this, (function (moment) { 'use strict';


  function processRelativeTime(number, withoutSuffix, key, isFuture) {
      var format = {
          'm': ['eine Minute', 'einer Minute'],
          'h': ['eine Stunde', 'einer Stunde'],
          'd': ['ein Tag', 'einem Tag'],
          'dd': [number + ' Tage', number + ' Tagen'],
          'M': ['ein Monat', 'einem Monat'],
          'MM': [number + ' Monate', number + ' Monaten'],
          'y': ['ein Jahr', 'einem Jahr'],
          'yy': [number + ' Jahre', number + ' Jahren']
      };
      return withoutSuffix ? format[key][0] : format[key][1];
  }

  var de = moment.defineLocale('de', {
      months : 'Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),
      monthsShort : 'Jan._Febr._Mrz._Apr._Mai_Jun._Jul._Aug._Sept._Okt._Nov._Dez.'.split('_'),
      monthsParseExact : true,
      weekdays : 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split('_'),
      weekdaysShort : 'So._Mo._Di._Mi._Do._Fr._Sa.'.split('_'),
      weekdaysMin : 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),
      weekdaysParseExact : true,
      longDateFormat : {
          LT: 'HH:mm',
          LTS: 'HH:mm:ss',
          L : 'DD.MM.YYYY',
          LL : 'D. MMMM YYYY',
          LLL : 'D. MMMM YYYY HH:mm',
          LLLL : 'dddd, D. MMMM YYYY HH:mm'
      },
      calendar : {
          sameDay: '[heute um] LT [Uhr]',
          sameElse: 'L',
          nextDay: '[morgen um] LT [Uhr]',
          nextWeek: 'dddd [um] LT [Uhr]',
          lastDay: '[gestern um] LT [Uhr]',
          lastWeek: '[letzten] dddd [um] LT [Uhr]'
      },
      relativeTime : {
          future : 'in %s',
          past : 'vor %s',
          s : 'ein paar Sekunden',
          m : processRelativeTime,
          mm : '%d Minuten',
          h : processRelativeTime,
          hh : '%d Stunden',
          d : processRelativeTime,
          dd : processRelativeTime,
          M : processRelativeTime,
          MM : processRelativeTime,
          y : processRelativeTime,
          yy : processRelativeTime
      },
      ordinalParse: /\d{1,2}\./,
      ordinal : '%d.',
      week : {
          dow : 1, // Monday is the first day of the week.
          doy : 4  // The week that contains Jan 4th is the first week of the year.
      }
  });

  return de;

  })));


/***/ },
/* 1291 */
/***/ function(module, exports, __webpack_require__) {

  //! moment.js locale configuration
  //! locale : German (Austria) [de-at]
  //! author : lluchs : https://github.com/lluchs
  //! author: Menelion Elensúle: https://github.com/Oire
  //! author : Martin Groller : https://github.com/MadMG
  //! author : Mikolaj Dadela : https://github.com/mik01aj

  ;(function (global, factory) {
      true ? factory(__webpack_require__(1269)) :
     typeof define === 'function' && define.amd ? define(['../moment'], factory) :
     factory(global.moment)
  }(this, (function (moment) { 'use strict';


  function processRelativeTime(number, withoutSuffix, key, isFuture) {
      var format = {
          'm': ['eine Minute', 'einer Minute'],
          'h': ['eine Stunde', 'einer Stunde'],
          'd': ['ein Tag', 'einem Tag'],
          'dd': [number + ' Tage', number + ' Tagen'],
          'M': ['ein Monat', 'einem Monat'],
          'MM': [number + ' Monate', number + ' Monaten'],
          'y': ['ein Jahr', 'einem Jahr'],
          'yy': [number + ' Jahre', number + ' Jahren']
      };
      return withoutSuffix ? format[key][0] : format[key][1];
  }

  var deAt = moment.defineLocale('de-at', {
      months : 'Jänner_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),
      monthsShort : 'Jän._Febr._Mrz._Apr._Mai_Jun._Jul._Aug._Sept._Okt._Nov._Dez.'.split('_'),
      monthsParseExact : true,
      weekdays : 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split('_'),
      weekdaysShort : 'So._Mo._Di._Mi._Do._Fr._Sa.'.split('_'),
      weekdaysMin : 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),
      weekdaysParseExact : true,
      longDateFormat : {
          LT: 'HH:mm',
          LTS: 'HH:mm:ss',
          L : 'DD.MM.YYYY',
          LL : 'D. MMMM YYYY',
          LLL : 'D. MMMM YYYY HH:mm',
          LLLL : 'dddd, D. MMMM YYYY HH:mm'
      },
      calendar : {
          sameDay: '[heute um] LT [Uhr]',
          sameElse: 'L',
          nextDay: '[morgen um] LT [Uhr]',
          nextWeek: 'dddd [um] LT [Uhr]',
          lastDay: '[gestern um] LT [Uhr]',
          lastWeek: '[letzten] dddd [um] LT [Uhr]'
      },
      relativeTime : {
          future : 'in %s',
          past : 'vor %s',
          s : 'ein paar Sekunden',
          m : processRelativeTime,
          mm : '%d Minuten',
          h : processRelativeTime,
          hh : '%d Stunden',
          d : processRelativeTime,
          dd : processRelativeTime,
          M : processRelativeTime,
          MM : processRelativeTime,
          y : processRelativeTime,
          yy : processRelativeTime
      },
      ordinalParse: /\d{1,2}\./,
      ordinal : '%d.',
      week : {
          dow : 1, // Monday is the first day of the week.
          doy : 4  // The week that contains Jan 4th is the first week of the year.
      }
  });

  return deAt;

  })));


/***/ },
/* 1292 */
/***/ function(module, exports, __webpack_require__) {

  //! moment.js locale configuration
  //! locale : Maldivian [dv]
  //! author : Jawish Hameed : https://github.com/jawish

  ;(function (global, factory) {
      true ? factory(__webpack_require__(1269)) :
     typeof define === 'function' && define.amd ? define(['../moment'], factory) :
     factory(global.moment)
  }(this, (function (moment) { 'use strict';


  var months = [
      'ޖެނުއަރީ',
      'ފެބްރުއަރީ',
      'މާރިޗު',
      'އޭޕްރީލު',
      'މޭ',
      'ޖޫން',
      'ޖުލައި',
      'އޯގަސްޓު',
      'ސެޕްޓެމްބަރު',
      'އޮކްޓޯބަރު',
      'ނޮވެމްބަރު',
      'ޑިސެމްބަރު'
  ];
  var weekdays = [
      'އާދިއްތަ',
      'ހޯމަ',
      'އަންގާރަ',
      'ބުދަ',
      'ބުރާސްފަތި',
      'ހުކުރު',
      'ހޮނިހިރު'
  ];

  var dv = moment.defineLocale('dv', {
      months : months,
      monthsShort : months,
      weekdays : weekdays,
      weekdaysShort : weekdays,
      weekdaysMin : 'އާދި_ހޯމަ_އަން_ބުދަ_ބުރާ_ހުކު_ހޮނި'.split('_'),
      longDateFormat : {

          LT : 'HH:mm',
          LTS : 'HH:mm:ss',
          L : 'D/M/YYYY',
          LL : 'D MMMM YYYY',
          LLL : 'D MMMM YYYY HH:mm',
          LLLL : 'dddd D MMMM YYYY HH:mm'
      },
      meridiemParse: /މކ|މފ/,
      isPM : function (input) {
          return 'މފ' === input;
      },
      meridiem : function (hour, minute, isLower) {
          if (hour < 12) {
              return 'މކ';
          } else {
              return 'މފ';
          }
      },
      calendar : {
          sameDay : '[މިއަދު] LT',
          nextDay : '[މާދަމާ] LT',
          nextWeek : 'dddd LT',
          lastDay : '[އިއްޔެ] LT',
          lastWeek : '[ފާއިތުވި] dddd LT',
          sameElse : 'L'
      },
      relativeTime : {
          future : 'ތެރޭގައި %s',
          past : 'ކުރިން %s',
          s : 'ސިކުންތުކޮޅެއް',
          m : 'މިނިޓެއް',
          mm : 'މިނިޓު %d',
          h : 'ގަޑިއިރެއް',
          hh : 'ގަޑިއިރު %d',
          d : 'ދުވަހެއް',
          dd : 'ދުވަސް %d',
          M : 'މަހެއް',
          MM : 'މަސް %d',
          y : 'އަހަރެއް',
          yy : 'އަހަރު %d'
      },
      preparse: function (string) {
          return string.replace(/،/g, ',');
      },
      postformat: function (string) {
          return string.replace(/,/g, '،');
      },
      week : {
          dow : 7,  // Sunday is the first day of the week.
          doy : 12  // The week that contains Jan 1st is the first week of the year.
      }
  });

  return dv;

  })));


/***/ },
/* 1293 */
/***/ function(module, exports, __webpack_require__) {

  //! moment.js locale configuration
  //! locale : Greek [el]
  //! author : Aggelos Karalias : https://github.com/mehiel

  ;(function (global, factory) {
      true ? factory(__webpack_require__(1269)) :
     typeof define === 'function' && define.amd ? define(['../moment'], factory) :
     factory(global.moment)
  }(this, (function (moment) { 'use strict';

  function isFunction(input) {
      return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';
  }


  var el = moment.defineLocale('el', {
      monthsNominativeEl : 'Ιανουάριος_Φεβρουάριος_Μάρτιος_Απρίλιος_Μάιος_Ιούνιος_Ιούλιος_Αύγουστος_Σεπτέμβριος_Οκτώβριος_Νοέμβριος_Δεκέμβριος'.split('_'),
      monthsGenitiveEl : 'Ιανουαρίου_Φεβρουαρίου_Μαρτίου_Απριλίου_Μαΐου_Ιουνίου_Ιουλίου_Αυγούστου_Σεπτεμβρίου_Οκτωβρίου_Νοεμβρίου_Δεκεμβρίου'.split('_'),
      months : function (momentToFormat, format) {
          if (/D/.test(format.substring(0, format.indexOf('MMMM')))) { // if there is a day number before 'MMMM'
              return this._monthsGenitiveEl[momentToFormat.month()];
          } else {
              return this._monthsNominativeEl[momentToFormat.month()];
          }
      },
      monthsShort : 'Ιαν_Φεβ_Μαρ_Απρ_Μαϊ_Ιουν_Ιουλ_Αυγ_Σεπ_Οκτ_Νοε_Δεκ'.split('_'),
      weekdays : 'Κυριακή_Δευτέρα_Τρίτη_Τετάρτη_Πέμπτη_Παρασκευή_Σάββατο'.split('_'),
      weekdaysShort : 'Κυρ_Δευ_Τρι_Τετ_Πεμ_Παρ_Σαβ'.split('_'),
      weekdaysMin : 'Κυ_Δε_Τρ_Τε_Πε_Πα_Σα'.split('_'),
      meridiem : function (hours, minutes, isLower) {
          if (hours > 11) {
              return isLower ? 'μμ' : 'ΜΜ';
          } else {
              return isLower ? 'πμ' : 'ΠΜ';
          }
      },
      isPM : function (input) {
          return ((input + '').toLowerCase()[0] === 'μ');
      },
      meridiemParse : /[ΠΜ]\.?Μ?\.?/i,
      longDateFormat : {
          LT : 'h:mm A',
          LTS : 'h:mm:ss A',
          L : 'DD/MM/YYYY',
          LL : 'D MMMM YYYY',
          LLL : 'D MMMM YYYY h:mm A',
          LLLL : 'dddd, D MMMM YYYY h:mm A'
      },
      calendarEl : {
          sameDay : '[Σήμερα {}] LT',
          nextDay : '[Αύριο {}] LT',
          nextWeek : 'dddd [{}] LT',
          lastDay : '[Χθες {}] LT',
          lastWeek : function () {
              switch (this.day()) {
                  case 6:
                      return '[το προηγούμενο] dddd [{}] LT';
                  default:
                      return '[την προηγούμενη] dddd [{}] LT';
              }
          },
          sameElse : 'L'
      },
      calendar : function (key, mom) {
          var output = this._calendarEl[key],
              hours = mom && mom.hours();
          if (isFunction(output)) {
              output = output.apply(mom);
          }
          return output.replace('{}', (hours % 12 === 1 ? 'στη' : 'στις'));
      },
      relativeTime : {
          future : 'σε %s',
          past : '%s πριν',
          s : 'λίγα δευτερόλεπτα',
          m : 'ένα λεπτό',
          mm : '%d λεπτά',
          h : 'μία ώρα',
          hh : '%d ώρες',
          d : 'μία μέρα',
          dd : '%d μέρες',
          M : 'ένας μήνας',
          MM : '%d μήνες',
          y : 'ένας χρόνος',
          yy : '%d χρόνια'
      },
      ordinalParse: /\d{1,2}η/,
      ordinal: '%dη',
      week : {
          dow : 1, // Monday is the first day of the week.
          doy : 4  // The week that contains Jan 4st is the first week of the year.
      }
  });

  return el;

  })));


/***/ },
/* 1294 */
/***/ function(module, exports, __webpack_require__) {

  //! moment.js locale configuration
  //! locale : English (Australia) [en-au]
  //! author : Jared Morse : https://github.com/jarcoal

  ;(function (global, factory) {
      true ? factory(__webpack_require__(1269)) :
     typeof define === 'function' && define.amd ? define(['../moment'], factory) :
     factory(global.moment)
  }(this, (function (moment) { 'use strict';


  var enAu = moment.defineLocale('en-au', {
      months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
      monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
      weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
      weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
      weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
      longDateFormat : {
          LT : 'h:mm A',
          LTS : 'h:mm:ss A',
          L : 'DD/MM/YYYY',
          LL : 'D MMMM YYYY',
          LLL : 'D MMMM YYYY h:mm A',
          LLLL : 'dddd, D MMMM YYYY h:mm A'
      },
      calendar : {
          sameDay : '[Today at] LT',
          nextDay : '[Tomorrow at] LT',
          nextWeek : 'dddd [at] LT',
          lastDay : '[Yesterday at] LT',
          lastWeek : '[Last] dddd [at] LT',
          sameElse : 'L'
      },
      relativeTime : {
          future : 'in %s',
          past : '%s ago',
          s : 'a few seconds',
          m : 'a minute',
          mm : '%d minutes',
          h : 'an hour',
          hh : '%d hours',
          d : 'a day',
          dd : '%d days',
          M : 'a month',
          MM : '%d months',
          y : 'a year',
          yy : '%d years'
      },
      ordinalParse: /\d{1,2}(st|nd|rd|th)/,
      ordinal : function (number) {
          var b = number % 10,
              output = (~~(number % 100 / 10) === 1) ? 'th' :
              (b === 1) ? 'st' :
              (b === 2) ? 'nd' :
              (b === 3) ? 'rd' : 'th';
          return number + output;
      },
      week : {
          dow : 1, // Monday is the first day of the week.
          doy : 4  // The week that contains Jan 4th is the first week of the year.
      }
  });

  return enAu;

  })));


/***/ },
/* 1295 */
/***/ function(module, exports, __webpack_require__) {

  //! moment.js locale configuration
  //! locale : English (Canada) [en-ca]
  //! author : Jonathan Abourbih : https://github.com/jonbca

  ;(function (global, factory) {
      true ? factory(__webpack_require__(1269)) :
     typeof define === 'function' && define.amd ? define(['../moment'], factory) :
     factory(global.moment)
  }(this, (function (moment) { 'use strict';


  var enCa = moment.defineLocale('en-ca', {
      months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
      monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
      weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
      weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
      weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
      longDateFormat : {
          LT : 'h:mm A',
          LTS : 'h:mm:ss A',
          L : 'YYYY-MM-DD',
          LL : 'MMMM D, YYYY',
          LLL : 'MMMM D, YYYY h:mm A',
          LLLL : 'dddd, MMMM D, YYYY h:mm A'
      },
      calendar : {
          sameDay : '[Today at] LT',
          nextDay : '[Tomorrow at] LT',
          nextWeek : 'dddd [at] LT',
          lastDay : '[Yesterday at] LT',
          lastWeek : '[Last] dddd [at] LT',
          sameElse : 'L'
      },
      relativeTime : {
          future : 'in %s',
          past : '%s ago',
          s : 'a few seconds',
          m : 'a minute',
          mm : '%d minutes',
          h : 'an hour',
          hh : '%d hours',
          d : 'a day',
          dd : '%d days',
          M : 'a month',
          MM : '%d months',
          y : 'a year',
          yy : '%d years'
      },
      ordinalParse: /\d{1,2}(st|nd|rd|th)/,
      ordinal : function (number) {
          var b = number % 10,
              output = (~~(number % 100 / 10) === 1) ? 'th' :
              (b === 1) ? 'st' :
              (b === 2) ? 'nd' :
              (b === 3) ? 'rd' : 'th';
          return number + output;
      }
  });

  return enCa;

  })));


/***/ },
/* 1296 */
/***/ function(module, exports, __webpack_require__) {

  //! moment.js locale configuration
  //! locale : English (United Kingdom) [en-gb]
  //! author : Chris Gedrim : https://github.com/chrisgedrim

  ;(function (global, factory) {
      true ? factory(__webpack_require__(1269)) :
     typeof define === 'function' && define.amd ? define(['../moment'], factory) :
     factory(global.moment)
  }(this, (function (moment) { 'use strict';


  var enGb = moment.defineLocale('en-gb', {
      months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
      monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
      weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
      weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
      weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
      longDateFormat : {
          LT : 'HH:mm',
          LTS : 'HH:mm:ss',
          L : 'DD/MM/YYYY',
          LL : 'D MMMM YYYY',
          LLL : 'D MMMM YYYY HH:mm',
          LLLL : 'dddd, D MMMM YYYY HH:mm'
      },
      calendar : {
          sameDay : '[Today at] LT',
          nextDay : '[Tomorrow at] LT',
          nextWeek : 'dddd [at] LT',
          lastDay : '[Yesterday at] LT',
          lastWeek : '[Last] dddd [at] LT',
          sameElse : 'L'
      },
      relativeTime : {
          future : 'in %s',
          past : '%s ago',
          s : 'a few seconds',
          m : 'a minute',
          mm : '%d minutes',
          h : 'an hour',
          hh : '%d hours',
          d : 'a day',
          dd : '%d days',
          M : 'a month',
          MM : '%d months',
          y : 'a year',
          yy : '%d years'
      },
      ordinalParse: /\d{1,2}(st|nd|rd|th)/,
      ordinal : function (number) {
          var b = number % 10,
              output = (~~(number % 100 / 10) === 1) ? 'th' :
              (b === 1) ? 'st' :
              (b === 2) ? 'nd' :
              (b === 3) ? 'rd' : 'th';
          return number + output;
      },
      week : {
          dow : 1, // Monday is the first day of the week.
          doy : 4  // The week that contains Jan 4th is the first week of the year.
      }
  });

  return enGb;

  })));


/***/ },
/* 1297 */
/***/ function(module, exports, __webpack_require__) {

  //! moment.js locale configuration
  //! locale : English (Ireland) [en-ie]
  //! author : Chris Cartlidge : https://github.com/chriscartlidge

  ;(function (global, factory) {
      true ? factory(__webpack_require__(1269)) :
     typeof define === 'function' && define.amd ? define(['../moment'], factory) :
     factory(global.moment)
  }(this, (function (moment) { 'use strict';


  var enIe = moment.defineLocale('en-ie', {
      months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
      monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
      weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
      weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
      weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
      longDateFormat : {
          LT : 'HH:mm',
          LTS : 'HH:mm:ss',
          L : 'DD-MM-YYYY',
          LL : 'D MMMM YYYY',
          LLL : 'D MMMM YYYY HH:mm',
          LLLL : 'dddd D MMMM YYYY HH:mm'
      },
      calendar : {
          sameDay : '[Today at] LT',
          nextDay : '[Tomorrow at] LT',
          nextWeek : 'dddd [at] LT',
          lastDay : '[Yesterday at] LT',
          lastWeek : '[Last] dddd [at] LT',
          sameElse : 'L'
      },
      relativeTime : {
          future : 'in %s',
          past : '%s ago',
          s : 'a few seconds',
          m : 'a minute',
          mm : '%d minutes',
          h : 'an hour',
          hh : '%d hours',
          d : 'a day',
          dd : '%d days',
          M : 'a month',
          MM : '%d months',
          y : 'a year',
          yy : '%d years'
      },
      ordinalParse: /\d{1,2}(st|nd|rd|th)/,
      ordinal : function (number) {
          var b = number % 10,
              output = (~~(number % 100 / 10) === 1) ? 'th' :
              (b === 1) ? 'st' :
              (b === 2) ? 'nd' :
              (b === 3) ? 'rd' : 'th';
          return number + output;
      },
      week : {
          dow : 1, // Monday is the first day of the week.
          doy : 4  // The week that contains Jan 4th is the first week of the year.
      }
  });

  return enIe;

  })));


/***/ },
/* 1298 */
/***/ function(module, exports, __webpack_require__) {

  //! moment.js locale configuration
  //! locale : English (New Zealand) [en-nz]
  //! author : Luke McGregor : https://github.com/lukemcgregor

  ;(function (global, factory) {
      true ? factory(__webpack_require__(1269)) :
     typeof define === 'function' && define.amd ? define(['../moment'], factory) :
     factory(global.moment)
  }(this, (function (moment) { 'use strict';


  var enNz = moment.defineLocale('en-nz', {
      months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
      monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
      weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
      weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
      weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
      longDateFormat : {
          LT : 'h:mm A',
          LTS : 'h:mm:ss A',
          L : 'DD/MM/YYYY',
          LL : 'D MMMM YYYY',
          LLL : 'D MMMM YYYY h:mm A',
          LLLL : 'dddd, D MMMM YYYY h:mm A'
      },
      calendar : {
          sameDay : '[Today at] LT',
          nextDay : '[Tomorrow at] LT',
          nextWeek : 'dddd [at] LT',
          lastDay : '[Yesterday at] LT',
          lastWeek : '[Last] dddd [at] LT',
          sameElse : 'L'
      },
      relativeTime : {
          future : 'in %s',
          past : '%s ago',
          s : 'a few seconds',
          m : 'a minute',
          mm : '%d minutes',
          h : 'an hour',
          hh : '%d hours',
          d : 'a day',
          dd : '%d days',
          M : 'a month',
          MM : '%d months',
          y : 'a year',
          yy : '%d years'
      },
      ordinalParse: /\d{1,2}(st|nd|rd|th)/,
      ordinal : function (number) {
          var b = number % 10,
              output = (~~(number % 100 / 10) === 1) ? 'th' :
              (b === 1) ? 'st' :
              (b === 2) ? 'nd' :
              (b === 3) ? 'rd' : 'th';
          return number + output;
      },
      week : {
          dow : 1, // Monday is the first day of the week.
          doy : 4  // The week that contains Jan 4th is the first week of the year.
      }
  });

  return enNz;

  })));


/***/ },
/* 1299 */
/***/ function(module, exports, __webpack_require__) {

  //! moment.js locale configuration
  //! locale : Esperanto [eo]
  //! author : Colin Dean : https://github.com/colindean
  //! komento: Mi estas malcerta se mi korekte traktis akuzativojn en tiu traduko.
  //!          Se ne, bonvolu korekti kaj avizi min por ke mi povas lerni!

  ;(function (global, factory) {
      true ? factory(__webpack_require__(1269)) :
     typeof define === 'function' && define.amd ? define(['../moment'], factory) :
     factory(global.moment)
  }(this, (function (moment) { 'use strict';


  var eo = moment.defineLocale('eo', {
      months : 'januaro_februaro_marto_aprilo_majo_junio_julio_aŭgusto_septembro_oktobro_novembro_decembro'.split('_'),
      monthsShort : 'jan_feb_mar_apr_maj_jun_jul_aŭg_sep_okt_nov_dec'.split('_'),
      weekdays : 'Dimanĉo_Lundo_Mardo_Merkredo_Ĵaŭdo_Vendredo_Sabato'.split('_'),
      weekdaysShort : 'Dim_Lun_Mard_Merk_Ĵaŭ_Ven_Sab'.split('_'),
      weekdaysMin : 'Di_Lu_Ma_Me_Ĵa_Ve_Sa'.split('_'),
      longDateFormat : {
          LT : 'HH:mm',
          LTS : 'HH:mm:ss',
          L : 'YYYY-MM-DD',
          LL : 'D[-an de] MMMM, YYYY',
          LLL : 'D[-an de] MMMM, YYYY HH:mm',
          LLLL : 'dddd, [la] D[-an de] MMMM, YYYY HH:mm'
      },
      meridiemParse: /[ap]\.t\.m/i,
      isPM: function (input) {
          return input.charAt(0).toLowerCase() === 'p';
      },
      meridiem : function (hours, minutes, isLower) {
          if (hours > 11) {
              return isLower ? 'p.t.m.' : 'P.T.M.';
          } else {
              return isLower ? 'a.t.m.' : 'A.T.M.';
          }
      },
      calendar : {
          sameDay : '[Hodiaŭ je] LT',
          nextDay : '[Morgaŭ je] LT',
          nextWeek : 'dddd [je] LT',
          lastDay : '[Hieraŭ je] LT',
          lastWeek : '[pasinta] dddd [je] LT',
          sameElse : 'L'
      },
      relativeTime : {
          future : 'je %s',
          past : 'antaŭ %s',
          s : 'sekundoj',
          m : 'minuto',
          mm : '%d minutoj',
          h : 'horo',
          hh : '%d horoj',
          d : 'tago',//ne 'diurno', ĉar estas uzita por proksimumo
          dd : '%d tagoj',
          M : 'monato',
          MM : '%d monatoj',
          y : 'jaro',
          yy : '%d jaroj'
      },
      ordinalParse: /\d{1,2}a/,
      ordinal : '%da',
      week : {
          dow : 1, // Monday is the first day of the week.
          doy : 7  // The week that contains Jan 1st is the first week of the year.
      }
  });

  return eo;

  })));


/***/ },
/* 1300 */
/***/ function(module, exports, __webpack_require__) {

  //! moment.js locale configuration
  //! locale : Spanish [es]
  //! author : Julio Napurí : https://github.com/julionc

  ;(function (global, factory) {
      true ? factory(__webpack_require__(1269)) :
     typeof define === 'function' && define.amd ? define(['../moment'], factory) :
     factory(global.moment)
  }(this, (function (moment) { 'use strict';


  var monthsShortDot = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_');
  var monthsShort = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');

  var es = moment.defineLocale('es', {
      months : 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),
      monthsShort : function (m, format) {
          if (/-MMM-/.test(format)) {
              return monthsShort[m.month()];
          } else {
              return monthsShortDot[m.month()];
          }
      },
      monthsParseExact : true,
      weekdays : 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),
      weekdaysShort : 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),
      weekdaysMin : 'do_lu_ma_mi_ju_vi_sá'.split('_'),
      weekdaysParseExact : true,
      longDateFormat : {
          LT : 'H:mm',
          LTS : 'H:mm:ss',
          L : 'DD/MM/YYYY',
          LL : 'D [de] MMMM [de] YYYY',
          LLL : 'D [de] MMMM [de] YYYY H:mm',
          LLLL : 'dddd, D [de] MMMM [de] YYYY H:mm'
      },
      calendar : {
          sameDay : function () {
              return '[hoy a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
          },
          nextDay : function () {
              return '[mañana a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
          },
          nextWeek : function () {
              return 'dddd [a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
          },
          lastDay : function () {
              return '[ayer a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
          },
          lastWeek : function () {
              return '[el] dddd [pasado a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
          },
          sameElse : 'L'
      },
      relativeTime : {
          future : 'en %s',
          past : 'hace %s',
          s : 'unos segundos',
          m : 'un minuto',
          mm : '%d minutos',
          h : 'una hora',
          hh : '%d horas',
          d : 'un día',
          dd : '%d días',
          M : 'un mes',
          MM : '%d meses',
          y : 'un año',
          yy : '%d años'
      },
      ordinalParse : /\d{1,2}º/,
      ordinal : '%dº',
      week : {
          dow : 1, // Monday is the first day of the week.
          doy : 4  // The week that contains Jan 4th is the first week of the year.
      }
  });

  return es;

  })));


/***/ },
/* 1301 */
/***/ function(module, exports, __webpack_require__) {

  //! moment.js locale configuration
  //! locale : Spanish (Dominican Republic) [es-do]

  ;(function (global, factory) {
      true ? factory(__webpack_require__(1269)) :
     typeof define === 'function' && define.amd ? define(['../moment'], factory) :
     factory(global.moment)
  }(this, (function (moment) { 'use strict';


  var monthsShortDot = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_');
  var monthsShort = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');

  var esDo = moment.defineLocale('es-do', {
      months : 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),
      monthsShort : function (m, format) {
          if (/-MMM-/.test(format)) {
              return monthsShort[m.month()];
          } else {
              return monthsShortDot[m.month()];
          }
      },
      monthsParseExact : true,
      weekdays : 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),
      weekdaysShort : 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),
      weekdaysMin : 'do_lu_ma_mi_ju_vi_sá'.split('_'),
      weekdaysParseExact : true,
      longDateFormat : {
          LT : 'h:mm A',
          LTS : 'h:mm:ss A',
          L : 'DD/MM/YYYY',
          LL : 'D [de] MMMM [de] YYYY',
          LLL : 'D [de] MMMM [de] YYYY h:mm A',
          LLLL : 'dddd, D [de] MMMM [de] YYYY h:mm A'
      },
      calendar : {
          sameDay : function () {
              return '[hoy a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
          },
          nextDay : function () {
              return '[mañana a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
          },
          nextWeek : function () {
              return 'dddd [a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
          },
          lastDay : function () {
              return '[ayer a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
          },
          lastWeek : function () {
              return '[el] dddd [pasado a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
          },
          sameElse : 'L'
      },
      relativeTime : {
          future : 'en %s',
          past : 'hace %s',
          s : 'unos segundos',
          m : 'un minuto',
          mm : '%d minutos',
          h : 'una hora',
          hh : '%d horas',
          d : 'un día',
          dd : '%d días',
          M : 'un mes',
          MM : '%d meses',
          y : 'un año',
          yy : '%d años'
      },
      ordinalParse : /\d{1,2}º/,
      ordinal : '%dº',
      week : {
          dow : 1, // Monday is the first day of the week.
          doy : 4  // The week that contains Jan 4th is the first week of the year.
      }
  });

  return esDo;

  })));


/***/ },
/* 1302 */
/***/ function(module, exports, __webpack_require__) {

  //! moment.js locale configuration
  //! locale : Estonian [et]
  //! author : Henry Kehlmann : https://github.com/madhenry
  //! improvements : Illimar Tambek : https://github.com/ragulka

  ;(function (global, factory) {
      true ? factory(__webpack_require__(1269)) :
     typeof define === 'function' && define.amd ? define(['../moment'], factory) :
     factory(global.moment)
  }(this, (function (moment) { 'use strict';


  function processRelativeTime(number, withoutSuffix, key, isFuture) {
      var format = {
          's' : ['mõne sekundi', 'mõni sekund', 'paar sekundit'],
          'm' : ['ühe minuti', 'üks minut'],
          'mm': [number + ' minuti', number + ' minutit'],
          'h' : ['ühe tunni', 'tund aega', 'üks tund'],
          'hh': [number + ' tunni', number + ' tundi'],
          'd' : ['ühe päeva', 'üks päev'],
          'M' : ['kuu aja', 'kuu aega', 'üks kuu'],
          'MM': [number + ' kuu', number + ' kuud'],
          'y' : ['ühe aasta', 'aasta', 'üks aasta'],
          'yy': [number + ' aasta', number + ' aastat']
      };
      if (withoutSuffix) {
          return format[key][2] ? format[key][2] : format[key][1];
      }
      return isFuture ? format[key][0] : format[key][1];
  }

  var et = moment.defineLocale('et', {
      months        : 'jaanuar_veebruar_märts_aprill_mai_juuni_juuli_august_september_oktoober_november_detsember'.split('_'),
      monthsShort   : 'jaan_veebr_märts_apr_mai_juuni_juuli_aug_sept_okt_nov_dets'.split('_'),
      weekdays      : 'pühapäev_esmaspäev_teisipäev_kolmapäev_neljapäev_reede_laupäev'.split('_'),
      weekdaysShort : 'P_E_T_K_N_R_L'.split('_'),
      weekdaysMin   : 'P_E_T_K_N_R_L'.split('_'),
      longDateFormat : {
          LT   : 'H:mm',
          LTS : 'H:mm:ss',
          L    : 'DD.MM.YYYY',
          LL   : 'D. MMMM YYYY',
          LLL  : 'D. MMMM YYYY H:mm',
          LLLL : 'dddd, D. MMMM YYYY H:mm'
      },
      calendar : {
          sameDay  : '[Täna,] LT',
          nextDay  : '[Homme,] LT',
          nextWeek : '[Järgmine] dddd LT',
          lastDay  : '[Eile,] LT',
          lastWeek : '[Eelmine] dddd LT',
          sameElse : 'L'
      },
      relativeTime : {
          future : '%s pärast',
          past   : '%s tagasi',
          s      : processRelativeTime,
          m      : processRelativeTime,
          mm     : processRelativeTime,
          h      : processRelativeTime,
          hh     : processRelativeTime,
          d      : processRelativeTime,
          dd     : '%d päeva',
          M      : processRelativeTime,
          MM     : processRelativeTime,
          y      : processRelativeTime,
          yy     : processRelativeTime
      },
      ordinalParse: /\d{1,2}\./,
      ordinal : '%d.',
      week : {
          dow : 1, // Monday is the first day of the week.
          doy : 4  // The week that contains Jan 4th is the first week of the year.
      }
  });

  return et;

  })));


/***/ },
/* 1303 */
/***/ function(module, exports, __webpack_require__) {

  //! moment.js locale configuration
  //! locale : Basque [eu]
  //! author : Eneko Illarramendi : https://github.com/eillarra

  ;(function (global, factory) {
      true ? factory(__webpack_require__(1269)) :
     typeof define === 'function' && define.amd ? define(['../moment'], factory) :
     factory(global.moment)
  }(this, (function (moment) { 'use strict';


  var eu = moment.defineLocale('eu', {
      months : 'urtarrila_otsaila_martxoa_apirila_maiatza_ekaina_uztaila_abuztua_iraila_urria_azaroa_abendua'.split('_'),
      monthsShort : 'urt._ots._mar._api._mai._eka._uzt._abu._ira._urr._aza._abe.'.split('_'),
      monthsParseExact : true,
      weekdays : 'igandea_astelehena_asteartea_asteazkena_osteguna_ostirala_larunbata'.split('_'),
      weekdaysShort : 'ig._al._ar._az._og._ol._lr.'.split('_'),
      weekdaysMin : 'ig_al_ar_az_og_ol_lr'.split('_'),
      weekdaysParseExact : true,
      longDateFormat : {
          LT : 'HH:mm',
          LTS : 'HH:mm:ss',
          L : 'YYYY-MM-DD',
          LL : 'YYYY[ko] MMMM[ren] D[a]',
          LLL : 'YYYY[ko] MMMM[ren] D[a] HH:mm',
          LLLL : 'dddd, YYYY[ko] MMMM[ren] D[a] HH:mm',
          l : 'YYYY-M-D',
          ll : 'YYYY[ko] MMM D[a]',
          lll : 'YYYY[ko] MMM D[a] HH:mm',
          llll : 'ddd, YYYY[ko] MMM D[a] HH:mm'
      },
      calendar : {
          sameDay : '[gaur] LT[etan]',
          nextDay : '[bihar] LT[etan]',
          nextWeek : 'dddd LT[etan]',
          lastDay : '[atzo] LT[etan]',
          lastWeek : '[aurreko] dddd LT[etan]',
          sameElse : 'L'
      },
      relativeTime : {
          future : '%s barru',
          past : 'duela %s',
          s : 'segundo batzuk',
          m : 'minutu bat',
          mm : '%d minutu',
          h : 'ordu bat',
          hh : '%d ordu',
          d : 'egun bat',
          dd : '%d egun',
          M : 'hilabete bat',
          MM : '%d hilabete',
          y : 'urte bat',
          yy : '%d urte'
      },
      ordinalParse: /\d{1,2}\./,
      ordinal : '%d.',
      week : {
          dow : 1, // Monday is the first day of the week.
          doy : 7  // The week that contains Jan 1st is the first week of the year.
      }
  });

  return eu;

  })));


/***/ },
/* 1304 */
/***/ function(module, exports, __webpack_require__) {

  //! moment.js locale configuration
  //! locale : Persian [fa]
  //! author : Ebrahim Byagowi : https://github.com/ebraminio

  ;(function (global, factory) {
      true ? factory(__webpack_require__(1269)) :
     typeof define === 'function' && define.amd ? define(['../moment'], factory) :
     factory(global.moment)
  }(this, (function (moment) { 'use strict';


  var symbolMap = {
      '1': '۱',
      '2': '۲',
      '3': '۳',
      '4': '۴',
      '5': '۵',
      '6': '۶',
      '7': '۷',
      '8': '۸',
      '9': '۹',
      '0': '۰'
  };
  var numberMap = {
      '۱': '1',
      '۲': '2',
      '۳': '3',
      '۴': '4',
      '۵': '5',
      '۶': '6',
      '۷': '7',
      '۸': '8',
      '۹': '9',
      '۰': '0'
  };

  var fa = moment.defineLocale('fa', {
      months : 'ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر'.split('_'),
      monthsShort : 'ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر'.split('_'),
      weekdays : 'یک\u200cشنبه_دوشنبه_سه\u200cشنبه_چهارشنبه_پنج\u200cشنبه_جمعه_شنبه'.split('_'),
      weekdaysShort : 'یک\u200cشنبه_دوشنبه_سه\u200cشنبه_چهارشنبه_پنج\u200cشنبه_جمعه_شنبه'.split('_'),
      weekdaysMin : 'ی_د_س_چ_پ_ج_ش'.split('_'),
      weekdaysParseExact : true,
      longDateFormat : {
          LT : 'HH:mm',
          LTS : 'HH:mm:ss',
          L : 'DD/MM/YYYY',
          LL : 'D MMMM YYYY',
          LLL : 'D MMMM YYYY HH:mm',
          LLLL : 'dddd, D MMMM YYYY HH:mm'
      },
      meridiemParse: /قبل از ظهر|بعد از ظهر/,
      isPM: function (input) {
          return /بعد از ظهر/.test(input);
      },
      meridiem : function (hour, minute, isLower) {
          if (hour < 12) {
              return 'قبل از ظهر';
          } else {
              return 'بعد از ظهر';
          }
      },
      calendar : {
          sameDay : '[امروز ساعت] LT',
          nextDay : '[فردا ساعت] LT',
          nextWeek : 'dddd [ساعت] LT',
          lastDay : '[دیروز ساعت] LT',
          lastWeek : 'dddd [پیش] [ساعت] LT',
          sameElse : 'L'
      },
      relativeTime : {
          future : 'در %s',
          past : '%s پیش',
          s : 'چندین ثانیه',
          m : 'یک دقیقه',
          mm : '%d دقیقه',
          h : 'یک ساعت',
          hh : '%d ساعت',
          d : 'یک روز',
          dd : '%d روز',
          M : 'یک ماه',
          MM : '%d ماه',
          y : 'یک سال',
          yy : '%d سال'
      },
      preparse: function (string) {
          return string.replace(/[۰-۹]/g, function (match) {
              return numberMap[match];
          }).replace(/،/g, ',');
      },
      postformat: function (string) {
          return string.replace(/\d/g, function (match) {
              return symbolMap[match];
          }).replace(/,/g, '،');
      },
      ordinalParse: /\d{1,2}م/,
      ordinal : '%dم',
      week : {
          dow : 6, // Saturday is the first day of the week.
          doy : 12 // The week that contains Jan 1st is the first week of the year.
      }
  });

  return fa;

  })));


/***/ },
/* 1305 */
/***/ function(module, exports, __webpack_require__) {

  //! moment.js locale configuration
  //! locale : Finnish [fi]
  //! author : Tarmo Aidantausta : https://github.com/bleadof

  ;(function (global, factory) {
      true ? factory(__webpack_require__(1269)) :
     typeof define === 'function' && define.amd ? define(['../moment'], factory) :
     factory(global.moment)
  }(this, (function (moment) { 'use strict';


  var numbersPast = 'nolla yksi kaksi kolme neljä viisi kuusi seitsemän kahdeksan yhdeksän'.split(' ');
  var numbersFuture = [
          'nolla', 'yhden', 'kahden', 'kolmen', 'neljän', 'viiden', 'kuuden',
          numbersPast[7], numbersPast[8], numbersPast[9]
      ];
  function translate(number, withoutSuffix, key, isFuture) {
      var result = '';
      switch (key) {
          case 's':
              return isFuture ? 'muutaman sekunnin' : 'muutama sekunti';
          case 'm':
              return isFuture ? 'minuutin' : 'minuutti';
          case 'mm':
              result = isFuture ? 'minuutin' : 'minuuttia';
              break;
          case 'h':
              return isFuture ? 'tunnin' : 'tunti';
          case 'hh':
              result = isFuture ? 'tunnin' : 'tuntia';
              break;
          case 'd':
              return isFuture ? 'päivän' : 'päivä';
          case 'dd':
              result = isFuture ? 'päivän' : 'päivää';
              break;
          case 'M':
              return isFuture ? 'kuukauden' : 'kuukausi';
          case 'MM':
              result = isFuture ? 'kuukauden' : 'kuukautta';
              break;
          case 'y':
              return isFuture ? 'vuoden' : 'vuosi';
          case 'yy':
              result = isFuture ? 'vuoden' : 'vuotta';
              break;
      }
      result = verbalNumber(number, isFuture) + ' ' + result;
      return result;
  }
  function verbalNumber(number, isFuture) {
      return number < 10 ? (isFuture ? numbersFuture[number] : numbersPast[number]) : number;
  }

  var fi = moment.defineLocale('fi', {
      months : 'tammikuu_helmikuu_maaliskuu_huhtikuu_toukokuu_kesäkuu_heinäkuu_elokuu_syyskuu_lokakuu_marraskuu_joulukuu'.split('_'),
      monthsShort : 'tammi_helmi_maalis_huhti_touko_kesä_heinä_elo_syys_loka_marras_joulu'.split('_'),
      weekdays : 'sunnuntai_maanantai_tiistai_keskiviikko_torstai_perjantai_lauantai'.split('_'),
      weekdaysShort : 'su_ma_ti_ke_to_pe_la'.split('_'),
      weekdaysMin : 'su_ma_ti_ke_to_pe_la'.split('_'),
      longDateFormat : {
          LT : 'HH.mm',
          LTS : 'HH.mm.ss',
          L : 'DD.MM.YYYY',
          LL : 'Do MMMM[ta] YYYY',
          LLL : 'Do MMMM[ta] YYYY, [klo] HH.mm',
          LLLL : 'dddd, Do MMMM[ta] YYYY, [klo] HH.mm',
          l : 'D.M.YYYY',
          ll : 'Do MMM YYYY',
          lll : 'Do MMM YYYY, [klo] HH.mm',
          llll : 'ddd, Do MMM YYYY, [klo] HH.mm'
      },
      calendar : {
          sameDay : '[tänään] [klo] LT',
          nextDay : '[huomenna] [klo] LT',
          nextWeek : 'dddd [klo] LT',
          lastDay : '[eilen] [klo] LT',
          lastWeek : '[viime] dddd[na] [klo] LT',
          sameElse : 'L'
      },
      relativeTime : {
          future : '%s päästä',
          past : '%s sitten',
          s : translate,
          m : translate,
          mm : translate,
          h : translate,
          hh : translate,
          d : translate,
          dd : translate,
          M : translate,
          MM : translate,
          y : translate,
          yy : translate
      },
      ordinalParse: /\d{1,2}\./,
      ordinal : '%d.',
      week : {
          dow : 1, // Monday is the first day of the week.
          doy : 4  // The week that contains Jan 4th is the first week of the year.
      }
  });

  return fi;

  })));


/***/ },
/* 1306 */
/***/ function(module, exports, __webpack_require__) {

  //! moment.js locale configuration
  //! locale : Faroese [fo]
  //! author : Ragnar Johannesen : https://github.com/ragnar123

  ;(function (global, factory) {
      true ? factory(__webpack_require__(1269)) :
     typeof define === 'function' && define.amd ? define(['../moment'], factory) :
     factory(global.moment)
  }(this, (function (moment) { 'use strict';


  var fo = moment.defineLocale('fo', {
      months : 'januar_februar_mars_apríl_mai_juni_juli_august_september_oktober_november_desember'.split('_'),
      monthsShort : 'jan_feb_mar_apr_mai_jun_jul_aug_sep_okt_nov_des'.split('_'),
      weekdays : 'sunnudagur_mánadagur_týsdagur_mikudagur_hósdagur_fríggjadagur_leygardagur'.split('_'),
      weekdaysShort : 'sun_mán_týs_mik_hós_frí_ley'.split('_'),
      weekdaysMin : 'su_má_tý_mi_hó_fr_le'.split('_'),
      longDateFormat : {
          LT : 'HH:mm',
          LTS : 'HH:mm:ss',
          L : 'DD/MM/YYYY',
          LL : 'D MMMM YYYY',
          LLL : 'D MMMM YYYY HH:mm',
          LLLL : 'dddd D. MMMM, YYYY HH:mm'
      },
      calendar : {
          sameDay : '[Í dag kl.] LT',
          nextDay : '[Í morgin kl.] LT',
          nextWeek : 'dddd [kl.] LT',
          lastDay : '[Í gjár kl.] LT',
          lastWeek : '[síðstu] dddd [kl] LT',
          sameElse : 'L'
      },
      relativeTime : {
          future : 'um %s',
          past : '%s síðani',
          s : 'fá sekund',
          m : 'ein minutt',
          mm : '%d minuttir',
          h : 'ein tími',
          hh : '%d tímar',
          d : 'ein dagur',
          dd : '%d dagar',
          M : 'ein mánaði',
          MM : '%d mánaðir',
          y : 'eitt ár',
          yy : '%d ár'
      },
      ordinalParse: /\d{1,2}\./,
      ordinal : '%d.',
      week : {
          dow : 1, // Monday is the first day of the week.
          doy : 4  // The week that contains Jan 4th is the first week of the year.
      }
  });

  return fo;

  })));


/***/ },
/* 1307 */
/***/ function(module, exports, __webpack_require__) {

  //! moment.js locale configuration
  //! locale : French [fr]
  //! author : John Fischer : https://github.com/jfroffice

  ;(function (global, factory) {
      true ? factory(__webpack_require__(1269)) :
     typeof define === 'function' && define.amd ? define(['../moment'], factory) :
     factory(global.moment)
  }(this, (function (moment) { 'use strict';


  var fr = moment.defineLocale('fr', {
      months : 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split('_'),
      monthsShort : 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'),
      monthsParseExact : true,
      weekdays : 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),
      weekdaysShort : 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),
      weekdaysMin : 'Di_Lu_Ma_Me_Je_Ve_Sa'.split('_'),
      weekdaysParseExact : true,
      longDateFormat : {
          LT : 'HH:mm',
          LTS : 'HH:mm:ss',
          L : 'DD/MM/YYYY',
          LL : 'D MMMM YYYY',
          LLL : 'D MMMM YYYY HH:mm',
          LLLL : 'dddd D MMMM YYYY HH:mm'
      },
      calendar : {
          sameDay: '[Aujourd\'hui à] LT',
          nextDay: '[Demain à] LT',
          nextWeek: 'dddd [à] LT',
          lastDay: '[Hier à] LT',
          lastWeek: 'dddd [dernier à] LT',
          sameElse: 'L'
      },
      relativeTime : {
          future : 'dans %s',
          past : 'il y a %s',
          s : 'quelques secondes',
          m : 'une minute',
          mm : '%d minutes',
          h : 'une heure',
          hh : '%d heures',
          d : 'un jour',
          dd : '%d jours',
          M : 'un mois',
          MM : '%d mois',
          y : 'un an',
          yy : '%d ans'
      },
      ordinalParse: /\d{1,2}(er|)/,
      ordinal : function (number) {
          return number + (number === 1 ? 'er' : '');
      },
      week : {
          dow : 1, // Monday is the first day of the week.
          doy : 4  // The week that contains Jan 4th is the first week of the year.
      }
  });

  return fr;

  })));


/***/ },
/* 1308 */
/***/ function(module, exports, __webpack_require__) {

  //! moment.js locale configuration
  //! locale : French (Canada) [fr-ca]
  //! author : Jonathan Abourbih : https://github.com/jonbca

  ;(function (global, factory) {
      true ? factory(__webpack_require__(1269)) :
     typeof define === 'function' && define.amd ? define(['../moment'], factory) :
     factory(global.moment)
  }(this, (function (moment) { 'use strict';


  var frCa = moment.defineLocale('fr-ca', {
      months : 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split('_'),
      monthsShort : 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'),
      monthsParseExact : true,
      weekdays : 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),
      weekdaysShort : 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),
      weekdaysMin : 'Di_Lu_Ma_Me_Je_Ve_Sa'.split('_'),
      weekdaysParseExact : true,
      longDateFormat : {
          LT : 'HH:mm',
          LTS : 'HH:mm:ss',
          L : 'YYYY-MM-DD',
          LL : 'D MMMM YYYY',
          LLL : 'D MMMM YYYY HH:mm',
          LLLL : 'dddd D MMMM YYYY HH:mm'
      },
      calendar : {
          sameDay: '[Aujourd\'hui à] LT',
          nextDay: '[Demain à] LT',
          nextWeek: 'dddd [à] LT',
          lastDay: '[Hier à] LT',
          lastWeek: 'dddd [dernier à] LT',
          sameElse: 'L'
      },
      relativeTime : {
          future : 'dans %s',
          past : 'il y a %s',
          s : 'quelques secondes',
          m : 'une minute',
          mm : '%d minutes',
          h : 'une heure',
          hh : '%d heures',
          d : 'un jour',
          dd : '%d jours',
          M : 'un mois',
          MM : '%d mois',
          y : 'un an',
          yy : '%d ans'
      },
      ordinalParse: /\d{1,2}(er|e)/,
      ordinal : function (number) {
          return number + (number === 1 ? 'er' : 'e');
      }
  });

  return frCa;

  })));


/***/ },
/* 1309 */
/***/ function(module, exports, __webpack_require__) {

  //! moment.js locale configuration
  //! locale : French (Switzerland) [fr-ch]
  //! author : Gaspard Bucher : https://github.com/gaspard

  ;(function (global, factory) {
      true ? factory(__webpack_require__(1269)) :
     typeof define === 'function' && define.amd ? define(['../moment'], factory) :
     factory(global.moment)
  }(this, (function (moment) { 'use strict';


  var frCh = moment.defineLocale('fr-ch', {
      months : 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split('_'),
      monthsShort : 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'),
      monthsParseExact : true,
      weekdays : 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),
      weekdaysShort : 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),
      weekdaysMin : 'Di_Lu_Ma_Me_Je_Ve_Sa'.split('_'),
      weekdaysParseExact : true,
      longDateFormat : {
          LT : 'HH:mm',
          LTS : 'HH:mm:ss',
          L : 'DD.MM.YYYY',
          LL : 'D MMMM YYYY',
          LLL : 'D MMMM YYYY HH:mm',
          LLLL : 'dddd D MMMM YYYY HH:mm'
      },
      calendar : {
          sameDay: '[Aujourd\'hui à] LT',
          nextDay: '[Demain à] LT',
          nextWeek: 'dddd [à] LT',
          lastDay: '[Hier à] LT',
          lastWeek: 'dddd [dernier à] LT',
          sameElse: 'L'
      },
      relativeTime : {
          future : 'dans %s',
          past : 'il y a %s',
          s : 'quelques secondes',
          m : 'une minute',
          mm : '%d minutes',
          h : 'une heure',
          hh : '%d heures',
          d : 'un jour',
          dd : '%d jours',
          M : 'un mois',
          MM : '%d mois',
          y : 'un an',
          yy : '%d ans'
      },
      ordinalParse: /\d{1,2}(er|e)/,
      ordinal : function (number) {
          return number + (number === 1 ? 'er' : 'e');
      },
      week : {
          dow : 1, // Monday is the first day of the week.
          doy : 4  // The week that contains Jan 4th is the first week of the year.
      }
  });

  return frCh;

  })));


/***/ },
/* 1310 */
/***/ function(module, exports, __webpack_require__) {

  //! moment.js locale configuration
  //! locale : Frisian [fy]
  //! author : Robin van der Vliet : https://github.com/robin0van0der0v

  ;(function (global, factory) {
      true ? factory(__webpack_require__(1269)) :
     typeof define === 'function' && define.amd ? define(['../moment'], factory) :
     factory(global.moment)
  }(this, (function (moment) { 'use strict';


  var monthsShortWithDots = 'jan._feb._mrt._apr._mai_jun._jul._aug._sep._okt._nov._des.'.split('_');
  var monthsShortWithoutDots = 'jan_feb_mrt_apr_mai_jun_jul_aug_sep_okt_nov_des'.split('_');

  var fy = moment.defineLocale('fy', {
      months : 'jannewaris_febrewaris_maart_april_maaie_juny_july_augustus_septimber_oktober_novimber_desimber'.split('_'),
      monthsShort : function (m, format) {
          if (/-MMM-/.test(format)) {
              return monthsShortWithoutDots[m.month()];
          } else {
              return monthsShortWithDots[m.month()];
          }
      },
      monthsParseExact : true,
      weekdays : 'snein_moandei_tiisdei_woansdei_tongersdei_freed_sneon'.split('_'),
      weekdaysShort : 'si._mo._ti._wo._to._fr._so.'.split('_'),
      weekdaysMin : 'Si_Mo_Ti_Wo_To_Fr_So'.split('_'),
      weekdaysParseExact : true,
      longDateFormat : {
          LT : 'HH:mm',
          LTS : 'HH:mm:ss',
          L : 'DD-MM-YYYY',
          LL : 'D MMMM YYYY',
          LLL : 'D MMMM YYYY HH:mm',
          LLLL : 'dddd D MMMM YYYY HH:mm'
      },
      calendar : {
          sameDay: '[hjoed om] LT',
          nextDay: '[moarn om] LT',
          nextWeek: 'dddd [om] LT',
          lastDay: '[juster om] LT',
          lastWeek: '[ôfrûne] dddd [om] LT',
          sameElse: 'L'
      },
      relativeTime : {
          future : 'oer %s',
          past : '%s lyn',
          s : 'in pear sekonden',
          m : 'ien minút',
          mm : '%d minuten',
          h : 'ien oere',
          hh : '%d oeren',
          d : 'ien dei',
          dd : '%d dagen',
          M : 'ien moanne',
          MM : '%d moannen',
          y : 'ien jier',
          yy : '%d jierren'
      },
      ordinalParse: /\d{1,2}(ste|de)/,
      ordinal : function (number) {
          return number + ((number === 1 || number === 8 || number >= 20) ? 'ste' : 'de');
      },
      week : {
          dow : 1, // Monday is the first day of the week.
          doy : 4  // The week that contains Jan 4th is the first week of the year.
      }
  });

  return fy;

  })));


/***/ },
/* 1311 */
/***/ function(module, exports, __webpack_require__) {

  //! moment.js locale configuration
  //! locale : Scottish Gaelic [gd]
  //! author : Jon Ashdown : https://github.com/jonashdown

  ;(function (global, factory) {
      true ? factory(__webpack_require__(1269)) :
     typeof define === 'function' && define.amd ? define(['../moment'], factory) :
     factory(global.moment)
  }(this, (function (moment) { 'use strict';


  var months = [
      'Am Faoilleach', 'An Gearran', 'Am Màrt', 'An Giblean', 'An Cèitean', 'An t-Ògmhios', 'An t-Iuchar', 'An Lùnastal', 'An t-Sultain', 'An Dàmhair', 'An t-Samhain', 'An Dùbhlachd'
  ];

  var monthsShort = ['Faoi', 'Gear', 'Màrt', 'Gibl', 'Cèit', 'Ògmh', 'Iuch', 'Lùn', 'Sult', 'Dàmh', 'Samh', 'Dùbh'];

  var weekdays = ['Didòmhnaich', 'Diluain', 'Dimàirt', 'Diciadain', 'Diardaoin', 'Dihaoine', 'Disathairne'];

  var weekdaysShort = ['Did', 'Dil', 'Dim', 'Dic', 'Dia', 'Dih', 'Dis'];

  var weekdaysMin = ['Dò', 'Lu', 'Mà', 'Ci', 'Ar', 'Ha', 'Sa'];

  var gd = moment.defineLocale('gd', {
      months : months,
      monthsShort : monthsShort,
      monthsParseExact : true,
      weekdays : weekdays,
      weekdaysShort : weekdaysShort,
      weekdaysMin : weekdaysMin,
      longDateFormat : {
          LT : 'HH:mm',
          LTS : 'HH:mm:ss',
          L : 'DD/MM/YYYY',
          LL : 'D MMMM YYYY',
          LLL : 'D MMMM YYYY HH:mm',
          LLLL : 'dddd, D MMMM YYYY HH:mm'
      },
      calendar : {
          sameDay : '[An-diugh aig] LT',
          nextDay : '[A-màireach aig] LT',
          nextWeek : 'dddd [aig] LT',
          lastDay : '[An-dè aig] LT',
          lastWeek : 'dddd [seo chaidh] [aig] LT',
          sameElse : 'L'
      },
      relativeTime : {
          future : 'ann an %s',
          past : 'bho chionn %s',
          s : 'beagan diogan',
          m : 'mionaid',
          mm : '%d mionaidean',
          h : 'uair',
          hh : '%d uairean',
          d : 'latha',
          dd : '%d latha',
          M : 'mìos',
          MM : '%d mìosan',
          y : 'bliadhna',
          yy : '%d bliadhna'
      },
      ordinalParse : /\d{1,2}(d|na|mh)/,
      ordinal : function (number) {
          var output = number === 1 ? 'd' : number % 10 === 2 ? 'na' : 'mh';
          return number + output;
      },
      week : {
          dow : 1, // Monday is the first day of the week.
          doy : 4  // The week that contains Jan 4th is the first week of the year.
      }
  });

  return gd;

  })));


/***/ },
/* 1312 */
/***/ function(module, exports, __webpack_require__) {

  //! moment.js locale configuration
  //! locale : Galician [gl]
  //! author : Juan G. Hurtado : https://github.com/juanghurtado

  ;(function (global, factory) {
      true ? factory(__webpack_require__(1269)) :
     typeof define === 'function' && define.amd ? define(['../moment'], factory) :
     factory(global.moment)
  }(this, (function (moment) { 'use strict';


  var gl = moment.defineLocale('gl', {
      months : 'xaneiro_febreiro_marzo_abril_maio_xuño_xullo_agosto_setembro_outubro_novembro_decembro'.split('_'),
      monthsShort : 'xan._feb._mar._abr._mai._xuñ._xul._ago._set._out._nov._dec.'.split('_'),
      monthsParseExact: true,
      weekdays : 'domingo_luns_martes_mércores_xoves_venres_sábado'.split('_'),
      weekdaysShort : 'dom._lun._mar._mér._xov._ven._sáb.'.split('_'),
      weekdaysMin : 'do_lu_ma_mé_xo_ve_sá'.split('_'),
      weekdaysParseExact : true,
      longDateFormat : {
          LT : 'H:mm',
          LTS : 'H:mm:ss',
          L : 'DD/MM/YYYY',
          LL : 'D [de] MMMM [de] YYYY',
          LLL : 'D [de] MMMM [de] YYYY H:mm',
          LLLL : 'dddd, D [de] MMMM [de] YYYY H:mm'
      },
      calendar : {
          sameDay : function () {
              return '[hoxe ' + ((this.hours() !== 1) ? 'ás' : 'á') + '] LT';
          },
          nextDay : function () {
              return '[mañá ' + ((this.hours() !== 1) ? 'ás' : 'á') + '] LT';
          },
          nextWeek : function () {
              return 'dddd [' + ((this.hours() !== 1) ? 'ás' : 'a') + '] LT';
          },
          lastDay : function () {
              return '[onte ' + ((this.hours() !== 1) ? 'á' : 'a') + '] LT';
          },
          lastWeek : function () {
              return '[o] dddd [pasado ' + ((this.hours() !== 1) ? 'ás' : 'a') + '] LT';
          },
          sameElse : 'L'
      },
      relativeTime : {
          future : function (str) {
              if (str.indexOf('un') === 0) {
                  return 'n' + str;
              }
              return 'en ' + str;
          },
          past : 'hai %s',
          s : 'uns segundos',
          m : 'un minuto',
          mm : '%d minutos',
          h : 'unha hora',
          hh : '%d horas',
          d : 'un día',
          dd : '%d días',
          M : 'un mes',
          MM : '%d meses',
          y : 'un ano',
          yy : '%d anos'
      },
      ordinalParse : /\d{1,2}º/,
      ordinal : '%dº',
      week : {
          dow : 1, // Monday is the first day of the week.
          doy : 4  // The week that contains Jan 4th is the first week of the year.
      }
  });

  return gl;

  })));


/***/ },
/* 1313 */
/***/ function(module, exports, __webpack_require__) {

  //! moment.js locale configuration
  //! locale : Hebrew [he]
  //! author : Tomer Cohen : https://github.com/tomer
  //! author : Moshe Simantov : https://github.com/DevelopmentIL
  //! author : Tal Ater : https://github.com/TalAter

  ;(function (global, factory) {
      true ? factory(__webpack_require__(1269)) :
     typeof define === 'function' && define.amd ? define(['../moment'], factory) :
     factory(global.moment)
  }(this, (function (moment) { 'use strict';


  var he = moment.defineLocale('he', {
      months : 'ינואר_פברואר_מרץ_אפריל_מאי_יוני_יולי_אוגוסט_ספטמבר_אוקטובר_נובמבר_דצמבר'.split('_'),
      monthsShort : 'ינו׳_פבר׳_מרץ_אפר׳_מאי_יוני_יולי_אוג׳_ספט׳_אוק׳_נוב׳_דצמ׳'.split('_'),
      weekdays : 'ראשון_שני_שלישי_רביעי_חמישי_שישי_שבת'.split('_'),
      weekdaysShort : 'א׳_ב׳_ג׳_ד׳_ה׳_ו׳_ש׳'.split('_'),
      weekdaysMin : 'א_ב_ג_ד_ה_ו_ש'.split('_'),
      longDateFormat : {
          LT : 'HH:mm',
          LTS : 'HH:mm:ss',
          L : 'DD/MM/YYYY',
          LL : 'D [ב]MMMM YYYY',
          LLL : 'D [ב]MMMM YYYY HH:mm',
          LLLL : 'dddd, D [ב]MMMM YYYY HH:mm',
          l : 'D/M/YYYY',
          ll : 'D MMM YYYY',
          lll : 'D MMM YYYY HH:mm',
          llll : 'ddd, D MMM YYYY HH:mm'
      },
      calendar : {
          sameDay : '[היום ב־]LT',
          nextDay : '[מחר ב־]LT',
          nextWeek : 'dddd [בשעה] LT',
          lastDay : '[אתמול ב־]LT',
          lastWeek : '[ביום] dddd [האחרון בשעה] LT',
          sameElse : 'L'
      },
      relativeTime : {
          future : 'בעוד %s',
          past : 'לפני %s',
          s : 'מספר שניות',
          m : 'דקה',
          mm : '%d דקות',
          h : 'שעה',
          hh : function (number) {
              if (number === 2) {
                  return 'שעתיים';
              }
              return number + ' שעות';
          },
          d : 'יום',
          dd : function (number) {
              if (number === 2) {
                  return 'יומיים';
              }
              return number + ' ימים';
          },
          M : 'חודש',
          MM : function (number) {
              if (number === 2) {
                  return 'חודשיים';
              }
              return number + ' חודשים';
          },
          y : 'שנה',
          yy : function (number) {
              if (number === 2) {
                  return 'שנתיים';
              } else if (number % 10 === 0 && number !== 10) {
                  return number + ' שנה';
              }
              return number + ' שנים';
          }
      },
      meridiemParse: /אחה"צ|לפנה"צ|אחרי הצהריים|לפני הצהריים|לפנות בוקר|בבוקר|בערב/i,
      isPM : function (input) {
          return /^(אחה"צ|אחרי הצהריים|בערב)$/.test(input);
      },
      meridiem : function (hour, minute, isLower) {
          if (hour < 5) {
              return 'לפנות בוקר';
          } else if (hour < 10) {
              return 'בבוקר';
          } else if (hour < 12) {
              return isLower ? 'לפנה"צ' : 'לפני הצהריים';
          } else if (hour < 18) {
              return isLower ? 'אחה"צ' : 'אחרי הצהריים';
          } else {
              return 'בערב';
          }
      }
  });

  return he;

  })));


/***/ },
/* 1314 */
/***/ function(module, exports, __webpack_require__) {

  //! moment.js locale configuration
  //! locale : Hindi [hi]
  //! author : Mayank Singhal : https://github.com/mayanksinghal

  ;(function (global, factory) {
      true ? factory(__webpack_require__(1269)) :
     typeof define === 'function' && define.amd ? define(['../moment'], factory) :
     factory(global.moment)
  }(this, (function (moment) { 'use strict';


  var symbolMap = {
      '1': '१',
      '2': '२',
      '3': '३',
      '4': '४',
      '5': '५',
      '6': '६',
      '7': '७',
      '8': '८',
      '9': '९',
      '0': '०'
  };
  var numberMap = {
      '१': '1',
      '२': '2',
      '३': '3',
      '४': '4',
      '५': '5',
      '६': '6',
      '७': '7',
      '८': '8',
      '९': '9',
      '०': '0'
  };

  var hi = moment.defineLocale('hi', {
      months : 'जनवरी_फ़रवरी_मार्च_अप्रैल_मई_जून_जुलाई_अगस्त_सितम्बर_अक्टूबर_नवम्बर_दिसम्बर'.split('_'),
      monthsShort : 'जन._फ़र._मार्च_अप्रै._मई_जून_जुल._अग._सित._अक्टू._नव._दिस.'.split('_'),
      monthsParseExact: true,
      weekdays : 'रविवार_सोमवार_मंगलवार_बुधवार_गुरूवार_शुक्रवार_शनिवार'.split('_'),
      weekdaysShort : 'रवि_सोम_मंगल_बुध_गुरू_शुक्र_शनि'.split('_'),
      weekdaysMin : 'र_सो_मं_बु_गु_शु_श'.split('_'),
      longDateFormat : {
          LT : 'A h:mm बजे',
          LTS : 'A h:mm:ss बजे',
          L : 'DD/MM/YYYY',
          LL : 'D MMMM YYYY',
          LLL : 'D MMMM YYYY, A h:mm बजे',
          LLLL : 'dddd, D MMMM YYYY, A h:mm बजे'
      },
      calendar : {
          sameDay : '[आज] LT',
          nextDay : '[कल] LT',
          nextWeek : 'dddd, LT',
          lastDay : '[कल] LT',
          lastWeek : '[पिछले] dddd, LT',
          sameElse : 'L'
      },
      relativeTime : {
          future : '%s में',
          past : '%s पहले',
          s : 'कुछ ही क्षण',
          m : 'एक मिनट',
          mm : '%d मिनट',
          h : 'एक घंटा',
          hh : '%d घंटे',
          d : 'एक दिन',
          dd : '%d दिन',
          M : 'एक महीने',
          MM : '%d महीने',
          y : 'एक वर्ष',
          yy : '%d वर्ष'
      },
      preparse: function (string) {
          return string.replace(/[१२३४५६७८९०]/g, function (match) {
              return numberMap[match];
          });
      },
      postformat: function (string) {
          return string.replace(/\d/g, function (match) {
              return symbolMap[match];
          });
      },
      // Hindi notation for meridiems are quite fuzzy in practice. While there exists
      // a rigid notion of a 'Pahar' it is not used as rigidly in modern Hindi.
      meridiemParse: /रात|सुबह|दोपहर|शाम/,
      meridiemHour : function (hour, meridiem) {
          if (hour === 12) {
              hour = 0;
          }
          if (meridiem === 'रात') {
              return hour < 4 ? hour : hour + 12;
          } else if (meridiem === 'सुबह') {
              return hour;
          } else if (meridiem === 'दोपहर') {
              return hour >= 10 ? hour : hour + 12;
          } else if (meridiem === 'शाम') {
              return hour + 12;
          }
      },
      meridiem : function (hour, minute, isLower) {
          if (hour < 4) {
              return 'रात';
          } else if (hour < 10) {
              return 'सुबह';
          } else if (hour < 17) {
              return 'दोपहर';
          } else if (hour < 20) {
              return 'शाम';
          } else {
              return 'रात';
          }
      },
      week : {
          dow : 0, // Sunday is the first day of the week.
          doy : 6  // The week that contains Jan 1st is the first week of the year.
      }
  });

  return hi;

  })));


/***/ },
/* 1315 */
/***/ function(module, exports, __webpack_require__) {

  //! moment.js locale configuration
  //! locale : Croatian [hr]
  //! author : Bojan Marković : https://github.com/bmarkovic

  ;(function (global, factory) {
      true ? factory(__webpack_require__(1269)) :
     typeof define === 'function' && define.amd ? define(['../moment'], factory) :
     factory(global.moment)
  }(this, (function (moment) { 'use strict';


  function translate(number, withoutSuffix, key) {
      var result = number + ' ';
      switch (key) {
          case 'm':
              return withoutSuffix ? 'jedna minuta' : 'jedne minute';
          case 'mm':
              if (number === 1) {
                  result += 'minuta';
              } else if (number === 2 || number === 3 || number === 4) {
                  result += 'minute';
              } else {
                  result += 'minuta';
              }
              return result;
          case 'h':
              return withoutSuffix ? 'jedan sat' : 'jednog sata';
          case 'hh':
              if (number === 1) {
                  result += 'sat';
              } else if (number === 2 || number === 3 || number === 4) {
                  result += 'sata';
              } else {
                  result += 'sati';
              }
              return result;
          case 'dd':
              if (number === 1) {
                  result += 'dan';
              } else {
                  result += 'dana';
              }
              return result;
          case 'MM':
              if (number === 1) {
                  result += 'mjesec';
              } else if (number === 2 || number === 3 || number === 4) {
                  result += 'mjeseca';
              } else {
                  result += 'mjeseci';
              }
              return result;
          case 'yy':
              if (number === 1) {
                  result += 'godina';
              } else if (number === 2 || number === 3 || number === 4) {
                  result += 'godine';
              } else {
                  result += 'godina';
              }
              return result;
      }
  }

  var hr = moment.defineLocale('hr', {
      months : {
          format: 'siječnja_veljače_ožujka_travnja_svibnja_lipnja_srpnja_kolovoza_rujna_listopada_studenoga_prosinca'.split('_'),
          standalone: 'siječanj_veljača_ožujak_travanj_svibanj_lipanj_srpanj_kolovoz_rujan_listopad_studeni_prosinac'.split('_')
      },
      monthsShort : 'sij._velj._ožu._tra._svi._lip._srp._kol._ruj._lis._stu._pro.'.split('_'),
      monthsParseExact: true,
      weekdays : 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split('_'),
      weekdaysShort : 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),
      weekdaysMin : 'ne_po_ut_sr_če_pe_su'.split('_'),
      weekdaysParseExact : true,
      longDateFormat : {
          LT : 'H:mm',
          LTS : 'H:mm:ss',
          L : 'DD.MM.YYYY',
          LL : 'D. MMMM YYYY',
          LLL : 'D. MMMM YYYY H:mm',
          LLLL : 'dddd, D. MMMM YYYY H:mm'
      },
      calendar : {
          sameDay  : '[danas u] LT',
          nextDay  : '[sutra u] LT',
          nextWeek : function () {
              switch (this.day()) {
                  case 0:
                      return '[u] [nedjelju] [u] LT';
                  case 3:
                      return '[u] [srijedu] [u] LT';
                  case 6:
                      return '[u] [subotu] [u] LT';
                  case 1:
                  case 2:
                  case 4:
                  case 5:
                      return '[u] dddd [u] LT';
              }
          },
          lastDay  : '[jučer u] LT',
          lastWeek : function () {
              switch (this.day()) {
                  case 0:
                  case 3:
                      return '[prošlu] dddd [u] LT';
                  case 6:
                      return '[prošle] [subote] [u] LT';
                  case 1:
                  case 2:
                  case 4:
                  case 5:
                      return '[prošli] dddd [u] LT';
              }
          },
          sameElse : 'L'
      },
      relativeTime : {
          future : 'za %s',
          past   : 'prije %s',
          s      : 'par sekundi',
          m      : translate,
          mm     : translate,
          h      : translate,
          hh     : translate,
          d      : 'dan',
          dd     : translate,
          M      : 'mjesec',
          MM     : translate,
          y      : 'godinu',
          yy     : translate
      },
      ordinalParse: /\d{1,2}\./,
      ordinal : '%d.',
      week : {
          dow : 1, // Monday is the first day of the week.
          doy : 7  // The week that contains Jan 1st is the first week of the year.
      }
  });

  return hr;

  })));


/***/ },
/* 1316 */
/***/ function(module, exports, __webpack_require__) {

  //! moment.js locale configuration
  //! locale : Hungarian [hu]
  //! author : Adam Brunner : https://github.com/adambrunner

  ;(function (global, factory) {
      true ? factory(__webpack_require__(1269)) :
     typeof define === 'function' && define.amd ? define(['../moment'], factory) :
     factory(global.moment)
  }(this, (function (moment) { 'use strict';


  var weekEndings = 'vasárnap hétfőn kedden szerdán csütörtökön pénteken szombaton'.split(' ');
  function translate(number, withoutSuffix, key, isFuture) {
      var num = number,
          suffix;
      switch (key) {
          case 's':
              return (isFuture || withoutSuffix) ? 'néhány másodperc' : 'néhány másodperce';
          case 'm':
              return 'egy' + (isFuture || withoutSuffix ? ' perc' : ' perce');
          case 'mm':
              return num + (isFuture || withoutSuffix ? ' perc' : ' perce');
          case 'h':
              return 'egy' + (isFuture || withoutSuffix ? ' óra' : ' órája');
          case 'hh':
              return num + (isFuture || withoutSuffix ? ' óra' : ' órája');
          case 'd':
              return 'egy' + (isFuture || withoutSuffix ? ' nap' : ' napja');
          case 'dd':
              return num + (isFuture || withoutSuffix ? ' nap' : ' napja');
          case 'M':
              return 'egy' + (isFuture || withoutSuffix ? ' hónap' : ' hónapja');
          case 'MM':
              return num + (isFuture || withoutSuffix ? ' hónap' : ' hónapja');
          case 'y':
              return 'egy' + (isFuture || withoutSuffix ? ' év' : ' éve');
          case 'yy':
              return num + (isFuture || withoutSuffix ? ' év' : ' éve');
      }
      return '';
  }
  function week(isFuture) {
      return (isFuture ? '' : '[múlt] ') + '[' + weekEndings[this.day()] + '] LT[-kor]';
  }

  var hu = moment.defineLocale('hu', {
      months : 'január_február_március_április_május_június_július_augusztus_szeptember_október_november_december'.split('_'),
      monthsShort : 'jan_feb_márc_ápr_máj_jún_júl_aug_szept_okt_nov_dec'.split('_'),
      weekdays : 'vasárnap_hétfő_kedd_szerda_csütörtök_péntek_szombat'.split('_'),
      weekdaysShort : 'vas_hét_kedd_sze_csüt_pén_szo'.split('_'),
      weekdaysMin : 'v_h_k_sze_cs_p_szo'.split('_'),
      longDateFormat : {
          LT : 'H:mm',
          LTS : 'H:mm:ss',
          L : 'YYYY.MM.DD.',
          LL : 'YYYY. MMMM D.',
          LLL : 'YYYY. MMMM D. H:mm',
          LLLL : 'YYYY. MMMM D., dddd H:mm'
      },
      meridiemParse: /de|du/i,
      isPM: function (input) {
          return input.charAt(1).toLowerCase() === 'u';
      },
      meridiem : function (hours, minutes, isLower) {
          if (hours < 12) {
              return isLower === true ? 'de' : 'DE';
          } else {
              return isLower === true ? 'du' : 'DU';
          }
      },
      calendar : {
          sameDay : '[ma] LT[-kor]',
          nextDay : '[holnap] LT[-kor]',
          nextWeek : function () {
              return week.call(this, true);
          },
          lastDay : '[tegnap] LT[-kor]',
          lastWeek : function () {
              return week.call(this, false);
          },
          sameElse : 'L'
      },
      relativeTime : {
          future : '%s múlva',
          past : '%s',
          s : translate,
          m : translate,
          mm : translate,
          h : translate,
          hh : translate,
          d : translate,
          dd : translate,
          M : translate,
          MM : translate,
          y : translate,
          yy : translate
      },
      ordinalParse: /\d{1,2}\./,
      ordinal : '%d.',
      week : {
          dow : 1, // Monday is the first day of the week.
          doy : 4  // The week that contains Jan 4th is the first week of the year.
      }
  });

  return hu;

  })));


/***/ },
/* 1317 */
/***/ function(module, exports, __webpack_require__) {

  //! moment.js locale configuration
  //! locale : Armenian [hy-am]
  //! author : Armendarabyan : https://github.com/armendarabyan

  ;(function (global, factory) {
      true ? factory(__webpack_require__(1269)) :
     typeof define === 'function' && define.amd ? define(['../moment'], factory) :
     factory(global.moment)
  }(this, (function (moment) { 'use strict';


  var hyAm = moment.defineLocale('hy-am', {
      months : {
          format: 'հունվարի_փետրվարի_մարտի_ապրիլի_մայիսի_հունիսի_հուլիսի_օգոստոսի_սեպտեմբերի_հոկտեմբերի_նոյեմբերի_դեկտեմբերի'.split('_'),
          standalone: 'հունվար_փետրվար_մարտ_ապրիլ_մայիս_հունիս_հուլիս_օգոստոս_սեպտեմբեր_հոկտեմբեր_նոյեմբեր_դեկտեմբեր'.split('_')
      },
      monthsShort : 'հնվ_փտր_մրտ_ապր_մյս_հնս_հլս_օգս_սպտ_հկտ_նմբ_դկտ'.split('_'),
      weekdays : 'կիրակի_երկուշաբթի_երեքշաբթի_չորեքշաբթի_հինգշաբթի_ուրբաթ_շաբաթ'.split('_'),
      weekdaysShort : 'կրկ_երկ_երք_չրք_հնգ_ուրբ_շբթ'.split('_'),
      weekdaysMin : 'կրկ_երկ_երք_չրք_հնգ_ուրբ_շբթ'.split('_'),
      longDateFormat : {
          LT : 'HH:mm',
          LTS : 'HH:mm:ss',
          L : 'DD.MM.YYYY',
          LL : 'D MMMM YYYY թ.',
          LLL : 'D MMMM YYYY թ., HH:mm',
          LLLL : 'dddd, D MMMM YYYY թ., HH:mm'
      },
      calendar : {
          sameDay: '[այսօր] LT',
          nextDay: '[վաղը] LT',
          lastDay: '[երեկ] LT',
          nextWeek: function () {
              return 'dddd [օրը ժամը] LT';
          },
          lastWeek: function () {
              return '[անցած] dddd [օրը ժամը] LT';
          },
          sameElse: 'L'
      },
      relativeTime : {
          future : '%s հետո',
          past : '%s առաջ',
          s : 'մի քանի վայրկյան',
          m : 'րոպե',
          mm : '%d րոպե',
          h : 'ժամ',
          hh : '%d ժամ',
          d : 'օր',
          dd : '%d օր',
          M : 'ամիս',
          MM : '%d ամիս',
          y : 'տարի',
          yy : '%d տարի'
      },
      meridiemParse: /գիշերվա|առավոտվա|ցերեկվա|երեկոյան/,
      isPM: function (input) {
          return /^(ցերեկվա|երեկոյան)$/.test(input);
      },
      meridiem : function (hour) {
          if (hour < 4) {
              return 'գիշերվա';
          } else if (hour < 12) {
              return 'առավոտվա';
          } else if (hour < 17) {
              return 'ցերեկվա';
          } else {
              return 'երեկոյան';
          }
      },
      ordinalParse: /\d{1,2}|\d{1,2}-(ին|րդ)/,
      ordinal: function (number, period) {
          switch (period) {
              case 'DDD':
              case 'w':
              case 'W':
              case 'DDDo':
                  if (number === 1) {
                      return number + '-ին';
                  }
                  return number + '-րդ';
              default:
                  return number;
          }
      },
      week : {
          dow : 1, // Monday is the first day of the week.
          doy : 7  // The week that contains Jan 1st is the first week of the year.
      }
  });

  return hyAm;

  })));


/***/ },
/* 1318 */
/***/ function(module, exports, __webpack_require__) {

  //! moment.js locale configuration
  //! locale : Indonesian [id]
  //! author : Mohammad Satrio Utomo : https://github.com/tyok
  //! reference: http://id.wikisource.org/wiki/Pedoman_Umum_Ejaan_Bahasa_Indonesia_yang_Disempurnakan

  ;(function (global, factory) {
      true ? factory(__webpack_require__(1269)) :
     typeof define === 'function' && define.amd ? define(['../moment'], factory) :
     factory(global.moment)
  }(this, (function (moment) { 'use strict';


  var id = moment.defineLocale('id', {
      months : 'Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_November_Desember'.split('_'),
      monthsShort : 'Jan_Feb_Mar_Apr_Mei_Jun_Jul_Ags_Sep_Okt_Nov_Des'.split('_'),
      weekdays : 'Minggu_Senin_Selasa_Rabu_Kamis_Jumat_Sabtu'.split('_'),
      weekdaysShort : 'Min_Sen_Sel_Rab_Kam_Jum_Sab'.split('_'),
      weekdaysMin : 'Mg_Sn_Sl_Rb_Km_Jm_Sb'.split('_'),
      longDateFormat : {
          LT : 'HH.mm',
          LTS : 'HH.mm.ss',
          L : 'DD/MM/YYYY',
          LL : 'D MMMM YYYY',
          LLL : 'D MMMM YYYY [pukul] HH.mm',
          LLLL : 'dddd, D MMMM YYYY [pukul] HH.mm'
      },
      meridiemParse: /pagi|siang|sore|malam/,
      meridiemHour : function (hour, meridiem) {
          if (hour === 12) {
              hour = 0;
          }
          if (meridiem === 'pagi') {
              return hour;
          } else if (meridiem === 'siang') {
              return hour >= 11 ? hour : hour + 12;
          } else if (meridiem === 'sore' || meridiem === 'malam') {
              return hour + 12;
          }
      },
      meridiem : function (hours, minutes, isLower) {
          if (hours < 11) {
              return 'pagi';
          } else if (hours < 15) {
              return 'siang';
          } else if (hours < 19) {
              return 'sore';
          } else {
              return 'malam';
          }
      },
      calendar : {
          sameDay : '[Hari ini pukul] LT',
          nextDay : '[Besok pukul] LT',
          nextWeek : 'dddd [pukul] LT',
          lastDay : '[Kemarin pukul] LT',
          lastWeek : 'dddd [lalu pukul] LT',
          sameElse : 'L'
      },
      relativeTime : {
          future : 'dalam %s',
          past : '%s yang lalu',
          s : 'beberapa detik',
          m : 'semenit',
          mm : '%d menit',
          h : 'sejam',
          hh : '%d jam',
          d : 'sehari',
          dd : '%d hari',
          M : 'sebulan',
          MM : '%d bulan',
          y : 'setahun',
          yy : '%d tahun'
      },
      week : {
          dow : 1, // Monday is the first day of the week.
          doy : 7  // The week that contains Jan 1st is the first week of the year.
      }
  });

  return id;

  })));


/***/ },
/* 1319 */
/***/ function(module, exports, __webpack_require__) {

  //! moment.js locale configuration
  //! locale : Icelandic [is]
  //! author : Hinrik Örn Sigurðsson : https://github.com/hinrik

  ;(function (global, factory) {
      true ? factory(__webpack_require__(1269)) :
     typeof define === 'function' && define.amd ? define(['../moment'], factory) :
     factory(global.moment)
  }(this, (function (moment) { 'use strict';


  function plural(n) {
      if (n % 100 === 11) {
          return true;
      } else if (n % 10 === 1) {
          return false;
      }
      return true;
  }
  function translate(number, withoutSuffix, key, isFuture) {
      var result = number + ' ';
      switch (key) {
          case 's':
              return withoutSuffix || isFuture ? 'nokkrar sekúndur' : 'nokkrum sekúndum';
          case 'm':
              return withoutSuffix ? 'mínúta' : 'mínútu';
          case 'mm':
              if (plural(number)) {
                  return result + (withoutSuffix || isFuture ? 'mínútur' : 'mínútum');
              } else if (withoutSuffix) {
                  return result + 'mínúta';
              }
              return result + 'mínútu';
          case 'hh':
              if (plural(number)) {
                  return result + (withoutSuffix || isFuture ? 'klukkustundir' : 'klukkustundum');
              }
              return result + 'klukkustund';
          case 'd':
              if (withoutSuffix) {
                  return 'dagur';
              }
              return isFuture ? 'dag' : 'degi';
          case 'dd':
              if (plural(number)) {
                  if (withoutSuffix) {
                      return result + 'dagar';
                  }
                  return result + (isFuture ? 'daga' : 'dögum');
              } else if (withoutSuffix) {
                  return result + 'dagur';
              }
              return result + (isFuture ? 'dag' : 'degi');
          case 'M':
              if (withoutSuffix) {
                  return 'mánuður';
              }
              return isFuture ? 'mánuð' : 'mánuði';
          case 'MM':
              if (plural(number)) {
                  if (withoutSuffix) {
                      return result + 'mánuðir';
                  }
                  return result + (isFuture ? 'mánuði' : 'mánuðum');
              } else if (withoutSuffix) {
                  return result + 'mánuður';
              }
              return result + (isFuture ? 'mánuð' : 'mánuði');
          case 'y':
              return withoutSuffix || isFuture ? 'ár' : 'ári';
          case 'yy':
              if (plural(number)) {
                  return result + (withoutSuffix || isFuture ? 'ár' : 'árum');
              }
              return result + (withoutSuffix || isFuture ? 'ár' : 'ári');
      }
  }

  var is = moment.defineLocale('is', {
      months : 'janúar_febrúar_mars_apríl_maí_júní_júlí_ágúst_september_október_nóvember_desember'.split('_'),
      monthsShort : 'jan_feb_mar_apr_maí_jún_júl_ágú_sep_okt_nóv_des'.split('_'),
      weekdays : 'sunnudagur_mánudagur_þriðjudagur_miðvikudagur_fimmtudagur_föstudagur_laugardagur'.split('_'),
      weekdaysShort : 'sun_mán_þri_mið_fim_fös_lau'.split('_'),
      weekdaysMin : 'Su_Má_Þr_Mi_Fi_Fö_La'.split('_'),
      longDateFormat : {
          LT : 'H:mm',
          LTS : 'H:mm:ss',
          L : 'DD.MM.YYYY',
          LL : 'D. MMMM YYYY',
          LLL : 'D. MMMM YYYY [kl.] H:mm',
          LLLL : 'dddd, D. MMMM YYYY [kl.] H:mm'
      },
      calendar : {
          sameDay : '[í dag kl.] LT',
          nextDay : '[á morgun kl.] LT',
          nextWeek : 'dddd [kl.] LT',
          lastDay : '[í gær kl.] LT',
          lastWeek : '[síðasta] dddd [kl.] LT',
          sameElse : 'L'
      },
      relativeTime : {
          future : 'eftir %s',
          past : 'fyrir %s síðan',
          s : translate,
          m : translate,
          mm : translate,
          h : 'klukkustund',
          hh : translate,
          d : translate,
          dd : translate,
          M : translate,
          MM : translate,
          y : translate,
          yy : translate
      },
      ordinalParse: /\d{1,2}\./,
      ordinal : '%d.',
      week : {
          dow : 1, // Monday is the first day of the week.
          doy : 4  // The week that contains Jan 4th is the first week of the year.
      }
  });

  return is;

  })));


/***/ },
/* 1320 */
/***/ function(module, exports, __webpack_require__) {

  //! moment.js locale configuration
  //! locale : Italian [it]
  //! author : Lorenzo : https://github.com/aliem
  //! author: Mattia Larentis: https://github.com/nostalgiaz

  ;(function (global, factory) {
      true ? factory(__webpack_require__(1269)) :
     typeof define === 'function' && define.amd ? define(['../moment'], factory) :
     factory(global.moment)
  }(this, (function (moment) { 'use strict';


  var it = moment.defineLocale('it', {
      months : 'gennaio_febbraio_marzo_aprile_maggio_giugno_luglio_agosto_settembre_ottobre_novembre_dicembre'.split('_'),
      monthsShort : 'gen_feb_mar_apr_mag_giu_lug_ago_set_ott_nov_dic'.split('_'),
      weekdays : 'Domenica_Lunedì_Martedì_Mercoledì_Giovedì_Venerdì_Sabato'.split('_'),
      weekdaysShort : 'Dom_Lun_Mar_Mer_Gio_Ven_Sab'.split('_'),
      weekdaysMin : 'Do_Lu_Ma_Me_Gi_Ve_Sa'.split('_'),
      longDateFormat : {
          LT : 'HH:mm',
          LTS : 'HH:mm:ss',
          L : 'DD/MM/YYYY',
          LL : 'D MMMM YYYY',
          LLL : 'D MMMM YYYY HH:mm',
          LLLL : 'dddd, D MMMM YYYY HH:mm'
      },
      calendar : {
          sameDay: '[Oggi alle] LT',
          nextDay: '[Domani alle] LT',
          nextWeek: 'dddd [alle] LT',
          lastDay: '[Ieri alle] LT',
          lastWeek: function () {
              switch (this.day()) {
                  case 0:
                      return '[la scorsa] dddd [alle] LT';
                  default:
                      return '[lo scorso] dddd [alle] LT';
              }
          },
          sameElse: 'L'
      },
      relativeTime : {
          future : function (s) {
              return ((/^[0-9].+$/).test(s) ? 'tra' : 'in') + ' ' + s;
          },
          past : '%s fa',
          s : 'alcuni secondi',
          m : 'un minuto',
          mm : '%d minuti',
          h : 'un\'ora',
          hh : '%d ore',
          d : 'un giorno',
          dd : '%d giorni',
          M : 'un mese',
          MM : '%d mesi',
          y : 'un anno',
          yy : '%d anni'
      },
      ordinalParse : /\d{1,2}º/,
      ordinal: '%dº',
      week : {
          dow : 1, // Monday is the first day of the week.
          doy : 4  // The week that contains Jan 4th is the first week of the year.
      }
  });

  return it;

  })));


/***/ },
/* 1321 */
/***/ function(module, exports, __webpack_require__) {

  //! moment.js locale configuration
  //! locale : Japanese [ja]
  //! author : LI Long : https://github.com/baryon

  ;(function (global, factory) {
      true ? factory(__webpack_require__(1269)) :
     typeof define === 'function' && define.amd ? define(['../moment'], factory) :
     factory(global.moment)
  }(this, (function (moment) { 'use strict';


  var ja = moment.defineLocale('ja', {
      months : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
      monthsShort : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
      weekdays : '日曜日_月曜日_火曜日_水曜日_木曜日_金曜日_土曜日'.split('_'),
      weekdaysShort : '日_月_火_水_木_金_土'.split('_'),
      weekdaysMin : '日_月_火_水_木_金_土'.split('_'),
      longDateFormat : {
          LT : 'Ah時m分',
          LTS : 'Ah時m分s秒',
          L : 'YYYY/MM/DD',
          LL : 'YYYY年M月D日',
          LLL : 'YYYY年M月D日Ah時m分',
          LLLL : 'YYYY年M月D日Ah時m分 dddd'
      },
      meridiemParse: /午前|午後/i,
      isPM : function (input) {
          return input === '午後';
      },
      meridiem : function (hour, minute, isLower) {
          if (hour < 12) {
              return '午前';
          } else {
              return '午後';
          }
      },
      calendar : {
          sameDay : '[今日] LT',
          nextDay : '[明日] LT',
          nextWeek : '[来週]dddd LT',
          lastDay : '[昨日] LT',
          lastWeek : '[前週]dddd LT',
          sameElse : 'L'
      },
      ordinalParse : /\d{1,2}日/,
      ordinal : function (number, period) {
          switch (period) {
              case 'd':
              case 'D':
              case 'DDD':
                  return number + '日';
              default:
                  return number;
          }
      },
      relativeTime : {
          future : '%s後',
          past : '%s前',
          s : '数秒',
          m : '1分',
          mm : '%d分',
          h : '1時間',
          hh : '%d時間',
          d : '1日',
          dd : '%d日',
          M : '1ヶ月',
          MM : '%dヶ月',
          y : '1年',
          yy : '%d年'
      }
  });

  return ja;

  })));


/***/ },
/* 1322 */
/***/ function(module, exports, __webpack_require__) {

  //! moment.js locale configuration
  //! locale : Javanese [jv]
  //! author : Rony Lantip : https://github.com/lantip
  //! reference: http://jv.wikipedia.org/wiki/Basa_Jawa

  ;(function (global, factory) {
      true ? factory(__webpack_require__(1269)) :
     typeof define === 'function' && define.amd ? define(['../moment'], factory) :
     factory(global.moment)
  }(this, (function (moment) { 'use strict';


  var jv = moment.defineLocale('jv', {
      months : 'Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_Nopember_Desember'.split('_'),
      monthsShort : 'Jan_Feb_Mar_Apr_Mei_Jun_Jul_Ags_Sep_Okt_Nop_Des'.split('_'),
      weekdays : 'Minggu_Senen_Seloso_Rebu_Kemis_Jemuwah_Septu'.split('_'),
      weekdaysShort : 'Min_Sen_Sel_Reb_Kem_Jem_Sep'.split('_'),
      weekdaysMin : 'Mg_Sn_Sl_Rb_Km_Jm_Sp'.split('_'),
      longDateFormat : {
          LT : 'HH.mm',
          LTS : 'HH.mm.ss',
          L : 'DD/MM/YYYY',
          LL : 'D MMMM YYYY',
          LLL : 'D MMMM YYYY [pukul] HH.mm',
          LLLL : 'dddd, D MMMM YYYY [pukul] HH.mm'
      },
      meridiemParse: /enjing|siyang|sonten|ndalu/,
      meridiemHour : function (hour, meridiem) {
          if (hour === 12) {
              hour = 0;
          }
          if (meridiem === 'enjing') {
              return hour;
          } else if (meridiem === 'siyang') {
              return hour >= 11 ? hour : hour + 12;
          } else if (meridiem === 'sonten' || meridiem === 'ndalu') {
              return hour + 12;
          }
      },
      meridiem : function (hours, minutes, isLower) {
          if (hours < 11) {
              return 'enjing';
          } else if (hours < 15) {
              return 'siyang';
          } else if (hours < 19) {
              return 'sonten';
          } else {
              return 'ndalu';
          }
      },
      calendar : {
          sameDay : '[Dinten puniko pukul] LT',
          nextDay : '[Mbenjang pukul] LT',
          nextWeek : 'dddd [pukul] LT',
          lastDay : '[Kala wingi pukul] LT',
          lastWeek : 'dddd [kepengker pukul] LT',
          sameElse : 'L'
      },
      relativeTime : {
          future : 'wonten ing %s',
          past : '%s ingkang kepengker',
          s : 'sawetawis detik',
          m : 'setunggal menit',
          mm : '%d menit',
          h : 'setunggal jam',
          hh : '%d jam',
          d : 'sedinten',
          dd : '%d dinten',
          M : 'sewulan',
          MM : '%d wulan',
          y : 'setaun',
          yy : '%d taun'
      },
      week : {
          dow : 1, // Monday is the first day of the week.
          doy : 7  // The week that contains Jan 1st is the first week of the year.
      }
  });

  return jv;

  })));


/***/ },
/* 1323 */
/***/ function(module, exports, __webpack_require__) {

  //! moment.js locale configuration
  //! locale : Georgian [ka]
  //! author : Irakli Janiashvili : https://github.com/irakli-janiashvili

  ;(function (global, factory) {
      true ? factory(__webpack_require__(1269)) :
     typeof define === 'function' && define.amd ? define(['../moment'], factory) :
     factory(global.moment)
  }(this, (function (moment) { 'use strict';


  var ka = moment.defineLocale('ka', {
      months : {
          standalone: 'იანვარი_თებერვალი_მარტი_აპრილი_მაისი_ივნისი_ივლისი_აგვისტო_სექტემბერი_ოქტომბერი_ნოემბერი_დეკემბერი'.split('_'),
          format: 'იანვარს_თებერვალს_მარტს_აპრილის_მაისს_ივნისს_ივლისს_აგვისტს_სექტემბერს_ოქტომბერს_ნოემბერს_დეკემბერს'.split('_')
      },
      monthsShort : 'იან_თებ_მარ_აპრ_მაი_ივნ_ივლ_აგვ_სექ_ოქტ_ნოე_დეკ'.split('_'),
      weekdays : {
          standalone: 'კვირა_ორშაბათი_სამშაბათი_ოთხშაბათი_ხუთშაბათი_პარასკევი_შაბათი'.split('_'),
          format: 'კვირას_ორშაბათს_სამშაბათს_ოთხშაბათს_ხუთშაბათს_პარასკევს_შაბათს'.split('_'),
          isFormat: /(წინა|შემდეგ)/
      },
      weekdaysShort : 'კვი_ორშ_სამ_ოთხ_ხუთ_პარ_შაბ'.split('_'),
      weekdaysMin : 'კვ_ორ_სა_ოთ_ხუ_პა_შა'.split('_'),
      longDateFormat : {
          LT : 'h:mm A',
          LTS : 'h:mm:ss A',
          L : 'DD/MM/YYYY',
          LL : 'D MMMM YYYY',
          LLL : 'D MMMM YYYY h:mm A',
          LLLL : 'dddd, D MMMM YYYY h:mm A'
      },
      calendar : {
          sameDay : '[დღეს] LT[-ზე]',
          nextDay : '[ხვალ] LT[-ზე]',
          lastDay : '[გუშინ] LT[-ზე]',
          nextWeek : '[შემდეგ] dddd LT[-ზე]',
          lastWeek : '[წინა] dddd LT-ზე',
          sameElse : 'L'
      },
      relativeTime : {
          future : function (s) {
              return (/(წამი|წუთი|საათი|წელი)/).test(s) ?
                  s.replace(/ი$/, 'ში') :
                  s + 'ში';
          },
          past : function (s) {
              if ((/(წამი|წუთი|საათი|დღე|თვე)/).test(s)) {
                  return s.replace(/(ი|ე)$/, 'ის წინ');
              }
              if ((/წელი/).test(s)) {
                  return s.replace(/წელი$/, 'წლის წინ');
              }
          },
          s : 'რამდენიმე წამი',
          m : 'წუთი',
          mm : '%d წუთი',
          h : 'საათი',
          hh : '%d საათი',
          d : 'დღე',
          dd : '%d დღე',
          M : 'თვე',
          MM : '%d თვე',
          y : 'წელი',
          yy : '%d წელი'
      },
      ordinalParse: /0|1-ლი|მე-\d{1,2}|\d{1,2}-ე/,
      ordinal : function (number) {
          if (number === 0) {
              return number;
          }
          if (number === 1) {
              return number + '-ლი';
          }
          if ((number < 20) || (number <= 100 && (number % 20 === 0)) || (number % 100 === 0)) {
              return 'მე-' + number;
          }
          return number + '-ე';
      },
      week : {
          dow : 1,
          doy : 7
      }
  });

  return ka;

  })));


/***/ },
/* 1324 */
/***/ function(module, exports, __webpack_require__) {

  //! moment.js locale configuration
  //! locale : Kazakh [kk]
  //! authors : Nurlan Rakhimzhanov : https://github.com/nurlan

  ;(function (global, factory) {
      true ? factory(__webpack_require__(1269)) :
     typeof define === 'function' && define.amd ? define(['../moment'], factory) :
     factory(global.moment)
  }(this, (function (moment) { 'use strict';


  var suffixes = {
      0: '-ші',
      1: '-ші',
      2: '-ші',
      3: '-ші',
      4: '-ші',
      5: '-ші',
      6: '-шы',
      7: '-ші',
      8: '-ші',
      9: '-шы',
      10: '-шы',
      20: '-шы',
      30: '-шы',
      40: '-шы',
      50: '-ші',
      60: '-шы',
      70: '-ші',
      80: '-ші',
      90: '-шы',
      100: '-ші'
  };

  var kk = moment.defineLocale('kk', {
      months : 'қаңтар_ақпан_наурыз_сәуір_мамыр_маусым_шілде_тамыз_қыркүйек_қазан_қараша_желтоқсан'.split('_'),
      monthsShort : 'қаң_ақп_нау_сәу_мам_мау_шіл_там_қыр_қаз_қар_жел'.split('_'),
      weekdays : 'жексенбі_дүйсенбі_сейсенбі_сәрсенбі_бейсенбі_жұма_сенбі'.split('_'),
      weekdaysShort : 'жек_дүй_сей_сәр_бей_жұм_сен'.split('_'),
      weekdaysMin : 'жк_дй_сй_ср_бй_жм_сн'.split('_'),
      longDateFormat : {
          LT : 'HH:mm',
          LTS : 'HH:mm:ss',
          L : 'DD.MM.YYYY',
          LL : 'D MMMM YYYY',
          LLL : 'D MMMM YYYY HH:mm',
          LLLL : 'dddd, D MMMM YYYY HH:mm'
      },
      calendar : {
          sameDay : '[Бүгін сағат] LT',
          nextDay : '[Ертең сағат] LT',
          nextWeek : 'dddd [сағат] LT',
          lastDay : '[Кеше сағат] LT',
          lastWeek : '[Өткен аптаның] dddd [сағат] LT',
          sameElse : 'L'
      },
      relativeTime : {
          future : '%s ішінде',
          past : '%s бұрын',
          s : 'бірнеше секунд',
          m : 'бір минут',
          mm : '%d минут',
          h : 'бір сағат',
          hh : '%d сағат',
          d : 'бір күн',
          dd : '%d күн',
          M : 'бір ай',
          MM : '%d ай',
          y : 'бір жыл',
          yy : '%d жыл'
      },
      ordinalParse: /\d{1,2}-(ші|шы)/,
      ordinal : function (number) {
          var a = number % 10,
              b = number >= 100 ? 100 : null;
          return number + (suffixes[number] || suffixes[a] || suffixes[b]);
      },
      week : {
          dow : 1, // Monday is the first day of the week.
          doy : 7  // The week that contains Jan 1st is the first week of the year.
      }
  });

  return kk;

  })));


/***/ },
/* 1325 */
/***/ function(module, exports, __webpack_require__) {

  //! moment.js locale configuration
  //! locale : Cambodian [km]
  //! author : Kruy Vanna : https://github.com/kruyvanna

  ;(function (global, factory) {
      true ? factory(__webpack_require__(1269)) :
     typeof define === 'function' && define.amd ? define(['../moment'], factory) :
     factory(global.moment)
  }(this, (function (moment) { 'use strict';


  var km = moment.defineLocale('km', {
      months: 'មករា_កុម្ភៈ_មីនា_មេសា_ឧសភា_មិថុនា_កក្កដា_សីហា_កញ្ញា_តុលា_វិច្ឆិកា_ធ្នូ'.split('_'),
      monthsShort: 'មករា_កុម្ភៈ_មីនា_មេសា_ឧសភា_មិថុនា_កក្កដា_សីហា_កញ្ញា_តុលា_វិច្ឆិកា_ធ្នូ'.split('_'),
      weekdays: 'អាទិត្យ_ច័ន្ទ_អង្គារ_ពុធ_ព្រហស្បតិ៍_សុក្រ_សៅរ៍'.split('_'),
      weekdaysShort: 'អាទិត្យ_ច័ន្ទ_អង្គារ_ពុធ_ព្រហស្បតិ៍_សុក្រ_សៅរ៍'.split('_'),
      weekdaysMin: 'អាទិត្យ_ច័ន្ទ_អង្គារ_ពុធ_ព្រហស្បតិ៍_សុក្រ_សៅរ៍'.split('_'),
      longDateFormat: {
          LT: 'HH:mm',
          LTS : 'HH:mm:ss',
          L: 'DD/MM/YYYY',
          LL: 'D MMMM YYYY',
          LLL: 'D MMMM YYYY HH:mm',
          LLLL: 'dddd, D MMMM YYYY HH:mm'
      },
      calendar: {
          sameDay: '[ថ្ងៃនេះ ម៉ោង] LT',
          nextDay: '[ស្អែក ម៉ោង] LT',
          nextWeek: 'dddd [ម៉ោង] LT',
          lastDay: '[ម្សិលមិញ ម៉ោង] LT',
          lastWeek: 'dddd [សប្តាហ៍មុន] [ម៉ោង] LT',
          sameElse: 'L'
      },
      relativeTime: {
          future: '%sទៀត',
          past: '%sមុន',
          s: 'ប៉ុន្មានវិនាទី',
          m: 'មួយនាទី',
          mm: '%d នាទី',
          h: 'មួយម៉ោង',
          hh: '%d ម៉ោង',
          d: 'មួយថ្ងៃ',
          dd: '%d ថ្ងៃ',
          M: 'មួយខែ',
          MM: '%d ខែ',
          y: 'មួយឆ្នាំ',
          yy: '%d ឆ្នាំ'
      },
      week: {
          dow: 1, // Monday is the first day of the week.
          doy: 4 // The week that contains Jan 4th is the first week of the year.
      }
  });

  return km;

  })));


/***/ },
/* 1326 */
/***/ function(module, exports, __webpack_require__) {

  //! moment.js locale configuration
  //! locale : Korean [ko]
  //! author : Kyungwook, Park : https://github.com/kyungw00k
  //! author : Jeeeyul Lee <jeeeyul@gmail.com>

  ;(function (global, factory) {
      true ? factory(__webpack_require__(1269)) :
     typeof define === 'function' && define.amd ? define(['../moment'], factory) :
     factory(global.moment)
  }(this, (function (moment) { 'use strict';


  var ko = moment.defineLocale('ko', {
      months : '1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월'.split('_'),
      monthsShort : '1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월'.split('_'),
      weekdays : '일요일_월요일_화요일_수요일_목요일_금요일_토요일'.split('_'),
      weekdaysShort : '일_월_화_수_목_금_토'.split('_'),
      weekdaysMin : '일_월_화_수_목_금_토'.split('_'),
      longDateFormat : {
          LT : 'A h시 m분',
          LTS : 'A h시 m분 s초',
          L : 'YYYY.MM.DD',
          LL : 'YYYY년 MMMM D일',
          LLL : 'YYYY년 MMMM D일 A h시 m분',
          LLLL : 'YYYY년 MMMM D일 dddd A h시 m분'
      },
      calendar : {
          sameDay : '오늘 LT',
          nextDay : '내일 LT',
          nextWeek : 'dddd LT',
          lastDay : '어제 LT',
          lastWeek : '지난주 dddd LT',
          sameElse : 'L'
      },
      relativeTime : {
          future : '%s 후',
          past : '%s 전',
          s : '몇 초',
          ss : '%d초',
          m : '일분',
          mm : '%d분',
          h : '한 시간',
          hh : '%d시간',
          d : '하루',
          dd : '%d일',
          M : '한 달',
          MM : '%d달',
          y : '일 년',
          yy : '%d년'
      },
      ordinalParse : /\d{1,2}일/,
      ordinal : '%d일',
      meridiemParse : /오전|오후/,
      isPM : function (token) {
          return token === '오후';
      },
      meridiem : function (hour, minute, isUpper) {
          return hour < 12 ? '오전' : '오후';
      }
  });

  return ko;

  })));


/***/ },
/* 1327 */
/***/ function(module, exports, __webpack_require__) {

  //! moment.js locale configuration
  //! locale : Kyrgyz [ky]
  //! author : Chyngyz Arystan uulu : https://github.com/chyngyz

  ;(function (global, factory) {
      true ? factory(__webpack_require__(1269)) :
     typeof define === 'function' && define.amd ? define(['../moment'], factory) :
     factory(global.moment)
  }(this, (function (moment) { 'use strict';



  var suffixes = {
      0: '-чү',
      1: '-чи',
      2: '-чи',
      3: '-чү',
      4: '-чү',
      5: '-чи',
      6: '-чы',
      7: '-чи',
      8: '-чи',
      9: '-чу',
      10: '-чу',
      20: '-чы',
      30: '-чу',
      40: '-чы',
      50: '-чү',
      60: '-чы',
      70: '-чи',
      80: '-чи',
      90: '-чу',
      100: '-чү'
  };

  var ky = moment.defineLocale('ky', {
      months : 'январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь'.split('_'),
      monthsShort : 'янв_фев_март_апр_май_июнь_июль_авг_сен_окт_ноя_дек'.split('_'),
      weekdays : 'Жекшемби_Дүйшөмбү_Шейшемби_Шаршемби_Бейшемби_Жума_Ишемби'.split('_'),
      weekdaysShort : 'Жек_Дүй_Шей_Шар_Бей_Жум_Ише'.split('_'),
      weekdaysMin : 'Жк_Дй_Шй_Шр_Бй_Жм_Иш'.split('_'),
      longDateFormat : {
          LT : 'HH:mm',
          LTS : 'HH:mm:ss',
          L : 'DD.MM.YYYY',
          LL : 'D MMMM YYYY',
          LLL : 'D MMMM YYYY HH:mm',
          LLLL : 'dddd, D MMMM YYYY HH:mm'
      },
      calendar : {
          sameDay : '[Бүгүн саат] LT',
          nextDay : '[Эртең саат] LT',
          nextWeek : 'dddd [саат] LT',
          lastDay : '[Кече саат] LT',
          lastWeek : '[Өткен аптанын] dddd [күнү] [саат] LT',
          sameElse : 'L'
      },
      relativeTime : {
          future : '%s ичинде',
          past : '%s мурун',
          s : 'бирнече секунд',
          m : 'бир мүнөт',
          mm : '%d мүнөт',
          h : 'бир саат',
          hh : '%d саат',
          d : 'бир күн',
          dd : '%d күн',
          M : 'бир ай',
          MM : '%d ай',
          y : 'бир жыл',
          yy : '%d жыл'
      },
      ordinalParse: /\d{1,2}-(чи|чы|чү|чу)/,
      ordinal : function (number) {
          var a = number % 10,
              b = number >= 100 ? 100 : null;
          return number + (suffixes[number] || suffixes[a] || suffixes[b]);
      },
      week : {
          dow : 1, // Monday is the first day of the week.
          doy : 7  // The week that contains Jan 1st is the first week of the year.
      }
  });

  return ky;

  })));


/***/ },
/* 1328 */
/***/ function(module, exports, __webpack_require__) {

  //! moment.js locale configuration
  //! locale : Luxembourgish [lb]
  //! author : mweimerskirch : https://github.com/mweimerskirch
  //! author : David Raison : https://github.com/kwisatz

  ;(function (global, factory) {
      true ? factory(__webpack_require__(1269)) :
     typeof define === 'function' && define.amd ? define(['../moment'], factory) :
     factory(global.moment)
  }(this, (function (moment) { 'use strict';


  function processRelativeTime(number, withoutSuffix, key, isFuture) {
      var format = {
          'm': ['eng Minutt', 'enger Minutt'],
          'h': ['eng Stonn', 'enger Stonn'],
          'd': ['een Dag', 'engem Dag'],
          'M': ['ee Mount', 'engem Mount'],
          'y': ['ee Joer', 'engem Joer']
      };
      return withoutSuffix ? format[key][0] : format[key][1];
  }
  function processFutureTime(string) {
      var number = string.substr(0, string.indexOf(' '));
      if (eifelerRegelAppliesToNumber(number)) {
          return 'a ' + string;
      }
      return 'an ' + string;
  }
  function processPastTime(string) {
      var number = string.substr(0, string.indexOf(' '));
      if (eifelerRegelAppliesToNumber(number)) {
          return 'viru ' + string;
      }
      return 'virun ' + string;
  }
  /**
   * Returns true if the word before the given number loses the '-n' ending.
   * e.g. 'an 10 Deeg' but 'a 5 Deeg'
   *
   * @param number {integer}
   * @returns {boolean}
   */
  function eifelerRegelAppliesToNumber(number) {
      number = parseInt(number, 10);
      if (isNaN(number)) {
          return false;
      }
      if (number < 0) {
          // Negative Number --> always true
          return true;
      } else if (number < 10) {
          // Only 1 digit
          if (4 <= number && number <= 7) {
              return true;
          }
          return false;
      } else if (number < 100) {
          // 2 digits
          var lastDigit = number % 10, firstDigit = number / 10;
          if (lastDigit === 0) {
              return eifelerRegelAppliesToNumber(firstDigit);
          }
          return eifelerRegelAppliesToNumber(lastDigit);
      } else if (number < 10000) {
          // 3 or 4 digits --> recursively check first digit
          while (number >= 10) {
              number = number / 10;
          }
          return eifelerRegelAppliesToNumber(number);
      } else {
          // Anything larger than 4 digits: recursively check first n-3 digits
          number = number / 1000;
          return eifelerRegelAppliesToNumber(number);
      }
  }

  var lb = moment.defineLocale('lb', {
      months: 'Januar_Februar_Mäerz_Abrëll_Mee_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),
      monthsShort: 'Jan._Febr._Mrz._Abr._Mee_Jun._Jul._Aug._Sept._Okt._Nov._Dez.'.split('_'),
      monthsParseExact : true,
      weekdays: 'Sonndeg_Méindeg_Dënschdeg_Mëttwoch_Donneschdeg_Freideg_Samschdeg'.split('_'),
      weekdaysShort: 'So._Mé._Dë._Më._Do._Fr._Sa.'.split('_'),
      weekdaysMin: 'So_Mé_Dë_Më_Do_Fr_Sa'.split('_'),
      weekdaysParseExact : true,
      longDateFormat: {
          LT: 'H:mm [Auer]',
          LTS: 'H:mm:ss [Auer]',
          L: 'DD.MM.YYYY',
          LL: 'D. MMMM YYYY',
          LLL: 'D. MMMM YYYY H:mm [Auer]',
          LLLL: 'dddd, D. MMMM YYYY H:mm [Auer]'
      },
      calendar: {
          sameDay: '[Haut um] LT',
          sameElse: 'L',
          nextDay: '[Muer um] LT',
          nextWeek: 'dddd [um] LT',
          lastDay: '[Gëschter um] LT',
          lastWeek: function () {
              // Different date string for 'Dënschdeg' (Tuesday) and 'Donneschdeg' (Thursday) due to phonological rule
              switch (this.day()) {
                  case 2:
                  case 4:
                      return '[Leschten] dddd [um] LT';
                  default:
                      return '[Leschte] dddd [um] LT';
              }
          }
      },
      relativeTime : {
          future : processFutureTime,
          past : processPastTime,
          s : 'e puer Sekonnen',
          m : processRelativeTime,
          mm : '%d Minutten',
          h : processRelativeTime,
          hh : '%d Stonnen',
          d : processRelativeTime,
          dd : '%d Deeg',
          M : processRelativeTime,
          MM : '%d Méint',
          y : processRelativeTime,
          yy : '%d Joer'
      },
      ordinalParse: /\d{1,2}\./,
      ordinal: '%d.',
      week: {
          dow: 1, // Monday is the first day of the week.
          doy: 4  // The week that contains Jan 4th is the first week of the year.
      }
  });

  return lb;

  })));


/***/ },
/* 1329 */
/***/ function(module, exports, __webpack_require__) {

  //! moment.js locale configuration
  //! locale : Lao [lo]
  //! author : Ryan Hart : https://github.com/ryanhart2

  ;(function (global, factory) {
      true ? factory(__webpack_require__(1269)) :
     typeof define === 'function' && define.amd ? define(['../moment'], factory) :
     factory(global.moment)
  }(this, (function (moment) { 'use strict';


  var lo = moment.defineLocale('lo', {
      months : 'ມັງກອນ_ກຸມພາ_ມີນາ_ເມສາ_ພຶດສະພາ_ມິຖຸນາ_ກໍລະກົດ_ສິງຫາ_ກັນຍາ_ຕຸລາ_ພະຈິກ_ທັນວາ'.split('_'),
      monthsShort : 'ມັງກອນ_ກຸມພາ_ມີນາ_ເມສາ_ພຶດສະພາ_ມິຖຸນາ_ກໍລະກົດ_ສິງຫາ_ກັນຍາ_ຕຸລາ_ພະຈິກ_ທັນວາ'.split('_'),
      weekdays : 'ອາທິດ_ຈັນ_ອັງຄານ_ພຸດ_ພະຫັດ_ສຸກ_ເສົາ'.split('_'),
      weekdaysShort : 'ທິດ_ຈັນ_ອັງຄານ_ພຸດ_ພະຫັດ_ສຸກ_ເສົາ'.split('_'),
      weekdaysMin : 'ທ_ຈ_ອຄ_ພ_ພຫ_ສກ_ສ'.split('_'),
      weekdaysParseExact : true,
      longDateFormat : {
          LT : 'HH:mm',
          LTS : 'HH:mm:ss',
          L : 'DD/MM/YYYY',
          LL : 'D MMMM YYYY',
          LLL : 'D MMMM YYYY HH:mm',
          LLLL : 'ວັນdddd D MMMM YYYY HH:mm'
      },
      meridiemParse: /ຕອນເຊົ້າ|ຕອນແລງ/,
      isPM: function (input) {
          return input === 'ຕອນແລງ';
      },
      meridiem : function (hour, minute, isLower) {
          if (hour < 12) {
              return 'ຕອນເຊົ້າ';
          } else {
              return 'ຕອນແລງ';
          }
      },
      calendar : {
          sameDay : '[ມື້ນີ້ເວລາ] LT',
          nextDay : '[ມື້ອື່ນເວລາ] LT',
          nextWeek : '[ວັນ]dddd[ໜ້າເວລາ] LT',
          lastDay : '[ມື້ວານນີ້ເວລາ] LT',
          lastWeek : '[ວັນ]dddd[ແລ້ວນີ້ເວລາ] LT',
          sameElse : 'L'
      },
      relativeTime : {
          future : 'ອີກ %s',
          past : '%sຜ່ານມາ',
          s : 'ບໍ່ເທົ່າໃດວິນາທີ',
          m : '1 ນາທີ',
          mm : '%d ນາທີ',
          h : '1 ຊົ່ວໂມງ',
          hh : '%d ຊົ່ວໂມງ',
          d : '1 ມື້',
          dd : '%d ມື້',
          M : '1 ເດືອນ',
          MM : '%d ເດືອນ',
          y : '1 ປີ',
          yy : '%d ປີ'
      },
      ordinalParse: /(ທີ່)\d{1,2}/,
      ordinal : function (number) {
          return 'ທີ່' + number;
      }
  });

  return lo;

  })));


/***/ },
/* 1330 */
/***/ function(module, exports, __webpack_require__) {

  //! moment.js locale configuration
  //! locale : Lithuanian [lt]
  //! author : Mindaugas Mozūras : https://github.com/mmozuras

  ;(function (global, factory) {
      true ? factory(__webpack_require__(1269)) :
     typeof define === 'function' && define.amd ? define(['../moment'], factory) :
     factory(global.moment)
  }(this, (function (moment) { 'use strict';


  var units = {
      'm' : 'minutė_minutės_minutę',
      'mm': 'minutės_minučių_minutes',
      'h' : 'valanda_valandos_valandą',
      'hh': 'valandos_valandų_valandas',
      'd' : 'diena_dienos_dieną',
      'dd': 'dienos_dienų_dienas',
      'M' : 'mėnuo_mėnesio_mėnesį',
      'MM': 'mėnesiai_mėnesių_mėnesius',
      'y' : 'metai_metų_metus',
      'yy': 'metai_metų_metus'
  };
  function translateSeconds(number, withoutSuffix, key, isFuture) {
      if (withoutSuffix) {
          return 'kelios sekundės';
      } else {
          return isFuture ? 'kelių sekundžių' : 'kelias sekundes';
      }
  }
  function translateSingular(number, withoutSuffix, key, isFuture) {
      return withoutSuffix ? forms(key)[0] : (isFuture ? forms(key)[1] : forms(key)[2]);
  }
  function special(number) {
      return number % 10 === 0 || (number > 10 && number < 20);
  }
  function forms(key) {
      return units[key].split('_');
  }
  function translate(number, withoutSuffix, key, isFuture) {
      var result = number + ' ';
      if (number === 1) {
          return result + translateSingular(number, withoutSuffix, key[0], isFuture);
      } else if (withoutSuffix) {
          return result + (special(number) ? forms(key)[1] : forms(key)[0]);
      } else {
          if (isFuture) {
              return result + forms(key)[1];
          } else {
              return result + (special(number) ? forms(key)[1] : forms(key)[2]);
          }
      }
  }
  var lt = moment.defineLocale('lt', {
      months : {
          format: 'sausio_vasario_kovo_balandžio_gegužės_birželio_liepos_rugpjūčio_rugsėjo_spalio_lapkričio_gruodžio'.split('_'),
          standalone: 'sausis_vasaris_kovas_balandis_gegužė_birželis_liepa_rugpjūtis_rugsėjis_spalis_lapkritis_gruodis'.split('_'),
          isFormat: /D[oD]?(\[[^\[\]]*\]|\s)+MMMM?|MMMM?(\[[^\[\]]*\]|\s)+D[oD]?/
      },
      monthsShort : 'sau_vas_kov_bal_geg_bir_lie_rgp_rgs_spa_lap_grd'.split('_'),
      weekdays : {
          format: 'sekmadienį_pirmadienį_antradienį_trečiadienį_ketvirtadienį_penktadienį_šeštadienį'.split('_'),
          standalone: 'sekmadienis_pirmadienis_antradienis_trečiadienis_ketvirtadienis_penktadienis_šeštadienis'.split('_'),
          isFormat: /dddd HH:mm/
      },
      weekdaysShort : 'Sek_Pir_Ant_Tre_Ket_Pen_Šeš'.split('_'),
      weekdaysMin : 'S_P_A_T_K_Pn_Š'.split('_'),
      weekdaysParseExact : true,
      longDateFormat : {
          LT : 'HH:mm',
          LTS : 'HH:mm:ss',
          L : 'YYYY-MM-DD',
          LL : 'YYYY [m.] MMMM D [d.]',
          LLL : 'YYYY [m.] MMMM D [d.], HH:mm [val.]',
          LLLL : 'YYYY [m.] MMMM D [d.], dddd, HH:mm [val.]',
          l : 'YYYY-MM-DD',
          ll : 'YYYY [m.] MMMM D [d.]',
          lll : 'YYYY [m.] MMMM D [d.], HH:mm [val.]',
          llll : 'YYYY [m.] MMMM D [d.], ddd, HH:mm [val.]'
      },
      calendar : {
          sameDay : '[Šiandien] LT',
          nextDay : '[Rytoj] LT',
          nextWeek : 'dddd LT',
          lastDay : '[Vakar] LT',
          lastWeek : '[Praėjusį] dddd LT',
          sameElse : 'L'
      },
      relativeTime : {
          future : 'po %s',
          past : 'prieš %s',
          s : translateSeconds,
          m : translateSingular,
          mm : translate,
          h : translateSingular,
          hh : translate,
          d : translateSingular,
          dd : translate,
          M : translateSingular,
          MM : translate,
          y : translateSingular,
          yy : translate
      },
      ordinalParse: /\d{1,2}-oji/,
      ordinal : function (number) {
          return number + '-oji';
      },
      week : {
          dow : 1, // Monday is the first day of the week.
          doy : 4  // The week that contains Jan 4th is the first week of the year.
      }
  });

  return lt;

  })));


/***/ },
/* 1331 */
/***/ function(module, exports, __webpack_require__) {

  //! moment.js locale configuration
  //! locale : Latvian [lv]
  //! author : Kristaps Karlsons : https://github.com/skakri
  //! author : Jānis Elmeris : https://github.com/JanisE

  ;(function (global, factory) {
      true ? factory(__webpack_require__(1269)) :
     typeof define === 'function' && define.amd ? define(['../moment'], factory) :
     factory(global.moment)
  }(this, (function (moment) { 'use strict';


  var units = {
      'm': 'minūtes_minūtēm_minūte_minūtes'.split('_'),
      'mm': 'minūtes_minūtēm_minūte_minūtes'.split('_'),
      'h': 'stundas_stundām_stunda_stundas'.split('_'),
      'hh': 'stundas_stundām_stunda_stundas'.split('_'),
      'd': 'dienas_dienām_diena_dienas'.split('_'),
      'dd': 'dienas_dienām_diena_dienas'.split('_'),
      'M': 'mēneša_mēnešiem_mēnesis_mēneši'.split('_'),
      'MM': 'mēneša_mēnešiem_mēnesis_mēneši'.split('_'),
      'y': 'gada_gadiem_gads_gadi'.split('_'),
      'yy': 'gada_gadiem_gads_gadi'.split('_')
  };
  /**
   * @param withoutSuffix boolean true = a length of time; false = before/after a period of time.
   */
  function format(forms, number, withoutSuffix) {
      if (withoutSuffix) {
          // E.g. "21 minūte", "3 minūtes".
          return number % 10 === 1 && number % 100 !== 11 ? forms[2] : forms[3];
      } else {
          // E.g. "21 minūtes" as in "pēc 21 minūtes".
          // E.g. "3 minūtēm" as in "pēc 3 minūtēm".
          return number % 10 === 1 && number % 100 !== 11 ? forms[0] : forms[1];
      }
  }
  function relativeTimeWithPlural(number, withoutSuffix, key) {
      return number + ' ' + format(units[key], number, withoutSuffix);
  }
  function relativeTimeWithSingular(number, withoutSuffix, key) {
      return format(units[key], number, withoutSuffix);
  }
  function relativeSeconds(number, withoutSuffix) {
      return withoutSuffix ? 'dažas sekundes' : 'dažām sekundēm';
  }

  var lv = moment.defineLocale('lv', {
      months : 'janvāris_februāris_marts_aprīlis_maijs_jūnijs_jūlijs_augusts_septembris_oktobris_novembris_decembris'.split('_'),
      monthsShort : 'jan_feb_mar_apr_mai_jūn_jūl_aug_sep_okt_nov_dec'.split('_'),
      weekdays : 'svētdiena_pirmdiena_otrdiena_trešdiena_ceturtdiena_piektdiena_sestdiena'.split('_'),
      weekdaysShort : 'Sv_P_O_T_C_Pk_S'.split('_'),
      weekdaysMin : 'Sv_P_O_T_C_Pk_S'.split('_'),
      weekdaysParseExact : true,
      longDateFormat : {
          LT : 'HH:mm',
          LTS : 'HH:mm:ss',
          L : 'DD.MM.YYYY.',
          LL : 'YYYY. [gada] D. MMMM',
          LLL : 'YYYY. [gada] D. MMMM, HH:mm',
          LLLL : 'YYYY. [gada] D. MMMM, dddd, HH:mm'
      },
      calendar : {
          sameDay : '[Šodien pulksten] LT',
          nextDay : '[Rīt pulksten] LT',
          nextWeek : 'dddd [pulksten] LT',
          lastDay : '[Vakar pulksten] LT',
          lastWeek : '[Pagājušā] dddd [pulksten] LT',
          sameElse : 'L'
      },
      relativeTime : {
          future : 'pēc %s',
          past : 'pirms %s',
          s : relativeSeconds,
          m : relativeTimeWithSingular,
          mm : relativeTimeWithPlural,
          h : relativeTimeWithSingular,
          hh : relativeTimeWithPlural,
          d : relativeTimeWithSingular,
          dd : relativeTimeWithPlural,
          M : relativeTimeWithSingular,
          MM : relativeTimeWithPlural,
          y : relativeTimeWithSingular,
          yy : relativeTimeWithPlural
      },
      ordinalParse: /\d{1,2}\./,
      ordinal : '%d.',
      week : {
          dow : 1, // Monday is the first day of the week.
          doy : 4  // The week that contains Jan 4th is the first week of the year.
      }
  });

  return lv;

  })));


/***/ },
/* 1332 */
/***/ function(module, exports, __webpack_require__) {

  //! moment.js locale configuration
  //! locale : Montenegrin [me]
  //! author : Miodrag Nikač <miodrag@restartit.me> : https://github.com/miodragnikac

  ;(function (global, factory) {
      true ? factory(__webpack_require__(1269)) :
     typeof define === 'function' && define.amd ? define(['../moment'], factory) :
     factory(global.moment)
  }(this, (function (moment) { 'use strict';


  var translator = {
      words: { //Different grammatical cases
          m: ['jedan minut', 'jednog minuta'],
          mm: ['minut', 'minuta', 'minuta'],
          h: ['jedan sat', 'jednog sata'],
          hh: ['sat', 'sata', 'sati'],
          dd: ['dan', 'dana', 'dana'],
          MM: ['mjesec', 'mjeseca', 'mjeseci'],
          yy: ['godina', 'godine', 'godina']
      },
      correctGrammaticalCase: function (number, wordKey) {
          return number === 1 ? wordKey[0] : (number >= 2 && number <= 4 ? wordKey[1] : wordKey[2]);
      },
      translate: function (number, withoutSuffix, key) {
          var wordKey = translator.words[key];
          if (key.length === 1) {
              return withoutSuffix ? wordKey[0] : wordKey[1];
          } else {
              return number + ' ' + translator.correctGrammaticalCase(number, wordKey);
          }
      }
  };

  var me = moment.defineLocale('me', {
      months: 'januar_februar_mart_april_maj_jun_jul_avgust_septembar_oktobar_novembar_decembar'.split('_'),
      monthsShort: 'jan._feb._mar._apr._maj_jun_jul_avg._sep._okt._nov._dec.'.split('_'),
      monthsParseExact : true,
      weekdays: 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split('_'),
      weekdaysShort: 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),
      weekdaysMin: 'ne_po_ut_sr_če_pe_su'.split('_'),
      weekdaysParseExact : true,
      longDateFormat: {
          LT: 'H:mm',
          LTS : 'H:mm:ss',
          L: 'DD.MM.YYYY',
          LL: 'D. MMMM YYYY',
          LLL: 'D. MMMM YYYY H:mm',
          LLLL: 'dddd, D. MMMM YYYY H:mm'
      },
      calendar: {
          sameDay: '[danas u] LT',
          nextDay: '[sjutra u] LT',

          nextWeek: function () {
              switch (this.day()) {
                  case 0:
                      return '[u] [nedjelju] [u] LT';
                  case 3:
                      return '[u] [srijedu] [u] LT';
                  case 6:
                      return '[u] [subotu] [u] LT';
                  case 1:
                  case 2:
                  case 4:
                  case 5:
                      return '[u] dddd [u] LT';
              }
          },
          lastDay  : '[juče u] LT',
          lastWeek : function () {
              var lastWeekDays = [
                  '[prošle] [nedjelje] [u] LT',
                  '[prošlog] [ponedjeljka] [u] LT',
                  '[prošlog] [utorka] [u] LT',
                  '[prošle] [srijede] [u] LT',
                  '[prošlog] [četvrtka] [u] LT',
                  '[prošlog] [petka] [u] LT',
                  '[prošle] [subote] [u] LT'
              ];
              return lastWeekDays[this.day()];
          },
          sameElse : 'L'
      },
      relativeTime : {
          future : 'za %s',
          past   : 'prije %s',
          s      : 'nekoliko sekundi',
          m      : translator.translate,
          mm     : translator.translate,
          h      : translator.translate,
          hh     : translator.translate,
          d      : 'dan',
          dd     : translator.translate,
          M      : 'mjesec',
          MM     : translator.translate,
          y      : 'godinu',
          yy     : translator.translate
      },
      ordinalParse: /\d{1,2}\./,
      ordinal : '%d.',
      week : {
          dow : 1, // Monday is the first day of the week.
          doy : 7  // The week that contains Jan 1st is the first week of the year.
      }
  });

  return me;

  })));


/***/ },
/* 1333 */
/***/ function(module, exports, __webpack_require__) {

  //! moment.js locale configuration
  //! locale : Maori [mi]
  //! author : John Corrigan <robbiecloset@gmail.com> : https://github.com/johnideal

  ;(function (global, factory) {
      true ? factory(__webpack_require__(1269)) :
     typeof define === 'function' && define.amd ? define(['../moment'], factory) :
     factory(global.moment)
  }(this, (function (moment) { 'use strict';


  var mi = moment.defineLocale('mi', {
      months: 'Kohi-tāte_Hui-tanguru_Poutū-te-rangi_Paenga-whāwhā_Haratua_Pipiri_Hōngoingoi_Here-turi-kōkā_Mahuru_Whiringa-ā-nuku_Whiringa-ā-rangi_Hakihea'.split('_'),
      monthsShort: 'Kohi_Hui_Pou_Pae_Hara_Pipi_Hōngoi_Here_Mahu_Whi-nu_Whi-ra_Haki'.split('_'),
      monthsRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,3}/i,
      monthsStrictRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,3}/i,
      monthsShortRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,3}/i,
      monthsShortStrictRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,2}/i,
      weekdays: 'Rātapu_Mane_Tūrei_Wenerei_Tāite_Paraire_Hātarei'.split('_'),
      weekdaysShort: 'Ta_Ma_Tū_We_Tāi_Pa_Hā'.split('_'),
      weekdaysMin: 'Ta_Ma_Tū_We_Tāi_Pa_Hā'.split('_'),
      longDateFormat: {
          LT: 'HH:mm',
          LTS: 'HH:mm:ss',
          L: 'DD/MM/YYYY',
          LL: 'D MMMM YYYY',
          LLL: 'D MMMM YYYY [i] HH:mm',
          LLLL: 'dddd, D MMMM YYYY [i] HH:mm'
      },
      calendar: {
          sameDay: '[i teie mahana, i] LT',
          nextDay: '[apopo i] LT',
          nextWeek: 'dddd [i] LT',
          lastDay: '[inanahi i] LT',
          lastWeek: 'dddd [whakamutunga i] LT',
          sameElse: 'L'
      },
      relativeTime: {
          future: 'i roto i %s',
          past: '%s i mua',
          s: 'te hēkona ruarua',
          m: 'he meneti',
          mm: '%d meneti',
          h: 'te haora',
          hh: '%d haora',
          d: 'he ra',
          dd: '%d ra',
          M: 'he marama',
          MM: '%d marama',
          y: 'he tau',
          yy: '%d tau'
      },
      ordinalParse: /\d{1,2}º/,
      ordinal: '%dº',
      week : {
          dow : 1, // Monday is the first day of the week.
          doy : 4  // The week that contains Jan 4th is the first week of the year.
      }
  });

  return mi;

  })));


/***/ },
/* 1334 */
/***/ function(module, exports, __webpack_require__) {

  //! moment.js locale configuration
  //! locale : Macedonian [mk]
  //! author : Borislav Mickov : https://github.com/B0k0

  ;(function (global, factory) {
      true ? factory(__webpack_require__(1269)) :
     typeof define === 'function' && define.amd ? define(['../moment'], factory) :
     factory(global.moment)
  }(this, (function (moment) { 'use strict';


  var mk = moment.defineLocale('mk', {
      months : 'јануари_февруари_март_април_мај_јуни_јули_август_септември_октомври_ноември_декември'.split('_'),
      monthsShort : 'јан_фев_мар_апр_мај_јун_јул_авг_сеп_окт_ное_дек'.split('_'),
      weekdays : 'недела_понеделник_вторник_среда_четврток_петок_сабота'.split('_'),
      weekdaysShort : 'нед_пон_вто_сре_чет_пет_саб'.split('_'),
      weekdaysMin : 'нe_пo_вт_ср_че_пе_сa'.split('_'),
      longDateFormat : {
          LT : 'H:mm',
          LTS : 'H:mm:ss',
          L : 'D.MM.YYYY',
          LL : 'D MMMM YYYY',
          LLL : 'D MMMM YYYY H:mm',
          LLLL : 'dddd, D MMMM YYYY H:mm'
      },
      calendar : {
          sameDay : '[Денес во] LT',
          nextDay : '[Утре во] LT',
          nextWeek : '[Во] dddd [во] LT',
          lastDay : '[Вчера во] LT',
          lastWeek : function () {
              switch (this.day()) {
                  case 0:
                  case 3:
                  case 6:
                      return '[Изминатата] dddd [во] LT';
                  case 1:
                  case 2:
                  case 4:
                  case 5:
                      return '[Изминатиот] dddd [во] LT';
              }
          },
          sameElse : 'L'
      },
      relativeTime : {
          future : 'после %s',
          past : 'пред %s',
          s : 'неколку секунди',
          m : 'минута',
          mm : '%d минути',
          h : 'час',
          hh : '%d часа',
          d : 'ден',
          dd : '%d дена',
          M : 'месец',
          MM : '%d месеци',
          y : 'година',
          yy : '%d години'
      },
      ordinalParse: /\d{1,2}-(ев|ен|ти|ви|ри|ми)/,
      ordinal : function (number) {
          var lastDigit = number % 10,
              last2Digits = number % 100;
          if (number === 0) {
              return number + '-ев';
          } else if (last2Digits === 0) {
              return number + '-ен';
          } else if (last2Digits > 10 && last2Digits < 20) {
              return number + '-ти';
          } else if (lastDigit === 1) {
              return number + '-ви';
          } else if (lastDigit === 2) {
              return number + '-ри';
          } else if (lastDigit === 7 || lastDigit === 8) {
              return number + '-ми';
          } else {
              return number + '-ти';
          }
      },
      week : {
          dow : 1, // Monday is the first day of the week.
          doy : 7  // The week that contains Jan 1st is the first week of the year.
      }
  });

  return mk;

  })));


/***/ },
/* 1335 */
/***/ function(module, exports, __webpack_require__) {

  //! moment.js locale configuration
  //! locale : Malayalam [ml]
  //! author : Floyd Pink : https://github.com/floydpink

  ;(function (global, factory) {
      true ? factory(__webpack_require__(1269)) :
     typeof define === 'function' && define.amd ? define(['../moment'], factory) :
     factory(global.moment)
  }(this, (function (moment) { 'use strict';


  var ml = moment.defineLocale('ml', {
      months : 'ജനുവരി_ഫെബ്രുവരി_മാർച്ച്_ഏപ്രിൽ_മേയ്_ജൂൺ_ജൂലൈ_ഓഗസ്റ്റ്_സെപ്റ്റംബർ_ഒക്ടോബർ_നവംബർ_ഡിസംബർ'.split('_'),
      monthsShort : 'ജനു._ഫെബ്രു._മാർ._ഏപ്രി._മേയ്_ജൂൺ_ജൂലൈ._ഓഗ._സെപ്റ്റ._ഒക്ടോ._നവം._ഡിസം.'.split('_'),
      monthsParseExact : true,
      weekdays : 'ഞായറാഴ്ച_തിങ്കളാഴ്ച_ചൊവ്വാഴ്ച_ബുധനാഴ്ച_വ്യാഴാഴ്ച_വെള്ളിയാഴ്ച_ശനിയാഴ്ച'.split('_'),
      weekdaysShort : 'ഞായർ_തിങ്കൾ_ചൊവ്വ_ബുധൻ_വ്യാഴം_വെള്ളി_ശനി'.split('_'),
      weekdaysMin : 'ഞാ_തി_ചൊ_ബു_വ്യാ_വെ_ശ'.split('_'),
      longDateFormat : {
          LT : 'A h:mm -നു',
          LTS : 'A h:mm:ss -നു',
          L : 'DD/MM/YYYY',
          LL : 'D MMMM YYYY',
          LLL : 'D MMMM YYYY, A h:mm -നു',
          LLLL : 'dddd, D MMMM YYYY, A h:mm -നു'
      },
      calendar : {
          sameDay : '[ഇന്ന്] LT',
          nextDay : '[നാളെ] LT',
          nextWeek : 'dddd, LT',
          lastDay : '[ഇന്നലെ] LT',
          lastWeek : '[കഴിഞ്ഞ] dddd, LT',
          sameElse : 'L'
      },
      relativeTime : {
          future : '%s കഴിഞ്ഞ്',
          past : '%s മുൻപ്',
          s : 'അൽപ നിമിഷങ്ങൾ',
          m : 'ഒരു മിനിറ്റ്',
          mm : '%d മിനിറ്റ്',
          h : 'ഒരു മണിക്കൂർ',
          hh : '%d മണിക്കൂർ',
          d : 'ഒരു ദിവസം',
          dd : '%d ദിവസം',
          M : 'ഒരു മാസം',
          MM : '%d മാസം',
          y : 'ഒരു വർഷം',
          yy : '%d വർഷം'
      },
      meridiemParse: /രാത്രി|രാവിലെ|ഉച്ച കഴിഞ്ഞ്|വൈകുന്നേരം|രാത്രി/i,
      meridiemHour : function (hour, meridiem) {
          if (hour === 12) {
              hour = 0;
          }
          if ((meridiem === 'രാത്രി' && hour >= 4) ||
                  meridiem === 'ഉച്ച കഴിഞ്ഞ്' ||
                  meridiem === 'വൈകുന്നേരം') {
              return hour + 12;
          } else {
              return hour;
          }
      },
      meridiem : function (hour, minute, isLower) {
          if (hour < 4) {
              return 'രാത്രി';
          } else if (hour < 12) {
              return 'രാവിലെ';
          } else if (hour < 17) {
              return 'ഉച്ച കഴിഞ്ഞ്';
          } else if (hour < 20) {
              return 'വൈകുന്നേരം';
          } else {
              return 'രാത്രി';
          }
      }
  });

  return ml;

  })));


/***/ },
/* 1336 */
/***/ function(module, exports, __webpack_require__) {

  //! moment.js locale configuration
  //! locale : Marathi [mr]
  //! author : Harshad Kale : https://github.com/kalehv
  //! author : Vivek Athalye : https://github.com/vnathalye

  ;(function (global, factory) {
      true ? factory(__webpack_require__(1269)) :
     typeof define === 'function' && define.amd ? define(['../moment'], factory) :
     factory(global.moment)
  }(this, (function (moment) { 'use strict';


  var symbolMap = {
      '1': '१',
      '2': '२',
      '3': '३',
      '4': '४',
      '5': '५',
      '6': '६',
      '7': '७',
      '8': '८',
      '9': '९',
      '0': '०'
  };
  var numberMap = {
      '१': '1',
      '२': '2',
      '३': '3',
      '४': '4',
      '५': '5',
      '६': '6',
      '७': '7',
      '८': '8',
      '९': '9',
      '०': '0'
  };

  function relativeTimeMr(number, withoutSuffix, string, isFuture)
  {
      var output = '';
      if (withoutSuffix) {
          switch (string) {
              case 's': output = 'काही सेकंद'; break;
              case 'm': output = 'एक मिनिट'; break;
              case 'mm': output = '%d मिनिटे'; break;
              case 'h': output = 'एक तास'; break;
              case 'hh': output = '%d तास'; break;
              case 'd': output = 'एक दिवस'; break;
              case 'dd': output = '%d दिवस'; break;
              case 'M': output = 'एक महिना'; break;
              case 'MM': output = '%d महिने'; break;
              case 'y': output = 'एक वर्ष'; break;
              case 'yy': output = '%d वर्षे'; break;
          }
      }
      else {
          switch (string) {
              case 's': output = 'काही सेकंदां'; break;
              case 'm': output = 'एका मिनिटा'; break;
              case 'mm': output = '%d मिनिटां'; break;
              case 'h': output = 'एका तासा'; break;
              case 'hh': output = '%d तासां'; break;
              case 'd': output = 'एका दिवसा'; break;
              case 'dd': output = '%d दिवसां'; break;
              case 'M': output = 'एका महिन्या'; break;
              case 'MM': output = '%d महिन्यां'; break;
              case 'y': output = 'एका वर्षा'; break;
              case 'yy': output = '%d वर्षां'; break;
          }
      }
      return output.replace(/%d/i, number);
  }

  var mr = moment.defineLocale('mr', {
      months : 'जानेवारी_फेब्रुवारी_मार्च_एप्रिल_मे_जून_जुलै_ऑगस्ट_सप्टेंबर_ऑक्टोबर_नोव्हेंबर_डिसेंबर'.split('_'),
      monthsShort: 'जाने._फेब्रु._मार्च._एप्रि._मे._जून._जुलै._ऑग._सप्टें._ऑक्टो._नोव्हें._डिसें.'.split('_'),
      monthsParseExact : true,
      weekdays : 'रविवार_सोमवार_मंगळवार_बुधवार_गुरूवार_शुक्रवार_शनिवार'.split('_'),
      weekdaysShort : 'रवि_सोम_मंगळ_बुध_गुरू_शुक्र_शनि'.split('_'),
      weekdaysMin : 'र_सो_मं_बु_गु_शु_श'.split('_'),
      longDateFormat : {
          LT : 'A h:mm वाजता',
          LTS : 'A h:mm:ss वाजता',
          L : 'DD/MM/YYYY',
          LL : 'D MMMM YYYY',
          LLL : 'D MMMM YYYY, A h:mm वाजता',
          LLLL : 'dddd, D MMMM YYYY, A h:mm वाजता'
      },
      calendar : {
          sameDay : '[आज] LT',
          nextDay : '[उद्या] LT',
          nextWeek : 'dddd, LT',
          lastDay : '[काल] LT',
          lastWeek: '[मागील] dddd, LT',
          sameElse : 'L'
      },
      relativeTime : {
          future: '%sमध्ये',
          past: '%sपूर्वी',
          s: relativeTimeMr,
          m: relativeTimeMr,
          mm: relativeTimeMr,
          h: relativeTimeMr,
          hh: relativeTimeMr,
          d: relativeTimeMr,
          dd: relativeTimeMr,
          M: relativeTimeMr,
          MM: relativeTimeMr,
          y: relativeTimeMr,
          yy: relativeTimeMr
      },
      preparse: function (string) {
          return string.replace(/[१२३४५६७८९०]/g, function (match) {
              return numberMap[match];
          });
      },
      postformat: function (string) {
          return string.replace(/\d/g, function (match) {
              return symbolMap[match];
          });
      },
      meridiemParse: /रात्री|सकाळी|दुपारी|सायंकाळी/,
      meridiemHour : function (hour, meridiem) {
          if (hour === 12) {
              hour = 0;
          }
          if (meridiem === 'रात्री') {
              return hour < 4 ? hour : hour + 12;
          } else if (meridiem === 'सकाळी') {
              return hour;
          } else if (meridiem === 'दुपारी') {
              return hour >= 10 ? hour : hour + 12;
          } else if (meridiem === 'सायंकाळी') {
              return hour + 12;
          }
      },
      meridiem: function (hour, minute, isLower) {
          if (hour < 4) {
              return 'रात्री';
          } else if (hour < 10) {
              return 'सकाळी';
          } else if (hour < 17) {
              return 'दुपारी';
          } else if (hour < 20) {
              return 'सायंकाळी';
          } else {
              return 'रात्री';
          }
      },
      week : {
          dow : 0, // Sunday is the first day of the week.
          doy : 6  // The week that contains Jan 1st is the first week of the year.
      }
  });

  return mr;

  })));


/***/ },
/* 1337 */
/***/ function(module, exports, __webpack_require__) {

  //! moment.js locale configuration
  //! locale : Malay [ms]
  //! author : Weldan Jamili : https://github.com/weldan

  ;(function (global, factory) {
      true ? factory(__webpack_require__(1269)) :
     typeof define === 'function' && define.amd ? define(['../moment'], factory) :
     factory(global.moment)
  }(this, (function (moment) { 'use strict';


  var ms = moment.defineLocale('ms', {
      months : 'Januari_Februari_Mac_April_Mei_Jun_Julai_Ogos_September_Oktober_November_Disember'.split('_'),
      monthsShort : 'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ogs_Sep_Okt_Nov_Dis'.split('_'),
      weekdays : 'Ahad_Isnin_Selasa_Rabu_Khamis_Jumaat_Sabtu'.split('_'),
      weekdaysShort : 'Ahd_Isn_Sel_Rab_Kha_Jum_Sab'.split('_'),
      weekdaysMin : 'Ah_Is_Sl_Rb_Km_Jm_Sb'.split('_'),
      longDateFormat : {
          LT : 'HH.mm',
          LTS : 'HH.mm.ss',
          L : 'DD/MM/YYYY',
          LL : 'D MMMM YYYY',
          LLL : 'D MMMM YYYY [pukul] HH.mm',
          LLLL : 'dddd, D MMMM YYYY [pukul] HH.mm'
      },
      meridiemParse: /pagi|tengahari|petang|malam/,
      meridiemHour: function (hour, meridiem) {
          if (hour === 12) {
              hour = 0;
          }
          if (meridiem === 'pagi') {
              return hour;
          } else if (meridiem === 'tengahari') {
              return hour >= 11 ? hour : hour + 12;
          } else if (meridiem === 'petang' || meridiem === 'malam') {
              return hour + 12;
          }
      },
      meridiem : function (hours, minutes, isLower) {
          if (hours < 11) {
              return 'pagi';
          } else if (hours < 15) {
              return 'tengahari';
          } else if (hours < 19) {
              return 'petang';
          } else {
              return 'malam';
          }
      },
      calendar : {
          sameDay : '[Hari ini pukul] LT',
          nextDay : '[Esok pukul] LT',
          nextWeek : 'dddd [pukul] LT',
          lastDay : '[Kelmarin pukul] LT',
          lastWeek : 'dddd [lepas pukul] LT',
          sameElse : 'L'
      },
      relativeTime : {
          future : 'dalam %s',
          past : '%s yang lepas',
          s : 'beberapa saat',
          m : 'seminit',
          mm : '%d minit',
          h : 'sejam',
          hh : '%d jam',
          d : 'sehari',
          dd : '%d hari',
          M : 'sebulan',
          MM : '%d bulan',
          y : 'setahun',
          yy : '%d tahun'
      },
      week : {
          dow : 1, // Monday is the first day of the week.
          doy : 7  // The week that contains Jan 1st is the first week of the year.
      }
  });

  return ms;

  })));


/***/ },
/* 1338 */
/***/ function(module, exports, __webpack_require__) {

  //! moment.js locale configuration
  //! locale : Malay [ms-my]
  //! note : DEPRECATED, the correct one is [ms]
  //! author : Weldan Jamili : https://github.com/weldan

  ;(function (global, factory) {
      true ? factory(__webpack_require__(1269)) :
     typeof define === 'function' && define.amd ? define(['../moment'], factory) :
     factory(global.moment)
  }(this, (function (moment) { 'use strict';


  var msMy = moment.defineLocale('ms-my', {
      months : 'Januari_Februari_Mac_April_Mei_Jun_Julai_Ogos_September_Oktober_November_Disember'.split('_'),
      monthsShort : 'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ogs_Sep_Okt_Nov_Dis'.split('_'),
      weekdays : 'Ahad_Isnin_Selasa_Rabu_Khamis_Jumaat_Sabtu'.split('_'),
      weekdaysShort : 'Ahd_Isn_Sel_Rab_Kha_Jum_Sab'.split('_'),
      weekdaysMin : 'Ah_Is_Sl_Rb_Km_Jm_Sb'.split('_'),
      longDateFormat : {
          LT : 'HH.mm',
          LTS : 'HH.mm.ss',
          L : 'DD/MM/YYYY',
          LL : 'D MMMM YYYY',
          LLL : 'D MMMM YYYY [pukul] HH.mm',
          LLLL : 'dddd, D MMMM YYYY [pukul] HH.mm'
      },
      meridiemParse: /pagi|tengahari|petang|malam/,
      meridiemHour: function (hour, meridiem) {
          if (hour === 12) {
              hour = 0;
          }
          if (meridiem === 'pagi') {
              return hour;
          } else if (meridiem === 'tengahari') {
              return hour >= 11 ? hour : hour + 12;
          } else if (meridiem === 'petang' || meridiem === 'malam') {
              return hour + 12;
          }
      },
      meridiem : function (hours, minutes, isLower) {
          if (hours < 11) {
              return 'pagi';
          } else if (hours < 15) {
              return 'tengahari';
          } else if (hours < 19) {
              return 'petang';
          } else {
              return 'malam';
          }
      },
      calendar : {
          sameDay : '[Hari ini pukul] LT',
          nextDay : '[Esok pukul] LT',
          nextWeek : 'dddd [pukul] LT',
          lastDay : '[Kelmarin pukul] LT',
          lastWeek : 'dddd [lepas pukul] LT',
          sameElse : 'L'
      },
      relativeTime : {
          future : 'dalam %s',
          past : '%s yang lepas',
          s : 'beberapa saat',
          m : 'seminit',
          mm : '%d minit',
          h : 'sejam',
          hh : '%d jam',
          d : 'sehari',
          dd : '%d hari',
          M : 'sebulan',
          MM : '%d bulan',
          y : 'setahun',
          yy : '%d tahun'
      },
      week : {
          dow : 1, // Monday is the first day of the week.
          doy : 7  // The week that contains Jan 1st is the first week of the year.
      }
  });

  return msMy;

  })));


/***/ },
/* 1339 */
/***/ function(module, exports, __webpack_require__) {

  //! moment.js locale configuration
  //! locale : Burmese [my]
  //! author : Squar team, mysquar.com
  //! author : David Rossellat : https://github.com/gholadr
  //! author : Tin Aung Lin : https://github.com/thanyawzinmin

  ;(function (global, factory) {
      true ? factory(__webpack_require__(1269)) :
     typeof define === 'function' && define.amd ? define(['../moment'], factory) :
     factory(global.moment)
  }(this, (function (moment) { 'use strict';


  var symbolMap = {
      '1': '၁',
      '2': '၂',
      '3': '၃',
      '4': '၄',
      '5': '၅',
      '6': '၆',
      '7': '၇',
      '8': '၈',
      '9': '၉',
      '0': '၀'
  };
  var numberMap = {
      '၁': '1',
      '၂': '2',
      '၃': '3',
      '၄': '4',
      '၅': '5',
      '၆': '6',
      '၇': '7',
      '၈': '8',
      '၉': '9',
      '၀': '0'
  };

  var my = moment.defineLocale('my', {
      months: 'ဇန်နဝါရီ_ဖေဖော်ဝါရီ_မတ်_ဧပြီ_မေ_ဇွန်_ဇူလိုင်_သြဂုတ်_စက်တင်ဘာ_အောက်တိုဘာ_နိုဝင်ဘာ_ဒီဇင်ဘာ'.split('_'),
      monthsShort: 'ဇန်_ဖေ_မတ်_ပြီ_မေ_ဇွန်_လိုင်_သြ_စက်_အောက်_နို_ဒီ'.split('_'),
      weekdays: 'တနင်္ဂနွေ_တနင်္လာ_အင်္ဂါ_ဗုဒ္ဓဟူး_ကြာသပတေး_သောကြာ_စနေ'.split('_'),
      weekdaysShort: 'နွေ_လာ_ဂါ_ဟူး_ကြာ_သော_နေ'.split('_'),
      weekdaysMin: 'နွေ_လာ_ဂါ_ဟူး_ကြာ_သော_နေ'.split('_'),

      longDateFormat: {
          LT: 'HH:mm',
          LTS: 'HH:mm:ss',
          L: 'DD/MM/YYYY',
          LL: 'D MMMM YYYY',
          LLL: 'D MMMM YYYY HH:mm',
          LLLL: 'dddd D MMMM YYYY HH:mm'
      },
      calendar: {
          sameDay: '[ယနေ.] LT [မှာ]',
          nextDay: '[မနက်ဖြန်] LT [မှာ]',
          nextWeek: 'dddd LT [မှာ]',
          lastDay: '[မနေ.က] LT [မှာ]',
          lastWeek: '[ပြီးခဲ့သော] dddd LT [မှာ]',
          sameElse: 'L'
      },
      relativeTime: {
          future: 'လာမည့် %s မှာ',
          past: 'လွန်ခဲ့သော %s က',
          s: 'စက္ကန်.အနည်းငယ်',
          m: 'တစ်မိနစ်',
          mm: '%d မိနစ်',
          h: 'တစ်နာရီ',
          hh: '%d နာရီ',
          d: 'တစ်ရက်',
          dd: '%d ရက်',
          M: 'တစ်လ',
          MM: '%d လ',
          y: 'တစ်နှစ်',
          yy: '%d နှစ်'
      },
      preparse: function (string) {
          return string.replace(/[၁၂၃၄၅၆၇၈၉၀]/g, function (match) {
              return numberMap[match];
          });
      },
      postformat: function (string) {
          return string.replace(/\d/g, function (match) {
              return symbolMap[match];
          });
      },
      week: {
          dow: 1, // Monday is the first day of the week.
          doy: 4 // The week that contains Jan 1st is the first week of the year.
      }
  });

  return my;

  })));


/***/ },
/* 1340 */
/***/ function(module, exports, __webpack_require__) {

  //! moment.js locale configuration
  //! locale : Norwegian Bokmål [nb]
  //! authors : Espen Hovlandsdal : https://github.com/rexxars
  //!           Sigurd Gartmann : https://github.com/sigurdga

  ;(function (global, factory) {
      true ? factory(__webpack_require__(1269)) :
     typeof define === 'function' && define.amd ? define(['../moment'], factory) :
     factory(global.moment)
  }(this, (function (moment) { 'use strict';


  var nb = moment.defineLocale('nb', {
      months : 'januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember'.split('_'),
      monthsShort : 'jan._feb._mars_april_mai_juni_juli_aug._sep._okt._nov._des.'.split('_'),
      monthsParseExact : true,
      weekdays : 'søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag'.split('_'),
      weekdaysShort : 'sø._ma._ti._on._to._fr._lø.'.split('_'),
      weekdaysMin : 'sø_ma_ti_on_to_fr_lø'.split('_'),
      weekdaysParseExact : true,
      longDateFormat : {
          LT : 'HH:mm',
          LTS : 'HH:mm:ss',
          L : 'DD.MM.YYYY',
          LL : 'D. MMMM YYYY',
          LLL : 'D. MMMM YYYY [kl.] HH:mm',
          LLLL : 'dddd D. MMMM YYYY [kl.] HH:mm'
      },
      calendar : {
          sameDay: '[i dag kl.] LT',
          nextDay: '[i morgen kl.] LT',
          nextWeek: 'dddd [kl.] LT',
          lastDay: '[i går kl.] LT',
          lastWeek: '[forrige] dddd [kl.] LT',
          sameElse: 'L'
      },
      relativeTime : {
          future : 'om %s',
          past : '%s siden',
          s : 'noen sekunder',
          m : 'ett minutt',
          mm : '%d minutter',
          h : 'en time',
          hh : '%d timer',
          d : 'en dag',
          dd : '%d dager',
          M : 'en måned',
          MM : '%d måneder',
          y : 'ett år',
          yy : '%d år'
      },
      ordinalParse: /\d{1,2}\./,
      ordinal : '%d.',
      week : {
          dow : 1, // Monday is the first day of the week.
          doy : 4  // The week that contains Jan 4th is the first week of the year.
      }
  });

  return nb;

  })));


/***/ },
/* 1341 */
/***/ function(module, exports, __webpack_require__) {

  //! moment.js locale configuration
  //! locale : Nepalese [ne]
  //! author : suvash : https://github.com/suvash

  ;(function (global, factory) {
      true ? factory(__webpack_require__(1269)) :
     typeof define === 'function' && define.amd ? define(['../moment'], factory) :
     factory(global.moment)
  }(this, (function (moment) { 'use strict';


  var symbolMap = {
      '1': '१',
      '2': '२',
      '3': '३',
      '4': '४',
      '5': '५',
      '6': '६',
      '7': '७',
      '8': '८',
      '9': '९',
      '0': '०'
  };
  var numberMap = {
      '१': '1',
      '२': '2',
      '३': '3',
      '४': '4',
      '५': '5',
      '६': '6',
      '७': '7',
      '८': '8',
      '९': '9',
      '०': '0'
  };

  var ne = moment.defineLocale('ne', {
      months : 'जनवरी_फेब्रुवरी_मार्च_अप्रिल_मई_जुन_जुलाई_अगष्ट_सेप्टेम्बर_अक्टोबर_नोभेम्बर_डिसेम्बर'.split('_'),
      monthsShort : 'जन._फेब्रु._मार्च_अप्रि._मई_जुन_जुलाई._अग._सेप्ट._अक्टो._नोभे._डिसे.'.split('_'),
      monthsParseExact : true,
      weekdays : 'आइतबार_सोमबार_मङ्गलबार_बुधबार_बिहिबार_शुक्रबार_शनिबार'.split('_'),
      weekdaysShort : 'आइत._सोम._मङ्गल._बुध._बिहि._शुक्र._शनि.'.split('_'),
      weekdaysMin : 'आ._सो._मं._बु._बि._शु._श.'.split('_'),
      weekdaysParseExact : true,
      longDateFormat : {
          LT : 'Aको h:mm बजे',
          LTS : 'Aको h:mm:ss बजे',
          L : 'DD/MM/YYYY',
          LL : 'D MMMM YYYY',
          LLL : 'D MMMM YYYY, Aको h:mm बजे',
          LLLL : 'dddd, D MMMM YYYY, Aको h:mm बजे'
      },
      preparse: function (string) {
          return string.replace(/[१२३४५६७८९०]/g, function (match) {
              return numberMap[match];
          });
      },
      postformat: function (string) {
          return string.replace(/\d/g, function (match) {
              return symbolMap[match];
          });
      },
      meridiemParse: /राति|बिहान|दिउँसो|साँझ/,
      meridiemHour : function (hour, meridiem) {
          if (hour === 12) {
              hour = 0;
          }
          if (meridiem === 'राति') {
              return hour < 4 ? hour : hour + 12;
          } else if (meridiem === 'बिहान') {
              return hour;
          } else if (meridiem === 'दिउँसो') {
              return hour >= 10 ? hour : hour + 12;
          } else if (meridiem === 'साँझ') {
              return hour + 12;
          }
      },
      meridiem : function (hour, minute, isLower) {
          if (hour < 3) {
              return 'राति';
          } else if (hour < 12) {
              return 'बिहान';
          } else if (hour < 16) {
              return 'दिउँसो';
          } else if (hour < 20) {
              return 'साँझ';
          } else {
              return 'राति';
          }
      },
      calendar : {
          sameDay : '[आज] LT',
          nextDay : '[भोलि] LT',
          nextWeek : '[आउँदो] dddd[,] LT',
          lastDay : '[हिजो] LT',
          lastWeek : '[गएको] dddd[,] LT',
          sameElse : 'L'
      },
      relativeTime : {
          future : '%sमा',
          past : '%s अगाडि',
          s : 'केही क्षण',
          m : 'एक मिनेट',
          mm : '%d मिनेट',
          h : 'एक घण्टा',
          hh : '%d घण्टा',
          d : 'एक दिन',
          dd : '%d दिन',
          M : 'एक महिना',
          MM : '%d महिना',
          y : 'एक बर्ष',
          yy : '%d बर्ष'
      },
      week : {
          dow : 0, // Sunday is the first day of the week.
          doy : 6  // The week that contains Jan 1st is the first week of the year.
      }
  });

  return ne;

  })));


/***/ },
/* 1342 */
/***/ function(module, exports, __webpack_require__) {

  //! moment.js locale configuration
  //! locale : Dutch [nl]
  //! author : Joris Röling : https://github.com/jorisroling
  //! author : Jacob Middag : https://github.com/middagj

  ;(function (global, factory) {
      true ? factory(__webpack_require__(1269)) :
     typeof define === 'function' && define.amd ? define(['../moment'], factory) :
     factory(global.moment)
  }(this, (function (moment) { 'use strict';


  var monthsShortWithDots = 'jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.'.split('_');
  var monthsShortWithoutDots = 'jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec'.split('_');

  var monthsParse = [/^jan/i, /^feb/i, /^maart|mrt.?$/i, /^apr/i, /^mei$/i, /^jun[i.]?$/i, /^jul[i.]?$/i, /^aug/i, /^sep/i, /^okt/i, /^nov/i, /^dec/i];
  var monthsRegex = /^(januari|februari|maart|april|mei|april|ju[nl]i|augustus|september|oktober|november|december|jan\.?|feb\.?|mrt\.?|apr\.?|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i;

  var nl = moment.defineLocale('nl', {
      months : 'januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december'.split('_'),
      monthsShort : function (m, format) {
          if (/-MMM-/.test(format)) {
              return monthsShortWithoutDots[m.month()];
          } else {
              return monthsShortWithDots[m.month()];
          }
      },

      monthsRegex: monthsRegex,
      monthsShortRegex: monthsRegex,
      monthsStrictRegex: /^(januari|februari|maart|mei|ju[nl]i|april|augustus|september|oktober|november|december)/i,
      monthsShortStrictRegex: /^(jan\.?|feb\.?|mrt\.?|apr\.?|mei|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i,

      monthsParse : monthsParse,
      longMonthsParse : monthsParse,
      shortMonthsParse : monthsParse,

      weekdays : 'zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag'.split('_'),
      weekdaysShort : 'zo._ma._di._wo._do._vr._za.'.split('_'),
      weekdaysMin : 'Zo_Ma_Di_Wo_Do_Vr_Za'.split('_'),
      weekdaysParseExact : true,
      longDateFormat : {
          LT : 'HH:mm',
          LTS : 'HH:mm:ss',
          L : 'DD-MM-YYYY',
          LL : 'D MMMM YYYY',
          LLL : 'D MMMM YYYY HH:mm',
          LLLL : 'dddd D MMMM YYYY HH:mm'
      },
      calendar : {
          sameDay: '[vandaag om] LT',
          nextDay: '[morgen om] LT',
          nextWeek: 'dddd [om] LT',
          lastDay: '[gisteren om] LT',
          lastWeek: '[afgelopen] dddd [om] LT',
          sameElse: 'L'
      },
      relativeTime : {
          future : 'over %s',
          past : '%s geleden',
          s : 'een paar seconden',
          m : 'één minuut',
          mm : '%d minuten',
          h : 'één uur',
          hh : '%d uur',
          d : 'één dag',
          dd : '%d dagen',
          M : 'één maand',
          MM : '%d maanden',
          y : 'één jaar',
          yy : '%d jaar'
      },
      ordinalParse: /\d{1,2}(ste|de)/,
      ordinal : function (number) {
          return number + ((number === 1 || number === 8 || number >= 20) ? 'ste' : 'de');
      },
      week : {
          dow : 1, // Monday is the first day of the week.
          doy : 4  // The week that contains Jan 4th is the first week of the year.
      }
  });

  return nl;

  })));


/***/ },
/* 1343 */
/***/ function(module, exports, __webpack_require__) {

  //! moment.js locale configuration
  //! locale : Dutch (Belgium) [nl-be]
  //! author : Joris Röling : https://github.com/jorisroling
  //! author : Jacob Middag : https://github.com/middagj

  ;(function (global, factory) {
      true ? factory(__webpack_require__(1269)) :
     typeof define === 'function' && define.amd ? define(['../moment'], factory) :
     factory(global.moment)
  }(this, (function (moment) { 'use strict';


  var monthsShortWithDots = 'jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.'.split('_');
  var monthsShortWithoutDots = 'jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec'.split('_');

  var monthsParse = [/^jan/i, /^feb/i, /^maart|mrt.?$/i, /^apr/i, /^mei$/i, /^jun[i.]?$/i, /^jul[i.]?$/i, /^aug/i, /^sep/i, /^okt/i, /^nov/i, /^dec/i];
  var monthsRegex = /^(januari|februari|maart|april|mei|april|ju[nl]i|augustus|september|oktober|november|december|jan\.?|feb\.?|mrt\.?|apr\.?|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i;

  var nlBe = moment.defineLocale('nl-be', {
      months : 'januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december'.split('_'),
      monthsShort : function (m, format) {
          if (/-MMM-/.test(format)) {
              return monthsShortWithoutDots[m.month()];
          } else {
              return monthsShortWithDots[m.month()];
          }
      },

      monthsRegex: monthsRegex,
      monthsShortRegex: monthsRegex,
      monthsStrictRegex: /^(januari|februari|maart|mei|ju[nl]i|april|augustus|september|oktober|november|december)/i,
      monthsShortStrictRegex: /^(jan\.?|feb\.?|mrt\.?|apr\.?|mei|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i,

      monthsParse : monthsParse,
      longMonthsParse : monthsParse,
      shortMonthsParse : monthsParse,

      weekdays : 'zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag'.split('_'),
      weekdaysShort : 'zo._ma._di._wo._do._vr._za.'.split('_'),
      weekdaysMin : 'Zo_Ma_Di_Wo_Do_Vr_Za'.split('_'),
      weekdaysParseExact : true,
      longDateFormat : {
          LT : 'HH:mm',
          LTS : 'HH:mm:ss',
          L : 'DD/MM/YYYY',
          LL : 'D MMMM YYYY',
          LLL : 'D MMMM YYYY HH:mm',
          LLLL : 'dddd D MMMM YYYY HH:mm'
      },
      calendar : {
          sameDay: '[vandaag om] LT',
          nextDay: '[morgen om] LT',
          nextWeek: 'dddd [om] LT',
          lastDay: '[gisteren om] LT',
          lastWeek: '[afgelopen] dddd [om] LT',
          sameElse: 'L'
      },
      relativeTime : {
          future : 'over %s',
          past : '%s geleden',
          s : 'een paar seconden',
          m : 'één minuut',
          mm : '%d minuten',
          h : 'één uur',
          hh : '%d uur',
          d : 'één dag',
          dd : '%d dagen',
          M : 'één maand',
          MM : '%d maanden',
          y : 'één jaar',
          yy : '%d jaar'
      },
      ordinalParse: /\d{1,2}(ste|de)/,
      ordinal : function (number) {
          return number + ((number === 1 || number === 8 || number >= 20) ? 'ste' : 'de');
      },
      week : {
          dow : 1, // Monday is the first day of the week.
          doy : 4  // The week that contains Jan 4th is the first week of the year.
      }
  });

  return nlBe;

  })));


/***/ },
/* 1344 */
/***/ function(module, exports, __webpack_require__) {

  //! moment.js locale configuration
  //! locale : Nynorsk [nn]
  //! author : https://github.com/mechuwind

  ;(function (global, factory) {
      true ? factory(__webpack_require__(1269)) :
     typeof define === 'function' && define.amd ? define(['../moment'], factory) :
     factory(global.moment)
  }(this, (function (moment) { 'use strict';


  var nn = moment.defineLocale('nn', {
      months : 'januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember'.split('_'),
      monthsShort : 'jan_feb_mar_apr_mai_jun_jul_aug_sep_okt_nov_des'.split('_'),
      weekdays : 'sundag_måndag_tysdag_onsdag_torsdag_fredag_laurdag'.split('_'),
      weekdaysShort : 'sun_mån_tys_ons_tor_fre_lau'.split('_'),
      weekdaysMin : 'su_må_ty_on_to_fr_lø'.split('_'),
      longDateFormat : {
          LT : 'HH:mm',
          LTS : 'HH:mm:ss',
          L : 'DD.MM.YYYY',
          LL : 'D. MMMM YYYY',
          LLL : 'D. MMMM YYYY [kl.] H:mm',
          LLLL : 'dddd D. MMMM YYYY [kl.] HH:mm'
      },
      calendar : {
          sameDay: '[I dag klokka] LT',
          nextDay: '[I morgon klokka] LT',
          nextWeek: 'dddd [klokka] LT',
          lastDay: '[I går klokka] LT',
          lastWeek: '[Føregåande] dddd [klokka] LT',
          sameElse: 'L'
      },
      relativeTime : {
          future : 'om %s',
          past : '%s sidan',
          s : 'nokre sekund',
          m : 'eit minutt',
          mm : '%d minutt',
          h : 'ein time',
          hh : '%d timar',
          d : 'ein dag',
          dd : '%d dagar',
          M : 'ein månad',
          MM : '%d månader',
          y : 'eit år',
          yy : '%d år'
      },
      ordinalParse: /\d{1,2}\./,
      ordinal : '%d.',
      week : {
          dow : 1, // Monday is the first day of the week.
          doy : 4  // The week that contains Jan 4th is the first week of the year.
      }
  });

  return nn;

  })));


/***/ },
/* 1345 */
/***/ function(module, exports, __webpack_require__) {

  //! moment.js locale configuration
  //! locale : Punjabi (India) [pa-in]
  //! author : Harpreet Singh : https://github.com/harpreetkhalsagtbit

  ;(function (global, factory) {
      true ? factory(__webpack_require__(1269)) :
     typeof define === 'function' && define.amd ? define(['../moment'], factory) :
     factory(global.moment)
  }(this, (function (moment) { 'use strict';


  var symbolMap = {
      '1': '੧',
      '2': '੨',
      '3': '੩',
      '4': '੪',
      '5': '੫',
      '6': '੬',
      '7': '੭',
      '8': '੮',
      '9': '੯',
      '0': '੦'
  };
  var numberMap = {
      '੧': '1',
      '੨': '2',
      '੩': '3',
      '੪': '4',
      '੫': '5',
      '੬': '6',
      '੭': '7',
      '੮': '8',
      '੯': '9',
      '੦': '0'
  };

  var paIn = moment.defineLocale('pa-in', {
      // There are months name as per Nanakshahi Calender but they are not used as rigidly in modern Punjabi.
      months : 'ਜਨਵਰੀ_ਫ਼ਰਵਰੀ_ਮਾਰਚ_ਅਪ੍ਰੈਲ_ਮਈ_ਜੂਨ_ਜੁਲਾਈ_ਅਗਸਤ_ਸਤੰਬਰ_ਅਕਤੂਬਰ_ਨਵੰਬਰ_ਦਸੰਬਰ'.split('_'),
      monthsShort : 'ਜਨਵਰੀ_ਫ਼ਰਵਰੀ_ਮਾਰਚ_ਅਪ੍ਰੈਲ_ਮਈ_ਜੂਨ_ਜੁਲਾਈ_ਅਗਸਤ_ਸਤੰਬਰ_ਅਕਤੂਬਰ_ਨਵੰਬਰ_ਦਸੰਬਰ'.split('_'),
      weekdays : 'ਐਤਵਾਰ_ਸੋਮਵਾਰ_ਮੰਗਲਵਾਰ_ਬੁਧਵਾਰ_ਵੀਰਵਾਰ_ਸ਼ੁੱਕਰਵਾਰ_ਸ਼ਨੀਚਰਵਾਰ'.split('_'),
      weekdaysShort : 'ਐਤ_ਸੋਮ_ਮੰਗਲ_ਬੁਧ_ਵੀਰ_ਸ਼ੁਕਰ_ਸ਼ਨੀ'.split('_'),
      weekdaysMin : 'ਐਤ_ਸੋਮ_ਮੰਗਲ_ਬੁਧ_ਵੀਰ_ਸ਼ੁਕਰ_ਸ਼ਨੀ'.split('_'),
      longDateFormat : {
          LT : 'A h:mm ਵਜੇ',
          LTS : 'A h:mm:ss ਵਜੇ',
          L : 'DD/MM/YYYY',
          LL : 'D MMMM YYYY',
          LLL : 'D MMMM YYYY, A h:mm ਵਜੇ',
          LLLL : 'dddd, D MMMM YYYY, A h:mm ਵਜੇ'
      },
      calendar : {
          sameDay : '[ਅਜ] LT',
          nextDay : '[ਕਲ] LT',
          nextWeek : 'dddd, LT',
          lastDay : '[ਕਲ] LT',
          lastWeek : '[ਪਿਛਲੇ] dddd, LT',
          sameElse : 'L'
      },
      relativeTime : {
          future : '%s ਵਿੱਚ',
          past : '%s ਪਿਛਲੇ',
          s : 'ਕੁਝ ਸਕਿੰਟ',
          m : 'ਇਕ ਮਿੰਟ',
          mm : '%d ਮਿੰਟ',
          h : 'ਇੱਕ ਘੰਟਾ',
          hh : '%d ਘੰਟੇ',
          d : 'ਇੱਕ ਦਿਨ',
          dd : '%d ਦਿਨ',
          M : 'ਇੱਕ ਮਹੀਨਾ',
          MM : '%d ਮਹੀਨੇ',
          y : 'ਇੱਕ ਸਾਲ',
          yy : '%d ਸਾਲ'
      },
      preparse: function (string) {
          return string.replace(/[੧੨੩੪੫੬੭੮੯੦]/g, function (match) {
              return numberMap[match];
          });
      },
      postformat: function (string) {
          return string.replace(/\d/g, function (match) {
              return symbolMap[match];
          });
      },
      // Punjabi notation for meridiems are quite fuzzy in practice. While there exists
      // a rigid notion of a 'Pahar' it is not used as rigidly in modern Punjabi.
      meridiemParse: /ਰਾਤ|ਸਵੇਰ|ਦੁਪਹਿਰ|ਸ਼ਾਮ/,
      meridiemHour : function (hour, meridiem) {
          if (hour === 12) {
              hour = 0;
          }
          if (meridiem === 'ਰਾਤ') {
              return hour < 4 ? hour : hour + 12;
          } else if (meridiem === 'ਸਵੇਰ') {
              return hour;
          } else if (meridiem === 'ਦੁਪਹਿਰ') {
              return hour >= 10 ? hour : hour + 12;
          } else if (meridiem === 'ਸ਼ਾਮ') {
              return hour + 12;
          }
      },
      meridiem : function (hour, minute, isLower) {
          if (hour < 4) {
              return 'ਰਾਤ';
          } else if (hour < 10) {
              return 'ਸਵੇਰ';
          } else if (hour < 17) {
              return 'ਦੁਪਹਿਰ';
          } else if (hour < 20) {
              return 'ਸ਼ਾਮ';
          } else {
              return 'ਰਾਤ';
          }
      },
      week : {
          dow : 0, // Sunday is the first day of the week.
          doy : 6  // The week that contains Jan 1st is the first week of the year.
      }
  });

  return paIn;

  })));


/***/ },
/* 1346 */
/***/ function(module, exports, __webpack_require__) {

  //! moment.js locale configuration
  //! locale : Polish [pl]
  //! author : Rafal Hirsz : https://github.com/evoL

  ;(function (global, factory) {
      true ? factory(__webpack_require__(1269)) :
     typeof define === 'function' && define.amd ? define(['../moment'], factory) :
     factory(global.moment)
  }(this, (function (moment) { 'use strict';


  var monthsNominative = 'styczeń_luty_marzec_kwiecień_maj_czerwiec_lipiec_sierpień_wrzesień_październik_listopad_grudzień'.split('_');
  var monthsSubjective = 'stycznia_lutego_marca_kwietnia_maja_czerwca_lipca_sierpnia_września_października_listopada_grudnia'.split('_');
  function plural(n) {
      return (n % 10 < 5) && (n % 10 > 1) && ((~~(n / 10) % 10) !== 1);
  }
  function translate(number, withoutSuffix, key) {
      var result = number + ' ';
      switch (key) {
          case 'm':
              return withoutSuffix ? 'minuta' : 'minutę';
          case 'mm':
              return result + (plural(number) ? 'minuty' : 'minut');
          case 'h':
              return withoutSuffix  ? 'godzina'  : 'godzinę';
          case 'hh':
              return result + (plural(number) ? 'godziny' : 'godzin');
          case 'MM':
              return result + (plural(number) ? 'miesiące' : 'miesięcy');
          case 'yy':
              return result + (plural(number) ? 'lata' : 'lat');
      }
  }

  var pl = moment.defineLocale('pl', {
      months : function (momentToFormat, format) {
          if (format === '') {
              // Hack: if format empty we know this is used to generate
              // RegExp by moment. Give then back both valid forms of months
              // in RegExp ready format.
              return '(' + monthsSubjective[momentToFormat.month()] + '|' + monthsNominative[momentToFormat.month()] + ')';
          } else if (/D MMMM/.test(format)) {
              return monthsSubjective[momentToFormat.month()];
          } else {
              return monthsNominative[momentToFormat.month()];
          }
      },
      monthsShort : 'sty_lut_mar_kwi_maj_cze_lip_sie_wrz_paź_lis_gru'.split('_'),
      weekdays : 'niedziela_poniedziałek_wtorek_środa_czwartek_piątek_sobota'.split('_'),
      weekdaysShort : 'ndz_pon_wt_śr_czw_pt_sob'.split('_'),
      weekdaysMin : 'Nd_Pn_Wt_Śr_Cz_Pt_So'.split('_'),
      longDateFormat : {
          LT : 'HH:mm',
          LTS : 'HH:mm:ss',
          L : 'DD.MM.YYYY',
          LL : 'D MMMM YYYY',
          LLL : 'D MMMM YYYY HH:mm',
          LLLL : 'dddd, D MMMM YYYY HH:mm'
      },
      calendar : {
          sameDay: '[Dziś o] LT',
          nextDay: '[Jutro o] LT',
          nextWeek: '[W] dddd [o] LT',
          lastDay: '[Wczoraj o] LT',
          lastWeek: function () {
              switch (this.day()) {
                  case 0:
                      return '[W zeszłą niedzielę o] LT';
                  case 3:
                      return '[W zeszłą środę o] LT';
                  case 6:
                      return '[W zeszłą sobotę o] LT';
                  default:
                      return '[W zeszły] dddd [o] LT';
              }
          },
          sameElse: 'L'
      },
      relativeTime : {
          future : 'za %s',
          past : '%s temu',
          s : 'kilka sekund',
          m : translate,
          mm : translate,
          h : translate,
          hh : translate,
          d : '1 dzień',
          dd : '%d dni',
          M : 'miesiąc',
          MM : translate,
          y : 'rok',
          yy : translate
      },
      ordinalParse: /\d{1,2}\./,
      ordinal : '%d.',
      week : {
          dow : 1, // Monday is the first day of the week.
          doy : 4  // The week that contains Jan 4th is the first week of the year.
      }
  });

  return pl;

  })));


/***/ },
/* 1347 */
/***/ function(module, exports, __webpack_require__) {

  //! moment.js locale configuration
  //! locale : Portuguese [pt]
  //! author : Jefferson : https://github.com/jalex79

  ;(function (global, factory) {
      true ? factory(__webpack_require__(1269)) :
     typeof define === 'function' && define.amd ? define(['../moment'], factory) :
     factory(global.moment)
  }(this, (function (moment) { 'use strict';


  var pt = moment.defineLocale('pt', {
      months : 'Janeiro_Fevereiro_Março_Abril_Maio_Junho_Julho_Agosto_Setembro_Outubro_Novembro_Dezembro'.split('_'),
      monthsShort : 'Jan_Fev_Mar_Abr_Mai_Jun_Jul_Ago_Set_Out_Nov_Dez'.split('_'),
      weekdays : 'Domingo_Segunda-Feira_Terça-Feira_Quarta-Feira_Quinta-Feira_Sexta-Feira_Sábado'.split('_'),
      weekdaysShort : 'Dom_Seg_Ter_Qua_Qui_Sex_Sáb'.split('_'),
      weekdaysMin : 'Dom_2ª_3ª_4ª_5ª_6ª_Sáb'.split('_'),
      weekdaysParseExact : true,
      longDateFormat : {
          LT : 'HH:mm',
          LTS : 'HH:mm:ss',
          L : 'DD/MM/YYYY',
          LL : 'D [de] MMMM [de] YYYY',
          LLL : 'D [de] MMMM [de] YYYY HH:mm',
          LLLL : 'dddd, D [de] MMMM [de] YYYY HH:mm'
      },
      calendar : {
          sameDay: '[Hoje às] LT',
          nextDay: '[Amanhã às] LT',
          nextWeek: 'dddd [às] LT',
          lastDay: '[Ontem às] LT',
          lastWeek: function () {
              return (this.day() === 0 || this.day() === 6) ?
                  '[Último] dddd [às] LT' : // Saturday + Sunday
                  '[Última] dddd [às] LT'; // Monday - Friday
          },
          sameElse: 'L'
      },
      relativeTime : {
          future : 'em %s',
          past : 'há %s',
          s : 'segundos',
          m : 'um minuto',
          mm : '%d minutos',
          h : 'uma hora',
          hh : '%d horas',
          d : 'um dia',
          dd : '%d dias',
          M : 'um mês',
          MM : '%d meses',
          y : 'um ano',
          yy : '%d anos'
      },
      ordinalParse: /\d{1,2}º/,
      ordinal : '%dº',
      week : {
          dow : 1, // Monday is the first day of the week.
          doy : 4  // The week that contains Jan 4th is the first week of the year.
      }
  });

  return pt;

  })));


/***/ },
/* 1348 */
/***/ function(module, exports, __webpack_require__) {

  //! moment.js locale configuration
  //! locale : Portuguese (Brazil) [pt-br]
  //! author : Caio Ribeiro Pereira : https://github.com/caio-ribeiro-pereira

  ;(function (global, factory) {
      true ? factory(__webpack_require__(1269)) :
     typeof define === 'function' && define.amd ? define(['../moment'], factory) :
     factory(global.moment)
  }(this, (function (moment) { 'use strict';


  var ptBr = moment.defineLocale('pt-br', {
      months : 'Janeiro_Fevereiro_Março_Abril_Maio_Junho_Julho_Agosto_Setembro_Outubro_Novembro_Dezembro'.split('_'),
      monthsShort : 'Jan_Fev_Mar_Abr_Mai_Jun_Jul_Ago_Set_Out_Nov_Dez'.split('_'),
      weekdays : 'Domingo_Segunda-feira_Terça-feira_Quarta-feira_Quinta-feira_Sexta-feira_Sábado'.split('_'),
      weekdaysShort : 'Dom_Seg_Ter_Qua_Qui_Sex_Sáb'.split('_'),
      weekdaysMin : 'Dom_2ª_3ª_4ª_5ª_6ª_Sáb'.split('_'),
      weekdaysParseExact : true,
      longDateFormat : {
          LT : 'HH:mm',
          LTS : 'HH:mm:ss',
          L : 'DD/MM/YYYY',
          LL : 'D [de] MMMM [de] YYYY',
          LLL : 'D [de] MMMM [de] YYYY [às] HH:mm',
          LLLL : 'dddd, D [de] MMMM [de] YYYY [às] HH:mm'
      },
      calendar : {
          sameDay: '[Hoje às] LT',
          nextDay: '[Amanhã às] LT',
          nextWeek: 'dddd [às] LT',
          lastDay: '[Ontem às] LT',
          lastWeek: function () {
              return (this.day() === 0 || this.day() === 6) ?
                  '[Último] dddd [às] LT' : // Saturday + Sunday
                  '[Última] dddd [às] LT'; // Monday - Friday
          },
          sameElse: 'L'
      },
      relativeTime : {
          future : 'em %s',
          past : '%s atrás',
          s : 'poucos segundos',
          m : 'um minuto',
          mm : '%d minutos',
          h : 'uma hora',
          hh : '%d horas',
          d : 'um dia',
          dd : '%d dias',
          M : 'um mês',
          MM : '%d meses',
          y : 'um ano',
          yy : '%d anos'
      },
      ordinalParse: /\d{1,2}º/,
      ordinal : '%dº'
  });

  return ptBr;

  })));


/***/ },
/* 1349 */
/***/ function(module, exports, __webpack_require__) {

  //! moment.js locale configuration
  //! locale : Romanian [ro]
  //! author : Vlad Gurdiga : https://github.com/gurdiga
  //! author : Valentin Agachi : https://github.com/avaly

  ;(function (global, factory) {
      true ? factory(__webpack_require__(1269)) :
     typeof define === 'function' && define.amd ? define(['../moment'], factory) :
     factory(global.moment)
  }(this, (function (moment) { 'use strict';


  function relativeTimeWithPlural(number, withoutSuffix, key) {
      var format = {
              'mm': 'minute',
              'hh': 'ore',
              'dd': 'zile',
              'MM': 'luni',
              'yy': 'ani'
          },
          separator = ' ';
      if (number % 100 >= 20 || (number >= 100 && number % 100 === 0)) {
          separator = ' de ';
      }
      return number + separator + format[key];
  }

  var ro = moment.defineLocale('ro', {
      months : 'ianuarie_februarie_martie_aprilie_mai_iunie_iulie_august_septembrie_octombrie_noiembrie_decembrie'.split('_'),
      monthsShort : 'ian._febr._mart._apr._mai_iun._iul._aug._sept._oct._nov._dec.'.split('_'),
      monthsParseExact: true,
      weekdays : 'duminică_luni_marți_miercuri_joi_vineri_sâmbătă'.split('_'),
      weekdaysShort : 'Dum_Lun_Mar_Mie_Joi_Vin_Sâm'.split('_'),
      weekdaysMin : 'Du_Lu_Ma_Mi_Jo_Vi_Sâ'.split('_'),
      longDateFormat : {
          LT : 'H:mm',
          LTS : 'H:mm:ss',
          L : 'DD.MM.YYYY',
          LL : 'D MMMM YYYY',
          LLL : 'D MMMM YYYY H:mm',
          LLLL : 'dddd, D MMMM YYYY H:mm'
      },
      calendar : {
          sameDay: '[azi la] LT',
          nextDay: '[mâine la] LT',
          nextWeek: 'dddd [la] LT',
          lastDay: '[ieri la] LT',
          lastWeek: '[fosta] dddd [la] LT',
          sameElse: 'L'
      },
      relativeTime : {
          future : 'peste %s',
          past : '%s în urmă',
          s : 'câteva secunde',
          m : 'un minut',
          mm : relativeTimeWithPlural,
          h : 'o oră',
          hh : relativeTimeWithPlural,
          d : 'o zi',
          dd : relativeTimeWithPlural,
          M : 'o lună',
          MM : relativeTimeWithPlural,
          y : 'un an',
          yy : relativeTimeWithPlural
      },
      week : {
          dow : 1, // Monday is the first day of the week.
          doy : 7  // The week that contains Jan 1st is the first week of the year.
      }
  });

  return ro;

  })));


/***/ },
/* 1350 */
/***/ function(module, exports, __webpack_require__) {

  //! moment.js locale configuration
  //! locale : Russian [ru]
  //! author : Viktorminator : https://github.com/Viktorminator
  //! Author : Menelion Elensúle : https://github.com/Oire
  //! author : Коренберг Марк : https://github.com/socketpair

  ;(function (global, factory) {
      true ? factory(__webpack_require__(1269)) :
     typeof define === 'function' && define.amd ? define(['../moment'], factory) :
     factory(global.moment)
  }(this, (function (moment) { 'use strict';


  function plural(word, num) {
      var forms = word.split('_');
      return num % 10 === 1 && num % 100 !== 11 ? forms[0] : (num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2]);
  }
  function relativeTimeWithPlural(number, withoutSuffix, key) {
      var format = {
          'mm': withoutSuffix ? 'минута_минуты_минут' : 'минуту_минуты_минут',
          'hh': 'час_часа_часов',
          'dd': 'день_дня_дней',
          'MM': 'месяц_месяца_месяцев',
          'yy': 'год_года_лет'
      };
      if (key === 'm') {
          return withoutSuffix ? 'минута' : 'минуту';
      }
      else {
          return number + ' ' + plural(format[key], +number);
      }
  }
  var monthsParse = [/^янв/i, /^фев/i, /^мар/i, /^апр/i, /^ма[йя]/i, /^июн/i, /^июл/i, /^авг/i, /^сен/i, /^окт/i, /^ноя/i, /^дек/i];

  // http://new.gramota.ru/spravka/rules/139-prop : § 103
  // Сокращения месяцев: http://new.gramota.ru/spravka/buro/search-answer?s=242637
  // CLDR data:          http://www.unicode.org/cldr/charts/28/summary/ru.html#1753
  var ru = moment.defineLocale('ru', {
      months : {
          format: 'января_февраля_марта_апреля_мая_июня_июля_августа_сентября_октября_ноября_декабря'.split('_'),
          standalone: 'январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь'.split('_')
      },
      monthsShort : {
          // по CLDR именно "июл." и "июн.", но какой смысл менять букву на точку ?
          format: 'янв._февр._мар._апр._мая_июня_июля_авг._сент._окт._нояб._дек.'.split('_'),
          standalone: 'янв._февр._март_апр._май_июнь_июль_авг._сент._окт._нояб._дек.'.split('_')
      },
      weekdays : {
          standalone: 'воскресенье_понедельник_вторник_среда_четверг_пятница_суббота'.split('_'),
          format: 'воскресенье_понедельник_вторник_среду_четверг_пятницу_субботу'.split('_'),
          isFormat: /\[ ?[Вв] ?(?:прошлую|следующую|эту)? ?\] ?dddd/
      },
      weekdaysShort : 'вс_пн_вт_ср_чт_пт_сб'.split('_'),
      weekdaysMin : 'вс_пн_вт_ср_чт_пт_сб'.split('_'),
      monthsParse : monthsParse,
      longMonthsParse : monthsParse,
      shortMonthsParse : monthsParse,

      // полные названия с падежами, по три буквы, для некоторых, по 4 буквы, сокращения с точкой и без точки
      monthsRegex: /^(январ[ья]|янв\.?|феврал[ья]|февр?\.?|марта?|мар\.?|апрел[ья]|апр\.?|ма[йя]|июн[ья]|июн\.?|июл[ья]|июл\.?|августа?|авг\.?|сентябр[ья]|сент?\.?|октябр[ья]|окт\.?|ноябр[ья]|нояб?\.?|декабр[ья]|дек\.?)/i,

      // копия предыдущего
      monthsShortRegex: /^(январ[ья]|янв\.?|феврал[ья]|февр?\.?|марта?|мар\.?|апрел[ья]|апр\.?|ма[йя]|июн[ья]|июн\.?|июл[ья]|июл\.?|августа?|авг\.?|сентябр[ья]|сент?\.?|октябр[ья]|окт\.?|ноябр[ья]|нояб?\.?|декабр[ья]|дек\.?)/i,

      // полные названия с падежами
      monthsStrictRegex: /^(январ[яь]|феврал[яь]|марта?|апрел[яь]|ма[яй]|июн[яь]|июл[яь]|августа?|сентябр[яь]|октябр[яь]|ноябр[яь]|декабр[яь])/i,

      // Выражение, которое соотвествует только сокращённым формам
      monthsShortStrictRegex: /^(янв\.|февр?\.|мар[т.]|апр\.|ма[яй]|июн[ья.]|июл[ья.]|авг\.|сент?\.|окт\.|нояб?\.|дек\.)/i,
      longDateFormat : {
          LT : 'HH:mm',
          LTS : 'HH:mm:ss',
          L : 'DD.MM.YYYY',
          LL : 'D MMMM YYYY г.',
          LLL : 'D MMMM YYYY г., HH:mm',
          LLLL : 'dddd, D MMMM YYYY г., HH:mm'
      },
      calendar : {
          sameDay: '[Сегодня в] LT',
          nextDay: '[Завтра в] LT',
          lastDay: '[Вчера в] LT',
          nextWeek: function (now) {
              if (now.week() !== this.week()) {
                  switch (this.day()) {
                      case 0:
                          return '[В следующее] dddd [в] LT';
                      case 1:
                      case 2:
                      case 4:
                          return '[В следующий] dddd [в] LT';
                      case 3:
                      case 5:
                      case 6:
                          return '[В следующую] dddd [в] LT';
                  }
              } else {
                  if (this.day() === 2) {
                      return '[Во] dddd [в] LT';
                  } else {
                      return '[В] dddd [в] LT';
                  }
              }
          },
          lastWeek: function (now) {
              if (now.week() !== this.week()) {
                  switch (this.day()) {
                      case 0:
                          return '[В прошлое] dddd [в] LT';
                      case 1:
                      case 2:
                      case 4:
                          return '[В прошлый] dddd [в] LT';
                      case 3:
                      case 5:
                      case 6:
                          return '[В прошлую] dddd [в] LT';
                  }
              } else {
                  if (this.day() === 2) {
                      return '[Во] dddd [в] LT';
                  } else {
                      return '[В] dddd [в] LT';
                  }
              }
          },
          sameElse: 'L'
      },
      relativeTime : {
          future : 'через %s',
          past : '%s назад',
          s : 'несколько секунд',
          m : relativeTimeWithPlural,
          mm : relativeTimeWithPlural,
          h : 'час',
          hh : relativeTimeWithPlural,
          d : 'день',
          dd : relativeTimeWithPlural,
          M : 'месяц',
          MM : relativeTimeWithPlural,
          y : 'год',
          yy : relativeTimeWithPlural
      },
      meridiemParse: /ночи|утра|дня|вечера/i,
      isPM : function (input) {
          return /^(дня|вечера)$/.test(input);
      },
      meridiem : function (hour, minute, isLower) {
          if (hour < 4) {
              return 'ночи';
          } else if (hour < 12) {
              return 'утра';
          } else if (hour < 17) {
              return 'дня';
          } else {
              return 'вечера';
          }
      },
      ordinalParse: /\d{1,2}-(й|го|я)/,
      ordinal: function (number, period) {
          switch (period) {
              case 'M':
              case 'd':
              case 'DDD':
                  return number + '-й';
              case 'D':
                  return number + '-го';
              case 'w':
              case 'W':
                  return number + '-я';
              default:
                  return number;
          }
      },
      week : {
          dow : 1, // Monday is the first day of the week.
          doy : 7  // The week that contains Jan 1st is the first week of the year.
      }
  });

  return ru;

  })));


/***/ },
/* 1351 */
/***/ function(module, exports, __webpack_require__) {

  //! moment.js locale configuration
  //! locale : Northern Sami [se]
  //! authors : Bård Rolstad Henriksen : https://github.com/karamell

  ;(function (global, factory) {
      true ? factory(__webpack_require__(1269)) :
     typeof define === 'function' && define.amd ? define(['../moment'], factory) :
     factory(global.moment)
  }(this, (function (moment) { 'use strict';



  var se = moment.defineLocale('se', {
      months : 'ođđajagemánnu_guovvamánnu_njukčamánnu_cuoŋománnu_miessemánnu_geassemánnu_suoidnemánnu_borgemánnu_čakčamánnu_golggotmánnu_skábmamánnu_juovlamánnu'.split('_'),
      monthsShort : 'ođđj_guov_njuk_cuo_mies_geas_suoi_borg_čakč_golg_skáb_juov'.split('_'),
      weekdays : 'sotnabeaivi_vuossárga_maŋŋebárga_gaskavahkku_duorastat_bearjadat_lávvardat'.split('_'),
      weekdaysShort : 'sotn_vuos_maŋ_gask_duor_bear_láv'.split('_'),
      weekdaysMin : 's_v_m_g_d_b_L'.split('_'),
      longDateFormat : {
          LT : 'HH:mm',
          LTS : 'HH:mm:ss',
          L : 'DD.MM.YYYY',
          LL : 'MMMM D. [b.] YYYY',
          LLL : 'MMMM D. [b.] YYYY [ti.] HH:mm',
          LLLL : 'dddd, MMMM D. [b.] YYYY [ti.] HH:mm'
      },
      calendar : {
          sameDay: '[otne ti] LT',
          nextDay: '[ihttin ti] LT',
          nextWeek: 'dddd [ti] LT',
          lastDay: '[ikte ti] LT',
          lastWeek: '[ovddit] dddd [ti] LT',
          sameElse: 'L'
      },
      relativeTime : {
          future : '%s geažes',
          past : 'maŋit %s',
          s : 'moadde sekunddat',
          m : 'okta minuhta',
          mm : '%d minuhtat',
          h : 'okta diimmu',
          hh : '%d diimmut',
          d : 'okta beaivi',
          dd : '%d beaivvit',
          M : 'okta mánnu',
          MM : '%d mánut',
          y : 'okta jahki',
          yy : '%d jagit'
      },
      ordinalParse: /\d{1,2}\./,
      ordinal : '%d.',
      week : {
          dow : 1, // Monday is the first day of the week.
          doy : 4  // The week that contains Jan 4th is the first week of the year.
      }
  });

  return se;

  })));


/***/ },
/* 1352 */
/***/ function(module, exports, __webpack_require__) {

  //! moment.js locale configuration
  //! locale : Sinhalese [si]
  //! author : Sampath Sitinamaluwa : https://github.com/sampathsris

  ;(function (global, factory) {
      true ? factory(__webpack_require__(1269)) :
     typeof define === 'function' && define.amd ? define(['../moment'], factory) :
     factory(global.moment)
  }(this, (function (moment) { 'use strict';


  /*jshint -W100*/
  var si = moment.defineLocale('si', {
      months : 'ජනවාරි_පෙබරවාරි_මාර්තු_අප්‍රේල්_මැයි_ජූනි_ජූලි_අගෝස්තු_සැප්තැම්බර්_ඔක්තෝබර්_නොවැම්බර්_දෙසැම්බර්'.split('_'),
      monthsShort : 'ජන_පෙබ_මාර්_අප්_මැයි_ජූනි_ජූලි_අගෝ_සැප්_ඔක්_නොවැ_දෙසැ'.split('_'),
      weekdays : 'ඉරිදා_සඳුදා_අඟහරුවාදා_බදාදා_බ්‍රහස්පතින්දා_සිකුරාදා_සෙනසුරාදා'.split('_'),
      weekdaysShort : 'ඉරි_සඳු_අඟ_බදා_බ්‍රහ_සිකු_සෙන'.split('_'),
      weekdaysMin : 'ඉ_ස_අ_බ_බ්‍ර_සි_සෙ'.split('_'),
      weekdaysParseExact : true,
      longDateFormat : {
          LT : 'a h:mm',
          LTS : 'a h:mm:ss',
          L : 'YYYY/MM/DD',
          LL : 'YYYY MMMM D',
          LLL : 'YYYY MMMM D, a h:mm',
          LLLL : 'YYYY MMMM D [වැනි] dddd, a h:mm:ss'
      },
      calendar : {
          sameDay : '[අද] LT[ට]',
          nextDay : '[හෙට] LT[ට]',
          nextWeek : 'dddd LT[ට]',
          lastDay : '[ඊයේ] LT[ට]',
          lastWeek : '[පසුගිය] dddd LT[ට]',
          sameElse : 'L'
      },
      relativeTime : {
          future : '%sකින්',
          past : '%sකට පෙර',
          s : 'තත්පර කිහිපය',
          m : 'මිනිත්තුව',
          mm : 'මිනිත්තු %d',
          h : 'පැය',
          hh : 'පැය %d',
          d : 'දිනය',
          dd : 'දින %d',
          M : 'මාසය',
          MM : 'මාස %d',
          y : 'වසර',
          yy : 'වසර %d'
      },
      ordinalParse: /\d{1,2} වැනි/,
      ordinal : function (number) {
          return number + ' වැනි';
      },
      meridiemParse : /පෙර වරු|පස් වරු|පෙ.ව|ප.ව./,
      isPM : function (input) {
          return input === 'ප.ව.' || input === 'පස් වරු';
      },
      meridiem : function (hours, minutes, isLower) {
          if (hours > 11) {
              return isLower ? 'ප.ව.' : 'පස් වරු';
          } else {
              return isLower ? 'පෙ.ව.' : 'පෙර වරු';
          }
      }
  });

  return si;

  })));


/***/ },
/* 1353 */
/***/ function(module, exports, __webpack_require__) {

  //! moment.js locale configuration
  //! locale : Slovak [sk]
  //! author : Martin Minka : https://github.com/k2s
  //! based on work of petrbela : https://github.com/petrbela

  ;(function (global, factory) {
      true ? factory(__webpack_require__(1269)) :
     typeof define === 'function' && define.amd ? define(['../moment'], factory) :
     factory(global.moment)
  }(this, (function (moment) { 'use strict';


  var months = 'január_február_marec_apríl_máj_jún_júl_august_september_október_november_december'.split('_');
  var monthsShort = 'jan_feb_mar_apr_máj_jún_júl_aug_sep_okt_nov_dec'.split('_');
  function plural(n) {
      return (n > 1) && (n < 5);
  }
  function translate(number, withoutSuffix, key, isFuture) {
      var result = number + ' ';
      switch (key) {
          case 's':  // a few seconds / in a few seconds / a few seconds ago
              return (withoutSuffix || isFuture) ? 'pár sekúnd' : 'pár sekundami';
          case 'm':  // a minute / in a minute / a minute ago
              return withoutSuffix ? 'minúta' : (isFuture ? 'minútu' : 'minútou');
          case 'mm': // 9 minutes / in 9 minutes / 9 minutes ago
              if (withoutSuffix || isFuture) {
                  return result + (plural(number) ? 'minúty' : 'minút');
              } else {
                  return result + 'minútami';
              }
              break;
          case 'h':  // an hour / in an hour / an hour ago
              return withoutSuffix ? 'hodina' : (isFuture ? 'hodinu' : 'hodinou');
          case 'hh': // 9 hours / in 9 hours / 9 hours ago
              if (withoutSuffix || isFuture) {
                  return result + (plural(number) ? 'hodiny' : 'hodín');
              } else {
                  return result + 'hodinami';
              }
              break;
          case 'd':  // a day / in a day / a day ago
              return (withoutSuffix || isFuture) ? 'deň' : 'dňom';
          case 'dd': // 9 days / in 9 days / 9 days ago
              if (withoutSuffix || isFuture) {
                  return result + (plural(number) ? 'dni' : 'dní');
              } else {
                  return result + 'dňami';
              }
              break;
          case 'M':  // a month / in a month / a month ago
              return (withoutSuffix || isFuture) ? 'mesiac' : 'mesiacom';
          case 'MM': // 9 months / in 9 months / 9 months ago
              if (withoutSuffix || isFuture) {
                  return result + (plural(number) ? 'mesiace' : 'mesiacov');
              } else {
                  return result + 'mesiacmi';
              }
              break;
          case 'y':  // a year / in a year / a year ago
              return (withoutSuffix || isFuture) ? 'rok' : 'rokom';
          case 'yy': // 9 years / in 9 years / 9 years ago
              if (withoutSuffix || isFuture) {
                  return result + (plural(number) ? 'roky' : 'rokov');
              } else {
                  return result + 'rokmi';
              }
              break;
      }
  }

  var sk = moment.defineLocale('sk', {
      months : months,
      monthsShort : monthsShort,
      weekdays : 'nedeľa_pondelok_utorok_streda_štvrtok_piatok_sobota'.split('_'),
      weekdaysShort : 'ne_po_ut_st_št_pi_so'.split('_'),
      weekdaysMin : 'ne_po_ut_st_št_pi_so'.split('_'),
      longDateFormat : {
          LT: 'H:mm',
          LTS : 'H:mm:ss',
          L : 'DD.MM.YYYY',
          LL : 'D. MMMM YYYY',
          LLL : 'D. MMMM YYYY H:mm',
          LLLL : 'dddd D. MMMM YYYY H:mm'
      },
      calendar : {
          sameDay: '[dnes o] LT',
          nextDay: '[zajtra o] LT',
          nextWeek: function () {
              switch (this.day()) {
                  case 0:
                      return '[v nedeľu o] LT';
                  case 1:
                  case 2:
                      return '[v] dddd [o] LT';
                  case 3:
                      return '[v stredu o] LT';
                  case 4:
                      return '[vo štvrtok o] LT';
                  case 5:
                      return '[v piatok o] LT';
                  case 6:
                      return '[v sobotu o] LT';
              }
          },
          lastDay: '[včera o] LT',
          lastWeek: function () {
              switch (this.day()) {
                  case 0:
                      return '[minulú nedeľu o] LT';
                  case 1:
                  case 2:
                      return '[minulý] dddd [o] LT';
                  case 3:
                      return '[minulú stredu o] LT';
                  case 4:
                  case 5:
                      return '[minulý] dddd [o] LT';
                  case 6:
                      return '[minulú sobotu o] LT';
              }
          },
          sameElse: 'L'
      },
      relativeTime : {
          future : 'za %s',
          past : 'pred %s',
          s : translate,
          m : translate,
          mm : translate,
          h : translate,
          hh : translate,
          d : translate,
          dd : translate,
          M : translate,
          MM : translate,
          y : translate,
          yy : translate
      },
      ordinalParse: /\d{1,2}\./,
      ordinal : '%d.',
      week : {
          dow : 1, // Monday is the first day of the week.
          doy : 4  // The week that contains Jan 4th is the first week of the year.
      }
  });

  return sk;

  })));


/***/ },
/* 1354 */
/***/ function(module, exports, __webpack_require__) {

  //! moment.js locale configuration
  //! locale : Slovenian [sl]
  //! author : Robert Sedovšek : https://github.com/sedovsek

  ;(function (global, factory) {
      true ? factory(__webpack_require__(1269)) :
     typeof define === 'function' && define.amd ? define(['../moment'], factory) :
     factory(global.moment)
  }(this, (function (moment) { 'use strict';


  function processRelativeTime(number, withoutSuffix, key, isFuture) {
      var result = number + ' ';
      switch (key) {
          case 's':
              return withoutSuffix || isFuture ? 'nekaj sekund' : 'nekaj sekundami';
          case 'm':
              return withoutSuffix ? 'ena minuta' : 'eno minuto';
          case 'mm':
              if (number === 1) {
                  result += withoutSuffix ? 'minuta' : 'minuto';
              } else if (number === 2) {
                  result += withoutSuffix || isFuture ? 'minuti' : 'minutama';
              } else if (number < 5) {
                  result += withoutSuffix || isFuture ? 'minute' : 'minutami';
              } else {
                  result += withoutSuffix || isFuture ? 'minut' : 'minutami';
              }
              return result;
          case 'h':
              return withoutSuffix ? 'ena ura' : 'eno uro';
          case 'hh':
              if (number === 1) {
                  result += withoutSuffix ? 'ura' : 'uro';
              } else if (number === 2) {
                  result += withoutSuffix || isFuture ? 'uri' : 'urama';
              } else if (number < 5) {
                  result += withoutSuffix || isFuture ? 'ure' : 'urami';
              } else {
                  result += withoutSuffix || isFuture ? 'ur' : 'urami';
              }
              return result;
          case 'd':
              return withoutSuffix || isFuture ? 'en dan' : 'enim dnem';
          case 'dd':
              if (number === 1) {
                  result += withoutSuffix || isFuture ? 'dan' : 'dnem';
              } else if (number === 2) {
                  result += withoutSuffix || isFuture ? 'dni' : 'dnevoma';
              } else {
                  result += withoutSuffix || isFuture ? 'dni' : 'dnevi';
              }
              return result;
          case 'M':
              return withoutSuffix || isFuture ? 'en mesec' : 'enim mesecem';
          case 'MM':
              if (number === 1) {
                  result += withoutSuffix || isFuture ? 'mesec' : 'mesecem';
              } else if (number === 2) {
                  result += withoutSuffix || isFuture ? 'meseca' : 'mesecema';
              } else if (number < 5) {
                  result += withoutSuffix || isFuture ? 'mesece' : 'meseci';
              } else {
                  result += withoutSuffix || isFuture ? 'mesecev' : 'meseci';
              }
              return result;
          case 'y':
              return withoutSuffix || isFuture ? 'eno leto' : 'enim letom';
          case 'yy':
              if (number === 1) {
                  result += withoutSuffix || isFuture ? 'leto' : 'letom';
              } else if (number === 2) {
                  result += withoutSuffix || isFuture ? 'leti' : 'letoma';
              } else if (number < 5) {
                  result += withoutSuffix || isFuture ? 'leta' : 'leti';
              } else {
                  result += withoutSuffix || isFuture ? 'let' : 'leti';
              }
              return result;
      }
  }

  var sl = moment.defineLocale('sl', {
      months : 'januar_februar_marec_april_maj_junij_julij_avgust_september_oktober_november_december'.split('_'),
      monthsShort : 'jan._feb._mar._apr._maj._jun._jul._avg._sep._okt._nov._dec.'.split('_'),
      monthsParseExact: true,
      weekdays : 'nedelja_ponedeljek_torek_sreda_četrtek_petek_sobota'.split('_'),
      weekdaysShort : 'ned._pon._tor._sre._čet._pet._sob.'.split('_'),
      weekdaysMin : 'ne_po_to_sr_če_pe_so'.split('_'),
      weekdaysParseExact : true,
      longDateFormat : {
          LT : 'H:mm',
          LTS : 'H:mm:ss',
          L : 'DD.MM.YYYY',
          LL : 'D. MMMM YYYY',
          LLL : 'D. MMMM YYYY H:mm',
          LLLL : 'dddd, D. MMMM YYYY H:mm'
      },
      calendar : {
          sameDay  : '[danes ob] LT',
          nextDay  : '[jutri ob] LT',

          nextWeek : function () {
              switch (this.day()) {
                  case 0:
                      return '[v] [nedeljo] [ob] LT';
                  case 3:
                      return '[v] [sredo] [ob] LT';
                  case 6:
                      return '[v] [soboto] [ob] LT';
                  case 1:
                  case 2:
                  case 4:
                  case 5:
                      return '[v] dddd [ob] LT';
              }
          },
          lastDay  : '[včeraj ob] LT',
          lastWeek : function () {
              switch (this.day()) {
                  case 0:
                      return '[prejšnjo] [nedeljo] [ob] LT';
                  case 3:
                      return '[prejšnjo] [sredo] [ob] LT';
                  case 6:
                      return '[prejšnjo] [soboto] [ob] LT';
                  case 1:
                  case 2:
                  case 4:
                  case 5:
                      return '[prejšnji] dddd [ob] LT';
              }
          },
          sameElse : 'L'
      },
      relativeTime : {
          future : 'čez %s',
          past   : 'pred %s',
          s      : processRelativeTime,
          m      : processRelativeTime,
          mm     : processRelativeTime,
          h      : processRelativeTime,
          hh     : processRelativeTime,
          d      : processRelativeTime,
          dd     : processRelativeTime,
          M      : processRelativeTime,
          MM     : processRelativeTime,
          y      : processRelativeTime,
          yy     : processRelativeTime
      },
      ordinalParse: /\d{1,2}\./,
      ordinal : '%d.',
      week : {
          dow : 1, // Monday is the first day of the week.
          doy : 7  // The week that contains Jan 1st is the first week of the year.
      }
  });

  return sl;

  })));


/***/ },
/* 1355 */
/***/ function(module, exports, __webpack_require__) {

  //! moment.js locale configuration
  //! locale : Albanian [sq]
  //! author : Flakërim Ismani : https://github.com/flakerimi
  //! author : Menelion Elensúle : https://github.com/Oire
  //! author : Oerd Cukalla : https://github.com/oerd

  ;(function (global, factory) {
      true ? factory(__webpack_require__(1269)) :
     typeof define === 'function' && define.amd ? define(['../moment'], factory) :
     factory(global.moment)
  }(this, (function (moment) { 'use strict';


  var sq = moment.defineLocale('sq', {
      months : 'Janar_Shkurt_Mars_Prill_Maj_Qershor_Korrik_Gusht_Shtator_Tetor_Nëntor_Dhjetor'.split('_'),
      monthsShort : 'Jan_Shk_Mar_Pri_Maj_Qer_Kor_Gus_Sht_Tet_Nën_Dhj'.split('_'),
      weekdays : 'E Diel_E Hënë_E Martë_E Mërkurë_E Enjte_E Premte_E Shtunë'.split('_'),
      weekdaysShort : 'Die_Hën_Mar_Mër_Enj_Pre_Sht'.split('_'),
      weekdaysMin : 'D_H_Ma_Më_E_P_Sh'.split('_'),
      weekdaysParseExact : true,
      meridiemParse: /PD|MD/,
      isPM: function (input) {
          return input.charAt(0) === 'M';
      },
      meridiem : function (hours, minutes, isLower) {
          return hours < 12 ? 'PD' : 'MD';
      },
      longDateFormat : {
          LT : 'HH:mm',
          LTS : 'HH:mm:ss',
          L : 'DD/MM/YYYY',
          LL : 'D MMMM YYYY',
          LLL : 'D MMMM YYYY HH:mm',
          LLLL : 'dddd, D MMMM YYYY HH:mm'
      },
      calendar : {
          sameDay : '[Sot në] LT',
          nextDay : '[Nesër në] LT',
          nextWeek : 'dddd [në] LT',
          lastDay : '[Dje në] LT',
          lastWeek : 'dddd [e kaluar në] LT',
          sameElse : 'L'
      },
      relativeTime : {
          future : 'në %s',
          past : '%s më parë',
          s : 'disa sekonda',
          m : 'një minutë',
          mm : '%d minuta',
          h : 'një orë',
          hh : '%d orë',
          d : 'një ditë',
          dd : '%d ditë',
          M : 'një muaj',
          MM : '%d muaj',
          y : 'një vit',
          yy : '%d vite'
      },
      ordinalParse: /\d{1,2}\./,
      ordinal : '%d.',
      week : {
          dow : 1, // Monday is the first day of the week.
          doy : 4  // The week that contains Jan 4th is the first week of the year.
      }
  });

  return sq;

  })));


/***/ },
/* 1356 */
/***/ function(module, exports, __webpack_require__) {

  //! moment.js locale configuration
  //! locale : Serbian [sr]
  //! author : Milan Janačković<milanjanackovic@gmail.com> : https://github.com/milan-j

  ;(function (global, factory) {
      true ? factory(__webpack_require__(1269)) :
     typeof define === 'function' && define.amd ? define(['../moment'], factory) :
     factory(global.moment)
  }(this, (function (moment) { 'use strict';


  var translator = {
      words: { //Different grammatical cases
          m: ['jedan minut', 'jedne minute'],
          mm: ['minut', 'minute', 'minuta'],
          h: ['jedan sat', 'jednog sata'],
          hh: ['sat', 'sata', 'sati'],
          dd: ['dan', 'dana', 'dana'],
          MM: ['mesec', 'meseca', 'meseci'],
          yy: ['godina', 'godine', 'godina']
      },
      correctGrammaticalCase: function (number, wordKey) {
          return number === 1 ? wordKey[0] : (number >= 2 && number <= 4 ? wordKey[1] : wordKey[2]);
      },
      translate: function (number, withoutSuffix, key) {
          var wordKey = translator.words[key];
          if (key.length === 1) {
              return withoutSuffix ? wordKey[0] : wordKey[1];
          } else {
              return number + ' ' + translator.correctGrammaticalCase(number, wordKey);
          }
      }
  };

  var sr = moment.defineLocale('sr', {
      months: 'januar_februar_mart_april_maj_jun_jul_avgust_septembar_oktobar_novembar_decembar'.split('_'),
      monthsShort: 'jan._feb._mar._apr._maj_jun_jul_avg._sep._okt._nov._dec.'.split('_'),
      monthsParseExact: true,
      weekdays: 'nedelja_ponedeljak_utorak_sreda_četvrtak_petak_subota'.split('_'),
      weekdaysShort: 'ned._pon._uto._sre._čet._pet._sub.'.split('_'),
      weekdaysMin: 'ne_po_ut_sr_če_pe_su'.split('_'),
      weekdaysParseExact : true,
      longDateFormat: {
          LT: 'H:mm',
          LTS : 'H:mm:ss',
          L: 'DD.MM.YYYY',
          LL: 'D. MMMM YYYY',
          LLL: 'D. MMMM YYYY H:mm',
          LLLL: 'dddd, D. MMMM YYYY H:mm'
      },
      calendar: {
          sameDay: '[danas u] LT',
          nextDay: '[sutra u] LT',
          nextWeek: function () {
              switch (this.day()) {
                  case 0:
                      return '[u] [nedelju] [u] LT';
                  case 3:
                      return '[u] [sredu] [u] LT';
                  case 6:
                      return '[u] [subotu] [u] LT';
                  case 1:
                  case 2:
                  case 4:
                  case 5:
                      return '[u] dddd [u] LT';
              }
          },
          lastDay  : '[juče u] LT',
          lastWeek : function () {
              var lastWeekDays = [
                  '[prošle] [nedelje] [u] LT',
                  '[prošlog] [ponedeljka] [u] LT',
                  '[prošlog] [utorka] [u] LT',
                  '[prošle] [srede] [u] LT',
                  '[prošlog] [četvrtka] [u] LT',
                  '[prošlog] [petka] [u] LT',
                  '[prošle] [subote] [u] LT'
              ];
              return lastWeekDays[this.day()];
          },
          sameElse : 'L'
      },
      relativeTime : {
          future : 'za %s',
          past   : 'pre %s',
          s      : 'nekoliko sekundi',
          m      : translator.translate,
          mm     : translator.translate,
          h      : translator.translate,
          hh     : translator.translate,
          d      : 'dan',
          dd     : translator.translate,
          M      : 'mesec',
          MM     : translator.translate,
          y      : 'godinu',
          yy     : translator.translate
      },
      ordinalParse: /\d{1,2}\./,
      ordinal : '%d.',
      week : {
          dow : 1, // Monday is the first day of the week.
          doy : 7  // The week that contains Jan 1st is the first week of the year.
      }
  });

  return sr;

  })));


/***/ },
/* 1357 */
/***/ function(module, exports, __webpack_require__) {

  //! moment.js locale configuration
  //! locale : Serbian Cyrillic [sr-cyrl]
  //! author : Milan Janačković<milanjanackovic@gmail.com> : https://github.com/milan-j

  ;(function (global, factory) {
      true ? factory(__webpack_require__(1269)) :
     typeof define === 'function' && define.amd ? define(['../moment'], factory) :
     factory(global.moment)
  }(this, (function (moment) { 'use strict';


  var translator = {
      words: { //Different grammatical cases
          m: ['један минут', 'једне минуте'],
          mm: ['минут', 'минуте', 'минута'],
          h: ['један сат', 'једног сата'],
          hh: ['сат', 'сата', 'сати'],
          dd: ['дан', 'дана', 'дана'],
          MM: ['месец', 'месеца', 'месеци'],
          yy: ['година', 'године', 'година']
      },
      correctGrammaticalCase: function (number, wordKey) {
          return number === 1 ? wordKey[0] : (number >= 2 && number <= 4 ? wordKey[1] : wordKey[2]);
      },
      translate: function (number, withoutSuffix, key) {
          var wordKey = translator.words[key];
          if (key.length === 1) {
              return withoutSuffix ? wordKey[0] : wordKey[1];
          } else {
              return number + ' ' + translator.correctGrammaticalCase(number, wordKey);
          }
      }
  };

  var srCyrl = moment.defineLocale('sr-cyrl', {
      months: 'јануар_фебруар_март_април_мај_јун_јул_август_септембар_октобар_новембар_децембар'.split('_'),
      monthsShort: 'јан._феб._мар._апр._мај_јун_јул_авг._сеп._окт._нов._дец.'.split('_'),
      monthsParseExact: true,
      weekdays: 'недеља_понедељак_уторак_среда_четвртак_петак_субота'.split('_'),
      weekdaysShort: 'нед._пон._уто._сре._чет._пет._суб.'.split('_'),
      weekdaysMin: 'не_по_ут_ср_че_пе_су'.split('_'),
      weekdaysParseExact : true,
      longDateFormat: {
          LT: 'H:mm',
          LTS : 'H:mm:ss',
          L: 'DD.MM.YYYY',
          LL: 'D. MMMM YYYY',
          LLL: 'D. MMMM YYYY H:mm',
          LLLL: 'dddd, D. MMMM YYYY H:mm'
      },
      calendar: {
          sameDay: '[данас у] LT',
          nextDay: '[сутра у] LT',
          nextWeek: function () {
              switch (this.day()) {
                  case 0:
                      return '[у] [недељу] [у] LT';
                  case 3:
                      return '[у] [среду] [у] LT';
                  case 6:
                      return '[у] [суботу] [у] LT';
                  case 1:
                  case 2:
                  case 4:
                  case 5:
                      return '[у] dddd [у] LT';
              }
          },
          lastDay  : '[јуче у] LT',
          lastWeek : function () {
              var lastWeekDays = [
                  '[прошле] [недеље] [у] LT',
                  '[прошлог] [понедељка] [у] LT',
                  '[прошлог] [уторка] [у] LT',
                  '[прошле] [среде] [у] LT',
                  '[прошлог] [четвртка] [у] LT',
                  '[прошлог] [петка] [у] LT',
                  '[прошле] [суботе] [у] LT'
              ];
              return lastWeekDays[this.day()];
          },
          sameElse : 'L'
      },
      relativeTime : {
          future : 'за %s',
          past   : 'пре %s',
          s      : 'неколико секунди',
          m      : translator.translate,
          mm     : translator.translate,
          h      : translator.translate,
          hh     : translator.translate,
          d      : 'дан',
          dd     : translator.translate,
          M      : 'месец',
          MM     : translator.translate,
          y      : 'годину',
          yy     : translator.translate
      },
      ordinalParse: /\d{1,2}\./,
      ordinal : '%d.',
      week : {
          dow : 1, // Monday is the first day of the week.
          doy : 7  // The week that contains Jan 1st is the first week of the year.
      }
  });

  return srCyrl;

  })));


/***/ },
/* 1358 */
/***/ function(module, exports, __webpack_require__) {

  //! moment.js locale configuration
  //! locale : siSwati [ss]
  //! author : Nicolai Davies<mail@nicolai.io> : https://github.com/nicolaidavies

  ;(function (global, factory) {
      true ? factory(__webpack_require__(1269)) :
     typeof define === 'function' && define.amd ? define(['../moment'], factory) :
     factory(global.moment)
  }(this, (function (moment) { 'use strict';



  var ss = moment.defineLocale('ss', {
      months : "Bhimbidvwane_Indlovana_Indlov'lenkhulu_Mabasa_Inkhwekhweti_Inhlaba_Kholwane_Ingci_Inyoni_Imphala_Lweti_Ingongoni".split('_'),
      monthsShort : 'Bhi_Ina_Inu_Mab_Ink_Inh_Kho_Igc_Iny_Imp_Lwe_Igo'.split('_'),
      weekdays : 'Lisontfo_Umsombuluko_Lesibili_Lesitsatfu_Lesine_Lesihlanu_Umgcibelo'.split('_'),
      weekdaysShort : 'Lis_Umb_Lsb_Les_Lsi_Lsh_Umg'.split('_'),
      weekdaysMin : 'Li_Us_Lb_Lt_Ls_Lh_Ug'.split('_'),
      weekdaysParseExact : true,
      longDateFormat : {
          LT : 'h:mm A',
          LTS : 'h:mm:ss A',
          L : 'DD/MM/YYYY',
          LL : 'D MMMM YYYY',
          LLL : 'D MMMM YYYY h:mm A',
          LLLL : 'dddd, D MMMM YYYY h:mm A'
      },
      calendar : {
          sameDay : '[Namuhla nga] LT',
          nextDay : '[Kusasa nga] LT',
          nextWeek : 'dddd [nga] LT',
          lastDay : '[Itolo nga] LT',
          lastWeek : 'dddd [leliphelile] [nga] LT',
          sameElse : 'L'
      },
      relativeTime : {
          future : 'nga %s',
          past : 'wenteka nga %s',
          s : 'emizuzwana lomcane',
          m : 'umzuzu',
          mm : '%d emizuzu',
          h : 'lihora',
          hh : '%d emahora',
          d : 'lilanga',
          dd : '%d emalanga',
          M : 'inyanga',
          MM : '%d tinyanga',
          y : 'umnyaka',
          yy : '%d iminyaka'
      },
      meridiemParse: /ekuseni|emini|entsambama|ebusuku/,
      meridiem : function (hours, minutes, isLower) {
          if (hours < 11) {
              return 'ekuseni';
          } else if (hours < 15) {
              return 'emini';
          } else if (hours < 19) {
              return 'entsambama';
          } else {
              return 'ebusuku';
          }
      },
      meridiemHour : function (hour, meridiem) {
          if (hour === 12) {
              hour = 0;
          }
          if (meridiem === 'ekuseni') {
              return hour;
          } else if (meridiem === 'emini') {
              return hour >= 11 ? hour : hour + 12;
          } else if (meridiem === 'entsambama' || meridiem === 'ebusuku') {
              if (hour === 0) {
                  return 0;
              }
              return hour + 12;
          }
      },
      ordinalParse: /\d{1,2}/,
      ordinal : '%d',
      week : {
          dow : 1, // Monday is the first day of the week.
          doy : 4  // The week that contains Jan 4th is the first week of the year.
      }
  });

  return ss;

  })));


/***/ },
/* 1359 */
/***/ function(module, exports, __webpack_require__) {

  //! moment.js locale configuration
  //! locale : Swedish [sv]
  //! author : Jens Alm : https://github.com/ulmus

  ;(function (global, factory) {
      true ? factory(__webpack_require__(1269)) :
     typeof define === 'function' && define.amd ? define(['../moment'], factory) :
     factory(global.moment)
  }(this, (function (moment) { 'use strict';


  var sv = moment.defineLocale('sv', {
      months : 'januari_februari_mars_april_maj_juni_juli_augusti_september_oktober_november_december'.split('_'),
      monthsShort : 'jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec'.split('_'),
      weekdays : 'söndag_måndag_tisdag_onsdag_torsdag_fredag_lördag'.split('_'),
      weekdaysShort : 'sön_mån_tis_ons_tor_fre_lör'.split('_'),
      weekdaysMin : 'sö_må_ti_on_to_fr_lö'.split('_'),
      longDateFormat : {
          LT : 'HH:mm',
          LTS : 'HH:mm:ss',
          L : 'YYYY-MM-DD',
          LL : 'D MMMM YYYY',
          LLL : 'D MMMM YYYY [kl.] HH:mm',
          LLLL : 'dddd D MMMM YYYY [kl.] HH:mm',
          lll : 'D MMM YYYY HH:mm',
          llll : 'ddd D MMM YYYY HH:mm'
      },
      calendar : {
          sameDay: '[Idag] LT',
          nextDay: '[Imorgon] LT',
          lastDay: '[Igår] LT',
          nextWeek: '[På] dddd LT',
          lastWeek: '[I] dddd[s] LT',
          sameElse: 'L'
      },
      relativeTime : {
          future : 'om %s',
          past : 'för %s sedan',
          s : 'några sekunder',
          m : 'en minut',
          mm : '%d minuter',
          h : 'en timme',
          hh : '%d timmar',
          d : 'en dag',
          dd : '%d dagar',
          M : 'en månad',
          MM : '%d månader',
          y : 'ett år',
          yy : '%d år'
      },
      ordinalParse: /\d{1,2}(e|a)/,
      ordinal : function (number) {
          var b = number % 10,
              output = (~~(number % 100 / 10) === 1) ? 'e' :
              (b === 1) ? 'a' :
              (b === 2) ? 'a' :
              (b === 3) ? 'e' : 'e';
          return number + output;
      },
      week : {
          dow : 1, // Monday is the first day of the week.
          doy : 4  // The week that contains Jan 4th is the first week of the year.
      }
  });

  return sv;

  })));


/***/ },
/* 1360 */
/***/ function(module, exports, __webpack_require__) {

  //! moment.js locale configuration
  //! locale : Swahili [sw]
  //! author : Fahad Kassim : https://github.com/fadsel

  ;(function (global, factory) {
      true ? factory(__webpack_require__(1269)) :
     typeof define === 'function' && define.amd ? define(['../moment'], factory) :
     factory(global.moment)
  }(this, (function (moment) { 'use strict';


  var sw = moment.defineLocale('sw', {
      months : 'Januari_Februari_Machi_Aprili_Mei_Juni_Julai_Agosti_Septemba_Oktoba_Novemba_Desemba'.split('_'),
      monthsShort : 'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ago_Sep_Okt_Nov_Des'.split('_'),
      weekdays : 'Jumapili_Jumatatu_Jumanne_Jumatano_Alhamisi_Ijumaa_Jumamosi'.split('_'),
      weekdaysShort : 'Jpl_Jtat_Jnne_Jtan_Alh_Ijm_Jmos'.split('_'),
      weekdaysMin : 'J2_J3_J4_J5_Al_Ij_J1'.split('_'),
      weekdaysParseExact : true,
      longDateFormat : {
          LT : 'HH:mm',
          LTS : 'HH:mm:ss',
          L : 'DD.MM.YYYY',
          LL : 'D MMMM YYYY',
          LLL : 'D MMMM YYYY HH:mm',
          LLLL : 'dddd, D MMMM YYYY HH:mm'
      },
      calendar : {
          sameDay : '[leo saa] LT',
          nextDay : '[kesho saa] LT',
          nextWeek : '[wiki ijayo] dddd [saat] LT',
          lastDay : '[jana] LT',
          lastWeek : '[wiki iliyopita] dddd [saat] LT',
          sameElse : 'L'
      },
      relativeTime : {
          future : '%s baadaye',
          past : 'tokea %s',
          s : 'hivi punde',
          m : 'dakika moja',
          mm : 'dakika %d',
          h : 'saa limoja',
          hh : 'masaa %d',
          d : 'siku moja',
          dd : 'masiku %d',
          M : 'mwezi mmoja',
          MM : 'miezi %d',
          y : 'mwaka mmoja',
          yy : 'miaka %d'
      },
      week : {
          dow : 1, // Monday is the first day of the week.
          doy : 7  // The week that contains Jan 1st is the first week of the year.
      }
  });

  return sw;

  })));


/***/ },
/* 1361 */
/***/ function(module, exports, __webpack_require__) {

  //! moment.js locale configuration
  //! locale : Tamil [ta]
  //! author : Arjunkumar Krishnamoorthy : https://github.com/tk120404

  ;(function (global, factory) {
      true ? factory(__webpack_require__(1269)) :
     typeof define === 'function' && define.amd ? define(['../moment'], factory) :
     factory(global.moment)
  }(this, (function (moment) { 'use strict';


  var symbolMap = {
      '1': '௧',
      '2': '௨',
      '3': '௩',
      '4': '௪',
      '5': '௫',
      '6': '௬',
      '7': '௭',
      '8': '௮',
      '9': '௯',
      '0': '௦'
  };
  var numberMap = {
      '௧': '1',
      '௨': '2',
      '௩': '3',
      '௪': '4',
      '௫': '5',
      '௬': '6',
      '௭': '7',
      '௮': '8',
      '௯': '9',
      '௦': '0'
  };

  var ta = moment.defineLocale('ta', {
      months : 'ஜனவரி_பிப்ரவரி_மார்ச்_ஏப்ரல்_மே_ஜூன்_ஜூலை_ஆகஸ்ட்_செப்டெம்பர்_அக்டோபர்_நவம்பர்_டிசம்பர்'.split('_'),
      monthsShort : 'ஜனவரி_பிப்ரவரி_மார்ச்_ஏப்ரல்_மே_ஜூன்_ஜூலை_ஆகஸ்ட்_செப்டெம்பர்_அக்டோபர்_நவம்பர்_டிசம்பர்'.split('_'),
      weekdays : 'ஞாயிற்றுக்கிழமை_திங்கட்கிழமை_செவ்வாய்கிழமை_புதன்கிழமை_வியாழக்கிழமை_வெள்ளிக்கிழமை_சனிக்கிழமை'.split('_'),
      weekdaysShort : 'ஞாயிறு_திங்கள்_செவ்வாய்_புதன்_வியாழன்_வெள்ளி_சனி'.split('_'),
      weekdaysMin : 'ஞா_தி_செ_பு_வி_வெ_ச'.split('_'),
      longDateFormat : {
          LT : 'HH:mm',
          LTS : 'HH:mm:ss',
          L : 'DD/MM/YYYY',
          LL : 'D MMMM YYYY',
          LLL : 'D MMMM YYYY, HH:mm',
          LLLL : 'dddd, D MMMM YYYY, HH:mm'
      },
      calendar : {
          sameDay : '[இன்று] LT',
          nextDay : '[நாளை] LT',
          nextWeek : 'dddd, LT',
          lastDay : '[நேற்று] LT',
          lastWeek : '[கடந்த வாரம்] dddd, LT',
          sameElse : 'L'
      },
      relativeTime : {
          future : '%s இல்',
          past : '%s முன்',
          s : 'ஒரு சில விநாடிகள்',
          m : 'ஒரு நிமிடம்',
          mm : '%d நிமிடங்கள்',
          h : 'ஒரு மணி நேரம்',
          hh : '%d மணி நேரம்',
          d : 'ஒரு நாள்',
          dd : '%d நாட்கள்',
          M : 'ஒரு மாதம்',
          MM : '%d மாதங்கள்',
          y : 'ஒரு வருடம்',
          yy : '%d ஆண்டுகள்'
      },
      ordinalParse: /\d{1,2}வது/,
      ordinal : function (number) {
          return number + 'வது';
      },
      preparse: function (string) {
          return string.replace(/[௧௨௩௪௫௬௭௮௯௦]/g, function (match) {
              return numberMap[match];
          });
      },
      postformat: function (string) {
          return string.replace(/\d/g, function (match) {
              return symbolMap[match];
          });
      },
      // refer http://ta.wikipedia.org/s/1er1
      meridiemParse: /யாமம்|வைகறை|காலை|நண்பகல்|எற்பாடு|மாலை/,
      meridiem : function (hour, minute, isLower) {
          if (hour < 2) {
              return ' யாமம்';
          } else if (hour < 6) {
              return ' வைகறை';  // வைகறை
          } else if (hour < 10) {
              return ' காலை'; // காலை
          } else if (hour < 14) {
              return ' நண்பகல்'; // நண்பகல்
          } else if (hour < 18) {
              return ' எற்பாடு'; // எற்பாடு
          } else if (hour < 22) {
              return ' மாலை'; // மாலை
          } else {
              return ' யாமம்';
          }
      },
      meridiemHour : function (hour, meridiem) {
          if (hour === 12) {
              hour = 0;
          }
          if (meridiem === 'யாமம்') {
              return hour < 2 ? hour : hour + 12;
          } else if (meridiem === 'வைகறை' || meridiem === 'காலை') {
              return hour;
          } else if (meridiem === 'நண்பகல்') {
              return hour >= 10 ? hour : hour + 12;
          } else {
              return hour + 12;
          }
      },
      week : {
          dow : 0, // Sunday is the first day of the week.
          doy : 6  // The week that contains Jan 1st is the first week of the year.
      }
  });

  return ta;

  })));


/***/ },
/* 1362 */
/***/ function(module, exports, __webpack_require__) {

  //! moment.js locale configuration
  //! locale : Telugu [te]
  //! author : Krishna Chaitanya Thota : https://github.com/kcthota

  ;(function (global, factory) {
      true ? factory(__webpack_require__(1269)) :
     typeof define === 'function' && define.amd ? define(['../moment'], factory) :
     factory(global.moment)
  }(this, (function (moment) { 'use strict';


  var te = moment.defineLocale('te', {
      months : 'జనవరి_ఫిబ్రవరి_మార్చి_ఏప్రిల్_మే_జూన్_జూలై_ఆగస్టు_సెప్టెంబర్_అక్టోబర్_నవంబర్_డిసెంబర్'.split('_'),
      monthsShort : 'జన._ఫిబ్ర._మార్చి_ఏప్రి._మే_జూన్_జూలై_ఆగ._సెప్._అక్టో._నవ._డిసె.'.split('_'),
      monthsParseExact : true,
      weekdays : 'ఆదివారం_సోమవారం_మంగళవారం_బుధవారం_గురువారం_శుక్రవారం_శనివారం'.split('_'),
      weekdaysShort : 'ఆది_సోమ_మంగళ_బుధ_గురు_శుక్ర_శని'.split('_'),
      weekdaysMin : 'ఆ_సో_మం_బు_గు_శు_శ'.split('_'),
      longDateFormat : {
          LT : 'A h:mm',
          LTS : 'A h:mm:ss',
          L : 'DD/MM/YYYY',
          LL : 'D MMMM YYYY',
          LLL : 'D MMMM YYYY, A h:mm',
          LLLL : 'dddd, D MMMM YYYY, A h:mm'
      },
      calendar : {
          sameDay : '[నేడు] LT',
          nextDay : '[రేపు] LT',
          nextWeek : 'dddd, LT',
          lastDay : '[నిన్న] LT',
          lastWeek : '[గత] dddd, LT',
          sameElse : 'L'
      },
      relativeTime : {
          future : '%s లో',
          past : '%s క్రితం',
          s : 'కొన్ని క్షణాలు',
          m : 'ఒక నిమిషం',
          mm : '%d నిమిషాలు',
          h : 'ఒక గంట',
          hh : '%d గంటలు',
          d : 'ఒక రోజు',
          dd : '%d రోజులు',
          M : 'ఒక నెల',
          MM : '%d నెలలు',
          y : 'ఒక సంవత్సరం',
          yy : '%d సంవత్సరాలు'
      },
      ordinalParse : /\d{1,2}వ/,
      ordinal : '%dవ',
      meridiemParse: /రాత్రి|ఉదయం|మధ్యాహ్నం|సాయంత్రం/,
      meridiemHour : function (hour, meridiem) {
          if (hour === 12) {
              hour = 0;
          }
          if (meridiem === 'రాత్రి') {
              return hour < 4 ? hour : hour + 12;
          } else if (meridiem === 'ఉదయం') {
              return hour;
          } else if (meridiem === 'మధ్యాహ్నం') {
              return hour >= 10 ? hour : hour + 12;
          } else if (meridiem === 'సాయంత్రం') {
              return hour + 12;
          }
      },
      meridiem : function (hour, minute, isLower) {
          if (hour < 4) {
              return 'రాత్రి';
          } else if (hour < 10) {
              return 'ఉదయం';
          } else if (hour < 17) {
              return 'మధ్యాహ్నం';
          } else if (hour < 20) {
              return 'సాయంత్రం';
          } else {
              return 'రాత్రి';
          }
      },
      week : {
          dow : 0, // Sunday is the first day of the week.
          doy : 6  // The week that contains Jan 1st is the first week of the year.
      }
  });

  return te;

  })));


/***/ },
/* 1363 */
/***/ function(module, exports, __webpack_require__) {

  //! moment.js locale configuration
  //! locale : Tetun Dili (East Timor) [tet]
  //! author : Joshua Brooks : https://github.com/joshbrooks
  //! author : Onorio De J. Afonso : https://github.com/marobo

  ;(function (global, factory) {
      true ? factory(__webpack_require__(1269)) :
     typeof define === 'function' && define.amd ? define(['../moment'], factory) :
     factory(global.moment)
  }(this, (function (moment) { 'use strict';


  var tet = moment.defineLocale('tet', {
      months : 'Janeiru_Fevereiru_Marsu_Abril_Maiu_Juniu_Juliu_Augustu_Setembru_Outubru_Novembru_Dezembru'.split('_'),
      monthsShort : 'Jan_Fev_Mar_Abr_Mai_Jun_Jul_Aug_Set_Out_Nov_Dez'.split('_'),
      weekdays : 'Domingu_Segunda_Tersa_Kuarta_Kinta_Sexta_Sabadu'.split('_'),
      weekdaysShort : 'Dom_Seg_Ters_Kua_Kint_Sext_Sab'.split('_'),
      weekdaysMin : 'Do_Seg_Te_Ku_Ki_Sex_Sa'.split('_'),
      longDateFormat : {
          LT : 'HH:mm',
          LTS : 'HH:mm:ss',
          L : 'DD/MM/YYYY',
          LL : 'D MMMM YYYY',
          LLL : 'D MMMM YYYY HH:mm',
          LLLL : 'dddd, D MMMM YYYY HH:mm'
      },
      calendar : {
          sameDay: '[Ohin iha] LT',
          nextDay: '[Aban iha] LT',
          nextWeek: 'dddd [iha] LT',
          lastDay: '[Horiseik iha] LT',
          lastWeek: 'dddd [semana kotuk] [iha] LT',
          sameElse: 'L'
      },
      relativeTime : {
          future : 'iha %s',
          past : '%s liuba',
          s : 'minutu balun',
          m : 'minutu ida',
          mm : 'minutus %d',
          h : 'horas ida',
          hh : 'horas %d',
          d : 'loron ida',
          dd : 'loron %d',
          M : 'fulan ida',
          MM : 'fulan %d',
          y : 'tinan ida',
          yy : 'tinan %d'
      },
      ordinalParse: /\d{1,2}(st|nd|rd|th)/,
      ordinal : function (number) {
          var b = number % 10,
              output = (~~(number % 100 / 10) === 1) ? 'th' :
              (b === 1) ? 'st' :
              (b === 2) ? 'nd' :
              (b === 3) ? 'rd' : 'th';
          return number + output;
      },
      week : {
          dow : 1, // Monday is the first day of the week.
          doy : 4  // The week that contains Jan 4th is the first week of the year.
      }
  });

  return tet;

  })));


/***/ },
/* 1364 */
/***/ function(module, exports, __webpack_require__) {

  //! moment.js locale configuration
  //! locale : Thai [th]
  //! author : Kridsada Thanabulpong : https://github.com/sirn

  ;(function (global, factory) {
      true ? factory(__webpack_require__(1269)) :
     typeof define === 'function' && define.amd ? define(['../moment'], factory) :
     factory(global.moment)
  }(this, (function (moment) { 'use strict';


  var th = moment.defineLocale('th', {
      months : 'มกราคม_กุมภาพันธ์_มีนาคม_เมษายน_พฤษภาคม_มิถุนายน_กรกฎาคม_สิงหาคม_กันยายน_ตุลาคม_พฤศจิกายน_ธันวาคม'.split('_'),
      monthsShort : 'ม.ค._ก.พ._มี.ค._เม.ย._พ.ค._มิ.ย._ก.ค._ส.ค._ก.ย._ต.ค._พ.ย._ธ.ค.'.split('_'),
      monthsParseExact: true,
      weekdays : 'อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัสบดี_ศุกร์_เสาร์'.split('_'),
      weekdaysShort : 'อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัส_ศุกร์_เสาร์'.split('_'), // yes, three characters difference
      weekdaysMin : 'อา._จ._อ._พ._พฤ._ศ._ส.'.split('_'),
      weekdaysParseExact : true,
      longDateFormat : {
          LT : 'H:mm',
          LTS : 'H:mm:ss',
          L : 'YYYY/MM/DD',
          LL : 'D MMMM YYYY',
          LLL : 'D MMMM YYYY เวลา H:mm',
          LLLL : 'วันddddที่ D MMMM YYYY เวลา H:mm'
      },
      meridiemParse: /ก่อนเที่ยง|หลังเที่ยง/,
      isPM: function (input) {
          return input === 'หลังเที่ยง';
      },
      meridiem : function (hour, minute, isLower) {
          if (hour < 12) {
              return 'ก่อนเที่ยง';
          } else {
              return 'หลังเที่ยง';
          }
      },
      calendar : {
          sameDay : '[วันนี้ เวลา] LT',
          nextDay : '[พรุ่งนี้ เวลา] LT',
          nextWeek : 'dddd[หน้า เวลา] LT',
          lastDay : '[เมื่อวานนี้ เวลา] LT',
          lastWeek : '[วัน]dddd[ที่แล้ว เวลา] LT',
          sameElse : 'L'
      },
      relativeTime : {
          future : 'อีก %s',
          past : '%sที่แล้ว',
          s : 'ไม่กี่วินาที',
          m : '1 นาที',
          mm : '%d นาที',
          h : '1 ชั่วโมง',
          hh : '%d ชั่วโมง',
          d : '1 วัน',
          dd : '%d วัน',
          M : '1 เดือน',
          MM : '%d เดือน',
          y : '1 ปี',
          yy : '%d ปี'
      }
  });

  return th;

  })));


/***/ },
/* 1365 */
/***/ function(module, exports, __webpack_require__) {

  //! moment.js locale configuration
  //! locale : Tagalog (Philippines) [tl-ph]
  //! author : Dan Hagman : https://github.com/hagmandan

  ;(function (global, factory) {
      true ? factory(__webpack_require__(1269)) :
     typeof define === 'function' && define.amd ? define(['../moment'], factory) :
     factory(global.moment)
  }(this, (function (moment) { 'use strict';


  var tlPh = moment.defineLocale('tl-ph', {
      months : 'Enero_Pebrero_Marso_Abril_Mayo_Hunyo_Hulyo_Agosto_Setyembre_Oktubre_Nobyembre_Disyembre'.split('_'),
      monthsShort : 'Ene_Peb_Mar_Abr_May_Hun_Hul_Ago_Set_Okt_Nob_Dis'.split('_'),
      weekdays : 'Linggo_Lunes_Martes_Miyerkules_Huwebes_Biyernes_Sabado'.split('_'),
      weekdaysShort : 'Lin_Lun_Mar_Miy_Huw_Biy_Sab'.split('_'),
      weekdaysMin : 'Li_Lu_Ma_Mi_Hu_Bi_Sab'.split('_'),
      longDateFormat : {
          LT : 'HH:mm',
          LTS : 'HH:mm:ss',
          L : 'MM/D/YYYY',
          LL : 'MMMM D, YYYY',
          LLL : 'MMMM D, YYYY HH:mm',
          LLLL : 'dddd, MMMM DD, YYYY HH:mm'
      },
      calendar : {
          sameDay: 'LT [ngayong araw]',
          nextDay: '[Bukas ng] LT',
          nextWeek: 'LT [sa susunod na] dddd',
          lastDay: 'LT [kahapon]',
          lastWeek: 'LT [noong nakaraang] dddd',
          sameElse: 'L'
      },
      relativeTime : {
          future : 'sa loob ng %s',
          past : '%s ang nakalipas',
          s : 'ilang segundo',
          m : 'isang minuto',
          mm : '%d minuto',
          h : 'isang oras',
          hh : '%d oras',
          d : 'isang araw',
          dd : '%d araw',
          M : 'isang buwan',
          MM : '%d buwan',
          y : 'isang taon',
          yy : '%d taon'
      },
      ordinalParse: /\d{1,2}/,
      ordinal : function (number) {
          return number;
      },
      week : {
          dow : 1, // Monday is the first day of the week.
          doy : 4  // The week that contains Jan 4th is the first week of the year.
      }
  });

  return tlPh;

  })));


/***/ },
/* 1366 */
/***/ function(module, exports, __webpack_require__) {

  //! moment.js locale configuration
  //! locale : Klingon [tlh]
  //! author : Dominika Kruk : https://github.com/amaranthrose

  ;(function (global, factory) {
      true ? factory(__webpack_require__(1269)) :
     typeof define === 'function' && define.amd ? define(['../moment'], factory) :
     factory(global.moment)
  }(this, (function (moment) { 'use strict';


  var numbersNouns = 'pagh_wa’_cha’_wej_loS_vagh_jav_Soch_chorgh_Hut'.split('_');

  function translateFuture(output) {
      var time = output;
      time = (output.indexOf('jaj') !== -1) ?
      time.slice(0, -3) + 'leS' :
      (output.indexOf('jar') !== -1) ?
      time.slice(0, -3) + 'waQ' :
      (output.indexOf('DIS') !== -1) ?
      time.slice(0, -3) + 'nem' :
      time + ' pIq';
      return time;
  }

  function translatePast(output) {
      var time = output;
      time = (output.indexOf('jaj') !== -1) ?
      time.slice(0, -3) + 'Hu’' :
      (output.indexOf('jar') !== -1) ?
      time.slice(0, -3) + 'wen' :
      (output.indexOf('DIS') !== -1) ?
      time.slice(0, -3) + 'ben' :
      time + ' ret';
      return time;
  }

  function translate(number, withoutSuffix, string, isFuture) {
      var numberNoun = numberAsNoun(number);
      switch (string) {
          case 'mm':
              return numberNoun + ' tup';
          case 'hh':
              return numberNoun + ' rep';
          case 'dd':
              return numberNoun + ' jaj';
          case 'MM':
              return numberNoun + ' jar';
          case 'yy':
              return numberNoun + ' DIS';
      }
  }

  function numberAsNoun(number) {
      var hundred = Math.floor((number % 1000) / 100),
      ten = Math.floor((number % 100) / 10),
      one = number % 10,
      word = '';
      if (hundred > 0) {
          word += numbersNouns[hundred] + 'vatlh';
      }
      if (ten > 0) {
          word += ((word !== '') ? ' ' : '') + numbersNouns[ten] + 'maH';
      }
      if (one > 0) {
          word += ((word !== '') ? ' ' : '') + numbersNouns[one];
      }
      return (word === '') ? 'pagh' : word;
  }

  var tlh = moment.defineLocale('tlh', {
      months : 'tera’ jar wa’_tera’ jar cha’_tera’ jar wej_tera’ jar loS_tera’ jar vagh_tera’ jar jav_tera’ jar Soch_tera’ jar chorgh_tera’ jar Hut_tera’ jar wa’maH_tera’ jar wa’maH wa’_tera’ jar wa’maH cha’'.split('_'),
      monthsShort : 'jar wa’_jar cha’_jar wej_jar loS_jar vagh_jar jav_jar Soch_jar chorgh_jar Hut_jar wa’maH_jar wa’maH wa’_jar wa’maH cha’'.split('_'),
      monthsParseExact : true,
      weekdays : 'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split('_'),
      weekdaysShort : 'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split('_'),
      weekdaysMin : 'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split('_'),
      longDateFormat : {
          LT : 'HH:mm',
          LTS : 'HH:mm:ss',
          L : 'DD.MM.YYYY',
          LL : 'D MMMM YYYY',
          LLL : 'D MMMM YYYY HH:mm',
          LLLL : 'dddd, D MMMM YYYY HH:mm'
      },
      calendar : {
          sameDay: '[DaHjaj] LT',
          nextDay: '[wa’leS] LT',
          nextWeek: 'LLL',
          lastDay: '[wa’Hu’] LT',
          lastWeek: 'LLL',
          sameElse: 'L'
      },
      relativeTime : {
          future : translateFuture,
          past : translatePast,
          s : 'puS lup',
          m : 'wa’ tup',
          mm : translate,
          h : 'wa’ rep',
          hh : translate,
          d : 'wa’ jaj',
          dd : translate,
          M : 'wa’ jar',
          MM : translate,
          y : 'wa’ DIS',
          yy : translate
      },
      ordinalParse: /\d{1,2}\./,
      ordinal : '%d.',
      week : {
          dow : 1, // Monday is the first day of the week.
          doy : 4  // The week that contains Jan 4th is the first week of the year.
      }
  });

  return tlh;

  })));


/***/ },
/* 1367 */
/***/ function(module, exports, __webpack_require__) {

  //! moment.js locale configuration
  //! locale : Turkish [tr]
  //! authors : Erhan Gundogan : https://github.com/erhangundogan,
  //!           Burak Yiğit Kaya: https://github.com/BYK

  ;(function (global, factory) {
      true ? factory(__webpack_require__(1269)) :
     typeof define === 'function' && define.amd ? define(['../moment'], factory) :
     factory(global.moment)
  }(this, (function (moment) { 'use strict';


  var suffixes = {
      1: '\'inci',
      5: '\'inci',
      8: '\'inci',
      70: '\'inci',
      80: '\'inci',
      2: '\'nci',
      7: '\'nci',
      20: '\'nci',
      50: '\'nci',
      3: '\'üncü',
      4: '\'üncü',
      100: '\'üncü',
      6: '\'ncı',
      9: '\'uncu',
      10: '\'uncu',
      30: '\'uncu',
      60: '\'ıncı',
      90: '\'ıncı'
  };

  var tr = moment.defineLocale('tr', {
      months : 'Ocak_Şubat_Mart_Nisan_Mayıs_Haziran_Temmuz_Ağustos_Eylül_Ekim_Kasım_Aralık'.split('_'),
      monthsShort : 'Oca_Şub_Mar_Nis_May_Haz_Tem_Ağu_Eyl_Eki_Kas_Ara'.split('_'),
      weekdays : 'Pazar_Pazartesi_Salı_Çarşamba_Perşembe_Cuma_Cumartesi'.split('_'),
      weekdaysShort : 'Paz_Pts_Sal_Çar_Per_Cum_Cts'.split('_'),
      weekdaysMin : 'Pz_Pt_Sa_Ça_Pe_Cu_Ct'.split('_'),
      longDateFormat : {
          LT : 'HH:mm',
          LTS : 'HH:mm:ss',
          L : 'DD.MM.YYYY',
          LL : 'D MMMM YYYY',
          LLL : 'D MMMM YYYY HH:mm',
          LLLL : 'dddd, D MMMM YYYY HH:mm'
      },
      calendar : {
          sameDay : '[bugün saat] LT',
          nextDay : '[yarın saat] LT',
          nextWeek : '[haftaya] dddd [saat] LT',
          lastDay : '[dün] LT',
          lastWeek : '[geçen hafta] dddd [saat] LT',
          sameElse : 'L'
      },
      relativeTime : {
          future : '%s sonra',
          past : '%s önce',
          s : 'birkaç saniye',
          m : 'bir dakika',
          mm : '%d dakika',
          h : 'bir saat',
          hh : '%d saat',
          d : 'bir gün',
          dd : '%d gün',
          M : 'bir ay',
          MM : '%d ay',
          y : 'bir yıl',
          yy : '%d yıl'
      },
      ordinalParse: /\d{1,2}'(inci|nci|üncü|ncı|uncu|ıncı)/,
      ordinal : function (number) {
          if (number === 0) {  // special case for zero
              return number + '\'ıncı';
          }
          var a = number % 10,
              b = number % 100 - a,
              c = number >= 100 ? 100 : null;
          return number + (suffixes[a] || suffixes[b] || suffixes[c]);
      },
      week : {
          dow : 1, // Monday is the first day of the week.
          doy : 7  // The week that contains Jan 1st is the first week of the year.
      }
  });

  return tr;

  })));


/***/ },
/* 1368 */
/***/ function(module, exports, __webpack_require__) {

  //! moment.js locale configuration
  //! locale : Talossan [tzl]
  //! author : Robin van der Vliet : https://github.com/robin0van0der0v
  //! author : Iustì Canun

  ;(function (global, factory) {
      true ? factory(__webpack_require__(1269)) :
     typeof define === 'function' && define.amd ? define(['../moment'], factory) :
     factory(global.moment)
  }(this, (function (moment) { 'use strict';


  // After the year there should be a slash and the amount of years since December 26, 1979 in Roman numerals.
  // This is currently too difficult (maybe even impossible) to add.
  var tzl = moment.defineLocale('tzl', {
      months : 'Januar_Fevraglh_Març_Avrïu_Mai_Gün_Julia_Guscht_Setemvar_Listopäts_Noemvar_Zecemvar'.split('_'),
      monthsShort : 'Jan_Fev_Mar_Avr_Mai_Gün_Jul_Gus_Set_Lis_Noe_Zec'.split('_'),
      weekdays : 'Súladi_Lúneçi_Maitzi_Márcuri_Xhúadi_Viénerçi_Sáturi'.split('_'),
      weekdaysShort : 'Súl_Lún_Mai_Már_Xhú_Vié_Sát'.split('_'),
      weekdaysMin : 'Sú_Lú_Ma_Má_Xh_Vi_Sá'.split('_'),
      longDateFormat : {
          LT : 'HH.mm',
          LTS : 'HH.mm.ss',
          L : 'DD.MM.YYYY',
          LL : 'D. MMMM [dallas] YYYY',
          LLL : 'D. MMMM [dallas] YYYY HH.mm',
          LLLL : 'dddd, [li] D. MMMM [dallas] YYYY HH.mm'
      },
      meridiemParse: /d\'o|d\'a/i,
      isPM : function (input) {
          return 'd\'o' === input.toLowerCase();
      },
      meridiem : function (hours, minutes, isLower) {
          if (hours > 11) {
              return isLower ? 'd\'o' : 'D\'O';
          } else {
              return isLower ? 'd\'a' : 'D\'A';
          }
      },
      calendar : {
          sameDay : '[oxhi à] LT',
          nextDay : '[demà à] LT',
          nextWeek : 'dddd [à] LT',
          lastDay : '[ieiri à] LT',
          lastWeek : '[sür el] dddd [lasteu à] LT',
          sameElse : 'L'
      },
      relativeTime : {
          future : 'osprei %s',
          past : 'ja%s',
          s : processRelativeTime,
          m : processRelativeTime,
          mm : processRelativeTime,
          h : processRelativeTime,
          hh : processRelativeTime,
          d : processRelativeTime,
          dd : processRelativeTime,
          M : processRelativeTime,
          MM : processRelativeTime,
          y : processRelativeTime,
          yy : processRelativeTime
      },
      ordinalParse: /\d{1,2}\./,
      ordinal : '%d.',
      week : {
          dow : 1, // Monday is the first day of the week.
          doy : 4  // The week that contains Jan 4th is the first week of the year.
      }
  });

  function processRelativeTime(number, withoutSuffix, key, isFuture) {
      var format = {
          's': ['viensas secunds', '\'iensas secunds'],
          'm': ['\'n míut', '\'iens míut'],
          'mm': [number + ' míuts', '' + number + ' míuts'],
          'h': ['\'n þora', '\'iensa þora'],
          'hh': [number + ' þoras', '' + number + ' þoras'],
          'd': ['\'n ziua', '\'iensa ziua'],
          'dd': [number + ' ziuas', '' + number + ' ziuas'],
          'M': ['\'n mes', '\'iens mes'],
          'MM': [number + ' mesen', '' + number + ' mesen'],
          'y': ['\'n ar', '\'iens ar'],
          'yy': [number + ' ars', '' + number + ' ars']
      };
      return isFuture ? format[key][0] : (withoutSuffix ? format[key][0] : format[key][1]);
  }

  return tzl;

  })));


/***/ },
/* 1369 */
/***/ function(module, exports, __webpack_require__) {

  //! moment.js locale configuration
  //! locale : Central Atlas Tamazight [tzm]
  //! author : Abdel Said : https://github.com/abdelsaid

  ;(function (global, factory) {
      true ? factory(__webpack_require__(1269)) :
     typeof define === 'function' && define.amd ? define(['../moment'], factory) :
     factory(global.moment)
  }(this, (function (moment) { 'use strict';


  var tzm = moment.defineLocale('tzm', {
      months : 'ⵉⵏⵏⴰⵢⵔ_ⴱⵕⴰⵢⵕ_ⵎⴰⵕⵚ_ⵉⴱⵔⵉⵔ_ⵎⴰⵢⵢⵓ_ⵢⵓⵏⵢⵓ_ⵢⵓⵍⵢⵓⵣ_ⵖⵓⵛⵜ_ⵛⵓⵜⴰⵏⴱⵉⵔ_ⴽⵟⵓⴱⵕ_ⵏⵓⵡⴰⵏⴱⵉⵔ_ⴷⵓⵊⵏⴱⵉⵔ'.split('_'),
      monthsShort : 'ⵉⵏⵏⴰⵢⵔ_ⴱⵕⴰⵢⵕ_ⵎⴰⵕⵚ_ⵉⴱⵔⵉⵔ_ⵎⴰⵢⵢⵓ_ⵢⵓⵏⵢⵓ_ⵢⵓⵍⵢⵓⵣ_ⵖⵓⵛⵜ_ⵛⵓⵜⴰⵏⴱⵉⵔ_ⴽⵟⵓⴱⵕ_ⵏⵓⵡⴰⵏⴱⵉⵔ_ⴷⵓⵊⵏⴱⵉⵔ'.split('_'),
      weekdays : 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),
      weekdaysShort : 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),
      weekdaysMin : 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),
      longDateFormat : {
          LT : 'HH:mm',
          LTS: 'HH:mm:ss',
          L : 'DD/MM/YYYY',
          LL : 'D MMMM YYYY',
          LLL : 'D MMMM YYYY HH:mm',
          LLLL : 'dddd D MMMM YYYY HH:mm'
      },
      calendar : {
          sameDay: '[ⴰⵙⴷⵅ ⴴ] LT',
          nextDay: '[ⴰⵙⴽⴰ ⴴ] LT',
          nextWeek: 'dddd [ⴴ] LT',
          lastDay: '[ⴰⵚⴰⵏⵜ ⴴ] LT',
          lastWeek: 'dddd [ⴴ] LT',
          sameElse: 'L'
      },
      relativeTime : {
          future : 'ⴷⴰⴷⵅ ⵙ ⵢⴰⵏ %s',
          past : 'ⵢⴰⵏ %s',
          s : 'ⵉⵎⵉⴽ',
          m : 'ⵎⵉⵏⵓⴺ',
          mm : '%d ⵎⵉⵏⵓⴺ',
          h : 'ⵙⴰⵄⴰ',
          hh : '%d ⵜⴰⵙⵙⴰⵄⵉⵏ',
          d : 'ⴰⵙⵙ',
          dd : '%d oⵙⵙⴰⵏ',
          M : 'ⴰⵢoⵓⵔ',
          MM : '%d ⵉⵢⵢⵉⵔⵏ',
          y : 'ⴰⵙⴳⴰⵙ',
          yy : '%d ⵉⵙⴳⴰⵙⵏ'
      },
      week : {
          dow : 6, // Saturday is the first day of the week.
          doy : 12  // The week that contains Jan 1st is the first week of the year.
      }
  });

  return tzm;

  })));


/***/ },
/* 1370 */
/***/ function(module, exports, __webpack_require__) {

  //! moment.js locale configuration
  //! locale : Central Atlas Tamazight Latin [tzm-latn]
  //! author : Abdel Said : https://github.com/abdelsaid

  ;(function (global, factory) {
      true ? factory(__webpack_require__(1269)) :
     typeof define === 'function' && define.amd ? define(['../moment'], factory) :
     factory(global.moment)
  }(this, (function (moment) { 'use strict';


  var tzmLatn = moment.defineLocale('tzm-latn', {
      months : 'innayr_brˤayrˤ_marˤsˤ_ibrir_mayyw_ywnyw_ywlywz_ɣwšt_šwtanbir_ktˤwbrˤ_nwwanbir_dwjnbir'.split('_'),
      monthsShort : 'innayr_brˤayrˤ_marˤsˤ_ibrir_mayyw_ywnyw_ywlywz_ɣwšt_šwtanbir_ktˤwbrˤ_nwwanbir_dwjnbir'.split('_'),
      weekdays : 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),
      weekdaysShort : 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),
      weekdaysMin : 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),
      longDateFormat : {
          LT : 'HH:mm',
          LTS : 'HH:mm:ss',
          L : 'DD/MM/YYYY',
          LL : 'D MMMM YYYY',
          LLL : 'D MMMM YYYY HH:mm',
          LLLL : 'dddd D MMMM YYYY HH:mm'
      },
      calendar : {
          sameDay: '[asdkh g] LT',
          nextDay: '[aska g] LT',
          nextWeek: 'dddd [g] LT',
          lastDay: '[assant g] LT',
          lastWeek: 'dddd [g] LT',
          sameElse: 'L'
      },
      relativeTime : {
          future : 'dadkh s yan %s',
          past : 'yan %s',
          s : 'imik',
          m : 'minuḍ',
          mm : '%d minuḍ',
          h : 'saɛa',
          hh : '%d tassaɛin',
          d : 'ass',
          dd : '%d ossan',
          M : 'ayowr',
          MM : '%d iyyirn',
          y : 'asgas',
          yy : '%d isgasn'
      },
      week : {
          dow : 6, // Saturday is the first day of the week.
          doy : 12  // The week that contains Jan 1st is the first week of the year.
      }
  });

  return tzmLatn;

  })));


/***/ },
/* 1371 */
/***/ function(module, exports, __webpack_require__) {

  //! moment.js locale configuration
  //! locale : Ukrainian [uk]
  //! author : zemlanin : https://github.com/zemlanin
  //! Author : Menelion Elensúle : https://github.com/Oire

  ;(function (global, factory) {
      true ? factory(__webpack_require__(1269)) :
     typeof define === 'function' && define.amd ? define(['../moment'], factory) :
     factory(global.moment)
  }(this, (function (moment) { 'use strict';


  function plural(word, num) {
      var forms = word.split('_');
      return num % 10 === 1 && num % 100 !== 11 ? forms[0] : (num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2]);
  }
  function relativeTimeWithPlural(number, withoutSuffix, key) {
      var format = {
          'mm': withoutSuffix ? 'хвилина_хвилини_хвилин' : 'хвилину_хвилини_хвилин',
          'hh': withoutSuffix ? 'година_години_годин' : 'годину_години_годин',
          'dd': 'день_дні_днів',
          'MM': 'місяць_місяці_місяців',
          'yy': 'рік_роки_років'
      };
      if (key === 'm') {
          return withoutSuffix ? 'хвилина' : 'хвилину';
      }
      else if (key === 'h') {
          return withoutSuffix ? 'година' : 'годину';
      }
      else {
          return number + ' ' + plural(format[key], +number);
      }
  }
  function weekdaysCaseReplace(m, format) {
      var weekdays = {
          'nominative': 'неділя_понеділок_вівторок_середа_четвер_п’ятниця_субота'.split('_'),
          'accusative': 'неділю_понеділок_вівторок_середу_четвер_п’ятницю_суботу'.split('_'),
          'genitive': 'неділі_понеділка_вівторка_середи_четверга_п’ятниці_суботи'.split('_')
      },
      nounCase = (/(\[[ВвУу]\]) ?dddd/).test(format) ?
          'accusative' :
          ((/\[?(?:минулої|наступної)? ?\] ?dddd/).test(format) ?
              'genitive' :
              'nominative');
      return weekdays[nounCase][m.day()];
  }
  function processHoursFunction(str) {
      return function () {
          return str + 'о' + (this.hours() === 11 ? 'б' : '') + '] LT';
      };
  }

  var uk = moment.defineLocale('uk', {
      months : {
          'format': 'січня_лютого_березня_квітня_травня_червня_липня_серпня_вересня_жовтня_листопада_грудня'.split('_'),
          'standalone': 'січень_лютий_березень_квітень_травень_червень_липень_серпень_вересень_жовтень_листопад_грудень'.split('_')
      },
      monthsShort : 'січ_лют_бер_квіт_трав_черв_лип_серп_вер_жовт_лист_груд'.split('_'),
      weekdays : weekdaysCaseReplace,
      weekdaysShort : 'нд_пн_вт_ср_чт_пт_сб'.split('_'),
      weekdaysMin : 'нд_пн_вт_ср_чт_пт_сб'.split('_'),
      longDateFormat : {
          LT : 'HH:mm',
          LTS : 'HH:mm:ss',
          L : 'DD.MM.YYYY',
          LL : 'D MMMM YYYY р.',
          LLL : 'D MMMM YYYY р., HH:mm',
          LLLL : 'dddd, D MMMM YYYY р., HH:mm'
      },
      calendar : {
          sameDay: processHoursFunction('[Сьогодні '),
          nextDay: processHoursFunction('[Завтра '),
          lastDay: processHoursFunction('[Вчора '),
          nextWeek: processHoursFunction('[У] dddd ['),
          lastWeek: function () {
              switch (this.day()) {
                  case 0:
                  case 3:
                  case 5:
                  case 6:
                      return processHoursFunction('[Минулої] dddd [').call(this);
                  case 1:
                  case 2:
                  case 4:
                      return processHoursFunction('[Минулого] dddd [').call(this);
              }
          },
          sameElse: 'L'
      },
      relativeTime : {
          future : 'за %s',
          past : '%s тому',
          s : 'декілька секунд',
          m : relativeTimeWithPlural,
          mm : relativeTimeWithPlural,
          h : 'годину',
          hh : relativeTimeWithPlural,
          d : 'день',
          dd : relativeTimeWithPlural,
          M : 'місяць',
          MM : relativeTimeWithPlural,
          y : 'рік',
          yy : relativeTimeWithPlural
      },
      // M. E.: those two are virtually unused but a user might want to implement them for his/her website for some reason
      meridiemParse: /ночі|ранку|дня|вечора/,
      isPM: function (input) {
          return /^(дня|вечора)$/.test(input);
      },
      meridiem : function (hour, minute, isLower) {
          if (hour < 4) {
              return 'ночі';
          } else if (hour < 12) {
              return 'ранку';
          } else if (hour < 17) {
              return 'дня';
          } else {
              return 'вечора';
          }
      },
      ordinalParse: /\d{1,2}-(й|го)/,
      ordinal: function (number, period) {
          switch (period) {
              case 'M':
              case 'd':
              case 'DDD':
              case 'w':
              case 'W':
                  return number + '-й';
              case 'D':
                  return number + '-го';
              default:
                  return number;
          }
      },
      week : {
          dow : 1, // Monday is the first day of the week.
          doy : 7  // The week that contains Jan 1st is the first week of the year.
      }
  });

  return uk;

  })));


/***/ },
/* 1372 */
/***/ function(module, exports, __webpack_require__) {

  //! moment.js locale configuration
  //! locale : Uzbek [uz]
  //! author : Sardor Muminov : https://github.com/muminoff

  ;(function (global, factory) {
      true ? factory(__webpack_require__(1269)) :
     typeof define === 'function' && define.amd ? define(['../moment'], factory) :
     factory(global.moment)
  }(this, (function (moment) { 'use strict';


  var uz = moment.defineLocale('uz', {
      months : 'январ_феврал_март_апрел_май_июн_июл_август_сентябр_октябр_ноябр_декабр'.split('_'),
      monthsShort : 'янв_фев_мар_апр_май_июн_июл_авг_сен_окт_ноя_дек'.split('_'),
      weekdays : 'Якшанба_Душанба_Сешанба_Чоршанба_Пайшанба_Жума_Шанба'.split('_'),
      weekdaysShort : 'Якш_Душ_Сеш_Чор_Пай_Жум_Шан'.split('_'),
      weekdaysMin : 'Як_Ду_Се_Чо_Па_Жу_Ша'.split('_'),
      longDateFormat : {
          LT : 'HH:mm',
          LTS : 'HH:mm:ss',
          L : 'DD/MM/YYYY',
          LL : 'D MMMM YYYY',
          LLL : 'D MMMM YYYY HH:mm',
          LLLL : 'D MMMM YYYY, dddd HH:mm'
      },
      calendar : {
          sameDay : '[Бугун соат] LT [да]',
          nextDay : '[Эртага] LT [да]',
          nextWeek : 'dddd [куни соат] LT [да]',
          lastDay : '[Кеча соат] LT [да]',
          lastWeek : '[Утган] dddd [куни соат] LT [да]',
          sameElse : 'L'
      },
      relativeTime : {
          future : 'Якин %s ичида',
          past : 'Бир неча %s олдин',
          s : 'фурсат',
          m : 'бир дакика',
          mm : '%d дакика',
          h : 'бир соат',
          hh : '%d соат',
          d : 'бир кун',
          dd : '%d кун',
          M : 'бир ой',
          MM : '%d ой',
          y : 'бир йил',
          yy : '%d йил'
      },
      week : {
          dow : 1, // Monday is the first day of the week.
          doy : 7  // The week that contains Jan 4th is the first week of the year.
      }
  });

  return uz;

  })));


/***/ },
/* 1373 */
/***/ function(module, exports, __webpack_require__) {

  //! moment.js locale configuration
  //! locale : Vietnamese [vi]
  //! author : Bang Nguyen : https://github.com/bangnk

  ;(function (global, factory) {
      true ? factory(__webpack_require__(1269)) :
     typeof define === 'function' && define.amd ? define(['../moment'], factory) :
     factory(global.moment)
  }(this, (function (moment) { 'use strict';


  var vi = moment.defineLocale('vi', {
      months : 'tháng 1_tháng 2_tháng 3_tháng 4_tháng 5_tháng 6_tháng 7_tháng 8_tháng 9_tháng 10_tháng 11_tháng 12'.split('_'),
      monthsShort : 'Th01_Th02_Th03_Th04_Th05_Th06_Th07_Th08_Th09_Th10_Th11_Th12'.split('_'),
      monthsParseExact : true,
      weekdays : 'chủ nhật_thứ hai_thứ ba_thứ tư_thứ năm_thứ sáu_thứ bảy'.split('_'),
      weekdaysShort : 'CN_T2_T3_T4_T5_T6_T7'.split('_'),
      weekdaysMin : 'CN_T2_T3_T4_T5_T6_T7'.split('_'),
      weekdaysParseExact : true,
      meridiemParse: /sa|ch/i,
      isPM : function (input) {
          return /^ch$/i.test(input);
      },
      meridiem : function (hours, minutes, isLower) {
          if (hours < 12) {
              return isLower ? 'sa' : 'SA';
          } else {
              return isLower ? 'ch' : 'CH';
          }
      },
      longDateFormat : {
          LT : 'HH:mm',
          LTS : 'HH:mm:ss',
          L : 'DD/MM/YYYY',
          LL : 'D MMMM [năm] YYYY',
          LLL : 'D MMMM [năm] YYYY HH:mm',
          LLLL : 'dddd, D MMMM [năm] YYYY HH:mm',
          l : 'DD/M/YYYY',
          ll : 'D MMM YYYY',
          lll : 'D MMM YYYY HH:mm',
          llll : 'ddd, D MMM YYYY HH:mm'
      },
      calendar : {
          sameDay: '[Hôm nay lúc] LT',
          nextDay: '[Ngày mai lúc] LT',
          nextWeek: 'dddd [tuần tới lúc] LT',
          lastDay: '[Hôm qua lúc] LT',
          lastWeek: 'dddd [tuần rồi lúc] LT',
          sameElse: 'L'
      },
      relativeTime : {
          future : '%s tới',
          past : '%s trước',
          s : 'vài giây',
          m : 'một phút',
          mm : '%d phút',
          h : 'một giờ',
          hh : '%d giờ',
          d : 'một ngày',
          dd : '%d ngày',
          M : 'một tháng',
          MM : '%d tháng',
          y : 'một năm',
          yy : '%d năm'
      },
      ordinalParse: /\d{1,2}/,
      ordinal : function (number) {
          return number;
      },
      week : {
          dow : 1, // Monday is the first day of the week.
          doy : 4  // The week that contains Jan 4th is the first week of the year.
      }
  });

  return vi;

  })));


/***/ },
/* 1374 */
/***/ function(module, exports, __webpack_require__) {

  //! moment.js locale configuration
  //! locale : Pseudo [x-pseudo]
  //! author : Andrew Hood : https://github.com/andrewhood125

  ;(function (global, factory) {
      true ? factory(__webpack_require__(1269)) :
     typeof define === 'function' && define.amd ? define(['../moment'], factory) :
     factory(global.moment)
  }(this, (function (moment) { 'use strict';


  var xPseudo = moment.defineLocale('x-pseudo', {
      months : 'J~áñúá~rý_F~ébrú~árý_~Márc~h_Áp~ríl_~Máý_~Júñé~_Júl~ý_Áú~gúst~_Sép~témb~ér_Ó~ctób~ér_Ñ~óvém~bér_~Décé~mbér'.split('_'),
      monthsShort : 'J~áñ_~Féb_~Már_~Ápr_~Máý_~Júñ_~Júl_~Áúg_~Sép_~Óct_~Ñóv_~Déc'.split('_'),
      monthsParseExact : true,
      weekdays : 'S~úñdá~ý_Mó~ñdáý~_Túé~sdáý~_Wéd~ñésd~áý_T~húrs~dáý_~Fríd~áý_S~átúr~dáý'.split('_'),
      weekdaysShort : 'S~úñ_~Móñ_~Túé_~Wéd_~Thú_~Frí_~Sát'.split('_'),
      weekdaysMin : 'S~ú_Mó~_Tú_~Wé_T~h_Fr~_Sá'.split('_'),
      weekdaysParseExact : true,
      longDateFormat : {
          LT : 'HH:mm',
          L : 'DD/MM/YYYY',
          LL : 'D MMMM YYYY',
          LLL : 'D MMMM YYYY HH:mm',
          LLLL : 'dddd, D MMMM YYYY HH:mm'
      },
      calendar : {
          sameDay : '[T~ódá~ý át] LT',
          nextDay : '[T~ómó~rró~w át] LT',
          nextWeek : 'dddd [át] LT',
          lastDay : '[Ý~ést~érdá~ý át] LT',
          lastWeek : '[L~ást] dddd [át] LT',
          sameElse : 'L'
      },
      relativeTime : {
          future : 'í~ñ %s',
          past : '%s á~gó',
          s : 'á ~féw ~sécó~ñds',
          m : 'á ~míñ~úté',
          mm : '%d m~íñú~tés',
          h : 'á~ñ hó~úr',
          hh : '%d h~óúrs',
          d : 'á ~dáý',
          dd : '%d d~áýs',
          M : 'á ~móñ~th',
          MM : '%d m~óñt~hs',
          y : 'á ~ýéár',
          yy : '%d ý~éárs'
      },
      ordinalParse: /\d{1,2}(th|st|nd|rd)/,
      ordinal : function (number) {
          var b = number % 10,
              output = (~~(number % 100 / 10) === 1) ? 'th' :
              (b === 1) ? 'st' :
              (b === 2) ? 'nd' :
              (b === 3) ? 'rd' : 'th';
          return number + output;
      },
      week : {
          dow : 1, // Monday is the first day of the week.
          doy : 4  // The week that contains Jan 4th is the first week of the year.
      }
  });

  return xPseudo;

  })));


/***/ },
/* 1375 */
/***/ function(module, exports, __webpack_require__) {

  //! moment.js locale configuration
  //! locale : Yoruba Nigeria [yo]
  //! author : Atolagbe Abisoye : https://github.com/andela-batolagbe

  ;(function (global, factory) {
      true ? factory(__webpack_require__(1269)) :
     typeof define === 'function' && define.amd ? define(['../moment'], factory) :
     factory(global.moment)
  }(this, (function (moment) { 'use strict';


  var yo = moment.defineLocale('yo', {
      months : 'Sẹ́rẹ́_Èrèlè_Ẹrẹ̀nà_Ìgbé_Èbibi_Òkùdu_Agẹmo_Ògún_Owewe_Ọ̀wàrà_Bélú_Ọ̀pẹ̀̀'.split('_'),
      monthsShort : 'Sẹ́r_Èrl_Ẹrn_Ìgb_Èbi_Òkù_Agẹ_Ògú_Owe_Ọ̀wà_Bél_Ọ̀pẹ̀̀'.split('_'),
      weekdays : 'Àìkú_Ajé_Ìsẹ́gun_Ọjọ́rú_Ọjọ́bọ_Ẹtì_Àbámẹ́ta'.split('_'),
      weekdaysShort : 'Àìk_Ajé_Ìsẹ́_Ọjr_Ọjb_Ẹtì_Àbá'.split('_'),
      weekdaysMin : 'Àì_Aj_Ìs_Ọr_Ọb_Ẹt_Àb'.split('_'),
      longDateFormat : {
          LT : 'h:mm A',
          LTS : 'h:mm:ss A',
          L : 'DD/MM/YYYY',
          LL : 'D MMMM YYYY',
          LLL : 'D MMMM YYYY h:mm A',
          LLLL : 'dddd, D MMMM YYYY h:mm A'
      },
      calendar : {
          sameDay : '[Ònì ni] LT',
          nextDay : '[Ọ̀la ni] LT',
          nextWeek : 'dddd [Ọsẹ̀ tón\'bọ] [ni] LT',
          lastDay : '[Àna ni] LT',
          lastWeek : 'dddd [Ọsẹ̀ tólọ́] [ni] LT',
          sameElse : 'L'
      },
      relativeTime : {
          future : 'ní %s',
          past : '%s kọjá',
          s : 'ìsẹjú aayá die',
          m : 'ìsẹjú kan',
          mm : 'ìsẹjú %d',
          h : 'wákati kan',
          hh : 'wákati %d',
          d : 'ọjọ́ kan',
          dd : 'ọjọ́ %d',
          M : 'osù kan',
          MM : 'osù %d',
          y : 'ọdún kan',
          yy : 'ọdún %d'
      },
      ordinalParse : /ọjọ́\s\d{1,2}/,
      ordinal : 'ọjọ́ %d',
      week : {
          dow : 1, // Monday is the first day of the week.
          doy : 4 // The week that contains Jan 4th is the first week of the year.
      }
  });

  return yo;

  })));


/***/ },
/* 1376 */
/***/ function(module, exports, __webpack_require__) {

  //! moment.js locale configuration
  //! locale : Chinese (China) [zh-cn]
  //! author : suupic : https://github.com/suupic
  //! author : Zeno Zeng : https://github.com/zenozeng

  ;(function (global, factory) {
      true ? factory(__webpack_require__(1269)) :
     typeof define === 'function' && define.amd ? define(['../moment'], factory) :
     factory(global.moment)
  }(this, (function (moment) { 'use strict';


  var zhCn = moment.defineLocale('zh-cn', {
      months : '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),
      monthsShort : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
      weekdays : '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),
      weekdaysShort : '周日_周一_周二_周三_周四_周五_周六'.split('_'),
      weekdaysMin : '日_一_二_三_四_五_六'.split('_'),
      longDateFormat : {
          LT : 'Ah点mm分',
          LTS : 'Ah点m分s秒',
          L : 'YYYY-MM-DD',
          LL : 'YYYY年MMMD日',
          LLL : 'YYYY年MMMD日Ah点mm分',
          LLLL : 'YYYY年MMMD日ddddAh点mm分',
          l : 'YYYY-MM-DD',
          ll : 'YYYY年MMMD日',
          lll : 'YYYY年MMMD日Ah点mm分',
          llll : 'YYYY年MMMD日ddddAh点mm分'
      },
      meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,
      meridiemHour: function (hour, meridiem) {
          if (hour === 12) {
              hour = 0;
          }
          if (meridiem === '凌晨' || meridiem === '早上' ||
                  meridiem === '上午') {
              return hour;
          } else if (meridiem === '下午' || meridiem === '晚上') {
              return hour + 12;
          } else {
              // '中午'
              return hour >= 11 ? hour : hour + 12;
          }
      },
      meridiem : function (hour, minute, isLower) {
          var hm = hour * 100 + minute;
          if (hm < 600) {
              return '凌晨';
          } else if (hm < 900) {
              return '早上';
          } else if (hm < 1130) {
              return '上午';
          } else if (hm < 1230) {
              return '中午';
          } else if (hm < 1800) {
              return '下午';
          } else {
              return '晚上';
          }
      },
      calendar : {
          sameDay : function () {
              return this.minutes() === 0 ? '[今天]Ah[点整]' : '[今天]LT';
          },
          nextDay : function () {
              return this.minutes() === 0 ? '[明天]Ah[点整]' : '[明天]LT';
          },
          lastDay : function () {
              return this.minutes() === 0 ? '[昨天]Ah[点整]' : '[昨天]LT';
          },
          nextWeek : function () {
              var startOfWeek, prefix;
              startOfWeek = moment().startOf('week');
              prefix = this.diff(startOfWeek, 'days') >= 7 ? '[下]' : '[本]';
              return this.minutes() === 0 ? prefix + 'dddAh点整' : prefix + 'dddAh点mm';
          },
          lastWeek : function () {
              var startOfWeek, prefix;
              startOfWeek = moment().startOf('week');
              prefix = this.unix() < startOfWeek.unix()  ? '[上]' : '[本]';
              return this.minutes() === 0 ? prefix + 'dddAh点整' : prefix + 'dddAh点mm';
          },
          sameElse : 'LL'
      },
      ordinalParse: /\d{1,2}(日|月|周)/,
      ordinal : function (number, period) {
          switch (period) {
              case 'd':
              case 'D':
              case 'DDD':
                  return number + '日';
              case 'M':
                  return number + '月';
              case 'w':
              case 'W':
                  return number + '周';
              default:
                  return number;
          }
      },
      relativeTime : {
          future : '%s内',
          past : '%s前',
          s : '几秒',
          m : '1 分钟',
          mm : '%d 分钟',
          h : '1 小时',
          hh : '%d 小时',
          d : '1 天',
          dd : '%d 天',
          M : '1 个月',
          MM : '%d 个月',
          y : '1 年',
          yy : '%d 年'
      },
      week : {
          // GB/T 7408-1994《数据元和交换格式·信息交换·日期和时间表示法》与ISO 8601:1988等效
          dow : 1, // Monday is the first day of the week.
          doy : 4  // The week that contains Jan 4th is the first week of the year.
      }
  });

  return zhCn;

  })));


/***/ },
/* 1377 */
/***/ function(module, exports, __webpack_require__) {

  //! moment.js locale configuration
  //! locale : Chinese (Hong Kong) [zh-hk]
  //! author : Ben : https://github.com/ben-lin
  //! author : Chris Lam : https://github.com/hehachris
  //! author : Konstantin : https://github.com/skfd

  ;(function (global, factory) {
      true ? factory(__webpack_require__(1269)) :
     typeof define === 'function' && define.amd ? define(['../moment'], factory) :
     factory(global.moment)
  }(this, (function (moment) { 'use strict';


  var zhHk = moment.defineLocale('zh-hk', {
      months : '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),
      monthsShort : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
      weekdays : '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),
      weekdaysShort : '週日_週一_週二_週三_週四_週五_週六'.split('_'),
      weekdaysMin : '日_一_二_三_四_五_六'.split('_'),
      longDateFormat : {
          LT : 'Ah點mm分',
          LTS : 'Ah點m分s秒',
          L : 'YYYY年MMMD日',
          LL : 'YYYY年MMMD日',
          LLL : 'YYYY年MMMD日Ah點mm分',
          LLLL : 'YYYY年MMMD日ddddAh點mm分',
          l : 'YYYY年MMMD日',
          ll : 'YYYY年MMMD日',
          lll : 'YYYY年MMMD日Ah點mm分',
          llll : 'YYYY年MMMD日ddddAh點mm分'
      },
      meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,
      meridiemHour : function (hour, meridiem) {
          if (hour === 12) {
              hour = 0;
          }
          if (meridiem === '凌晨' || meridiem === '早上' || meridiem === '上午') {
              return hour;
          } else if (meridiem === '中午') {
              return hour >= 11 ? hour : hour + 12;
          } else if (meridiem === '下午' || meridiem === '晚上') {
              return hour + 12;
          }
      },
      meridiem : function (hour, minute, isLower) {
          var hm = hour * 100 + minute;
          if (hm < 600) {
              return '凌晨';
          } else if (hm < 900) {
              return '早上';
          } else if (hm < 1130) {
              return '上午';
          } else if (hm < 1230) {
              return '中午';
          } else if (hm < 1800) {
              return '下午';
          } else {
              return '晚上';
          }
      },
      calendar : {
          sameDay : '[今天]LT',
          nextDay : '[明天]LT',
          nextWeek : '[下]ddddLT',
          lastDay : '[昨天]LT',
          lastWeek : '[上]ddddLT',
          sameElse : 'L'
      },
      ordinalParse: /\d{1,2}(日|月|週)/,
      ordinal : function (number, period) {
          switch (period) {
              case 'd' :
              case 'D' :
              case 'DDD' :
                  return number + '日';
              case 'M' :
                  return number + '月';
              case 'w' :
              case 'W' :
                  return number + '週';
              default :
                  return number;
          }
      },
      relativeTime : {
          future : '%s內',
          past : '%s前',
          s : '幾秒',
          m : '1 分鐘',
          mm : '%d 分鐘',
          h : '1 小時',
          hh : '%d 小時',
          d : '1 天',
          dd : '%d 天',
          M : '1 個月',
          MM : '%d 個月',
          y : '1 年',
          yy : '%d 年'
      }
  });

  return zhHk;

  })));


/***/ },
/* 1378 */
/***/ function(module, exports, __webpack_require__) {

  //! moment.js locale configuration
  //! locale : Chinese (Taiwan) [zh-tw]
  //! author : Ben : https://github.com/ben-lin
  //! author : Chris Lam : https://github.com/hehachris

  ;(function (global, factory) {
      true ? factory(__webpack_require__(1269)) :
     typeof define === 'function' && define.amd ? define(['../moment'], factory) :
     factory(global.moment)
  }(this, (function (moment) { 'use strict';


  var zhTw = moment.defineLocale('zh-tw', {
      months : '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),
      monthsShort : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
      weekdays : '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),
      weekdaysShort : '週日_週一_週二_週三_週四_週五_週六'.split('_'),
      weekdaysMin : '日_一_二_三_四_五_六'.split('_'),
      longDateFormat : {
          LT : 'Ah點mm分',
          LTS : 'Ah點m分s秒',
          L : 'YYYY年MMMD日',
          LL : 'YYYY年MMMD日',
          LLL : 'YYYY年MMMD日Ah點mm分',
          LLLL : 'YYYY年MMMD日ddddAh點mm分',
          l : 'YYYY年MMMD日',
          ll : 'YYYY年MMMD日',
          lll : 'YYYY年MMMD日Ah點mm分',
          llll : 'YYYY年MMMD日ddddAh點mm分'
      },
      meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,
      meridiemHour : function (hour, meridiem) {
          if (hour === 12) {
              hour = 0;
          }
          if (meridiem === '凌晨' || meridiem === '早上' || meridiem === '上午') {
              return hour;
          } else if (meridiem === '中午') {
              return hour >= 11 ? hour : hour + 12;
          } else if (meridiem === '下午' || meridiem === '晚上') {
              return hour + 12;
          }
      },
      meridiem : function (hour, minute, isLower) {
          var hm = hour * 100 + minute;
          if (hm < 600) {
              return '凌晨';
          } else if (hm < 900) {
              return '早上';
          } else if (hm < 1130) {
              return '上午';
          } else if (hm < 1230) {
              return '中午';
          } else if (hm < 1800) {
              return '下午';
          } else {
              return '晚上';
          }
      },
      calendar : {
          sameDay : '[今天]LT',
          nextDay : '[明天]LT',
          nextWeek : '[下]ddddLT',
          lastDay : '[昨天]LT',
          lastWeek : '[上]ddddLT',
          sameElse : 'L'
      },
      ordinalParse: /\d{1,2}(日|月|週)/,
      ordinal : function (number, period) {
          switch (period) {
              case 'd' :
              case 'D' :
              case 'DDD' :
                  return number + '日';
              case 'M' :
                  return number + '月';
              case 'w' :
              case 'W' :
                  return number + '週';
              default :
                  return number;
          }
      },
      relativeTime : {
          future : '%s內',
          past : '%s前',
          s : '幾秒',
          m : '1 分鐘',
          mm : '%d 分鐘',
          h : '1 小時',
          hh : '%d 小時',
          d : '1 天',
          dd : '%d 天',
          M : '1 個月',
          MM : '%d 個月',
          y : '1 年',
          yy : '%d 年'
      }
  });

  return zhTw;

  })));


/***/ }
/******/ ]);
//# sourceMappingURL=vendor.js.map